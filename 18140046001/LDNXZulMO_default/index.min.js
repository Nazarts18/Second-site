(function(e, t) {
    if (typeof define === "function" && define.amd) {
        define("bc", [], function() {
            var n = t.apply(this, arguments);
            e.videojs.log.warn("DEPRECATION: Using the default named RequireJS module in the Brightcove Player is deprecated. See: https://support.brightcove.com/requirejs-and-brightcove-player#Future_implementation");
            return n
        })
    } else if (typeof exports === "object") {
        module.exports = t()
    } else {
        e.bc = t(e)
    }
}
)(this, function(root) {
    var vjsCssText = '@charset "UTF-8";.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.video-js .vjs-modal-dialog,.vjs-button>.vjs-icon-placeholder:before,.vjs-modal-dialog .vjs-modal-dialog-content{position:absolute;top:0;left:0;width:100%;height:100%}.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.vjs-button>.vjs-icon-placeholder:before{text-align:center}@font-face{font-family:VideoJS;src:url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAABDkAAsAAAAAG6gAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAPgAAAFZRiV3hY21hcAAAAYQAAADaAAADPv749/pnbHlmAAACYAAAC3AAABHQZg6OcWhlYWQAAA3QAAAAKwAAADYZw251aGhlYQAADfwAAAAdAAAAJA+RCLFobXR4AAAOHAAAABMAAACM744AAGxvY2EAAA4wAAAASAAAAEhF6kqubWF4cAAADngAAAAfAAAAIAE0AIFuYW1lAAAOmAAAASUAAAIK1cf1oHBvc3QAAA/AAAABJAAAAdPExYuNeJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGS7wTiBgZWBgaWQ5RkDA8MvCM0cwxDOeI6BgYmBlZkBKwhIc01hcPjI+FGJHcRdyA4RZgQRADK3CxEAAHic7dFZbsMgAEXRS0ycyZnnOeG7y+qC8pU1dHusIOXxuoxaOlwZYWQB0Aea4quIEN4E9LzKbKjzDeM6H/mua6Lmc/p8yhg0lvdYx15ZG8uOLQOGjMp3EzqmzJizYMmKNRu27Nhz4MiJMxeu3Ljz4Ekqm7T8P52G8PP3lnTOVk++Z6iN6QZzNN1F7ptuN7eGOjDUoaGODHVsuvU8MdTO9Hd5aqgzQ50b6sJQl4a6MtS1oW4MdWuoO0PdG+rBUI+GejLUs6FeDPVqqDdDvRvqw1CfhpqM9At0iFLaAAB4nJ1YDXBTVRZ+5/22TUlJ8we0pHlJm7RJf5O8F2j6EymlSPkpxaL8U2xpa3DKj0CBhc2IW4eWKSokIoLsuMqssM64f+jA4HSdWXXXscBq67IOs3FXZ1ZYWVyRFdo899yXtIBQZ90k7717zz3v3HPPOfd854YCCj9cL9dL0RQFOqCbGJnrHb5EayiKIWN8iA/hWBblo6hUWm8TtCDwE80WMJus/irwyxOdxeB0MDb14VNJHnXYoLLSl6FfCUYO9nYPTA8Epg9090LprfbBbZ2hY0UlJUXHQp3/vtWkS6EBv8+rPMq5u9692f/dNxJNiqwC1xPE9TCUgCsSdQWgE3XQD25lkG4CN2xmTcOXWBOyser6RN6KnGbKSbmQ3+d0OI1m2W8QzLLkI2sykrWAgJJEtA8vGGW/2Q+CmT3n8zS9wZwu2DCvtuZKZN3xkrLh36yCZuUomQSqGpY8t/25VfHVhw8z4ebGBtfLb0ya9PCaDc+8dGTvk2dsh6z7WzvowlXKUSWo9MJ15a3KrEP2loOr2Ojhw6iW6hf2BDdEccQvZGpaAy7YovSwq8kr7HGllxpd71rkS6G0Sf11sl9OvMK1+jwPPODxjUwkOim9CU3ix1wNjXDfmJSEn618Bs6lpWwUpU+8PCqLMY650zjq8VhCIP17NEKTx3eaLL+s5Pi6yJWaWjTHLR1jYzPSV9VF/6Ojdb/1kO3Mk3uhHC0x6gc1BjlKQ+nQFxTYdaJkZ7ySVxLBbhR1dsboNXp1tCYKW2LRaEzpYcIx2BKNxaL0ZaUnSqfFoiNhHKR/GkX6PWUSAaJelQaqZL1EpoHNsajSEyPSoJ9IjhIxTdjHLmwZvhRDOiFTY/YeQnvrVZmiTQtGncECXtFTBZLOVwwMRgoXHAkXzMzPn1nAJJ8jYSbMDaqN2waGLzNhih/bZynUBMpIWSg7VYi7DRx2m8ALkIdRCJwI6ArJx2EI8kaDWeTQKeAFk9fjl/1AvwktjQ1P7NjyMGQyfd4vjipX6M/i52D7Cq80kqlcxEcGXRr/FEcgs0u5uGgB4VWuMFfpdn2Re6Hi3PqzmxWKsz6+ae2Pn9hXXw/fqM859UiGC0oKYYILJBqJrsn1Z1E5qOs9rQCiUQRREjm8yJcbHF5cUJufX1vAHlefw0XgUoboS3ETfQlTxBC4SOtuE8VPRJTBSCQSjZCpk7Gqzu+masaZ2y7Zjehho4F3g82BNDkAHpORG4+OCS+f6JTPmtRn/PH1kch6d04sp7AQb25aQ/pqUyXeQ8vrebG8OYQdXOQ+585u0sdW9rqalzRURiJ+9F4MweRFrKUjl1GUYhH1A27WOHw5cTFSFPMo9EeUIGnQTZHIaJ7AHLaOKsOODaNF9jkBjYG2QEsQ2xjMUAx2bBEbeTBWMHwskBjngq56S/yfgkBnWBa4K9sqKtq2t1UI8S9He5XuBRbawAdatrQEAi30Aks2+LM8WeCbalVZkWNylvJ+dqJnzVb+OHlSoKW8nPCP7Rd+CcZ2DdWAGqJ2CBFOphgywFFCFBNtfAbGtNPBCwxvygHeYMZMY9ZboBqwq/pVrsbgN5tkv152ODlbMfiqwGMBgxa4Exz3QhovRIUp6acqZmQzRq0ypDXS2TPLT02YIkQETnOE445oOGxOmXAqUJNNG7XgupMjPq2ua9asrj5yY/yuKteO1Kx0YNJTufrirLe1mZnat7OL6rnUdCWenpW6I8mAnbsY8KWs1PuSovCW9A/Z25PQ24a7cNOqgmTkLmBMgh4THgc4b9k2IVv1/g/F5nGljwPLfOgHAzJzh45V/4+WenTzmMtR5Z7us2Tys909UHqrPY7KbckoxRvRHhmVc3cJGE97uml0R1S0jdULVl7EvZtDFVBF35N9cEdjpgmAiOlFZ+Dtoh93+D3zzHr8RRNZQhnCNMNbcegOvpEwZoL+06cJQ07h+th3fZ/7PVbVC6ngTAV/KoLFuO6+2KFcU651gEb5ugPSIb1D+Xp8V4+k3sEIGnw5mYe4If4k1lFYr6SCzmM2EQ8iWtmwjnBI9kTwe1TlfAmXh7H02by9fW2gsjKwtv0aaURKil4OdV7rDL1MXIFNrhdxohcZXYTnq47WisrKitaObbf5+yvkLi5J6lCNZZ+B6GC38VNBZBDidSS/+mSvh6s+srgC8pyKMvDtt+de3c9fU76ZPfuM8ud4Kv0fyP/LqfepMT/3oZxSqpZaTa1DaQYLY8TFsHYbWYsPoRhRWfL5eSSQbhUGgGC3YLbVMk6PitTFNGpAsNrC6D1VNBKgBHMejaiuRWEWGgsSDBTJjqWIl8kJLlsaLJ2tXDr6xGfT85bM2Q06a46x2HTgvdnV8z5YDy/27J4zt6x2VtkzjoYpkq36kaBr4eQSg7tyiVweWubXZugtadl58ydapfbORfKsDTuZ0OBgx4cfdjCf5tbWNITnL120fdOi1RV1C3uKGzNdwYLcMvZ3BxoPyTOCD1XvXTp7U10gWCVmTV9b3r2z0SkGWovb2hp9I89O8a2smlyaO8muMU+dRmtzp60IzAoFpjLr1n388boLyf0dRvxhsHZ0qbWqDkwqvvpkj4l0fY6EIXRi5sQSrAvsVYwXRy4qJ2EVtD1AN7a0HWth9ymvL1xc3WTUKK/TAHA/bXDVtVWfOMfuGxGZv4Ln/jVr9jc3j1yMv0tndmyt9Vq88Y9gH1wtLX3KWjot5++jWHgAoZZkQ14wGQ20Fli71UmKJAy4xKMSTGbVdybW7FDDAut9XpD5AzWrYO7zQ8qffqF8+Ynd/clrHcdyxGy3a/3+mfNnzC/cBsveTjnTvXf1o6vzOlZw7WtqtdmPK/Errz/6NNtD72zmNOZfbmYdTGHfoofqI79Oc+R2n1lrnL6pOm0Up7kwxhTW12Amm7WYkXR2qYrF2AmgmbAsxZjwy1xpg/m1Je2vrp8v/nz2xpmlBg4E9hrMU341wVpTOh/OfmGvAnra8q6uctr60ZQHV3Q+WMQJykMj8ZsWn2QBOmmHMB+m5pDIpTFonYigiaKAhGEiAHF7EliVnQkjoLVIMPtJpBKHYd3A8GYH9jJzrWwmHx5Qjp7vDAX0suGRym1vtm/9W1/HyR8vczfMs6Sk8DSv855/5dlX9oQq52hT8syyp2rx5Id17IAyAM3wIjQPMOHzytEB64q6D5zT91yNbnx3V/nqnd017S9Y0605k3izoXLpsxde2n38yoOV9s1LcjwzNjbdX6asnBVaBj/6/DwKwPkpcqbDG7BnsXoSqWnUAmottYF6jMSdVyYZh3zVXCjwTiwwHH6sGuRiEHQGzuRX6whZkp123oy1BWE2mEfJ/tvIRtM4ZM5bDXiMsPMaAKOTyc5uL57rqyyc5y5JE5pm1i2S2iUX0CcaQ6lC6Zog7JqSqZmYlosl2K6pwNA84zRnQW6SaALYZQGW5lhCtU/W34N6o+bKfZ8cf3/Cl/+iTX3wBzpOY4mRkeNf3rptycGSshQWgGbYt5jFc2e0+DglIrwl6DVWQ7BuwaJ3Xk1J4VL5urnLl/Wf+gHU/hZoZdKNym6lG+I34FaNeZKcSpJIo2IeCVvpdsDGfKvzJnAwmeD37Ow65ZWwSowpgwX5T69s/rB55dP5BcpgDKFV8p7q2sn/1uc93bVzT/w6UrCqDTWvfCq/oCD/qZXNoUj8BL5Kp6GU017frfNXkAtiiyf/SOCEeLqnd8R/Ql9GlCRfctS6k5chvIBuQ1zCCjoCHL2DHNHIXxMJ3kQeO8lbsUXONeSfA5EjcG6/E+KdhN4bP04vBhdi883+BFBzQbxFbvZzQeY9LNBZc0FNfn5NwfDn6rCTnTw6R8o+gfpf5hCom33cRuiTlss3KHmZjD+BPN+5gXuA2ziS/Q73mLxUkpbKN/eqwz5uK0X9F3h2d1V4nGNgZGBgAOJd776+iue3+crAzc4AAje5Bfcg0xz9YHEOBiYQBQA8FQlFAHicY2BkYGBnAAGOPgaG//85+hkYGVCBMgBGGwNYAAAAeJxjYGBgYB8EmKOPgQEAQ04BfgAAAAAAAA4AaAB+AMwA4AECAUIBbAGYAcICGAJYArQC4AMwA7AD3gQwBJYE3AUkBWYFigYgBmYGtAbqB1gIEghYCG4IhAi2COh4nGNgZGBgUGYoZWBnAAEmIOYCQgaG/2A+AwAYCQG2AHicXZBNaoNAGIZfE5PQCKFQ2lUps2oXBfOzzAESyDKBQJdGR2NQR3QSSE/QE/QEPUUPUHqsvsrXjTMw83zPvPMNCuAWP3DQDAejdm1GjzwS7pMmwi75XngAD4/CQ/oX4TFe4Qt7uMMbOzjuDc0EmXCP/C7cJ38Iu+RP4QEe8CU8pP8WHmOPX2EPz87TPo202ey2OjlnQSXV/6arOjWFmvszMWtd6CqwOlKHq6ovycLaWMWVydXKFFZnmVFlZU46tP7R2nI5ncbi/dDkfDtFBA2DDXbYkhKc+V0Bqs5Zt9JM1HQGBRTm/EezTmZNKtpcAMs9Yu6AK9caF76zoLWIWcfMGOSkVduvSWechqZsz040Ib2PY3urxBJTzriT95lipz+TN1fmAAAAeJxtkMl2wjAMRfOAhABlKm2h80C3+ajgCKKDY6cegP59TYBzukAL+z1Zsq8ctaJTTKPrsUQLbXQQI0EXKXroY4AbDDHCGBNMcYsZ7nCPB8yxwCOe8IwXvOIN7/jAJ76wxHfUqWX+OzgumWAjJMV17i0Ndlr6irLKO+qftdT7i6y4uFSUvCknay+lFYZIZaQcmfH/xIFdYn98bqhra1aKTM/6lWMnyaYirx1rFUQZFBkb2zJUtoXeJCeg0WnLtHeSFc3OtrnozNwqi0TkSpBMDB1nSde5oJXW23hTS2/T0LilglXX7dmFVxLnq5U0vYATHFk3zX3BOisoQHNDFDeZnqKDy9hRNawN7Vh727hFzcJ5c8TILrKZfH7tIPxAFP0BpLeJPA==) format("woff");font-weight:400;font-style:normal}.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.video-js .vjs-play-control .vjs-icon-placeholder,.vjs-icon-play{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.video-js .vjs-play-control .vjs-icon-placeholder:before,.vjs-icon-play:before{content:"\\f101"}.vjs-icon-play-circle{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-play-circle:before{content:"\\f102"}.video-js .vjs-play-control.vjs-playing .vjs-icon-placeholder,.vjs-icon-pause{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-play-control.vjs-playing .vjs-icon-placeholder:before,.vjs-icon-pause:before{content:"\\f103"}.video-js .vjs-mute-control.vjs-vol-0 .vjs-icon-placeholder,.vjs-icon-volume-mute{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control.vjs-vol-0 .vjs-icon-placeholder:before,.vjs-icon-volume-mute:before{content:"\\f104"}.video-js .vjs-mute-control.vjs-vol-1 .vjs-icon-placeholder,.vjs-icon-volume-low{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control.vjs-vol-1 .vjs-icon-placeholder:before,.vjs-icon-volume-low:before{content:"\\f105"}.video-js .vjs-mute-control.vjs-vol-2 .vjs-icon-placeholder,.vjs-icon-volume-mid{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control.vjs-vol-2 .vjs-icon-placeholder:before,.vjs-icon-volume-mid:before{content:"\\f106"}.video-js .vjs-mute-control .vjs-icon-placeholder,.vjs-icon-volume-high{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control .vjs-icon-placeholder:before,.vjs-icon-volume-high:before{content:"\\f107"}.video-js .vjs-fullscreen-control .vjs-icon-placeholder,.vjs-icon-fullscreen-enter{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-fullscreen-control .vjs-icon-placeholder:before,.vjs-icon-fullscreen-enter:before{content:"\\f108"}.video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder,.vjs-icon-fullscreen-exit{font-family:VideoJS;font-weight:400;font-style:normal}.video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder:before,.vjs-icon-fullscreen-exit:before{content:"\\f109"}.vjs-icon-square{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-square:before{content:"\\f10a"}.vjs-icon-spinner{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-spinner:before{content:"\\f10b"}.video-js .vjs-subs-caps-button .vjs-icon-placeholder,.video-js .vjs-subtitles-button .vjs-icon-placeholder,.video-js.video-js:lang(en-AU) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js.video-js:lang(en-GB) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js.video-js:lang(en-IE) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js.video-js:lang(en-NZ) .vjs-subs-caps-button .vjs-icon-placeholder,.vjs-icon-subtitles{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js .vjs-subtitles-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-AU) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-GB) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-IE) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-NZ) .vjs-subs-caps-button .vjs-icon-placeholder:before,.vjs-icon-subtitles:before{content:"\\f10c"}.video-js .vjs-captions-button .vjs-icon-placeholder,.video-js:lang(en) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js:lang(fr-CA) .vjs-subs-caps-button .vjs-icon-placeholder,.vjs-icon-captions{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-captions-button .vjs-icon-placeholder:before,.video-js:lang(en) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js:lang(fr-CA) .vjs-subs-caps-button .vjs-icon-placeholder:before,.vjs-icon-captions:before{content:"\\f10d"}.video-js .vjs-chapters-button .vjs-icon-placeholder,.vjs-icon-chapters{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-chapters-button .vjs-icon-placeholder:before,.vjs-icon-chapters:before{content:"\\f10e"}.vjs-icon-share{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-share:before{content:"\\f10f"}.vjs-icon-cog{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-cog:before{content:"\\f110"}.video-js .vjs-play-progress,.video-js .vjs-volume-level,.vjs-icon-circle,.vjs-seek-to-live-control .vjs-icon-placeholder{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-play-progress:before,.video-js .vjs-volume-level:before,.vjs-icon-circle:before,.vjs-seek-to-live-control .vjs-icon-placeholder:before{content:"\\f111"}.vjs-icon-circle-outline{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-circle-outline:before{content:"\\f112"}.vjs-icon-circle-inner-circle{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-circle-inner-circle:before{content:"\\f113"}.vjs-icon-hd{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-hd:before{content:"\\f114"}.video-js .vjs-control.vjs-close-button .vjs-icon-placeholder,.vjs-icon-cancel{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-control.vjs-close-button .vjs-icon-placeholder:before,.vjs-icon-cancel:before{content:"\\f115"}.video-js .vjs-play-control.vjs-ended .vjs-icon-placeholder,.vjs-icon-replay{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-play-control.vjs-ended .vjs-icon-placeholder:before,.vjs-icon-replay:before{content:"\\f116"}.vjs-icon-facebook{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-facebook:before{content:"\\f117"}.vjs-icon-gplus{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-gplus:before{content:"\\f118"}.vjs-icon-linkedin{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-linkedin:before{content:"\\f119"}.vjs-icon-twitter{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-twitter:before{content:"\\f11a"}.vjs-icon-tumblr{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-tumblr:before{content:"\\f11b"}.vjs-icon-pinterest{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-pinterest:before{content:"\\f11c"}.video-js .vjs-descriptions-button .vjs-icon-placeholder,.vjs-icon-audio-description{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-descriptions-button .vjs-icon-placeholder:before,.vjs-icon-audio-description:before{content:"\\f11d"}.video-js .vjs-audio-button .vjs-icon-placeholder,.vjs-icon-audio{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-audio-button .vjs-icon-placeholder:before,.vjs-icon-audio:before{content:"\\f11e"}.vjs-icon-next-item{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-next-item:before{content:"\\f11f"}.vjs-icon-previous-item{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-previous-item:before{content:"\\f120"}.video-js .vjs-picture-in-picture-control .vjs-icon-placeholder,.vjs-icon-picture-in-picture-enter{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-picture-in-picture-control .vjs-icon-placeholder:before,.vjs-icon-picture-in-picture-enter:before{content:"\\f121"}.video-js.vjs-picture-in-picture .vjs-picture-in-picture-control .vjs-icon-placeholder,.vjs-icon-picture-in-picture-exit{font-family:VideoJS;font-weight:400;font-style:normal}.video-js.vjs-picture-in-picture .vjs-picture-in-picture-control .vjs-icon-placeholder:before,.vjs-icon-picture-in-picture-exit:before{content:"\\f122"}.video-js{display:block;vertical-align:top;box-sizing:border-box;color:#fff;background-color:#000;position:relative;padding:0;font-size:10px;line-height:1;font-weight:400;font-style:normal;font-family:Arial,Helvetica,sans-serif;word-break:initial}.video-js:-moz-full-screen{position:absolute}.video-js:-webkit-full-screen{width:100%!important;height:100%!important}.video-js[tabindex="-1"]{outline:0}.video-js *,.video-js :after,.video-js :before{box-sizing:inherit}.video-js ul{font-family:inherit;font-size:inherit;line-height:inherit;list-style-position:outside;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}.video-js.vjs-16-9,.video-js.vjs-4-3,.video-js.vjs-fluid{width:100%;max-width:100%;height:0}.video-js.vjs-16-9{padding-top:56.25%}.video-js.vjs-4-3{padding-top:75%}.video-js.vjs-fill{width:100%;height:100%}.video-js .vjs-tech{position:absolute;top:0;left:0;width:100%;height:100%}body.vjs-full-window{padding:0;margin:0;height:100%}.vjs-full-window .video-js.vjs-fullscreen{position:fixed;overflow:hidden;z-index:1000;left:0;top:0;bottom:0;right:0}.video-js.vjs-fullscreen:not(.vjs-ios-native-fs){width:100%!important;height:100%!important;padding-top:0!important}.video-js.vjs-fullscreen.vjs-user-inactive{cursor:none}.vjs-hidden{display:none!important}.vjs-disabled{opacity:.5;cursor:default}.video-js .vjs-offscreen{height:1px;left:-9999px;position:absolute;top:0;width:1px}.vjs-lock-showing{display:block!important;opacity:1;visibility:visible}.vjs-no-js{padding:20px;color:#fff;background-color:#000;font-size:18px;font-family:Arial,Helvetica,sans-serif;text-align:center;width:300px;height:150px;margin:0 auto}.vjs-no-js a,.vjs-no-js a:visited{color:#66a8cc}.video-js .vjs-big-play-button{font-size:3em;line-height:1.5em;height:1.63332em;width:3em;display:block;position:absolute;top:10px;left:10px;padding:0;cursor:pointer;opacity:1;border:.06666em solid #fff;background-color:#2b333f;background-color:rgba(43,51,63,.7);border-radius:.3em;transition:all .4s}.vjs-big-play-centered .vjs-big-play-button{top:50%;left:50%;margin-top:-.81666em;margin-left:-1.5em}.video-js .vjs-big-play-button:focus,.video-js:hover .vjs-big-play-button{border-color:#fff;background-color:#73859f;background-color:rgba(115,133,159,.5);transition:all 0s}.vjs-controls-disabled .vjs-big-play-button,.vjs-error .vjs-big-play-button,.vjs-has-started .vjs-big-play-button,.vjs-using-native-controls .vjs-big-play-button{display:none}.vjs-has-started.vjs-paused.vjs-show-big-play-button-on-pause .vjs-big-play-button{display:block}.video-js button{background:0 0;border:none;color:inherit;display:inline-block;font-size:inherit;line-height:inherit;text-transform:none;text-decoration:none;transition:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}.vjs-control .vjs-button{width:100%;height:100%}.video-js .vjs-control.vjs-close-button{cursor:pointer;height:3em;position:absolute;right:0;top:.5em;z-index:2}.video-js .vjs-modal-dialog{background:rgba(0,0,0,.8);background:linear-gradient(180deg,rgba(0,0,0,.8),rgba(255,255,255,0));overflow:auto}.video-js .vjs-modal-dialog>*{box-sizing:border-box}.vjs-modal-dialog .vjs-modal-dialog-content{font-size:1.2em;line-height:1.5;padding:20px 24px;z-index:1}.vjs-menu-button{cursor:pointer}.vjs-menu-button.vjs-disabled{cursor:default}.vjs-workinghover .vjs-menu-button.vjs-disabled:hover .vjs-menu{display:none}.vjs-menu .vjs-menu-content{display:block;padding:0;margin:0;font-family:Arial,Helvetica,sans-serif;overflow:auto}.vjs-menu .vjs-menu-content>*{box-sizing:border-box}.vjs-scrubbing .vjs-control.vjs-menu-button:hover .vjs-menu{display:none}.vjs-menu li{list-style:none;margin:0;padding:.2em 0;line-height:1.4em;font-size:1.2em;text-align:center;text-transform:lowercase}.js-focus-visible .vjs-menu li.vjs-menu-item:hover,.vjs-menu li.vjs-menu-item:focus,.vjs-menu li.vjs-menu-item:hover{background-color:#73859f;background-color:rgba(115,133,159,.5)}.js-focus-visible .vjs-menu li.vjs-selected:hover,.vjs-menu li.vjs-selected,.vjs-menu li.vjs-selected:focus,.vjs-menu li.vjs-selected:hover{background-color:#fff;color:#2b333f}.js-focus-visible .vjs-menu :focus:not(.focus-visible),.video-js .vjs-menu :focus:not(:focus-visible){background:0 0}.vjs-menu li.vjs-menu-title{text-align:center;text-transform:uppercase;font-size:1em;line-height:2em;padding:0;margin:0 0 .3em 0;font-weight:700;cursor:default}.vjs-menu-button-popup .vjs-menu{display:none;position:absolute;bottom:0;width:10em;left:-3em;height:0;margin-bottom:1.5em;border-top-color:rgba(43,51,63,.7)}.vjs-menu-button-popup .vjs-menu .vjs-menu-content{background-color:#2b333f;background-color:rgba(43,51,63,.7);position:absolute;width:100%;bottom:1.5em;max-height:15em}.vjs-layout-tiny .vjs-menu-button-popup .vjs-menu .vjs-menu-content,.vjs-layout-x-small .vjs-menu-button-popup .vjs-menu .vjs-menu-content{max-height:5em}.vjs-layout-small .vjs-menu-button-popup .vjs-menu .vjs-menu-content{max-height:10em}.vjs-layout-medium .vjs-menu-button-popup .vjs-menu .vjs-menu-content{max-height:14em}.vjs-layout-huge .vjs-menu-button-popup .vjs-menu .vjs-menu-content,.vjs-layout-large .vjs-menu-button-popup .vjs-menu .vjs-menu-content,.vjs-layout-x-large .vjs-menu-button-popup .vjs-menu .vjs-menu-content{max-height:25em}.vjs-menu-button-popup .vjs-menu.vjs-lock-showing,.vjs-workinghover .vjs-menu-button-popup.vjs-hover .vjs-menu{display:block}.video-js .vjs-menu-button-inline{transition:all .4s;overflow:hidden}.video-js .vjs-menu-button-inline:before{width:2.222222222em}.video-js .vjs-menu-button-inline.vjs-slider-active,.video-js .vjs-menu-button-inline:focus,.video-js .vjs-menu-button-inline:hover,.video-js.vjs-no-flex .vjs-menu-button-inline{width:12em}.vjs-menu-button-inline .vjs-menu{opacity:0;height:100%;width:auto;position:absolute;left:4em;top:0;padding:0;margin:0;transition:all .4s}.vjs-menu-button-inline.vjs-slider-active .vjs-menu,.vjs-menu-button-inline:focus .vjs-menu,.vjs-menu-button-inline:hover .vjs-menu{display:block;opacity:1}.vjs-no-flex .vjs-menu-button-inline .vjs-menu{display:block;opacity:1;position:relative;width:auto}.vjs-no-flex .vjs-menu-button-inline.vjs-slider-active .vjs-menu,.vjs-no-flex .vjs-menu-button-inline:focus .vjs-menu,.vjs-no-flex .vjs-menu-button-inline:hover .vjs-menu{width:auto}.vjs-menu-button-inline .vjs-menu-content{width:auto;height:100%;margin:0;overflow:hidden}.video-js .vjs-control-bar{display:none;width:100%;position:absolute;bottom:0;left:0;right:0;height:3em;background-color:#2b333f;background-color:rgba(43,51,63,.7)}.vjs-has-started .vjs-control-bar{display:flex;visibility:visible;opacity:1;transition:visibility .1s,opacity .1s}.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar{visibility:visible;opacity:0;transition:visibility 1s,opacity 1s}.vjs-controls-disabled .vjs-control-bar,.vjs-error .vjs-control-bar,.vjs-using-native-controls .vjs-control-bar{display:none!important}.vjs-audio.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar{opacity:1;visibility:visible}.vjs-has-started.vjs-no-flex .vjs-control-bar{display:table}.video-js .vjs-control{position:relative;text-align:center;margin:0;padding:0;height:100%;width:4em;flex:none}.vjs-button>.vjs-icon-placeholder:before{font-size:1.8em;line-height:1.67}.vjs-button>.vjs-icon-placeholder{display:block}.video-js .vjs-control:focus,.video-js .vjs-control:focus:before,.video-js .vjs-control:hover:before{text-shadow:0 0 1em #fff}.video-js .vjs-control-text{border:0;clip:rect(0 0 0 0);height:1px;overflow:hidden;padding:0;position:absolute;width:1px}.vjs-no-flex .vjs-control{display:table-cell;vertical-align:middle}.video-js .vjs-custom-control-spacer{display:none}.video-js .vjs-progress-control{cursor:pointer;flex:auto;display:flex;align-items:center;min-width:4em;touch-action:none}.video-js .vjs-progress-control.disabled{cursor:default}.vjs-live .vjs-progress-control{display:none}.vjs-liveui .vjs-progress-control{display:flex;align-items:center}.vjs-no-flex .vjs-progress-control{width:auto}.video-js .vjs-progress-holder{flex:auto;transition:all .2s;height:.3em}.video-js .vjs-progress-control .vjs-progress-holder{margin:0 10px}.video-js .vjs-progress-control:hover .vjs-progress-holder{font-size:1.6666666667em}.video-js .vjs-progress-control:hover .vjs-progress-holder.disabled{font-size:1em}.video-js .vjs-progress-holder .vjs-load-progress,.video-js .vjs-progress-holder .vjs-load-progress div,.video-js .vjs-progress-holder .vjs-play-progress{position:absolute;display:block;height:100%;margin:0;padding:0;width:0}.video-js .vjs-play-progress{background-color:#fff}.video-js .vjs-play-progress:before{font-size:.9em;position:absolute;right:-.5em;top:-.3333333333em;z-index:1}.video-js .vjs-load-progress{background:rgba(115,133,159,.5)}.video-js .vjs-load-progress div{background:rgba(115,133,159,.75)}.video-js .vjs-time-tooltip{background-color:#fff;background-color:rgba(255,255,255,.8);border-radius:.3em;color:#000;float:right;font-family:Arial,Helvetica,sans-serif;font-size:1em;padding:6px 8px 8px 8px;pointer-events:none;position:absolute;top:-3.4em;visibility:hidden;z-index:1}.video-js .vjs-progress-holder:focus .vjs-time-tooltip{display:none}.video-js .vjs-progress-control:hover .vjs-progress-holder:focus .vjs-time-tooltip,.video-js .vjs-progress-control:hover .vjs-time-tooltip{display:block;font-size:.6em;visibility:visible}.video-js .vjs-progress-control.disabled:hover .vjs-time-tooltip{font-size:1em}.video-js .vjs-progress-control .vjs-mouse-display{display:none;position:absolute;width:1px;height:100%;background-color:#000;z-index:1}.vjs-no-flex .vjs-progress-control .vjs-mouse-display{z-index:0}.video-js .vjs-progress-control:hover .vjs-mouse-display{display:block}.video-js.vjs-user-inactive .vjs-progress-control .vjs-mouse-display{visibility:hidden;opacity:0;transition:visibility 1s,opacity 1s}.video-js.vjs-user-inactive.vjs-no-flex .vjs-progress-control .vjs-mouse-display{display:none}.vjs-mouse-display .vjs-time-tooltip{color:#fff;background-color:#000;background-color:rgba(0,0,0,.8)}.video-js .vjs-slider{position:relative;cursor:pointer;padding:0;margin:0 .45em 0 .45em;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#73859f;background-color:rgba(115,133,159,.5)}.video-js .vjs-slider.disabled{cursor:default}.video-js .vjs-slider:focus{text-shadow:0 0 1em #fff;box-shadow:0 0 1em #fff}.video-js .vjs-mute-control{cursor:pointer;flex:none}.video-js .vjs-volume-control{cursor:pointer;margin-right:1em;display:flex}.video-js .vjs-volume-control.vjs-volume-horizontal{width:5em}.video-js .vjs-volume-panel .vjs-volume-control{visibility:visible;opacity:0;width:1px;height:1px;margin-left:-1px}.video-js .vjs-volume-panel{transition:width 1s}.video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active,.video-js .vjs-volume-panel .vjs-volume-control:active,.video-js .vjs-volume-panel.vjs-hover .vjs-mute-control~.vjs-volume-control,.video-js .vjs-volume-panel.vjs-hover .vjs-volume-control,.video-js .vjs-volume-panel:active .vjs-volume-control,.video-js .vjs-volume-panel:focus .vjs-volume-control{visibility:visible;opacity:1;position:relative;transition:visibility .1s,opacity .1s,height .1s,width .1s,left 0s,top 0s}.video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-horizontal,.video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-horizontal,.video-js .vjs-volume-panel.vjs-hover .vjs-mute-control~.vjs-volume-control.vjs-volume-horizontal,.video-js .vjs-volume-panel.vjs-hover .vjs-volume-control.vjs-volume-horizontal,.video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-horizontal,.video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-horizontal{width:5em;height:3em;margin-right:0}.video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-vertical,.video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-vertical,.video-js .vjs-volume-panel.vjs-hover .vjs-mute-control~.vjs-volume-control.vjs-volume-vertical,.video-js .vjs-volume-panel.vjs-hover .vjs-volume-control.vjs-volume-vertical,.video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-vertical,.video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-vertical{left:-3.5em;transition:left 0s}.video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-hover,.video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active,.video-js .vjs-volume-panel.vjs-volume-panel-horizontal:active{width:10em;transition:width .1s}.video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-mute-toggle-only{width:4em}.video-js .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical{height:8em;width:3em;left:-3000em;transition:visibility 1s,opacity 1s,height 1s 1s,width 1s 1s,left 1s 1s,top 1s 1s}.video-js .vjs-volume-panel .vjs-volume-control.vjs-volume-horizontal{transition:visibility 1s,opacity 1s,height 1s 1s,width 1s,left 1s 1s,top 1s 1s}.video-js.vjs-no-flex .vjs-volume-panel .vjs-volume-control.vjs-volume-horizontal{width:5em;height:3em;visibility:visible;opacity:1;position:relative;transition:none}.video-js.vjs-no-flex .vjs-volume-control.vjs-volume-vertical,.video-js.vjs-no-flex .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical{position:absolute;bottom:3em;left:.5em}.video-js .vjs-volume-panel{display:flex}.video-js .vjs-volume-bar{margin:1.35em .45em}.vjs-volume-bar.vjs-slider-horizontal{width:5em;height:.3em}.vjs-volume-bar.vjs-slider-vertical{width:.3em;height:5em;margin:1.35em auto}.video-js .vjs-volume-level{position:absolute;bottom:0;left:0;background-color:#fff}.video-js .vjs-volume-level:before{position:absolute;font-size:.9em;z-index:1}.vjs-slider-vertical .vjs-volume-level{width:.3em}.vjs-slider-vertical .vjs-volume-level:before{top:-.5em;left:-.3em;z-index:1}.vjs-slider-horizontal .vjs-volume-level{height:.3em}.vjs-slider-horizontal .vjs-volume-level:before{top:-.3em;right:-.5em}.video-js .vjs-volume-panel.vjs-volume-panel-vertical{width:4em}.vjs-volume-bar.vjs-slider-vertical .vjs-volume-level{height:100%}.vjs-volume-bar.vjs-slider-horizontal .vjs-volume-level{width:100%}.video-js .vjs-volume-vertical{width:3em;height:8em;bottom:8em;background-color:#2b333f;background-color:rgba(43,51,63,.7)}.video-js .vjs-volume-horizontal .vjs-menu{left:-2em}.video-js .vjs-volume-tooltip{background-color:#fff;background-color:rgba(255,255,255,.8);border-radius:.3em;color:#000;float:right;font-family:Arial,Helvetica,sans-serif;font-size:1em;padding:6px 8px 8px 8px;pointer-events:none;position:absolute;top:-3.4em;visibility:hidden;z-index:1}.video-js .vjs-volume-control:hover .vjs-progress-holder:focus .vjs-volume-tooltip,.video-js .vjs-volume-control:hover .vjs-volume-tooltip{display:block;font-size:1em;visibility:visible}.video-js .vjs-volume-vertical:hover .vjs-progress-holder:focus .vjs-volume-tooltip,.video-js .vjs-volume-vertical:hover .vjs-volume-tooltip{left:1em;top:-12px}.video-js .vjs-volume-control.disabled:hover .vjs-volume-tooltip{font-size:1em}.video-js .vjs-volume-control .vjs-mouse-display{display:none;position:absolute;width:100%;height:1px;background-color:#000;z-index:1}.video-js .vjs-volume-horizontal .vjs-mouse-display{width:1px;height:100%}.vjs-no-flex .vjs-volume-control .vjs-mouse-display{z-index:0}.video-js .vjs-volume-control:hover .vjs-mouse-display{display:block}.video-js.vjs-user-inactive .vjs-volume-control .vjs-mouse-display{visibility:hidden;opacity:0;transition:visibility 1s,opacity 1s}.video-js.vjs-user-inactive.vjs-no-flex .vjs-volume-control .vjs-mouse-display{display:none}.vjs-mouse-display .vjs-volume-tooltip{color:#fff;background-color:#000;background-color:rgba(0,0,0,.8)}.vjs-poster{display:inline-block;vertical-align:middle;background-repeat:no-repeat;background-position:50% 50%;background-size:contain;background-color:#000;cursor:pointer;margin:0;padding:0;position:absolute;top:0;right:0;bottom:0;left:0;height:100%}.vjs-has-started .vjs-poster{display:none}.vjs-audio.vjs-has-started .vjs-poster{display:block}.vjs-using-native-controls .vjs-poster{display:none}.video-js .vjs-live-control{display:flex;align-items:flex-start;flex:auto;font-size:1em;line-height:3em}.vjs-no-flex .vjs-live-control{display:table-cell;width:auto;text-align:left}.video-js.vjs-liveui .vjs-live-control,.video-js:not(.vjs-live) .vjs-live-control{display:none}.video-js .vjs-seek-to-live-control{align-items:center;cursor:pointer;flex:none;display:inline-flex;height:100%;padding-left:.5em;padding-right:.5em;font-size:1em;line-height:3em;width:auto;min-width:4em}.vjs-no-flex .vjs-seek-to-live-control{display:table-cell;width:auto;text-align:left}.video-js.vjs-live:not(.vjs-liveui) .vjs-seek-to-live-control,.video-js:not(.vjs-live) .vjs-seek-to-live-control{display:none}.vjs-seek-to-live-control.vjs-control.vjs-at-live-edge{cursor:auto}.vjs-seek-to-live-control .vjs-icon-placeholder{margin-right:.5em;color:#888}.vjs-seek-to-live-control.vjs-control.vjs-at-live-edge .vjs-icon-placeholder{color:red}.video-js .vjs-time-control{flex:none;font-size:1em;line-height:3em;min-width:2em;width:auto;padding-left:1em;padding-right:1em}.vjs-live .vjs-time-control{display:none}.video-js .vjs-current-time,.vjs-no-flex .vjs-current-time{display:none}.video-js .vjs-duration,.vjs-no-flex .vjs-duration{display:none}.vjs-time-divider{display:none;line-height:3em}.vjs-live .vjs-time-divider{display:none}.video-js .vjs-play-control{cursor:pointer}.video-js .vjs-play-control .vjs-icon-placeholder{flex:none}.vjs-text-track-display{position:absolute;bottom:3em;left:0;right:0;top:0;pointer-events:none}.video-js.vjs-user-inactive.vjs-playing .vjs-text-track-display{bottom:1em}.video-js .vjs-text-track{font-size:1.4em;text-align:center;margin-bottom:.1em}.vjs-subtitles{color:#fff}.vjs-captions{color:#fc6}.vjs-tt-cue{display:block}video::-webkit-media-text-track-display{transform:translateY(-3em)}.video-js.vjs-user-inactive.vjs-playing video::-webkit-media-text-track-display{transform:translateY(-1.5em)}.video-js .vjs-picture-in-picture-control{cursor:pointer;flex:none}.video-js .vjs-fullscreen-control{cursor:pointer;flex:none}.vjs-playback-rate .vjs-playback-rate-value,.vjs-playback-rate>.vjs-menu-button{position:absolute;top:0;left:0;width:100%;height:100%}.vjs-playback-rate .vjs-playback-rate-value{pointer-events:none;font-size:1.5em;line-height:2;text-align:center}.vjs-playback-rate .vjs-menu{width:4em;left:0}.vjs-error .vjs-error-display .vjs-modal-dialog-content{font-size:1.4em;text-align:center}.vjs-error .vjs-error-display:before{color:#fff;content:"X";font-family:Arial,Helvetica,sans-serif;font-size:4em;left:0;line-height:1;margin-top:-.5em;position:absolute;text-shadow:.05em .05em .1em #000;text-align:center;top:50%;vertical-align:middle;width:100%}.vjs-loading-spinner{display:none;position:absolute;top:50%;left:50%;margin:-25px 0 0 -25px;opacity:.85;text-align:left;border:6px solid rgba(43,51,63,.7);box-sizing:border-box;background-clip:padding-box;width:50px;height:50px;border-radius:25px;visibility:hidden}.vjs-seeking .vjs-loading-spinner,.vjs-waiting .vjs-loading-spinner{display:block;-webkit-animation:vjs-spinner-show 0s linear .3s forwards;animation:vjs-spinner-show 0s linear .3s forwards}.vjs-loading-spinner:after,.vjs-loading-spinner:before{content:"";position:absolute;margin:-6px;box-sizing:inherit;width:inherit;height:inherit;border-radius:inherit;opacity:1;border:inherit;border-color:transparent;border-top-color:#fff}.vjs-seeking .vjs-loading-spinner:after,.vjs-seeking .vjs-loading-spinner:before,.vjs-waiting .vjs-loading-spinner:after,.vjs-waiting .vjs-loading-spinner:before{-webkit-animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite;animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite}.vjs-seeking .vjs-loading-spinner:before,.vjs-waiting .vjs-loading-spinner:before{border-top-color:#fff}.vjs-seeking .vjs-loading-spinner:after,.vjs-waiting .vjs-loading-spinner:after{border-top-color:#fff;-webkit-animation-delay:.44s;animation-delay:.44s}@keyframes vjs-spinner-show{to{visibility:visible}}@-webkit-keyframes vjs-spinner-show{to{visibility:visible}}@keyframes vjs-spinner-spin{100%{transform:rotate(360deg)}}@-webkit-keyframes vjs-spinner-spin{100%{-webkit-transform:rotate(360deg)}}@keyframes vjs-spinner-fade{0%{border-top-color:#73859f}20%{border-top-color:#73859f}35%{border-top-color:#fff}60%{border-top-color:#73859f}100%{border-top-color:#73859f}}@-webkit-keyframes vjs-spinner-fade{0%{border-top-color:#73859f}20%{border-top-color:#73859f}35%{border-top-color:#fff}60%{border-top-color:#73859f}100%{border-top-color:#73859f}}.vjs-chapters-button .vjs-menu ul{width:24em}.video-js .vjs-subs-caps-button+.vjs-menu .vjs-captions-menu-item .vjs-menu-item-text .vjs-icon-placeholder{vertical-align:middle;display:inline-block;margin-bottom:-.1em}.video-js .vjs-subs-caps-button+.vjs-menu .vjs-captions-menu-item .vjs-menu-item-text .vjs-icon-placeholder:before{font-family:VideoJS;content:"\uf10d";font-size:1.5em;line-height:inherit}.video-js .vjs-audio-button+.vjs-menu .vjs-main-desc-menu-item .vjs-menu-item-text .vjs-icon-placeholder{vertical-align:middle;display:inline-block;margin-bottom:-.1em}.video-js .vjs-audio-button+.vjs-menu .vjs-main-desc-menu-item .vjs-menu-item-text .vjs-icon-placeholder:before{font-family:VideoJS;content:" \uf11d";font-size:1.5em;line-height:inherit}.video-js.vjs-layout-small .vjs-audio-button,.video-js.vjs-layout-small .vjs-captions-button,.video-js.vjs-layout-small .vjs-chapters-button,.video-js.vjs-layout-small .vjs-current-time,.video-js.vjs-layout-small .vjs-descriptions-button,.video-js.vjs-layout-small .vjs-duration,.video-js.vjs-layout-small .vjs-playback-rate,.video-js.vjs-layout-small .vjs-remaining-time,.video-js.vjs-layout-small .vjs-subtitles-button,.video-js.vjs-layout-small .vjs-time-divider,.video-js.vjs-layout-small .vjs-volume-control,.video-js.vjs-layout-tiny .vjs-audio-button,.video-js.vjs-layout-tiny .vjs-captions-button,.video-js.vjs-layout-tiny .vjs-chapters-button,.video-js.vjs-layout-tiny .vjs-current-time,.video-js.vjs-layout-tiny .vjs-descriptions-button,.video-js.vjs-layout-tiny .vjs-duration,.video-js.vjs-layout-tiny .vjs-playback-rate,.video-js.vjs-layout-tiny .vjs-remaining-time,.video-js.vjs-layout-tiny .vjs-subtitles-button,.video-js.vjs-layout-tiny .vjs-time-divider,.video-js.vjs-layout-tiny .vjs-volume-control,.video-js.vjs-layout-x-small .vjs-audio-button,.video-js.vjs-layout-x-small .vjs-captions-button,.video-js.vjs-layout-x-small .vjs-chapters-button,.video-js.vjs-layout-x-small .vjs-current-time,.video-js.vjs-layout-x-small .vjs-descriptions-button,.video-js.vjs-layout-x-small .vjs-duration,.video-js.vjs-layout-x-small .vjs-playback-rate,.video-js.vjs-layout-x-small .vjs-remaining-time,.video-js.vjs-layout-x-small .vjs-subtitles-button,.video-js.vjs-layout-x-small .vjs-time-divider,.video-js.vjs-layout-x-small .vjs-volume-control{display:none!important}.video-js.vjs-layout-small .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active,.video-js.vjs-layout-small .vjs-volume-panel.vjs-volume-panel-horizontal:active,.video-js.vjs-layout-small .vjs-volume-panel.vjs-volume-panel-horizontal:hover,.video-js.vjs-layout-tiny .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active,.video-js.vjs-layout-tiny .vjs-volume-panel.vjs-volume-panel-horizontal:active,.video-js.vjs-layout-tiny .vjs-volume-panel.vjs-volume-panel-horizontal:hover,.video-js.vjs-layout-x-small .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active,.video-js.vjs-layout-x-small .vjs-volume-panel.vjs-volume-panel-horizontal:active,.video-js.vjs-layout-x-small .vjs-volume-panel.vjs-volume-panel-horizontal:hover{width:auto;width:initial}.video-js.vjs-layout-tiny .vjs-subs-caps-button,.video-js.vjs-layout-x-small:not(.vjs-live) .vjs-subs-caps-button,.video-js.vjs-layout-x-small:not(.vjs-liveui) .vjs-subs-caps-button{display:none}.video-js.vjs-layout-tiny .vjs-custom-control-spacer,.video-js.vjs-layout-x-small.vjs-liveui .vjs-custom-control-spacer{flex:auto;display:block}.video-js.vjs-layout-tiny.vjs-no-flex .vjs-custom-control-spacer,.video-js.vjs-layout-x-small.vjs-liveui.vjs-no-flex .vjs-custom-control-spacer{width:auto}.video-js.vjs-layout-tiny .vjs-progress-control,.video-js.vjs-layout-x-small.vjs-liveui .vjs-progress-control{display:none}.vjs-modal-dialog.vjs-text-track-settings{background-color:#2b333f;background-color:rgba(43,51,63,.75);color:#fff;height:70%}.vjs-text-track-settings .vjs-modal-dialog-content{display:table}.vjs-text-track-settings .vjs-track-settings-colors,.vjs-text-track-settings .vjs-track-settings-controls,.vjs-text-track-settings .vjs-track-settings-font{display:table-cell}.vjs-text-track-settings .vjs-track-settings-controls{text-align:right;vertical-align:bottom}@supports (display:grid){.vjs-text-track-settings .vjs-modal-dialog-content{display:grid;grid-template-columns:1fr 1fr;grid-template-rows:1fr;padding:20px 24px 0 24px}.vjs-track-settings-controls .vjs-default-button{margin-bottom:20px}.vjs-text-track-settings .vjs-track-settings-controls{grid-column:1/-1}.vjs-layout-small .vjs-text-track-settings .vjs-modal-dialog-content,.vjs-layout-tiny .vjs-text-track-settings .vjs-modal-dialog-content,.vjs-layout-x-small .vjs-text-track-settings .vjs-modal-dialog-content{grid-template-columns:1fr}}.vjs-track-setting>select{margin-right:1em;margin-bottom:.5em}.vjs-text-track-settings fieldset{margin:5px;padding:3px;border:none}.vjs-text-track-settings fieldset span{display:inline-block}.vjs-text-track-settings fieldset span>select{max-width:7.3em}.vjs-text-track-settings legend{color:#fff;margin:0 0 5px 0}.vjs-text-track-settings .vjs-label{position:absolute;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px);display:block;margin:0 0 5px 0;padding:0;border:0;height:1px;width:1px;overflow:hidden}.vjs-track-settings-controls button:active,.vjs-track-settings-controls button:focus{outline-style:solid;outline-width:medium;background-image:linear-gradient(0deg,#fff 88%,#73859f 100%)}.vjs-track-settings-controls button:hover{color:rgba(43,51,63,.75)}.vjs-track-settings-controls button{background-color:#fff;background-image:linear-gradient(-180deg,#fff 88%,#73859f 100%);color:#2b333f;cursor:pointer;border-radius:2px}.vjs-track-settings-controls .vjs-default-button{margin-right:1em}@media print{.video-js>:not(.vjs-tech):not(.vjs-poster){visibility:hidden}}.vjs-resize-manager{position:absolute;top:0;left:0;width:100%;height:100%;border:none;z-index:-1000}.js-focus-visible .video-js :focus:not(.focus-visible){outline:0}.video-js :focus:not(:focus-visible){outline:0}', cssText = '.bc-player-LDNXZuIMO_default *,.bc-player-LDNXZuIMO_default :after,.bc-player-LDNXZuIMO_default :before{box-sizing:inherit;font-size:inherit;color:inherit;line-height:inherit}.bc-player-LDNXZuIMO_default{width:300px;height:150px;font-size:14px;overflow:hidden}.bc-player-LDNXZuIMO_default.vjs-fluid,.bc-player-LDNXZuIMO_default.vjs-fluid.vjs-16-9{padding-top:56.25%}.bc-player-LDNXZuIMO_default.vjs-fluid.vjs-4-3{padding-top:75%}.bc-player-LDNXZuIMO_default.vjs-fill{width:100%;height:100%}.bc-iframe,.bc-iframe body,.bc-player-LDNXZuIMO_default,.bc-player-LDNXZuIMO_default .vjs-poster{background-color:#151B17}.bc-iframe,.bc-iframe .bc-player-LDNXZuIMO_default,.bc-iframe body{margin:0;width:100%;height:100%;overflow:hidden}.bc-player-LDNXZuIMO_default.vjs-fullscreen,.bc-player-LDNXZuIMO_default.vjs-fullscreen .vjs-tech{width:100%!important;height:100%!important}.bc-player-LDNXZuIMO_default .vjs-track-setting select{color:#000;background-color:#fff}.bc-player-LDNXZuIMO_default .vjs-audio-button .vjs-menu-item,.bc-player-LDNXZuIMO_default .vjs-chapters-button .vjs-menu-item,.bc-player-LDNXZuIMO_default .vjs-descriptions-button .vjs-menu-item,.bc-player-LDNXZuIMO_default .vjs-subs-caps-button .vjs-menu-item{text-transform:none}.bc-player-LDNXZuIMO_default.vjs-waiting-for-autoplay .vjs-big-play-button{opacity:0}.bc-player-LDNXZuIMO_default .vjs-progress-control .vjs-mouse-display{z-index:2}/*! @name @brightcove/player-core @version 0.22.3 @license UNLICENSED */.vjs-modal-dialog.vjs-player-info-modal{background:rgba(0,0,0,.9)}.vjs-modal-dialog.vjs-player-info-modal .vjs-modal-dialog-content{overflow:auto;display:grid;grid-template-columns:1fr 1fr;grid-gap:1em}@media screen and (max-width:640px){.vjs-modal-dialog.vjs-player-info-modal .vjs-modal-dialog-content{grid-template-columns:1fr}}.vjs-modal-dialog.vjs-player-info-modal h2{font-size:1.1667em;margin:0 0 .4286em}.vjs-modal-dialog.vjs-player-info-modal table{border-bottom:1px solid #333;border-collapse:collapse;border-top:1px solid #333;margin-bottom:1.5em;width:100%}.vjs-modal-dialog.vjs-player-info-modal table.vjs-two td,.vjs-modal-dialog.vjs-player-info-modal table.vjs-two th{width:50%}.vjs-modal-dialog.vjs-player-info-modal table.vjs-three td,.vjs-modal-dialog.vjs-player-info-modal table.vjs-three th{width:33.333%}.vjs-modal-dialog.vjs-player-info-modal th{font-weight:400;text-align:left}.vjs-modal-dialog.vjs-player-info-modal td{border-bottom:1px solid #333;opacity:.5}.vjs-modal-dialog.vjs-player-info-modal tr:last-child td{border-bottom:0}.vjs-modal-dialog.vjs-player-info-modal tr:hover td{opacity:1}.vjs-error-display{color:#fff;display:none;font-family:Helvetica,Arial,sans serif;font-size:16px;line-height:1.428}.vjs-error .vjs-error-display{display:block;position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.5)}.vjs-error .vjs-error-display .vjs-modal-dialog-content{font-size:14px}.vjs-errors-dialog{text-align:left;border:1px #999 solid;overflow:hidden;position:absolute;top:2%;bottom:2%;left:5%;right:5%;padding-left:1%;padding-right:1%;background:rgba(24,24,24,.8);-ms-filter:"progid:DXImageTransform.Microsoft.gradient(startColorstr=#CC000000, endColorstr=#CC000000)"}.vjs-errors-details{margin-top:15px}.vjs-errors-message{border:1px #999 solid;background-color:#2c2c2c;overflow:auto;margin-top:15px;padding:15px}.vjs-errors-ok-button-container{display:block;position:absolute;bottom:15px;left:15px;right:15px;text-align:center}.vjs-errors-ok-button{display:block;margin:0 auto;width:80px;height:36px;background-color:#000;border:1px #999 solid;border-radius:5px;color:#999;font-size:14px;cursor:pointer}.vjs-errors-ok-button:hover{border:1px #FFF solid;color:#CCC}.vjs-errors-content-container{overflow:auto;position:absolute;padding-bottom:15px;top:0;left:15px;right:15px;bottom:61px}.vjs-errors-headline{font-size:14px;font-weight:700;padding-right:3em}.vjs-errors-dialog .vjs-control.vjs-close-button{width:3em;height:3em;top:0}.vjs-errors-flashmessage{float:right;font-size:9px;font-style:italic}.vjs-xs.vjs-error-display{font-size:14px;background-color:#000}.vjs-xs.vjs-error-display .vjs-errors-details,.vjs-xs.vjs-error-display .vjs-errors-message{display:none}.vjs-xs .vjs-errors-content-container{top:0}.vjs-xs .vjs-errors-headline{font-size:16px;font-weight:700}.vjs-xs .vjs-errors-dialog{border:none;top:0;bottom:0;left:0;right:0}.vjs-xs.vjs-errors-flashmessage{display:none}@media (max-width:600px),(max-height:250px){.vjs-error-display{font-size:14px;background-color:#000}.vjs-error-display .vjs-errors-details,.vjs-error-display .vjs-errors-message{display:none}.vjs-error-display .vjs-errors-content-container{top:15px}.vjs-error-display .vjs-errors-headline{font-size:16px;font-weight:700}.vjs-error-display .vjs-errors-dialog{border:none;top:0;bottom:0;left:0;right:0}.vjs-errors-flashmessage{display:none}}.vjs-errors-ref-id{color:rgba(255,255,255,.5);font-size:.75em;margin:.5em 0 0}.video-js .vjs-dock-shelf,.video-js .vjs-dock-text{font-size:1.8em;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;pointer-events:none;position:absolute;top:0;-webkit-transition:opacity .1s;-moz-transition:opacity .1s;-o-transition:opacity .1s;transition:opacity .1s}.video-js .vjs-dock-text{left:0;margin:0;width:100%;background:rgba(0,0,0,.8);background:-webkit-linear-gradient(to bottom,rgba(0,0,0,.8) 0,rgba(0,0,0,.7) 30%,rgba(0,0,0,.7) 70%,transparent 100%);background:linear-gradient(to bottom,rgba(0,0,0,.8) 0,rgba(0,0,0,.7) 30%,rgba(0,0,0,.7) 70%,transparent 100%);padding:1em 25% 2em 1em}.video-js.vjs-no-flex .vjs-dock-text{padding-bottom:1em}.video-js .vjs-dock-shelf{padding:1em 1em;right:0;text-align:right;width:25%}.video-js .vjs-dock-shelf *{pointer-events:auto}.video-js .vjs-dock-description,.video-js .vjs-dock-title{margin:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.video-js .vjs-dock-title{font-weight:700;letter-spacing:1px;line-height:1.333;margin-bottom:.333em}.video-js .vjs-dock-description{font-weight:400;line-height:1.5}.vjs-playing.vjs-user-inactive .vjs-dock-shelf,.vjs-playing.vjs-user-inactive .vjs-dock-text{opacity:0;-webkit-transition:opacity 1s;-moz-transition:opacity 1s;-o-transition:opacity 1s;transition:opacity 1s}.vjs-playing.vjs-no-flex.vjs-user-inactive .vjs-dock-shelf,.vjs-playing.vjs-no-flex.vjs-user-inactive .vjs-dock-text{display:none}.video-js .vjs-dock-shelf,.video-js .vjs-dock-text{font-size:1em}.vjs-has-started:not(:hover) .vjs-dock-shelf:focus-within{opacity:1}.vjs-has-started:not(:hover) .vjs-dock-shelf,.vjs-has-started:not(:hover) .vjs-dock-text{opacity:0;-webkit-transition:opacity 1s;-moz-transition:opacity 1s;-ms-transition:opacity 1s;-o-transition:opacity 1s;transition:opacity 1s}/*! @name videojs-contextmenu-ui @version 5.2.0 @license Apache-2.0 */.vjs-contextmenu-ui-menu{position:absolute}.vjs-contextmenu-ui-menu .vjs-menu-content{background-color:#2b333f;background-color:rgba(43,51,63,.7);border-radius:.3em;padding:.25em}.vjs-contextmenu-ui-menu .vjs-menu-item{border-radius:.3em;cursor:pointer;margin:0 0 1px;padding:.5em 1em;font-size:1em;line-height:1.2;text-transform:none}.vjs-contextmenu-ui-menu .vjs-menu-item:active,.vjs-contextmenu-ui-menu .vjs-menu-item:hover{background-color:rgba(0,0,0,.5);text-shadow:0 0 1em #fff}.bc-player-LDNXZuIMO_default .vjs-control-bar{background-color:rgba(0,0,0,.45);color:#fff}.bc-player-LDNXZuIMO_default .vjs-control{color:inherit}.bc-player-LDNXZuIMO_default .vjs-mouse-display:after,.bc-player-LDNXZuIMO_default .vjs-play-progress:after{border-radius:0}.bc-player-LDNXZuIMO_default .vjs-menu-button-inline:hover,.bc-player-LDNXZuIMO_default.vjs-no-flex .vjs-menu-button-inline{width:8.35em}.bc-player-LDNXZuIMO_default .vjs-control:focus:before,.bc-player-LDNXZuIMO_default .vjs-control:hover:before{text-shadow:0 0 1em #fff,0 0 1em #fff,0 0 1em #fff}.bc-player-LDNXZuIMO_default .vjs-spacer{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-box-flex:1 1 auto;-moz-box-flex:1 1 auto;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto}.bc-player-LDNXZuIMO_default .vjs-time-control{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-box-flex:0 1 auto;-moz-box-flex:0 1 auto;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto;width:auto}.bc-player-LDNXZuIMO_default .vjs-time-control.vjs-time-divider{width:14px}.bc-player-LDNXZuIMO_default .vjs-time-control.vjs-time-divider div{width:100%;text-align:center}.bc-player-LDNXZuIMO_default .vjs-time-control.vjs-current-time{margin-left:1em}.bc-player-LDNXZuIMO_default .vjs-time-control .vjs-current-time-display,.bc-player-LDNXZuIMO_default .vjs-time-control .vjs-duration-display{width:100%}.bc-player-LDNXZuIMO_default .vjs-time-control .vjs-current-time-display{text-align:right}.bc-player-LDNXZuIMO_default .vjs-time-control .vjs-duration-display{text-align:left}.bc-player-LDNXZuIMO_default .vjs-remaining-time{display:none}.bc-player-LDNXZuIMO_default.vjs-no-flex .vjs-time-control.vjs-remaining-time{display:none}.bc-player-LDNXZuIMO_default.vjs-no-flex .vjs-time-control{display:table-cell;width:4em}.bc-player-LDNXZuIMO_default .vjs-play-progress,.bc-player-LDNXZuIMO_default .vjs-volume-level{background-color:#d52484}.bc-player-LDNXZuIMO_default.vjs-ad-playing .vjs-play-progress,.bc-player-LDNXZuIMO_default.vjs-ad-playing .vjs-volume-level{background-color:#ffe400}.bc-player-LDNXZuIMO_default .vjs-play-progress:before,.bc-player-LDNXZuIMO_default .vjs-volume-level:before{display:none}.bc-player-LDNXZuIMO_default .vjs-volume-level:after{display:none}.bc-player-LDNXZuIMO_default .vjs-progress-control{position:absolute;left:0;right:0;width:100%;height:1.5em;top:-1.5em}.bc-player-LDNXZuIMO_default .vjs-progress-control .vjs-load-progress,.bc-player-LDNXZuIMO_default .vjs-progress-control .vjs-play-progress,.bc-player-LDNXZuIMO_default .vjs-progress-control .vjs-progress-holder{height:100%}.bc-player-LDNXZuIMO_default .vjs-progress-control .vjs-progress-holder{margin:0}.bc-player-LDNXZuIMO_default .vjs-progress-control:hover{height:1.5em;top:-1.5em}.bc-player-LDNXZuIMO_default .vjs-control-bar:not(.vjs-focus-within){-webkit-transition:-webkit-transform .1s ease 0s;-moz-transition:-moz-transform .1s ease 0s;-ms-transition:-ms-transform .1s ease 0s;-o-transition:-o-transform .1s ease 0s;transition:transform .1s ease 0s}.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-LDNXZuIMO_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-control-bar,.bc-player-LDNXZuIMO_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible){visibility:visible;opacity:1;-webkit-backface-visibility:hidden;-webkit-transform:translateY(3em);-moz-transform:translateY(3em);-ms-transform:translateY(3em);-o-transform:translateY(3em);transform:translateY(3em);-webkit-transition:-webkit-transform 1s ease 0s;-moz-transition:-moz-transform 1s ease 0s;-ms-transition:-ms-transform 1s ease 0s;-o-transition:-o-transform 1s ease 0s;transition:transform 1s ease 0s}.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-progress-control,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-progress-control,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-progress-control,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-progress-control,.bc-player-LDNXZuIMO_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-progress-control,.bc-player-LDNXZuIMO_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-progress-control{height:.3em;top:-.3em;pointer-events:none;-webkit-transition:height 1s,top 1s;-moz-transition:height 1s,top 1s;-ms-transition:height 1s,top 1s;-o-transition:height 1s,top 1s;transition:height 1s,top 1s}.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active.vjs-fullscreen .vjs-progress-control,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive.vjs-fullscreen .vjs-progress-control,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active.vjs-fullscreen .vjs-progress-control,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive.vjs-fullscreen .vjs-progress-control,.bc-player-LDNXZuIMO_default.vjs-has-started.vjs-playing.vjs-user-inactive.vjs-fullscreen .vjs-progress-control{opacity:0;-webkit-transition:opacity 1s;-moz-transition:opacity 1s;-ms-transition:opacity 1s;-o-transition:opacity 1s;transition:opacity 1s}.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-menu,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-volume-vertical,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-menu,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-volume-vertical,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-menu,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-volume-vertical,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-menu,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-volume-vertical,.bc-player-LDNXZuIMO_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-menu,.bc-player-LDNXZuIMO_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-volume-vertical,.bc-player-LDNXZuIMO_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-menu,.bc-player-LDNXZuIMO_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-volume-vertical{opacity:0;-webkit-transition:opacity 1s;-moz-transition:opacity 1s;-ms-transition:opacity 1s;-o-transition:opacity 1s;transition:opacity 1s}.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-control-bar-visible .vjs-menu,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-control-bar-visible .vjs-menu,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-control-bar-visible .vjs-menu,.bc-player-LDNXZuIMO_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar-visible .vjs-menu,.bc-player-LDNXZuIMO_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-control-bar-visible .vjs-menu-item,.bc-player-LDNXZuIMO_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar-visible .vjs-menu{opacity:1}.bc-player-LDNXZuIMO_default.vjs-live .vjs-live-control{margin-left:1em}.bc-player-LDNXZuIMO_default.vjs-live .vjs-time-control.vjs-current-time,.bc-player-LDNXZuIMO_default.vjs-live .vjs-time-control.vjs-duration,.bc-player-LDNXZuIMO_default.vjs-live .vjs-time-control.vjs-time-divider{display:none}.bc-player-LDNXZuIMO_default .vjs-big-play-button{top:50%;left:50%;margin-left:-1em;margin-top:-1em;width:2em;height:2em;line-height:2em;border:none;border-radius:50%;font-size:3.5em;background-color:rgba(0,0,0,.45);color:#fff;-webkit-transition:border-color .4s,outline .4s,background-color .4s;-moz-transition:border-color .4s,outline .4s,background-color .4s;-ms-transition:border-color .4s,outline .4s,background-color .4s;-o-transition:border-color .4s,outline .4s,background-color .4s;transition:border-color .4s,outline .4s,background-color .4s}.bc-player-LDNXZuIMO_default .vjs-big-play-button:active,.bc-player-LDNXZuIMO_default .vjs-big-play-button:focus,.bc-player-LDNXZuIMO_default:active .vjs-big-play-button,.bc-player-LDNXZuIMO_default:hover .vjs-big-play-button{background-color:#d52484}.bc-player-LDNXZuIMO_default .vjs-menu-button-popup .vjs-menu{left:-3em}.bc-player-LDNXZuIMO_default .vjs-menu-button-popup .vjs-menu .vjs-menu-content{background-color:transparent;width:12em;left:-1.5em;padding-bottom:.5em}.bc-player-LDNXZuIMO_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item,.bc-player-LDNXZuIMO_default .vjs-menu-button-popup .vjs-menu .vjs-menu-title{background-color:#151B17;margin:.3em 0;padding:.5em;border-radius:.3em}.bc-player-LDNXZuIMO_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item.vjs-selected{background-color:#d52484}.bc-player-LDNXZuIMO_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item:active,.bc-player-LDNXZuIMO_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item:focus,.bc-player-LDNXZuIMO_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item:hover{text-shadow:0 0 1em #fff,0 0 1em #fff,0 0 1em #fff;color:#fff}.bc-player-LDNXZuIMO_default.vjs-ad-playing .vjs-mouse-display,.bc-player-LDNXZuIMO_default.vjs-ad-playing .vjs-mouse-display:after{display:none}.bc-player-LDNXZuIMO_default.vjs-ad-playing.vjs-ad-playing .vjs-progress-control:after{pointer-events:auto;width:100%;height:100%;position:absolute;left:0;bottom:0;content:" ";user-select:none;-ms-user-select:none;-moz-user-select:none;-webkit-user-select:none}.bc-player-LDNXZuIMO_default.vjs-ad-playing .vjs-picture-in-picture-control{display:none}.bc-player-LDNXZuIMO_default.vjs-no-flex .vjs-spacer{display:table-cell}.bc-player-LDNXZuIMO_default.vjs-no-flex .vjs-time-control{display:table-cell;width:4em}.bc-player-LDNXZuIMO_default.vjs-no-flex .vjs-remaining-time{display:none}.vjs-mouse.bc-player-LDNXZuIMO_default .vjs-control-bar{font-size:10px}.vjs-mouse.bc-player-LDNXZuIMO_default .vjs-progress-control{height:.5em;top:-.5em}.vjs-mouse.bc-player-LDNXZuIMO_default .vjs-progress-control:hover{height:1.5em;top:-1.5em}.bc-player-LDNXZuIMO_default select{width:inherit}.bc-player-LDNXZuIMO_default.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-progress-control,.bc-player-LDNXZuIMO_default.video-js:not(.vjs-fullscreen).vjs-layout-x-small.vjs-liveui .vjs-progress-control{display:block}.bc-player-LDNXZuIMO_default .vjs-big-play-button,.bc-player-LDNXZuIMO_default .vjs-control-bar{background-color:rgba(0,0,0,.45)}.bc-player-LDNXZuIMO_default .vjs-big-play-button,.bc-player-LDNXZuIMO_default .vjs-control-bar{color:#fff}.bc-iframe .vjs-playlist-sidebar .vjs-playlist-show-hide button:hover,.bc-player-LDNXZuIMO_default .vjs-big-play-button:active,.bc-player-LDNXZuIMO_default .vjs-big-play-button:focus,.bc-player-LDNXZuIMO_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item.vjs-selected,.bc-player-LDNXZuIMO_default .vjs-play-progress,.bc-player-LDNXZuIMO_default .vjs-volume-level,.bc-player-LDNXZuIMO_default:active .vjs-big-play-button,.bc-player-LDNXZuIMO_default:hover .vjs-big-play-button{background-color:#24d5cc}.vjs-ad-playing.vjs-ad-playing .vjs-progress-control{pointer-events:none}.vjs-ad-playing.vjs-ad-playing .vjs-play-progress{background-color:#ffe400}.vjs-ad-playing.vjs-ad-loading .vjs-loading-spinner{display:block}.vjs-ad-playing .vjs-captions-button{display:none}.vjs-ad-playing .vjs-audio-button{display:none}.vjs-ad-loading .vjs-loading-spinner:after,.vjs-ad-loading .vjs-loading-spinner:before{-webkit-animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite;animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite}.vjs-ad-loading .vjs-loading-spinner:before{border-top-color:#fff}.vjs-ad-loading .vjs-loading-spinner:after{border-top-color:#fff;-webkit-animation-delay:.44s;animation-delay:.44s}.vjs-ima3-ad-container{bottom:0;left:0;position:absolute;right:0;top:0}.vjs-ima3-html5 .vjs-ima3-ad-container>*,.vjs-ima3-html5 .vjs-ima3-ad-container>* iframe{width:100%!important;height:100%!important}.vjs-ima3-ad-container,.vjs-ima3-click-tracker{pointer-events:none;left:-9999px}.vjs-ima3-flash-ad-container{left:0}.vjs-ima3-ad-background{width:100%;height:100%;background-color:transparent;position:absolute;top:0;left:0}.vjs-ad-playing .vjs-ima3-ad-background{background-color:#000}.ima3-ad-loading.ima3-loading-spinner .vjs-loading-spinner{display:block}.vjs-ima3-flash.vjs-ad-playing .vjs-tech{opacity:0}.vjs-ad-playing .vjs-ima3-ad-container,.vjs-ad-playing .vjs-ima3-click-tracker,.vjs-ima3-overlay .vjs-ima3-ad-container,.vjs-ima3-overlay .vjs-ima3-click-tracker{left:0}.vjs-ima3-flash.vjs-ad-playing .vjs-ima3-ad-container,.vjs-ima3-flash.vjs-ima3-overlay .vjs-ima3-ad-container{cursor:pointer;pointer-events:auto}.vjs-mouse.vjs-ima3-html5.vjs-ad-playing .vjs-ima3-ad-container,.vjs-mouse.vjs-ima3-html5.vjs-ad-playing .vjs-ima3-click-tracker,.vjs-mouse.vjs-ima3-html5.vjs-ima3-overlay .vjs-ima3-ad-container,.vjs-mouse.vjs-ima3-html5.vjs-ima3-overlay .vjs-ima3-click-tracker{cursor:pointer;pointer-events:auto}.vjs-user-active.vjs-ad-playing.vjs-ima3-html5 .vjs-ima3-ad-container,.vjs-user-active.vjs-ad-playing.vjs-ima3-html5 .vjs-ima3-click-tracker,.vjs-user-active.vjs-ima3-overlay.vjs-ima3-html5 .vjs-ima3-ad-container,.vjs-user-active.vjs-ima3-overlay.vjs-ima3-html5 .vjs-ima3-click-tracker{cursor:pointer;pointer-events:auto}.vjs-ima3-html5.vjs-using-native-controls.vjs-ima3-paused.vjs-ima3-paused .vjs-ima3-ad-container,.vjs-ima3-html5.vjs-using-native-controls.vjs-ima3-paused.vjs-ima3-paused .vjs-ima3-click-tracker{pointer-events:none}.vjs-ima3-click-tracker{bottom:0;left:0;margin:0;position:absolute;right:0;top:0}.vjs-ima3-overlay .vjs-ima3-click-tracker{top:auto;margin:0 auto}.vjs-control-bar.vjs-control-bar.vjs-ad-control-bar.vjs-ad-control-bar{display:none}.vjs-ad-controls.vjs-ad-playing .vjs-control-bar.vjs-control-bar{display:none}.vjs-ad-controls.vjs-ad-playing.vjs-controls-disabled .vjs-ad-control-bar.vjs-ad-control-bar,.vjs-ad-controls.vjs-ad-playing.vjs-using-native-controls .vjs-ad-control-bar.vjs-ad-control-bar{display:none}.vjs-ad-playing .vjs-dock-shelf,.vjs-ad-playing .vjs-dock-text{display:none}.vjs-ad-controls.vjs-ad-playing.vjs-vpaid-playing.vjs-vpaid-controls-disabled .vjs-control-bar.vjs-ad-control-bar{display:none}.vjs-ad-controls.vjs-ad-playing .vjs-control-bar.vjs-ad-control-bar{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex}.vjs-ad-controls.vjs-ad-playing.vjs-no-flex .vjs-control-bar.vjs-ad-control-bar{display:table}.vjs-mouse .vjs-control-bar.vjs-ad-control-bar .vjs-progress-control:hover{height:.5em;top:-.5em}.vjs-mouse .vjs-control-bar.vjs-ad-control-bar .vjs-progress-control:hover .vjs-mouse-display,.vjs-mouse .vjs-control-bar.vjs-ad-control-bar .vjs-progress-control:hover .vjs-mouse-display:after,.vjs-mouse .vjs-progress-control:hover .vjs-play-progress:after{display:none}.vjs-ima3-flash.vjs-ad-loading .vjs-tech,.vjs-ima3-html5.vjs-ad-loading .vjs-tech{opacity:0}.vjs-ima3-autoplay.vjs-ima3-not-playing-yet .vjs-poster,.vjs-ima3-autoplay.vjs-ima3-not-playing-yet .vjs-tech{opacity:0}.vjs-ima3-html5.vjs-ad-playing .vjs-ad-control-bar .vjs-play-progress{transition:width 1s linear}.vjs-ima3-flash.vjs-ad-playing .vjs-ad-control-bar .vjs-play-progress{transition:width .25s linear}.vjs-ima3-html5.vjs-ad-playing .vjs-ad-control-bar .vjs-play-progress.vjs-play-progress-resetting{transition:width 0s linear}.vjs-ima3-flash.vjs-ad-playing .vjs-ad-control-bar .vjs-play-progress.vjs-play-progress-resetting{transition:width 0s linear}.vjs-ima3-right-click.vjs-ima3-flash .vjs-ima3-ad-container{pointer-events:auto}.error-screen-container{width:100%;height:100%;position:absolute;top:0;left:0;background-color:#000;text-align:center;z-index:100}.error-screen-body{width:80%;height:80%;position:absolute;top:0;bottom:0;left:0;right:0;margin:auto}.error-screen-message{color:#FFF}.next-video-button{width:80px;height:30px;color:#000;font-size:12px;font-weight:700;background-color:#BBB;border-color:#BBB;border-width:2px;border-style:solid;border-radius:5px;position:absolute;top:0;bottom:0;left:0;right:0;margin:auto;line-height:30px;cursor:pointer}.next-video-button.mail:hover{background-color:#FFF;border-color:#FFF}.video-js .vjs-overlay{color:#fff;position:absolute;text-align:center}.video-js .vjs-overlay-no-background{max-width:33%}.video-js .vjs-overlay-background{background-color:#646464;background-color:rgba(255,255,255,.4);border-radius:3px;padding:10px;width:33%}.video-js .vjs-overlay-top-left{top:5px;left:5px}.video-js .vjs-overlay-top{left:50%;margin-left:-16.5%;top:5px}.video-js .vjs-overlay-top-right{right:5px;top:5px}.video-js .vjs-overlay-right{right:5px;top:50%;transform:translateY(-50%)}.video-js .vjs-overlay-bottom-right{bottom:3.5em;right:5px}.video-js .vjs-overlay-bottom{bottom:3.5em;left:50%;margin-left:-16.5%}.video-js .vjs-overlay-bottom-left{bottom:3.5em;left:5px}.video-js .vjs-overlay-left{left:5px;top:50%;transform:translateY(-50%)}.video-js .vjs-overlay-center{left:50%;margin-left:-16.5%;top:50%;transform:translateY(-50%)}.video-js .vjs-no-flex .vjs-overlay-center,.video-js .vjs-no-flex .vjs-overlay-left,.video-js .vjs-no-flex .vjs-overlay-right{margin-top:-15px}.vjs-overlay.vjs-overlay-top.vjs-overlay-background{width:100%;height:100%;margin-left:0;background-color:rgba(0,0,0,.95)!important;left:0}.custom-overlay-main .custom-overlay-thumbnail{overflow:hidden;background-size:cover;background-position:center;display:inline-block;color:#fff;cursor:pointer}.custom-overlay-main{display:grid;grid-template-columns:repeat(4,1fr);grid-template-rows:auto;grid-gap:5px;height:93%}.custom-overlay-main *{box-sizing:border-box;text-decoration:none;line-height:normal}.custom-overlay-thumbnail .custom-overlay-info{background-image:linear-gradient(to bottom,rgba(12,12,12,.95) 0,transparent 100px);height:100%;width:100%;position:relative;pointer-events:none;overflow:hidden;font-size:12px;display:inline-block}.custom-overlay-main .custom-overlay-thumbnail .custom-overlay-description{display:-webkit-box;overflow:hidden;text-overflow:ellipsis;max-height:3.6em;line-height:1.2;vertical-align:top;text-align:left;max-width:100%;font-weight:500!important;margin:0;padding:10px 10px 0;font-size:120%;-webkit-line-clamp:2;-webkit-box-orient:vertical}.video-js .custom-overlay-hide{display:none}.intro-video-container{width:100%;background:rgba(100,100,100,.1);position:relative}.popout-video{width:100%;position:relative}@-webkit-keyframes popout{from{bottom:-100%}to{bottom:10px}}@-moz-keyframes popout{from{bottom:-100%}to{bottom:10px}}@-o-keyframes popout{from{bottom:-100%}to{bottom:10px}}@keyframes popout{from{bottom:-100%}to{bottom:10px}}.popout-video.popout-video--popout .video-js{position:fixed;top:auto;right:10px;bottom:10px;left:auto;-webkit-animation:popout .4s ease-in-out;-moz-animation:popout .4s ease-in-out;-o-animation:popout .4s ease-in-out;animation:popout .4s ease-in-out;z-index:123456789}@media all and (min-width:1024px){.popout-video--popout .video-js{width:375px!important;height:211px!important;min-width:375px!important;min-height:211px!important}}@media only screen and (max-width:1023px) and (min-width:768px){.popout-video--popout .video-js{width:250px!important;height:139px!important;min-width:250px!important;min-height:139px!important}}@media only screen and (max-width:767px){.popout-video--popout .video-js{width:200px!important;height:113px!important;min-width:200px!important;min-height:113px!important}}.popout-video--popout .popout-video--btn{background:0 0;cursor:pointer;pointer-events:auto;top:0;left:0;position:relative;z-index:1;padding:15px;border:none}.popout-video--popout .popout-video--btn .icon-close:hover{background-color:rgba(0,0,0,.3)}.popout-video--popout .icon-close{color:#fff;top:0!important;left:0!important;position:absolute!important;font-size:23px;transform:none!important;-webkit-transform:none!important}.popout-video video{width:100%;vertical-align:middle}', cssClass = "bc-style-LDNXZuIMO-default", cssEl, vjsCssId = "bc-style-vjs", vjsCssEl, bc, video, i, head = document.querySelector("head"), refNode = head.firstChild, createStyleSheet = function(e, t) {
        var n = document.createElement("style");
        n.type = "text/css";
        n.appendChild(document.createTextNode(e));
        if (t) {
            head.insertBefore(n, t)
        } else {
            head.appendChild(n)
        }
        return n
    };
    bc = function(window, document) {
        var define = undefined;
        var rjsDefine = window.define;
        var previousVideojs = window.videojs;
        window.VIDEOJS_NO_DYNAMIC_STYLE = true;
        var BrightcovePlayerCore = function(e, t) {
            "use strict";
            e = e && Object.prototype.hasOwnProperty.call(e, "default") ? e["default"] : e;
            t = t && Object.prototype.hasOwnProperty.call(t, "default") ? t["default"] : t;
            var n = "0.22.3";
            var i = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
            function r() {
                throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")
            }
            function a(e, t) {
                return t = {
                    exports: {}
                },
                e(t, t.exports),
                t.exports
            }
            var s = a(function(e) {
                function t() {
                    e.exports = t = Object.assign || function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = arguments[t];
                            for (var i in n) {
                                if (Object.prototype.hasOwnProperty.call(n, i)) {
                                    e[i] = n[i]
                                }
                            }
                        }
                        return e
                    }
                    ;
                    return t.apply(this, arguments)
                }
                e.exports = t
            });
            var o = new Blob([new Uint8Array([255, 227, 24, 196, 0, 0, 0, 3, 72, 1, 64, 0, 0, 4, 132, 16, 31, 227, 192, 225, 76, 255, 67, 12, 255, 221, 27, 255, 228, 97, 73, 63, 255, 195, 131, 69, 192, 232, 223, 255, 255, 207, 102, 239, 255, 255, 255, 101, 158, 206, 70, 20, 59, 255, 254, 95, 70, 149, 66, 4, 16, 128, 0, 2, 2, 32, 240, 138, 255, 36, 106, 183, 255, 227, 24, 196, 59, 11, 34, 62, 80, 49, 135, 40, 0, 253, 29, 191, 209, 200, 141, 71, 7, 255, 252, 152, 74, 15, 130, 33, 185, 6, 63, 255, 252, 195, 70, 203, 86, 53, 15, 255, 255, 247, 103, 76, 121, 64, 32, 47, 255, 34, 227, 194, 209, 138, 76, 65, 77, 69, 51, 46, 57, 55, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 255, 227, 24, 196, 73, 13, 153, 210, 100, 81, 135, 56, 0, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170])],{
                type: "audio/mpeg"
            });
            var u = new Blob([new Uint8Array([0, 0, 0, 28, 102, 116, 121, 112, 105, 115, 111, 109, 0, 0, 2, 0, 105, 115, 111, 109, 105, 115, 111, 50, 109, 112, 52, 49, 0, 0, 0, 8, 102, 114, 101, 101, 0, 0, 2, 239, 109, 100, 97, 116, 33, 16, 5, 32, 164, 27, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 33, 16, 5, 32, 164, 27, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 167, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 2, 194, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 232, 0, 0, 0, 47, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 236, 116, 114, 97, 107, 0, 0, 0, 92, 116, 107, 104, 100, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 101, 100, 116, 115, 0, 0, 0, 28, 101, 108, 115, 116, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 47, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 100, 109, 100, 105, 97, 0, 0, 0, 32, 109, 100, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 68, 0, 0, 8, 0, 85, 196, 0, 0, 0, 0, 0, 45, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 1, 15, 109, 105, 110, 102, 0, 0, 0, 16, 115, 109, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 100, 105, 110, 102, 0, 0, 0, 28, 100, 114, 101, 102, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1, 0, 0, 0, 211, 115, 116, 98, 108, 0, 0, 0, 103, 115, 116, 115, 100, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 87, 109, 112, 52, 97, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 16, 0, 0, 0, 0, 172, 68, 0, 0, 0, 0, 0, 51, 101, 115, 100, 115, 0, 0, 0, 0, 3, 128, 128, 128, 34, 0, 2, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 1, 244, 0, 0, 1, 243, 249, 5, 128, 128, 128, 2, 18, 16, 6, 128, 128, 128, 1, 2, 0, 0, 0, 24, 115, 116, 116, 115, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 4, 0, 0, 0, 0, 28, 115, 116, 115, 99, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 28, 115, 116, 115, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 115, 0, 0, 1, 116, 0, 0, 0, 20, 115, 116, 99, 111, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 44, 0, 0, 0, 98, 117, 100, 116, 97, 0, 0, 0, 90, 109, 101, 116, 97, 0, 0, 0, 0, 0, 0, 0, 33, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 109, 100, 105, 114, 97, 112, 112, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 105, 108, 115, 116, 0, 0, 0, 37, 169, 116, 111, 111, 0, 0, 0, 29, 100, 97, 116, 97, 0, 0, 0, 1, 0, 0, 0, 0, 76, 97, 118, 102, 53, 54, 46, 52, 48, 46, 49, 48, 49])],{
                type: "video/mp4"
            });
            function l(e) {
                return Object.assign({
                    muted: false,
                    timeout: 250,
                    inline: false
                }, e)
            }
            function d(e, t) {
                var n = e.muted
                  , i = e.timeout
                  , r = e.inline;
                var a = t()
                  , s = a.element
                  , o = a.source;
                var u = void 0;
                var l = void 0;
                var d = void 0;
                s.muted = n;
                if (n === true) {
                    s.setAttribute("muted", "muted")
                }
                if (r === true) {
                    s.setAttribute("playsinline", "playsinline")
                }
                s.src = o;
                return new Promise(function(e) {
                    u = s.play();
                    l = setTimeout(function() {
                        d(false, new Error("Timeout " + i + " ms has been reached"))
                    }, i);
                    d = function t(n) {
                        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                        clearTimeout(l);
                        e({
                            result: n,
                            error: i
                        })
                    }
                    ;
                    if (u !== undefined) {
                        u.then(function() {
                            return d(true)
                        }).catch(function(e) {
                            return d(false, e)
                        })
                    } else {
                        d(true)
                    }
                }
                )
            }
            function c(e) {
                e = l(e);
                return d(e, function() {
                    return {
                        element: document.createElement("video"),
                        source: URL.createObjectURL(u)
                    }
                })
            }
            function f(e) {
                e = l(e);
                return d(e, function() {
                    return {
                        element: document.createElement("audio"),
                        source: URL.createObjectURL(o)
                    }
                })
            }
            var p = {
                audio: f,
                video: c
            };
            var h = a(function(e, t) {
                (function(t, n) {
                    e.exports = n()
                }
                )(i, function() {
                    function e(e) {
                        var t = typeof e;
                        return e !== null && (t === "object" || t === "function")
                    }
                    function t(e) {
                        return typeof e === "function"
                    }
                    var n = void 0;
                    if (Array.isArray) {
                        n = Array.isArray
                    } else {
                        n = function(e) {
                            return Object.prototype.toString.call(e) === "[object Array]"
                        }
                    }
                    var a = n;
                    var s = 0;
                    var o = void 0;
                    var u = void 0;
                    var l = function e(t, n) {
                        A[s] = t;
                        A[s + 1] = n;
                        s += 2;
                        if (s === 2) {
                            if (u) {
                                u(T)
                            } else {
                                E()
                            }
                        }
                    };
                    function d(e) {
                        u = e
                    }
                    function c(e) {
                        l = e
                    }
                    var f = typeof window !== "undefined" ? window : undefined;
                    var p = f || {};
                    var h = p.MutationObserver || p.WebKitMutationObserver;
                    var v = typeof self === "undefined" && typeof process !== "undefined" && {}.toString.call(process) === "[object process]";
                    var g = typeof Uint8ClampedArray !== "undefined" && typeof importScripts !== "undefined" && typeof MessageChannel !== "undefined";
                    function m() {
                        return function() {
                            return process.nextTick(T)
                        }
                    }
                    function y() {
                        if (typeof o !== "undefined") {
                            return function() {
                                o(T)
                            }
                        }
                        return S()
                    }
                    function _() {
                        var e = 0;
                        var t = new h(T);
                        var n = document.createTextNode("");
                        t.observe(n, {
                            characterData: true
                        });
                        return function() {
                            n.data = e = ++e % 2
                        }
                    }
                    function b() {
                        var e = new MessageChannel;
                        e.port1.onmessage = T;
                        return function() {
                            return e.port2.postMessage(0)
                        }
                    }
                    function S() {
                        var e = setTimeout;
                        return function() {
                            return e(T, 1)
                        }
                    }
                    var A = new Array(1e3);
                    function T() {
                        for (var e = 0; e < s; e += 2) {
                            var t = A[e];
                            var n = A[e + 1];
                            t(n);
                            A[e] = undefined;
                            A[e + 1] = undefined
                        }
                        s = 0
                    }
                    function k() {
                        try {
                            var e = Function("return this")().require("vertx");
                            o = e.runOnLoop || e.runOnContext;
                            return y()
                        } catch (e) {
                            return S()
                        }
                    }
                    var E = void 0;
                    if (v) {
                        E = m()
                    } else if (h) {
                        E = _()
                    } else if (g) {
                        E = b()
                    } else if (f === undefined && typeof r === "function") {
                        E = k()
                    } else {
                        E = S()
                    }
                    function P(e, t) {
                        var n = this;
                        var i = new this.constructor(w);
                        if (i[C] === undefined) {
                            X(i)
                        }
                        var r = n._state;
                        if (r) {
                            var a = arguments[r - 1];
                            l(function() {
                                return W(r, i, a, n._result)
                            })
                        } else {
                            H(n, i, e, t)
                        }
                        return i
                    }
                    function I(e) {
                        var t = this;
                        if (e && typeof e === "object" && e.constructor === t) {
                            return e
                        }
                        var n = new t(w);
                        B(n, e);
                        return n
                    }
                    var C = Math.random().toString(36).substring(2);
                    function w() {}
                    var j = void 0;
                    var L = 1;
                    var O = 2;
                    function x() {
                        return new TypeError("You cannot resolve a promise with itself")
                    }
                    function D() {
                        return new TypeError("A promises callback cannot return that same promise.")
                    }
                    function N(e, t, n, i) {
                        try {
                            e.call(t, n, i)
                        } catch (e) {
                            return e
                        }
                    }
                    function R(e, t, n) {
                        l(function(e) {
                            var i = false;
                            var r = N(n, t, function(n) {
                                if (i) {
                                    return
                                }
                                i = true;
                                if (t !== n) {
                                    B(e, n)
                                } else {
                                    V(e, n)
                                }
                            }, function(t) {
                                if (i) {
                                    return
                                }
                                i = true;
                                q(e, t)
                            }, "Settle: " + (e._label || " unknown promise"));
                            if (!i && r) {
                                i = true;
                                q(e, r)
                            }
                        }, e)
                    }
                    function M(e, t) {
                        if (t._state === L) {
                            V(e, t._result)
                        } else if (t._state === O) {
                            q(e, t._result)
                        } else {
                            H(t, undefined, function(t) {
                                return B(e, t)
                            }, function(t) {
                                return q(e, t)
                            })
                        }
                    }
                    function U(e, n, i) {
                        if (n.constructor === e.constructor && i === P && n.constructor.resolve === I) {
                            M(e, n)
                        } else {
                            if (i === undefined) {
                                V(e, n)
                            } else if (t(i)) {
                                R(e, n, i)
                            } else {
                                V(e, n)
                            }
                        }
                    }
                    function B(t, n) {
                        if (t === n) {
                            q(t, x())
                        } else if (e(n)) {
                            var i = void 0;
                            try {
                                i = n.then
                            } catch (e) {
                                q(t, e);
                                return
                            }
                            U(t, n, i)
                        } else {
                            V(t, n)
                        }
                    }
                    function F(e) {
                        if (e._onerror) {
                            e._onerror(e._result)
                        }
                        G(e)
                    }
                    function V(e, t) {
                        if (e._state !== j) {
                            return
                        }
                        e._result = t;
                        e._state = L;
                        if (e._subscribers.length !== 0) {
                            l(G, e)
                        }
                    }
                    function q(e, t) {
                        if (e._state !== j) {
                            return
                        }
                        e._state = O;
                        e._result = t;
                        l(F, e)
                    }
                    function H(e, t, n, i) {
                        var r = e._subscribers;
                        var a = r.length;
                        e._onerror = null;
                        r[a] = t;
                        r[a + L] = n;
                        r[a + O] = i;
                        if (a === 0 && e._state) {
                            l(G, e)
                        }
                    }
                    function G(e) {
                        var t = e._subscribers;
                        var n = e._state;
                        if (t.length === 0) {
                            return
                        }
                        var i = void 0
                          , r = void 0
                          , a = e._result;
                        for (var s = 0; s < t.length; s += 3) {
                            i = t[s];
                            r = t[s + n];
                            if (i) {
                                W(n, i, r, a)
                            } else {
                                r(a)
                            }
                        }
                        e._subscribers.length = 0
                    }
                    function W(e, n, i, r) {
                        var a = t(i)
                          , s = void 0
                          , o = void 0
                          , u = true;
                        if (a) {
                            try {
                                s = i(r)
                            } catch (e) {
                                u = false;
                                o = e
                            }
                            if (n === s) {
                                q(n, D());
                                return
                            }
                        } else {
                            s = r
                        }
                        if (n._state !== j)
                            ;
                        else if (a && u) {
                            B(n, s)
                        } else if (u === false) {
                            q(n, o)
                        } else if (e === L) {
                            V(n, s)
                        } else if (e === O) {
                            q(n, s)
                        }
                    }
                    function K(e, t) {
                        try {
                            t(function t(n) {
                                B(e, n)
                            }, function t(n) {
                                q(e, n)
                            })
                        } catch (t) {
                            q(e, t)
                        }
                    }
                    var z = 0;
                    function Y() {
                        return z++
                    }
                    function X(e) {
                        e[C] = z++;
                        e._state = undefined;
                        e._result = undefined;
                        e._subscribers = []
                    }
                    function Q() {
                        return new Error("Array Methods must be provided an Array")
                    }
                    var Z = function() {
                        function e(e, t) {
                            this._instanceConstructor = e;
                            this.promise = new e(w);
                            if (!this.promise[C]) {
                                X(this.promise)
                            }
                            if (a(t)) {
                                this.length = t.length;
                                this._remaining = t.length;
                                this._result = new Array(this.length);
                                if (this.length === 0) {
                                    V(this.promise, this._result)
                                } else {
                                    this.length = this.length || 0;
                                    this._enumerate(t);
                                    if (this._remaining === 0) {
                                        V(this.promise, this._result)
                                    }
                                }
                            } else {
                                q(this.promise, Q())
                            }
                        }
                        e.prototype._enumerate = function e(t) {
                            for (var n = 0; this._state === j && n < t.length; n++) {
                                this._eachEntry(t[n], n)
                            }
                        }
                        ;
                        e.prototype._eachEntry = function e(t, n) {
                            var i = this._instanceConstructor;
                            var r = i.resolve;
                            if (r === I) {
                                var a = void 0;
                                var s = void 0;
                                var o = false;
                                try {
                                    a = t.then
                                } catch (e) {
                                    o = true;
                                    s = e
                                }
                                if (a === P && t._state !== j) {
                                    this._settledAt(t._state, n, t._result)
                                } else if (typeof a !== "function") {
                                    this._remaining--;
                                    this._result[n] = t
                                } else if (i === ie) {
                                    var u = new i(w);
                                    if (o) {
                                        q(u, s)
                                    } else {
                                        U(u, t, a)
                                    }
                                    this._willSettleAt(u, n)
                                } else {
                                    this._willSettleAt(new i(function(e) {
                                        return e(t)
                                    }
                                    ), n)
                                }
                            } else {
                                this._willSettleAt(r(t), n)
                            }
                        }
                        ;
                        e.prototype._settledAt = function e(t, n, i) {
                            var r = this.promise;
                            if (r._state === j) {
                                this._remaining--;
                                if (t === O) {
                                    q(r, i)
                                } else {
                                    this._result[n] = i
                                }
                            }
                            if (this._remaining === 0) {
                                V(r, this._result)
                            }
                        }
                        ;
                        e.prototype._willSettleAt = function e(t, n) {
                            var i = this;
                            H(t, undefined, function(e) {
                                return i._settledAt(L, n, e)
                            }, function(e) {
                                return i._settledAt(O, n, e)
                            })
                        }
                        ;
                        return e
                    }();
                    function J(e) {
                        return new Z(this,e).promise
                    }
                    function $(e) {
                        var t = this;
                        if (!a(e)) {
                            return new t(function(e, t) {
                                return t(new TypeError("You must pass an array to race."))
                            }
                            )
                        } else {
                            return new t(function(n, i) {
                                var r = e.length;
                                for (var a = 0; a < r; a++) {
                                    t.resolve(e[a]).then(n, i)
                                }
                            }
                            )
                        }
                    }
                    function ee(e) {
                        var t = this;
                        var n = new t(w);
                        q(n, e);
                        return n
                    }
                    function te() {
                        throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
                    }
                    function ne() {
                        throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
                    }
                    var ie = function() {
                        function e(t) {
                            this[C] = Y();
                            this._result = this._state = undefined;
                            this._subscribers = [];
                            if (w !== t) {
                                typeof t !== "function" && te();
                                this instanceof e ? K(this, t) : ne()
                            }
                        }
                        e.prototype.catch = function e(t) {
                            return this.then(null, t)
                        }
                        ;
                        e.prototype.finally = function e(n) {
                            var i = this;
                            var r = i.constructor;
                            if (t(n)) {
                                return i.then(function(e) {
                                    return r.resolve(n()).then(function() {
                                        return e
                                    })
                                }, function(e) {
                                    return r.resolve(n()).then(function() {
                                        throw e
                                    })
                                })
                            }
                            return i.then(n, n)
                        }
                        ;
                        return e
                    }();
                    ie.prototype.then = P;
                    ie.all = J;
                    ie.race = $;
                    ie.resolve = I;
                    ie.reject = ee;
                    ie._setScheduler = d;
                    ie._setAsap = c;
                    ie._asap = l;
                    function re() {
                        var e = void 0;
                        if (typeof i !== "undefined") {
                            e = i
                        } else if (typeof self !== "undefined") {
                            e = self
                        } else {
                            try {
                                e = Function("return this")()
                            } catch (e) {
                                throw new Error("polyfill failed because global object is unavailable in this environment")
                            }
                        }
                        var t = e.Promise;
                        if (t) {
                            var n = null;
                            try {
                                n = Object.prototype.toString.call(t.resolve())
                            } catch (e) {}
                            if (n === "[object Promise]" && !t.cast) {
                                return
                            }
                        }
                        e.Promise = ie
                    }
                    ie.polyfill = re;
                    ie.Promise = ie;
                    return ie
                })
            });
            var v = t.performance;
            var g = {};
            ["memory", "navigation", "timing"].forEach(function(e) {
                g[e] = v && v[e] || {}
            });
            ["clearMarks", "clearMeasures", "clearResourceTimings", "getEntries", "getEntriesByName", "getEntriesByType", "mark", "measure", "now", "setResourceTimingBufferSize", "toJSON"].forEach(function(e) {
                g[e] = function() {
                    if (v && v[e]) {
                        return v[e].apply(v, arguments)
                    }
                }
            });
            function m(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }
            var y = Array.isArray || function(e) {
                return Object.prototype.toString.call(e) === "[object Array]"
            }
            ;
            function _(e) {
                switch (typeof e) {
                case "string":
                    return e;
                case "boolean":
                    return e ? "true" : "false";
                case "number":
                    return isFinite(e) ? e : "";
                default:
                    return ""
                }
            }
            function b(e, t, n, i) {
                t = t || "&";
                n = n || "=";
                if (e === null) {
                    e = undefined
                }
                if (typeof e === "object") {
                    return S(A(e), function(i) {
                        var r = encodeURIComponent(_(i)) + n;
                        if (y(e[i])) {
                            return S(e[i], function(e) {
                                return r + encodeURIComponent(_(e))
                            }).join(t)
                        } else {
                            return r + encodeURIComponent(_(e[i]))
                        }
                    }).join(t)
                }
                if (!i)
                    return "";
                return encodeURIComponent(_(i)) + n + encodeURIComponent(_(e))
            }
            function S(e, t) {
                if (e.map)
                    return e.map(t);
                var n = [];
                for (var i = 0; i < e.length; i++) {
                    n.push(t(e[i], i))
                }
                return n
            }
            var A = Object.keys || function(e) {
                var t = [];
                for (var n in e) {
                    if (Object.prototype.hasOwnProperty.call(e, n))
                        t.push(n)
                }
                return t
            }
            ;
            function T(e, t, n, i) {
                t = t || "&";
                n = n || "=";
                var r = {};
                if (typeof e !== "string" || e.length === 0) {
                    return r
                }
                var a = /\+/g;
                e = e.split(t);
                var s = 1e3;
                if (i && typeof i.maxKeys === "number") {
                    s = i.maxKeys
                }
                var o = e.length;
                if (s > 0 && o > s) {
                    o = s
                }
                for (var u = 0; u < o; ++u) {
                    var l = e[u].replace(a, "%20"), d = l.indexOf(n), c, f, p, h;
                    if (d >= 0) {
                        c = l.substr(0, d);
                        f = l.substr(d + 1)
                    } else {
                        c = l;
                        f = ""
                    }
                    p = decodeURIComponent(c);
                    h = decodeURIComponent(f);
                    if (!m(r, p)) {
                        r[p] = h
                    } else if (y(r[p])) {
                        r[p].push(h)
                    } else {
                        r[p] = [r[p], h]
                    }
                }
                return r
            }
            var k = {
                encode: b,
                stringify: b,
                decode: T,
                parse: T
            };
            function E(e) {
                if (e === void 0) {
                    e = t && t.location || {}
                }
                return s({
                    hash: k.parse((e.hash || "#").substr(1)),
                    search: k.parse((e.search || "?").substr(1))
                }, k)
            }
            var P = {
                isArr: function e(t) {
                    return Array.isArray(t)
                },
                isFn: function e(t) {
                    return typeof t === "function"
                },
                isNil: function e(t) {
                    return t === null || t === undefined
                },
                isNum: function e(t) {
                    return typeof t === "number" && t === t
                },
                isNonEmptyStr: function e(t) {
                    return typeof t === "string" && /\S/.test(t)
                },
                isObj: function e(t) {
                    return Object.prototype.toString.call(t) === "[object Object]"
                }
            };
            var I = {
                perf: g,
                Promise: h,
                qs: E,
                assign: function e() {
                    return s.apply(void 0, arguments)
                },
                get: function e(t, n, i) {
                    var r = t;
                    var a = n.split(".");
                    if (!r) {
                        return i
                    }
                    for (var s = 0; s < a.length; s++) {
                        var o = a[s];
                        if (r[o] === undefined) {
                            return i
                        }
                        if (s + 1 < a.length) {
                            r = r[o]
                        } else {
                            return r[o]
                        }
                    }
                },
                withoutNilValues: function e(t) {
                    var n = t;
                    if (P.isArr(t)) {
                        n = t.filter(function(e) {
                            return !P.isNil(e)
                        }).map(I.withoutNilValues)
                    } else if (P.isObj(t)) {
                        n = {};
                        Object.keys(t).forEach(function(e) {
                            if (!P.isNil(t[e])) {
                                n[e] = I.withoutNilValues(t[e])
                            }
                        })
                    }
                    return n
                },
                debounce: function e(n, i, r, a) {
                    if (a === void 0) {
                        a = t
                    }
                    var s;
                    return function() {
                        var e = this;
                        var t = arguments;
                        var o = function i() {
                            s = null;
                            o = null;
                            if (!r) {
                                n.apply(e, t)
                            }
                        };
                        if (!s && r) {
                            n.apply(e, t)
                        }
                        a.clearTimeout(s);
                        s = a.setTimeout(o, i)
                    }
                },
                throttle: function e(t, n) {
                    var i = Date.now();
                    return function() {
                        var e = Date.now();
                        if (e - i >= n) {
                            t.apply(void 0, arguments);
                            i = e
                        }
                    }
                }
            };
            I.assign(I, P);
            I.VERSION = "n/a";
            var C = [{
                inline: false,
                muted: false
            }, {
                inline: true,
                muted: false
            }, {
                inline: false,
                muted: true
            }, {
                inline: true,
                muted: true
            }];
            function w(e) {
                var t = e.filter(function(e) {
                    return e.passed
                })[0];
                if (!t) {
                    return {
                        always: false,
                        sometimes: false,
                        never: true,
                        inline: false,
                        muted: false
                    }
                }
                var n = t.inline
                  , i = t.muted;
                var r = !n && !i;
                return {
                    always: r,
                    sometimes: !r,
                    never: false,
                    inline: n,
                    muted: i
                }
            }
            function j(e) {
                var n;
                if (e.IE_VERSION || t.cast && t.cast.receiver) {
                    n = {
                        always: true,
                        sometimes: false,
                        never: false,
                        inline: false,
                        muted: false
                    }
                }
                if (e.ANDROID_VERSION || e.IS_IOS) {
                    n = {
                        always: false,
                        sometimes: true,
                        never: false,
                        inline: false,
                        muted: true
                    };
                    if (e.IS_IPHONE) {
                        n.inline = true
                    }
                }
                if (n) {
                    return I.Promise.resolve(n)
                }
            }
            function L(e, t) {
                if (e !== "video" && e !== "audio") {
                    throw new Error("invalid autoplay type: " + e)
                }
                var n = j(t.browser);
                if (n) {
                    return n
                }
                var i = C.map(function(t) {
                    return p[e](t).then(function(e) {
                        var n = e.result;
                        return s({
                            passed: n
                        }, t)
                    })
                });
                return I.Promise.all(i).then(function(e) {
                    return w(e)
                })
            }
            var O = "bc-style-vjs";
            function x(n, i, r) {
                var a = n.classNames;
                if (!i && !r && i !== 0 && r !== 0) {
                    return
                }
                var s = e.querySelector("." + a.playerInstanceDimensions);
                if (!s) {
                    s = e.createElement("style");
                    s.className = a.playerInstanceDimensions;
                    var o = e.querySelector("." + a.playerStyle) || e.querySelector("." + O);
                    if (o) {
                        o.parentNode.insertBefore(s, o.nextSibling)
                    } else {
                        e.head.appendChild(s)
                    }
                } else if (s.innerText) {
                    if (!i && i !== 0) {
                        var u = /width:(\d+)px;/g.exec(s.innerText);
                        if (u && u[1]) {
                            i = t.parseInt(u[1], 10)
                        }
                    } else if (!r && r !== 0) {
                        var l = /height:(\d+)px;/g.exec(s.innerText);
                        if (l && l[1]) {
                            r = t.parseInt(l[1], 10)
                        }
                    }
                }
                var d = "." + a.playerInstance + "{";
                if (i || i === 0) {
                    d += "width:" + t.parseInt(i, 10) + "px;"
                }
                if (r || r === 0) {
                    d += "height:" + t.parseInt(r, 10) + "px;"
                }
                d += "}";
                s.innerText = d
            }
            var D = 3;
            var N = 50;
            var R = function n(i) {
                var r = e.body;
                var a = e.createElement("div");
                a.className = "pub_300x250 pub_300x250m pub_728x90 text-ad textAd text_ad text_ads text_ads_2 text-ads text-ad-links";
                a.innerHTML = "&nbsp;";
                a.setAttribute("style", "height:10px!important;font-size:20px;color:transparent;position:absolute;bottom:0;left:-10000px");
                var s = 0;
                var o = function e() {
                    s++;
                    var n = a.offsetHeight === 0 || !r.contains(a) || a.style.display === "none" || a.style.visibility === "hidden";
                    if (n || s === D) {
                        if (a.parentNode) {
                            a.parentNode.removeChild(a)
                        }
                        return i(n)
                    }
                    t.setTimeout(e, N)
                };
                r.appendChild(a);
                o()
            };
            var M = null;
            var U;
            function B(t) {
                if (t || !U) {
                    U = new h(function(t) {
                        if (e.readyState === "complete" || e.readyState !== "loading" && !e.documentElement.doScroll) {
                            R(t)
                        } else {
                            e.addEventListener("DOMContentLoaded", function() {
                                R(t)
                            })
                        }
                    }
                    )
                }
                return U.then(function(e) {
                    M = e;
                    return e
                })
            }
            Object.defineProperties(B, {
                VERSION: {
                    enumerable: true,
                    value: "n/a"
                },
                lastResult: {
                    enumerable: true,
                    get: function e() {
                        return M
                    }
                },
                mightBe: {
                    enumerable: true,
                    get: function e() {
                        return M !== false
                    }
                },
                mightNotBe: {
                    enumerable: true,
                    get: function e() {
                        return M !== true
                    }
                }
            });
            var F = "vjs-waiting-for-autoplay";
            function V(e, t, n, i) {
                return e.hasAttribute("data-debug") || t.debug !== undefined || n.debug || i.debug
            }
            function q(n, i, r, a) {
                var s = i.settings
                  , o = i.environment;
                var u = s.embedId
                  , l = s.playerId;
                var d = o.isInBcFrame
                  , c = o.queryString
                  , f = o.urlHash;
                var p = "bc-player-" + l + "_" + u;
                var h = p + "-index-" + s.playerIndex;
                I.perf.mark("bcInitStart");
                s.classNames = {
                    player: p,
                    playerStyle: "bc-style-" + l + "-" + u,
                    playerInstance: h,
                    playerInstanceDimensions: h + "-video-dimensions"
                };
                s.embedState = {
                    controls: r.hasAttribute("controls"),
                    loop: r.hasAttribute("loop"),
                    muted: r.hasAttribute("muted"),
                    playsinline: r.hasAttribute("playsinline"),
                    poster: r.hasAttribute("poster"),
                    sources: !!r.querySelector("source"),
                    tracks: !!r.querySelector("track")
                };
                a.debug = V(r, c, a, s);
                if (r.hasAttribute("data-vttjs") && I.isNonEmptyStr(r.getAttribute("data-vttjs"))) {
                    a["vtt.js"] = r.getAttribute("data-vttjs")
                } else if (c.vttjs && I.isNonEmptyStr(c.vttjs)) {
                    a["vtt.js"] = c.vttjs
                } else if (a.hasOwnProperty("vtt.js") || a.hasOwnProperty("vttjs")) {
                    a["vtt.js"] = a["vtt.js"] || a.vttjs
                } else if (s["vtt.js"] || s.vttjs) {
                    a["vtt.js"] = s["vtt.js"] || s.vttjs
                } else {
                    a["vtt.js"] = "https://vjs.zencdn.net/vttjs/0.12.5/vtt.global.min.js"
                }
                if (s.playButton) {
                    var v = s.playButton
                      , g = v.hover
                      , m = v.shape
                      , y = v.position;
                    if (g === "glow") {
                        n.dom.addClass(r, "vjs-play-button-hover-glow")
                    } else if (g === "darken") {
                        n.dom.addClass(r, "vjs-play-button-hover-darken")
                    }
                    if (m === "square") {
                        n.dom.addClass(r, "vjs-play-button-shape-square")
                    } else if (m === "rectangle") {
                        n.dom.addClass(r, "vjs-play-button-shape-rectangle")
                    }
                    if (y === "topRight") {
                        n.dom.addClass(r, "vjs-play-button-position-top-right")
                    } else if (y === "topLeft") {
                        n.dom.addClass(r, "vjs-play-button-position-top-left")
                    }
                }
                if (c.crossorigin !== undefined || s.media && s.media.tracks && n.browser.IS_ANY_SAFARI) {
                    s.crossorigin = true
                }
                if (s.crossorigin) {
                    r.setAttribute("crossorigin", "anonymous")
                }
                var _ = f.t || c.t || r.getAttribute("data-start-time");
                if (/^[\d]+$/.test(_)) {
                    s.startTime = Number(_)
                } else if (/^(\d+h)?(\d+m)?(\d+s)?$/.test(_)) {
                    s.startTime = _
                }
                var b = c.adConfigId;
                var S = r.getAttribute("data-ad-config-id");
                if (I.isNonEmptyStr(b)) {
                    s.adConfigId = b
                } else if (I.isNonEmptyStr(S)) {
                    s.adConfigId = S
                }
                if (typeof s.adConfigId === "string") {
                    s.adConfigId = s.adConfigId.trim()
                }
                if (!I.isNonEmptyStr(s.adConfigId)) {
                    s.adConfigId = null
                }
                if (s.usingAdFailover && !B.mightBe) {
                    s.adConfigId = null
                }
                var A = c.deliveryConfigId;
                var T = r.getAttribute("data-delivery-config-id");
                if (I.isNonEmptyStr(A)) {
                    s.deliveryConfigId = A
                } else if (I.isNonEmptyStr(T)) {
                    s.deliveryConfigId = T
                }
                if (typeof s.deliveryConfigId === "string") {
                    s.deliveryConfigId = s.deliveryConfigId.trim()
                }
                if (!I.isNonEmptyStr(s.deliveryConfigId)) {
                    s.deliveryConfigId = null
                }
                s.applicationId = c.applicationId || r.getAttribute("data-application-id") || s.applicationId;
                var k = I.qs();
                if (r.hasAttribute("autoplay")) {
                    a.autoplay = true
                } else if (k.hash.hasOwnProperty("autoplay") || k.search.hasOwnProperty("autoplay")) {
                    a.autoplay = k.hash.autoplay || k.search.autoplay || true;
                    if (!d) {
                        n.log.warn("DEPRECATION: Using the `autoplay` query parameter or URL hash value to request autoplay for advanced, in-page embeds is deprecated and will be removed in Brightcove Player 7. Please use the player configuration or Video.js option instead!")
                    }
                } else if (!a.hasOwnProperty("autoplay")) {
                    a.autoplay = s.autoplay || false
                }
                if (a.autoplay) {
                    n.dom.addClass(r, F)
                }
                if (c.preload) {
                    a.preload = c.preload
                } else if (!a.hasOwnProperty("preload") && s.preload) {
                    a.preload = s.preload
                }
                a.height = r.getAttribute("height") || undefined;
                a.width = r.getAttribute("width") || undefined;
                if (!d && r && (a.width || a.height)) {
                    x(s, a.width, a.height)
                }
                ["loop", "muted", "playsinline"].forEach(function(e) {
                    if (c[e] !== undefined || s[e] || s.embedState[e] || a[e]) {
                        a[e] = true
                    } else {
                        a[e] = false
                    }
                });
                if (a.playsinline) {
                    r.setAttribute("playsinline", "playsinline")
                }
                if (a.muted) {
                    r.setAttribute("muted", "muted");
                    r.muted = true
                }
                if (d) {
                    if (c.language) {
                        a.language = c.language
                    } else if (I.isNonEmptyStr(e.documentElement.lang)) {
                        a.language = e.documentElement.lang
                    } else {
                        a.language = t.navigator.language
                    }
                    e.documentElement.lang = a.language
                } else if (r.hasAttribute("language")) {
                    a.language = r.getAttribute("language");
                    n.log.warn("Use of the language attribute on the video embed is invalid. Please use the lang attribute instead.")
                } else if (!a.hasOwnProperty("language") && I.isNonEmptyStr(s.language)) {
                    a.language = s.language
                }
                var E = s.media;
                if (E && E.poster && E.poster.highres && !r.poster) {
                    if (/(https?:)?\/\//.test(E.poster.highres)) {
                        a.poster = E.poster.highres
                    } else {
                        a.poster = i.environment.scriptBaseUrl + "/" + E.poster.highres
                    }
                    if (n.browser.IS_IPHONE) {
                        r.poster = a.poster
                    }
                }
                if (E && E.tracks) {
                    E.tracks.forEach(function(e) {
                        r.appendChild(n.dom.createEl("track", {}, {
                            default: e.default ? e.default : "",
                            label: e.label ? e.label : "",
                            kind: "captions",
                            src: e.src,
                            srclang: e.srclang
                        }))
                    })
                }
                if (E && E.src) {
                    a.sources = [E.src]
                } else if (E && E.sources) {
                    a.sources = E.sources
                }
                a.runtime_ = i;
                if (!(n.browser.IS_ANY_SAFARI || n.browser.IS_IOS)) {
                    a.html5 = a.html5 || {};
                    a.html5.nativeCaptions = false
                }
                if (s.vhs !== false) {
                    if (!a.flash) {
                        a.flash = {}
                    }
                    if (!a.flash.swf) {
                        a.flash.swf = s.playersCDN + "/videojs-flashls-source-handler/1.4.8/video-js.swf"
                    }
                }
                n.options.vhs = n.options.vhs || {};
                a.html5 = a.html5 || {};
                a.html5.vhs = a.html5.vhs || {};
                if (s.vhs && typeof s.vhs === "object") {
                    a.html5.vhs = s.vhs
                }
                if (n.browser.IS_ANDROID && (n.options.vhs.enableLowInitialPlaylist === undefined || a.html5.vhs.enableLowInitialPlaylist === undefined)) {
                    a.html5.vhs.enableLowInitialPlaylist = true
                }
                if (!n.browser.IS_ANY_SAFARI && n.options.vhs.overrideNative === undefined && a.html5.vhs.overrideNative === undefined) {
                    a.html5.vhs.overrideNative = true
                }
                a.inactivityTimeout = 5e3;
                if (n.browser.TOUCH_ENABLED) {
                    a.inactivityTimeout = 0
                }
                a.controls = d ? true : s.embedState.controls;
                a.persistTextTrackSettings = true;
                a.sourceOrder = true;
                a.userActions = {
                    hotkeys: {}
                };
                if (s.fullscreenControl === false) {
                    a.userActions.doubleClick = false
                }
                var P = i.environment.userAgent.match(/applewebkit\/(\d*).*Version\/(\d*.\d*)/i);
                a.nativeControlsForTouch = n.browser.IS_ANDROID && n.browser.ANDROID_VERSION < 5 && P && P[2] > 0;
                ["controlBar", "flash", "liveui", "playbackRates", "responsive", "suppressNotSupportedError", "techOrder"].forEach(function(e) {
                    if (s.hasOwnProperty(e)) {
                        a[e] = s[e]
                    }
                });
                return a
            }
            var H = function e(t) {
                var n = t.registerPlugin || t.plugin;
                n("urlparams", function(e) {
                    e = e || {};
                    var n = function e(t) {
                        var n = 0, i;
                        t = (t || "").replace(/^\s+|\s+$/g, "");
                        if (!t || !/^(\d+h)?(\d+m)?(\d+s)?$/.test(t)) {
                            return -1
                        }
                        i = t.match(/^(\d+)h/);
                        if (i) {
                            n += parseFloat(i[1]) * 3600;
                            t = t.replace(/^(\d+)h/, "")
                        }
                        i = t.match(/^(\d+)m/);
                        if (i) {
                            n += parseFloat(i[1]) * 60;
                            t = t.replace(/^(\d+)m/, "")
                        }
                        i = t.match(/^(\d+)s/);
                        if (i) {
                            n += parseFloat(i[1])
                        }
                        return n
                    }, i = .9, r = function e(t, n) {
                        var r = t - n;
                        if (isNaN(r)) {
                            return false
                        }
                        return Math.abs(r) < i
                    }, a = function e(t) {
                        s.ready(function() {
                            if (s.networkState() === 2) {
                                t()
                            } else {
                                s.one("loadedmetadata", function() {
                                    s.setTimeout(t, 0)
                                })
                            }
                        })
                    }, s = this, o = I.qs(), u = o.hash.t || o.search.t, l;
                    if (typeof e.time === "number") {
                        l = e.time
                    } else {
                        l = n(e.time)
                    }
                    if (u) {
                        if (/^[\d]+$/.test(u)) {
                            l = Number(u)
                        } else {
                            l = n(u)
                        }
                        if (!e.iframe && l !== -1) {
                            t.log.warn("DEPRECATION: Using the `t` query parameter or URL hash value to set an initial playback start time for advanced, in-page embeds is deprecated and will be removed in Brightcove Player 7. Please add a `data-start-time` attribute going forward!")
                        }
                    }
                    if (l > 0) {
                        (function() {
                            var t = e.delay || 250, n, i = false, o = function e() {
                                if (i || r(s.currentTime(), l)) {
                                    i = true;
                                    u()
                                } else {
                                    s.currentTime(l);
                                    n = s.setTimeout(e, t)
                                }
                            }, u = function e() {
                                s.clearTimeout(n);
                                s.off("timeupdate", e);
                                if (!i) {
                                    s.currentTime(l)
                                }
                            };
                            s.on("timeupdate", u);
                            a(o)
                        }
                        )()
                    }
                    if (o.hash.captions !== undefined || o.search.captions !== undefined) {
                        (function() {
                            var e = o.hash.captions || o.search.captions;
                            s.one("play", function() {
                                var t = s.textTracks(), n, i;
                                if (t) {
                                    for (i = 0; i < t.length; i++) {
                                        n = t[i];
                                        if (n.language === e) {
                                            n.mode = "showing";
                                            break
                                        }
                                    }
                                }
                            })
                        }
                        )()
                    }
                })
            };
            function G(e) {
                if (e === void 0) {
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                }
                return e
            }
            var W = G;
            function K(e, t) {
                e.prototype = Object.create(t.prototype);
                e.prototype.constructor = e;
                e.__proto__ = t
            }
            var z = K;
            var Y = {
                activeCues: null,
                cues: null,
                id: "",
                inBandMetadataTrackDispatchType: undefined,
                kind: "metadata",
                label: "",
                language: "",
                mode: "",
                oncuechange: undefined
            };
            var X = ["activeCues", "cues", "id", "inBandMetadataTrackDispatchType", "kind", "label", "language"];
            var Q = ["mode"];
            var Z = function e(t, n) {
                if (t === "media" && n.kind === "metadata" && n.label === "media-cues") {
                    return true
                }
                if (t === "id3" && typeof n.inBandMetadataTrackDispatchType === "string" && n.inBandMetadataTrackDispatchType.trim().length > 0) {
                    return true
                }
                return false
            };
            var J = function e(t) {
                var n = function(e) {
                    z(n, e);
                    function n(n, i, r) {
                        var a;
                        if (r === void 0) {
                            r = function e() {}
                        }
                        a = e.call(this) || this;
                        var s = W(a);
                        s.player_ = n;
                        s.reTriggerEvent_ = t.bind(s, s.reTriggerEvent_);
                        s.update_ = t.bind(s, s.update_);
                        s.type_ = i;
                        s.logger_ = r;
                        X.concat(Q).forEach(function(e) {
                            var t = {
                                get: function t() {
                                    return s.track_ && s.track_[e] || Y[e]
                                },
                                enumerable: true
                            };
                            if (Q.indexOf(e) !== -1) {
                                t.set = function(t) {
                                    if (!s.track_) {
                                        return
                                    }
                                    s.track_[e] = t
                                }
                            }
                            Object.defineProperty(s, e, t)
                        });
                        s.update_();
                        var o = n.textTracks();
                        var u = function e(t) {
                            if (!s.track_) {
                                s.update_(t)
                            } else if (s.track_.mode !== "hidden") {
                                s.track_.mode = "hidden";
                                s.logger_("timeupdate -> type:" + s.type_ + (s.track_ ? ",mode:" + s.track_.mode : "") + " -> track was set to hidden")
                            }
                        };
                        ["addtrack", "removetrack"].forEach(function(e) {
                            return o.addEventListener(e, s.update_)
                        });
                        s.player_.on("timeupdate", u);
                        return s || W(a)
                    }
                    var i = n.prototype;
                    i.addCue = function e() {
                        var t = this;
                        var n = arguments;
                        if (!this.track_) {
                            this.one("trackexists", function() {
                                return t.addCue.apply(t, n)
                            });
                            return
                        }
                        return this.track_.addCue.apply(this.track_, n)
                    }
                    ;
                    i.removeCue = function e() {
                        var t = this;
                        var n = arguments;
                        if (!this.track_) {
                            return this.one("trackexists", function() {
                                return t.removeCue.apply(t, n)
                            })
                        }
                        return this.track_.removeCue.apply(this.track_, n)
                    }
                    ;
                    i.reTriggerEvent_ = function e(t) {
                        this.trigger(t)
                    }
                    ;
                    i.update_ = function e(t) {
                        var n = this;
                        if (t === void 0) {
                            t = {}
                        }
                        var i;
                        if (t.type === "removetrack" && t.track && t.track === this.track_) {
                            i = null
                        } else if (t.type === "addtrack" && t.track && !this.track_ && Z(this.type_, t.track)) {
                            i = t.track
                        } else {
                            var r = this.player_.textTracks();
                            var a = r.length;
                            while (a--) {
                                if (Z(this.type_, r[a])) {
                                    i = r[a];
                                    break
                                }
                            }
                        }
                        var s = function e() {
                            if (t.type === "timeupdate") {
                                return
                            }
                            n.logger_.apply(n, arguments)
                        };
                        s("update -> type:" + this.type_ + ", mode:" + (i ? i.mode : "?") + " -> event:" + (t.type || "constructor"));
                        if (this.track_ === i) {
                            s("update -> type:" + this.type_ + ", mode:" + (i ? i.mode : "?") + " -> " + (i ? "already proxied" : "no track to proxy"));
                            return
                        }
                        if (this.track_) {
                            this.track_.removeEventListener("cuechange", this.reTriggerEvent_)
                        }
                        this.track_ = i;
                        if (!this.track_) {
                            s("update -> type:" + this.type_ + ", mode:" + (i ? i.mode : "?") + " -> track changed, but no new track exists");
                            return
                        }
                        if (this.track_.mode !== "hidden") {
                            this.track_.mode = "hidden"
                        }
                        this.track_.addEventListener("cuechange", this.reTriggerEvent_);
                        this.trigger("trackexists");
                        s("update -> type:" + this.type_ + ", mode:" + (i ? i.mode : "?") + " -> track exists")
                    }
                    ;
                    return n
                }(t.EventTarget);
                n.prototype.allowedEvents_ = {
                    cuechange: "cuechange"
                };
                return n
            };
            var $ = function e(t) {
                var i = J(t);
                var r = {
                    id3CuePointsTrack: function e(t) {
                        var n = this.proxyTracks_.id3;
                        if (!n) {
                            n = this.proxyTracks_.id3 = new i(this,"id3",t)
                        }
                        return n
                    },
                    mediaCuePointsTrack: function e(t) {
                        var n = this.proxyTracks_.media;
                        if (n) {
                            return n
                        }
                        n = this.proxyTracks_.media = new i(this,"media",t);
                        if (n.track_) {
                            return n
                        }
                        this.addTextTrack("metadata", "media-cues");
                        n.update_();
                        return n
                    }
                };
                function a(e) {
                    var n = this;
                    if (e === void 0) {
                        e = {}
                    }
                    this.proxyTracks_ = {};
                    var i = t.createLogger("proxyTracks");
                    if (!e.debug) {
                        i = function e() {}
                    }
                    i("initialized");
                    Object.keys(r).forEach(function(e) {
                        n[e] = function() {
                            return r[e].call(n, i)
                        }
                    });
                    this.ready(function() {
                        Object.keys(r).forEach(function(t) {
                            var r = n[t]();
                            if (e.debug) {
                                r.on("cuechange", function() {
                                    for (var e = 0; e < r.activeCues.length; e++) {
                                        var t = r.activeCues[e];
                                        i(r.type_ + " -> cuechange -> activeCues[" + e + "]: " + (t.value && t.value.key || t.frame && t.frame.id))
                                    }
                                })
                            }
                        })
                    })
                }
                t.registerPlugin("proxyTracks", a);
                a.VERSION = n
            };
            var ee = {
                verbose: false,
                maxSavedSeekEvents: 10,
                debounceTimeout: 1e3,
                playbackRateTolerance: 1.5,
                stableTimeUpdateCount: 3,
                minInterval: 1
            };
            var te = function e(t) {
                t.trigger("seek")
            };
            var ne = function e(t) {
                var i = function e(n) {
                    var i = t.mergeOptions(ee, n);
                    var r;
                    var a = false;
                    var s;
                    var o;
                    var u;
                    var l;
                    var d = 0;
                    var c = [];
                    var f = 0;
                    var p = {};
                    var h = {};
                    var v = i.verbose ? function() {
                        var e;
                        for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
                            i[r] = arguments[r]
                        }
                        return (e = t.log).call.apply(e, [t, "seek-events:"].concat(i))
                    }
                    : function() {}
                    ;
                    var g = function e() {
                        p.seek = this.seekEvents.last().seekEnd;
                        a = false;
                        v("event seekStart: ", this.seekEvents.last().seekStart);
                        v("event seekEnd: ", this.seekEvents.last().seekEnd)
                    };
                    var m = function e() {
                        v("stable");
                        this.seekEvents.stable = true
                    };
                    var y = function e() {
                        v("unstable");
                        this.seekEvents.stable = false
                    };
                    var _ = function e(t) {
                        p.seek = this.currentTime();
                        p.clock = t.timeStamp || Date.now();
                        h.seek = p.seek;
                        h.clock = p.clock
                    };
                    var b = I.debounce(te, i.debounceTimeout);
                    var S = function e(t) {
                        s = this.currentTime();
                        o = t.timeStamp || +new Date;
                        u = s - h.seek;
                        if (o === h.clock || s === p.seek) {
                            return
                        }
                        l = Math.abs(u) / (Math.abs(o - h.clock) * .001);
                        if (l / this.playbackRate() > this.seekEvents.playbackRateTolerance) {
                            if (Math.abs(s - p.seek) >= this.seekEvents.minInterval) {
                                this.trigger("unstable");
                                d = 0;
                                if (!a) {
                                    f = Number(p.seek)
                                }
                                c.push({
                                    timeStamp: o,
                                    seekStart: f,
                                    seekEnd: s,
                                    seekInterval: s - f
                                });
                                if (c.length > i.maxSavedSeekEvents) {
                                    c.shift()
                                }
                                a = true;
                                b(this)
                            }
                        } else {
                            d++;
                            if (d >= this.seekEvents.stableTimeUpdateCount && !this.seekEvents.stable && !a) {
                                this.trigger("stable")
                            }
                            p.seek = s
                        }
                        h.seek = s;
                        h.clock = o
                    };
                    this.seekEvents = {
                        stableTimeUpdateCount: i.stableTimeUpdateCount,
                        playbackRateTolerance: i.playbackRateTolerance,
                        debounceTimeout: i.debounceTimeout,
                        minInterval: i.minInterval,
                        stable: false,
                        enabled: function e() {
                            return r
                        },
                        enable: t.bind(this, function() {
                            if (r) {
                                return
                            }
                            r = true;
                            p.seek = 0;
                            p.clock = Date.now();
                            h.seek = 0;
                            h.clock = p.clock;
                            this.on("seek", g);
                            this.on("stable", m);
                            this.on("unstable", y);
                            this.on(["loadstart", "playing", "adplaying"], _);
                            this.on(["timeupdate", "adtimeupdate"], S)
                        }),
                        disable: t.bind(this, function() {
                            if (!r) {
                                return
                            }
                            r = false;
                            this.off("seek", g);
                            this.off("stable", m);
                            this.off("unstable", y);
                            this.off(["loadstart", "playing", "adplaying"], _);
                            this.off(["timeupdate", "adtimeupdate"], S)
                        }),
                        last: function e() {
                            return c[c.length - 1]
                        },
                        all: function e() {
                            return c
                        }
                    };
                    this.seekEvents.enable()
                };
                var r = t.registerPlugin || t.plugin;
                i.VERSION = n;
                r("seekEvents", i)
            };
            var ie = new t.Blob([new Uint8Array([0, 0, 0, 28, 102, 116, 121, 112, 105, 115, 111, 109, 0, 0, 2, 0, 105, 115, 111, 109, 105, 115, 111, 50, 109, 112, 52, 49, 0, 0, 0, 8, 102, 114, 101, 101, 0, 0, 2, 239, 109, 100, 97, 116, 33, 16, 5, 32, 164, 27, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 33, 16, 5, 32, 164, 27, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 167, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 2, 194, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 232, 0, 0, 0, 47, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 236, 116, 114, 97, 107, 0, 0, 0, 92, 116, 107, 104, 100, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 101, 100, 116, 115, 0, 0, 0, 28, 101, 108, 115, 116, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 47, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 100, 109, 100, 105, 97, 0, 0, 0, 32, 109, 100, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 68, 0, 0, 8, 0, 85, 196, 0, 0, 0, 0, 0, 45, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 1, 15, 109, 105, 110, 102, 0, 0, 0, 16, 115, 109, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 100, 105, 110, 102, 0, 0, 0, 28, 100, 114, 101, 102, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1, 0, 0, 0, 211, 115, 116, 98, 108, 0, 0, 0, 103, 115, 116, 115, 100, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 87, 109, 112, 52, 97, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 16, 0, 0, 0, 0, 172, 68, 0, 0, 0, 0, 0, 51, 101, 115, 100, 115, 0, 0, 0, 0, 3, 128, 128, 128, 34, 0, 2, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 1, 244, 0, 0, 1, 243, 249, 5, 128, 128, 128, 2, 18, 16, 6, 128, 128, 128, 1, 2, 0, 0, 0, 24, 115, 116, 116, 115, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 4, 0, 0, 0, 0, 28, 115, 116, 115, 99, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 28, 115, 116, 115, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 115, 0, 0, 1, 116, 0, 0, 0, 20, 115, 116, 99, 111, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 44, 0, 0, 0, 98, 117, 100, 116, 97, 0, 0, 0, 90, 109, 101, 116, 97, 0, 0, 0, 0, 0, 0, 0, 33, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 109, 100, 105, 114, 97, 112, 112, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 105, 108, 115, 116, 0, 0, 0, 37, 169, 116, 111, 111, 0, 0, 0, 29, 100, 97, 116, 97, 0, 0, 0, 1, 0, 0, 0, 0, 76, 97, 118, 102, 53, 54, 46, 52, 48, 46, 49, 48, 49])],{
                type: "video/mp4"
            });
            var re = URL.createObjectURL(ie);
            var ae = ["perSourceBehaviors", "contextmenu", "contextmenuUI", "bcAnalytics", "errors", "catalog", "playerInfo", "dock", "plugin", "reloadSourceOnError", "playlist", "endscreen", "proxyTracks", "seekEvents", "touchActive", "urlparams"];
            var se = function n(i, r, a) {
                var s = a.settings;
                var o = a.environment;
                var u = o.queryString;
                var l = {};
                var d = Boolean(r.options_.debug);
                var c = {
                    bcAnalytics: {
                        applicationId: s.applicationId,
                        mr: Boolean(t.bc_isManagedRelease),
                        referrer: u.referrer,
                        usage: u.usage,
                        verbose: d
                    },
                    chromecastReceiver: {
                        debug: d
                    },
                    contextmenu: {
                        cancel: false
                    },
                    ima3: {
                        debugContribAds: d
                    },
                    ssai: {
                        debug: d
                    },
                    vr: {
                        debug: d
                    }
                };
                r.on("pluginsetup", function(e, t) {
                    var n = t.name;
                    if (ae.indexOf(n) !== -1) {
                        return
                    }
                    r.trigger({
                        type: "usage",
                        name: n + "!" + i.getPluginVersion(n)
                    })
                });
                if (s.contextMenu !== false) {
                    var f = [{
                        label: r.localize("Player Information"),
                        listener: function e() {
                            return r.usingPlugin("playerInfo") && r.playerInfo.modal.open()
                        }
                    }];
                    if (s.contextMenu.brightcoveBranding !== false) {
                        f.push({
                            href: "https://www.brightcove.com/en/why-brightcove?utm_type=player",
                            label: r.localize("About Brightcove")
                        })
                    }
                    c.contextmenuUI = {
                        content: f
                    }
                }
                var p = function e(t, n) {
                    if (n === void 0) {
                        n = {}
                    }
                    var a = c[t] || {};
                    if (!r.hasPlugin(t)) {
                        i.log.error('Plugin "' + t + '" is missing. Please check your player configuration.');
                        return
                    }
                    if (r.usingPlugin(t)) {
                        return
                    }
                    var s = i.mergeOptions(a, n);
                    try {
                        r[t](s)
                    } catch (e) {
                        i.log.error('Unable to initialize "' + t + '" plugin:', e)
                    }
                };
                if (s.usingAdFailover && s.usingIMAPrerollWithSSAI) {
                    i.log.warn("Ad failover is not compatible with SSAI and client-side preroll. " + "Please configure only one. This player will use ad failover behavior.");
                    delete s.usingIMAPrerollWithSSAI
                }
                if (s.usingAdFailover) {
                    r.trigger({
                        type: "usage",
                        name: "ad-failover"
                    });
                    var h = r.usingAdBlocker.mightBe ? s.serverSideAdPlugin : s.clientSideAdPlugin
                      , v = h.name
                      , g = h.options;
                    p(v, g)
                } else if (s.usingIMAPrerollWithSSAI) {
                    if (t.bc.disposedAfterPreroll_) {
                        var m = s.serverSideAdPlugin.name;
                        var y = s.serverSideAdPlugin.options;
                        var _ = s.clientSideAdPlugin.name;
                        i.deregisterPlugin(_);
                        i.registerPlugin(m, t.bc.ssaiPluginCache_);
                        p(m, y)
                    } else {
                        r.trigger({
                            type: "usage",
                            name: "ssai-with-ima-preroll"
                        });
                        var b = s.clientSideAdPlugin.name;
                        var S = s.clientSideAdPlugin.options;
                        var A = s.serverSideAdPlugin.name;
                        t.bc.ssaiPluginCache_ = i.getPlugin("ssai");
                        i.deregisterPlugin(A);
                        p(b, S);
                        var T = r.tagAttributes;
                        r.one(["adend", "adtimeout", "adserror"], function(n) {
                            r.one("playing", function() {
                                var i = r.volume();
                                var a = r.muted();
                                if (n.type === "adend") {
                                    i = r.ima3.adPlayer.volume();
                                    a = r.ima3.adPlayer.muted()
                                }
                                var s = r.el();
                                var o = s.parentNode;
                                var u = e.createElement("div");
                                u.setAttribute("id", "bc-player-placeholder");
                                o.replaceChild(u, s);
                                r.dispose();
                                t.bc.disposedAfterPreroll_ = true;
                                var l = e.createElement("video");
                                Object.keys(T).forEach(function(e) {
                                    l.setAttribute(e, T[e])
                                });
                                o.replaceChild(l, u);
                                var d = t.bc(T.id);
                                d.bigPlayButton.hide();
                                d.ready(function() {
                                    d.one("playing", function() {
                                        t.bc.disposedAfterPreroll_ = false
                                    });
                                    var e = d.play();
                                    if (e.then) {
                                        e.catch(function() {
                                            d.bigPlayButton.show()
                                        })
                                    }
                                    d.volume(i);
                                    d.muted(a)
                                })
                            })
                        })
                    }
                }
                s.plugins.forEach(function(e) {
                    var t = e.autoInit
                      , n = e.name
                      , i = e.options;
                    if (!t) {
                        return
                    }
                    p(n, i)
                });
                var k = s.media
                  , E = s.videoCloud;
                var P = k && !!(k.sources || k.length && k[0].sources);
                if (E && E.policy_key && !P) {
                    var C = {
                        embedHasPoster: s.embedState.poster,
                        embedHasSources: s.embedState.sources,
                        embedHasTracks: s.embedState.tracks,
                        adConfigId: s.adConfigId,
                        deliveryConfigId: s.deliveryConfigId
                    };
                    if (E.playlist) {
                        r.trigger({
                            type: "usage",
                            name: "catalog-playlist"
                        });
                        C.playlistId = E.playlist
                    }
                    if (E.video) {
                        r.trigger({
                            type: "usage",
                            name: "catalog-video"
                        });
                        C.videoId = E.video
                    }
                    if (E.search) {
                        r.trigger({
                            type: "usage",
                            name: "catalog-search"
                        });
                        C.search = E.search
                    }
                    if (E.sequence) {
                        r.trigger({
                            type: "usage",
                            name: "catalog-sequence"
                        });
                        C.sequence = E.sequence
                    }
                    var w;
                    if (s.usingIMAPrerollWithSSAI && !t.bc.disposedAfterPreroll_) {
                        r.src({
                            src: re,
                            type: "video/mp4"
                        })
                    } else {
                        w = l.catalogMedia = r.catalog.autoFindAndLoadMedia(C)
                    }
                    if (w && w.type === "video") {
                        if (/^[\d]+$/.test(w.id)) {
                            r.mediainfo.id = w.id
                        } else {
                            r.mediainfo.referenceId = r.mediainfo.reference_id = w.id
                        }
                    }
                    r.on("loadstart", function() {
                        if (r.language() && r.catalog.getMetadata({
                            lang: r.language()
                        })) {
                            r.trigger({
                                type: "usage",
                                name: "variant:" + r.language()
                            })
                        }
                    })
                }
                if (r.usingPlugin("bcAnalytics")) {
                    var j = function e() {
                        return (new Date).toISOString().split("T")[0] + ":" + r.bcAnalytics.client.getSession()
                    };
                    r.ready(function() {
                        I.perf.mark("bcInitEnd");
                        I.perf.measure("bcInit", "bcInitStart", "bcInitEnd");
                        if (r.usingPlugin("playerInfo")) {
                            r.playerInfo.modal.on("modalfill", function() {
                                var t = j();
                                var n = r.playerInfo.modal.$(".vjs-pi-section--player tbody");
                                if (!t || !n) {
                                    return
                                }
                                var i = e.createElement("tr");
                                var a = e.createElement("tr");
                                i.innerHTML = "<td>" + r.localize("Session ID") + "</td> <td>" + t + "</td>";
                                n.appendChild(i);
                                a.innerHTML = "<td>" + r.localize("Player Element ID") + "</td> <td>" + r.id() + "</td>";
                                n.appendChild(a)
                            })
                        }
                    });
                    if (r.usingPlugin("errors")) {
                        r.errorDisplay.on("modalfill", function() {
                            var e = j();
                            var t = r.errorDisplay.$(".vjs-errors-content-container");
                            if (!e || !t) {
                                return
                            }
                            t.appendChild(i.dom.createEl("div", {
                                className: "vjs-errors-ref-id",
                                innerHTML: "<b>" + r.localize("Session ID:") + "</b> " + e + " " + "<b>" + r.localize("Player Element ID:") + "</b> " + r.id()
                            }))
                        })
                    }
                }
                if (r.usingPlugin("playerInfo")) {
                    r.on("vjs-contextmenu", function() {
                        if (r.playerInfo.modal) {
                            r.playerInfo.modal.close()
                        }
                    })
                }
                if (r.hasPlugin("dock")) {
                    var L = k && (k[0] && k[0].title || k.title) || "";
                    var O = k && (k[0] && k[0].description || k.description) || "";
                    var x = function e() {
                        if (r.controls()) {
                            var t = r.mediainfo;
                            var n = r.language() || "";
                            var i;
                            if (r.usingPlugin("catalog")) {
                                i = r.catalog.getMetadata({
                                    lang: n
                                });
                                if (!i) {
                                    i = r.catalog.getMetadata({
                                        lang: n.substring(0, 2)
                                    })
                                }
                            }
                            r.dock({
                                title: i && i.name || t && t.name || L,
                                description: i && i.description || t && t.description || O
                            })
                        }
                    };
                    x();
                    r.on(["loadedmetadata", "languagechange"], x)
                }
                return l
            };
            var oe = function e(t) {
                var n = t.registerPlugin || t.plugin;
                n("touchActive", function() {
                    if (!t.browser.TOUCH_ENABLED) {
                        return
                    }
                    var e = this;
                    var n = false;
                    var i = function t() {
                        if (!n) {
                            e.userActive(false)
                        }
                    };
                    e.one("play", function() {
                        var t = e.options_.inactivityTimeout > 0 ? e.options_.inactivityTimeout : 5e3;
                        e.el().className += " vjs-user-active";
                        e.one(["click", "tap"], function() {
                            n = true
                        });
                        e.setTimeout(i, t)
                    })
                })
            };
            var ue = {
                "com.widevine.alpha": "Widevine",
                "com.microsoft.playready": "PlayReady",
                "com.apple.fps": "FairPlay"
            };
            var le = {
                'video/ogg; codecs="theora"': "Ogg",
                'video/mp4; codecs="avc1.42E01E"': "H.264",
                'video/mp4; codecs="hvc1"': "HEVC",
                'video/webm; codecs="vp8, vorbis"': "WebM",
                'video/webm; codecs="vp9"': "VP9",
                'application/x-mpegURL; codecs="avc1.42E01E"': "HLS",
                "application/dash+xml": "DASH",
                'video/mp4; codecs="mp4a.40.2"': "AAC",
                'video/mp4; codecs="mp4a.6B"': "MP3",
                'video/mp4; codecs="ac-3"': "Dolby Digital/AC-3",
                'video/mp4; codecs="mp4a.a6"': "Dolby Digital Plus/EC-3/E-AC-3"
            };
            var de = e.createElement("video");
            var ce = {
                eme: Object.keys(ue).reduce(function(e, t) {
                    e[t] = {
                        name: ue[t],
                        persistentState: false,
                        support: false
                    };
                    return e
                }, {
                    support: Boolean(t.navigator.requestMediaKeySystemAccess || t.MSMediaKeys && t.MSMediaKeys.isTypeSupported || t.WebKitMediaKeys && t.WebKitMediaKeys.isTypeSupported)
                }),
                formats: Object.keys(le).reduce(function(e, t) {
                    var n = le[t];
                    var i = de.canPlayType(t);
                    if (i) {
                        i = i.charAt(0).toUpperCase() + i.slice(1)
                    } else {
                        i = "Not supported"
                    }
                    e[n] = i;
                    return e
                }, {}),
                mse: "MediaSource"in t
            };
            de = null;
            if (!t.navigator.requestMediaKeySystemAccess) {
                var fe = t.MSMediaKeys && t.MSMediaKeys.isTypeSupported || t.WebKitMediaKeys && t.WebKitMediaKeys.isTypeSupported || function() {
                    return false
                }
                ;
                t.navigator.requestMediaKeySystemAccess = function(e, n) {
                    var i;
                    var r;
                    t.setTimeout(function() {
                        var t = n.some(function(t) {
                            var n = [];
                            if (t.audioCapabilities) {
                                n = n.concat(t.audioCapabilities)
                            }
                            if (t.videoCapabilities) {
                                n = n.concat(t.videoCapabilities)
                            }
                            return n.some(function(t) {
                                return !fe(e, t.contentType)
                            })
                        });
                        if (t) {
                            r()
                        } else {
                            i()
                        }
                    });
                    return {
                        then: function e(t) {
                            i = t;
                            return this
                        },
                        catch: function e(t) {
                            r = t;
                            return this
                        }
                    }
                }
            }
            var pe = function e(n, i) {
                ["com.widevine.alpha", "com.microsoft.playready", "com.apple.fps"].forEach(function(e) {
                    if (e === "com.apple.fps") {
                        i.initDataTypes = ["sinf"]
                    }
                    var r = function t(i) {
                        ce.eme[e][n] = false
                    };
                    try {
                        t.navigator.requestMediaKeySystemAccess(e, [i]).then(function() {
                            ce.eme[e][n] = true
                        }).catch(r)
                    } catch (e) {
                        r()
                    }
                })
            };
            pe("support", {
                initDataTypes: ["cenc"],
                audioCapabilities: [{
                    contentType: 'audio/mp4;codecs="mp4a.40.2"'
                }],
                videoCapabilities: [{
                    contentType: 'video/mp4;codecs="avc1.42E01E"'
                }]
            });
            pe("persistentState", {
                initDataTypes: ["cenc"],
                audioCapabilities: [{
                    contentType: 'audio/mp4;codecs="mp4a.40.2"'
                }],
                videoCapabilities: [{
                    contentType: 'video/mp4;codecs="avc1.42E01E"'
                }],
                persistentState: "required"
            });
            function he(e) {
                return e.mergeOptions(ce)
            }
            var ve = I.get;
            var ge = "unknown";
            var me = function e(n) {
                var i = n.getComponent("ModalDialog");
                var r = n.dom;
                var a = {
                    adonly: "Ad-Only",
                    ampSupport: "AMP Support",
                    bcAa: "Adobe Analytics",
                    bcGa: "Google Analytics",
                    bcGtm: "Google Tag Manager",
                    bcPlaylistUi: "Brightcove Playlist UI",
                    bcTealium: "Tealium",
                    chromecastReceiver: "Chromecast Receiver",
                    customEndscreen: "Custom Endscreen",
                    dash: "DASH",
                    eme: "DRM",
                    dvrux: "Live DVRUX",
                    FreeWheelPlugin: "FreeWheel",
                    ima3: "IMA3",
                    kollective: "Kollective",
                    onceux: "OnceUX",
                    pip: "Picture-in-Picture",
                    qualityMenu: "Quality Menu",
                    social: "Social",
                    ssai: "SSAI",
                    thumbnails: "Thumbnails",
                    vr: "VR"
                };
                var s = function e(t, n) {
                    if (n === void 0) {
                        n = "vjs-two"
                    }
                    return r.createEl("table", {
                        className: n
                    }, {}, r.createEl("tbody", {}, {}, t))
                };
                var o = function e() {
                    for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
                        n[i] = arguments[i]
                    }
                    var a = n.map(function(e) {
                        return r.createEl("td", {}, {}, String(e))
                    });
                    return r.createEl("tr", {}, {}, a)
                };
                var u = function(e) {
                    z(i, e);
                    function i() {
                        return e.apply(this, arguments) || this
                    }
                    var u = i.prototype;
                    u.buildCSSClass = function t() {
                        return "vjs-player-info-modal " + e.prototype.buildCSSClass.call(this)
                    }
                    ;
                    u.dataForPlugins_ = function e() {
                        var t = this;
                        return Object.keys(a).filter(n.getPlugin).sort().map(function(e) {
                            var i = t.player();
                            var r = n.getPluginVersion(e) || ve(i, e + ".VERSION", ge);
                            if (e === "eme" && r === ge && n.drm && n.drm.VERSION) {
                                r = n.drm.VERSION
                            }
                            return {
                                active: i.usingPlugin(e),
                                displayName: a[e],
                                version: r
                            }
                        })
                    }
                    ;
                    u.dataForSource_ = function e() {
                        var t = this.player();
                        var n = t.currentSource() || {};
                        var i = t.tech(true);
                        return {
                            keySystem: i ? i.el().keySystem : null,
                            mediainfo: t.mediainfo,
                            tech: t.techName_,
                            type: n.type,
                            url: n.src
                        }
                    }
                    ;
                    u.dataForVhs_ = function e() {
                        var t = this.player();
                        var n = t.tech(true);
                        var i = n ? n.vhs : null;
                        if (!i) {
                            return null
                        }
                        var r = {
                            bandwidth: ve(i, "stats.bandwidth", ge),
                            mediaBytesTransferred: ve(i, "stats.mediaBytesTransferred", ge),
                            mediaTransferDuration: ve(i, "stats.mediaTransferDuration", ge),
                            mediaRequests: ve(i, "stats.mediaRequests", ge),
                            versions: i.version()
                        };
                        var a = ve(i, "playlists", {
                            media: function e() {}
                        }).media();
                        if (a) {
                            r.rendition = {
                                height: ve(a, "attributes.RESOLUTION.height", ge),
                                width: ve(a, "attributes.RESOLUTION.width", ge)
                            }
                        }
                        return r
                    }
                    ;
                    u.data = function e() {
                        var i = this.player();
                        var a = r.getAttributes(i.el());
                        var s = ve(i, "bcinfo.accountId", ve(a, "data-account", ge));
                        var o = ve(i, "bcinfo.playerId", ve(a, "data-player", ge));
                        var u = ve(i, "bcinfo.embedId", ve(a, "data-embed", ge));
                        var l = ve(i, "bcinfo.applicationId", ve(a, "data-application-id", "-"));
                        var d = ve(t, "bc." + o + "_" + u + ".VERSION", ve(t, "bc.VERSION", ge));
                        var c = ve(t, "bc." + o + "_" + u + ".videojs.VERSION", ve(t, "videojs.VERSION", ge));
                        return {
                            capabilities: he(n),
                            player: {
                                accountId: s,
                                playerId: o,
                                embedId: u,
                                applicationId: l,
                                playerVersion: d,
                                videojsVersion: c,
                                language: i.language()
                            },
                            plugins: this.dataForPlugins_(),
                            source: this.dataForSource_(),
                            vhs: this.dataForVhs_()
                        }
                    }
                    ;
                    u.contentForPlayer_ = function e(t) {
                        var n = t.player;
                        var i = [o("Brightcove Player Version", n.playerVersion), o("Video.js Version", n.videojsVersion), o("Account ID", n.accountId), o("Player ID", n.playerId), o("Embed ID", n.embedId), o("Application ID", n.applicationId)];
                        return s(i)
                    }
                    ;
                    u.contentForPlugins_ = function e(t) {
                        var n = t.plugins.map(function(e) {
                            return o(e.displayName, e.version, e.active ? "Yes" : "No")
                        });
                        if (!n.length) {
                            n.push(r.createEl("tr", {
                                innerHTML: '<td colspan="3">No plugins available.</td>'
                            }))
                        }
                        var i = s(n);
                        var a = r.createEl("thead", {
                            innerHTML: "\n          <tr>\n            <th>Name</th>\n            <th>Version</th>\n            <th>Active?</th>\n          </tr>\n        ".trim()
                        });
                        i.insertBefore(a, i.querySelector("tbody"));
                        return i
                    }
                    ;
                    u.contentForSource_ = function e(t) {
                        var n = t.source
                          , i = n.keySystem
                          , r = n.mediainfo
                          , a = n.type;
                        var u = [o("Current Media Type", a), o("DRM Key System", i || "n/a")];
                        if (r) {
                            if (r.id) {
                                u.push(o("Video ID", r.id))
                            }
                            if (r.name) {
                                u.push(o("Video Name", r.name))
                            }
                        }
                        return s(u)
                    }
                    ;
                    u.contentForVhs_ = function e(t) {
                        var n = t.vhs;
                        var i = [];
                        if (n) {
                            if (I.isObj(n.versions)) {
                                i.push(r.createEl("tr", {
                                    innerHTML: '<td colspan="2"><b>Library Versions</b></td>'
                                }));
                                Object.keys(n.versions).forEach(function(e) {
                                    i.push(o(e, n.versions[e]))
                                })
                            }
                            i.push(r.createEl("tr", {
                                innerHTML: '<td colspan="2"><b>Statistics</b></td>'
                            }), o("Current Bandwidth", n.bandwidth), o("Media Bytes Transferred", n.mediaBytesTransferred), o("Media Requests", n.mediaRequests), o("Media Transfer Duration", n.mediaTransferDuration));
                            if (n.rendition) {
                                i.push(o("Rendition Width", n.rendition.width), o("Rendition Height", n.rendition.height))
                            }
                        } else {
                            i.push(r.createEl("tr", {
                                innerHTML: '<td colspan="2">Using native playback engine.</td>'
                            }))
                        }
                        return s(i)
                    }
                    ;
                    u.contentForCapabilities_ = function e(t) {
                        var n = t.capabilities
                          , i = n.eme
                          , r = n.mse;
                        var a = [o("Media Source Extensions", r ? "Yes" : "No"), o("Encrypted Media Extensions", i.support ? "Yes" : "No")];
                        Object.keys(i).forEach(function(e) {
                            if (e === "support") {
                                return
                            }
                            var t = i[e]
                              , n = t.name
                              , r = t.persistentState
                              , s = t.support;
                            a.push(o(n, s ? "Yes" : "No"));
                            if (s) {
                                a.push(o(n + " with persistentState", r ? "Yes" : "No"))
                            }
                        });
                        return s(a)
                    }
                    ;
                    u.contentForFormats_ = function e(t) {
                        var n = t.capabilities.formats;
                        var i = Object.keys(n).map(function(e) {
                            return o(e, n[e])
                        });
                        return s(i)
                    }
                    ;
                    u.content = function e() {
                        var t = this.data();
                        return [r.createEl("div", {
                            className: "vjs-pi-section"
                        }, {}, [r.createEl("h2", {}, {}, "Player Information"), this.contentForPlayer_(t), r.createEl("h2", {}, {}, "Media Information"), this.contentForSource_(t), r.createEl("h2", {}, {}, "Player Plugins"), this.contentForPlugins_(t)]), r.createEl("div", {
                            className: "vjs-pi-section"
                        }, {}, [r.createEl("h2", {}, {}, "Playback Engine"), this.contentForVhs_(t), r.createEl("h2", {}, {}, "Device Capabilities"), this.contentForCapabilities_(t), r.createEl("h2", {}, {}, "Device Format Support"), this.contentForFormats_(t)])]
                    }
                    ;
                    return i
                }(i);
                n.registerComponent("PlayerInfoModal", u);
                return u
            };
            var ye = function e(t) {
                me(t);
                function i() {
                    var e = this;
                    if (this.playerInfo.modal) {
                        this.playerInfo.modal.dispose()
                    }
                    this.playerInfo = function() {
                        i.apply(this, arguments)
                    }
                    ;
                    this.ready(function() {
                        e.addClass("vjs-player-info");
                        e.playerInfo.modal = e.addChild("playerInfoModal", {
                            fillAlways: true,
                            label: e.localize("Player Information Dialog"),
                            temporary: false
                        });
                        e.playerInfo.modal.on("dispose", function() {
                            delete e.playerInfo
                        })
                    })
                }
                t.registerPlugin("playerInfo", i);
                i.VERSION = n
            };
            var _e = function e(t) {
                var i = function e(t, n) {
                    if (typeof t.usingPlugin === "function") {
                        return t.usingPlugin(n)
                    }
                    return !!t[n]
                };
                var r = function e(t) {
                    t.postrollFinished = false;
                    t.postrollTimedOut = false;
                    t.sawNoPostrollEvent = false
                };
                var a = function e(t) {
                    if (!i(t, "ads")) {
                        return false
                    }
                    var n = t.endscreenState_;
                    if (n.sawNoPostrollEvent) {
                        return false
                    }
                    return !n.postrollFinished && !n.postrollTimedOut
                };
                var s = function e(t) {
                    if (!i(t, "playlist")) {
                        return false
                    }
                    var n = t.playlist;
                    var r = n();
                    if (n.autoadvance_.delay !== 0 || !r.length) {
                        return false
                    }
                    return n.repeat() || n.currentItem() !== r.length - 1
                };
                var o = function e() {
                    var t = this;
                    if (this.endscreenState_) {
                        return
                    }
                    var n = this.endscreenState_ = {};
                    var i = function e() {
                        t.trigger("endscreen")
                    };
                    r(n);
                    this.on("adstart", function() {
                        var e = t.ended();
                        if (t.ads.adType === "postroll") {
                            n.isPostroll = true
                        }
                        n.postrollFinished = !e
                    });
                    this.on("adend", function() {
                        n.postrollFinished = t.ended()
                    });
                    this.on("adtimeout", function() {
                        n.postrollTimedOut = t.ended()
                    });
                    this.on(["endscreen", "loadstart"], function() {
                        t.off("adend", i);
                        r(n)
                    });
                    this.on("nopostroll", function() {
                        n.sawNoPostrollEvent = true
                    });
                    this.on("ended", function() {
                        if (s(t)) {
                            return
                        }
                        if (a(t)) {
                            t.one("adend", function() {
                                if (n.isPostroll) {
                                    i()
                                }
                            });
                            return
                        }
                        i()
                    })
                };
                o.VERSION = n;
                if (t.registerPlugin) {
                    if (!t.getPlugin("endscreen")) {
                        t.registerPlugin("endscreen", o)
                    }
                } else {
                    t.plugin("endscreen", o)
                }
            };
            var be = ["audioTracks", "textTracks", "videoTracks", "remoteTextTracks", "addTextTrack", "addRemoteTextTrack", "removeRemoteTextTrack", "scrubbing", "ended"];
            var Se = ["handleKeyDown"];
            var Ae = function e(t, n) {
                var i = function e(t) {
                    return function(e) {
                        if (e.isAdPlayerPatched_) {
                            return
                        }
                        var n = e.prototype;
                        e.isAdPlayerPatched_ = true;
                        Object.defineProperty(n, "fsApi_", {
                            get: function e() {
                                return this.options_ && this.options_.contentPlayer && this.options_.contentPlayer.fsApi_
                            }
                        });
                        be.forEach(function(e) {
                            if (!(e in n)) {
                                n[e] = function() {}
                            }
                        });
                        Se.forEach(function(e) {
                            if (!n.hasOwnProperty(e)) {
                                n[e] = function() {}
                            }
                        });
                        Object.defineProperty(t, "AdPlayer", {
                            configurable: true,
                            enumerable: true,
                            get: function t() {
                                return e
                            },
                            set: function e() {}
                        });
                        return e
                    }
                };
                var r = function e(n) {
                    if (!n) {
                        Object.defineProperty(t, "ima3", {
                            configurable: true,
                            enumerable: true,
                            get: function e() {},
                            set: function n(i) {
                                e(i);
                                Object.defineProperty(t, "ima3", {
                                    value: i
                                })
                            }
                        });
                        return
                    }
                    var r = i(n);
                    if (!n.AdPlayer) {
                        Object.defineProperty(n, "AdPlayer", {
                            configurable: true,
                            enumerable: true,
                            get: function e() {},
                            set: r
                        });
                        return
                    }
                    r(n.AdPlayer)
                };
                if (t.ima3) {
                    r(t.ima3)
                } else {
                    n.one("beforepluginsetup:ima3", function() {
                        r(t.ima3)
                    })
                }
            };
            var Te = "vjs-waiting-for-autoplay";
            function ke(t, n, i, r) {
                var a = i.options_;
                var s = n.settings
                  , o = n.environment;
                var u = s.accountId
                  , l = s.applicationId
                  , d = s.css
                  , c = s.embedId
                  , f = s.playerId;
                var p;
                i.mediainfo = {
                    accountId: u,
                    account_id: u
                };
                i.bcinfo = {
                    accountId: u,
                    applicationId: l,
                    css: d,
                    embedId: c,
                    playerId: f,
                    scriptUrl: o.scriptUrl,
                    scriptBaseUrl: o.scriptBaseUrl
                };
                Object.defineProperty(i, "usingAdBlocker", {
                    enumerable: true,
                    value: B
                });
                Object.defineProperty(i, "getAutoplayConditions", {
                    enumerable: true,
                    value: function e(t) {
                        return r.getAutoplayConditions(t)
                    }
                });
                Object.defineProperty(i, "getAccountId", {
                    enumerable: true,
                    value: function e() {
                        return r.runtime.settings.accountId
                    }
                });
                if (n.settings.allowAccountOverride) {
                    Object.defineProperty(i, "setAccountId", {
                        enumerable: true,
                        value: function e(n) {
                            if (I.isNil(n)) {
                                t.log.warn("account ID must be a string or number");
                                return
                            }
                            r.runtime.settings.accountId = n;
                            this.bcinfo.accountId = n;
                            this.mediainfo.accountId = this.mediainfo.account_id = n
                        }
                    })
                }
                B().then(function(e) {
                    if (e) {
                        i.trigger({
                            type: "usage",
                            name: "using-ad-blocker"
                        })
                    }
                });
                i.addClass(s.classNames.player);
                i.addClass(s.classNames.playerInstance);
                var h = t.bind(i, i.dimension);
                i.dimension = function(e, t) {
                    if (e === "width") {
                        x(s, t, null)
                    } else if (e === "height") {
                        x(s, null, t)
                    }
                    return h(e, t)
                }
                ;
                i.ready(function() {
                    if (!a.autoplay) {
                        return
                    }
                    function e() {
                        i.removeClass(Te)
                    }
                    function n() {
                        if (!i.autoplay()) {
                            i.removeClass(Te);
                            return
                        }
                        var t = i.play();
                        if (t === undefined) {
                            e()
                        } else {
                            t.then(e, e)
                        }
                    }
                    var r = ["canplay", "error", "durationchange"];
                    function s(a) {
                        if (a.type === "error") {
                            e();
                            i.off(r, s);
                            return
                        }
                        if (a.type === "durationchange" && i.duration() === Infinity && !t.browser.IS_ANY_SAFARI) {
                            n();
                            i.off(r, s);
                            return
                        }
                        if (a.type === "canplay") {
                            n();
                            i.off(r, s)
                        }
                    }
                    if (!i.currentSrc() && !p) {
                        e()
                    } else if (i.readyState() === 4) {
                        n()
                    } else {
                        i.one(r, s)
                    }
                });
                if (s.fullscreenControl === false && i.controls()) {
                    i.on("loadedmetadata", function() {
                        if (!i.controlBar) {
                            return
                        }
                        var e = i.controlBar.children();
                        if (!e || !e.length) {
                            return
                        }
                        for (var t = e.length - 1; t > 0; t--) {
                            if (e[t].hasClass("vjs-menu-button-popup") && !e[t].hasClass("vjs-hidden")) {
                                e[t].addClass("vjs-menu-popup-last-visible");
                                break
                            }
                        }
                    })
                }
                if (t.browser.IS_IPHONE) {
                    i.on("fullscreenchange", function() {
                        var e = i.$(".vjs-tech");
                        if (e.hasAttribute("controls")) {
                            e.removeAttribute("controls")
                        }
                    });
                    if (s.embedState.playsinline && s.embedState.muted) {
                        i.addClass("vjs-iphone")
                    }
                }
                if (t.browser.IS_IOS && s.embedState.muted) {
                    i.addClass("vjs-ios")
                }
                if (i.controls()) {
                    i.one("play", function() {
                        if (!i.controlBar || !i.controls()) {
                            return
                        }
                        var e = i.controlBar.children();
                        if (!e || !e.length) {
                            return
                        }
                        var t = ["Enter", "ArrowDown", "ArrowUp", "Up", "Down", " ", "Spacebar"];
                        for (var n = 0; n < e.length; n++) {
                            if (e[n].hasClass("vjs-menu-button-popup") && !e[n].hasClass("vjs-hidden")) {
                                e[n].on("keyup", function(e) {
                                    if (t.indexOf(e.key) >= 0) {
                                        i.controlBar.addClass("vjs-control-bar-visible")
                                    }
                                })
                            }
                        }
                    });
                    if (i.controlBar) {
                        var v = i.controlBar.el();
                        var g;
                        var m = function t() {
                            var n = e.activeElement;
                            if (g !== n) {
                                g = n;
                                i.controlBar.toggleClass("vjs-focus-within", v.contains(n))
                            }
                        };
                        var y = function e() {
                            v.removeEventListener("focus", m, true);
                            v.removeEventListener("blur", m, true)
                        };
                        v.addEventListener("focus", m, true);
                        v.addEventListener("blur", m, true);
                        i.on("dispose", y);
                        i.controlBar.on("dispose", y)
                    }
                }
                Ae(t, i);
                i.one("beforepluginsetup:ads", function() {
                    var e = i.getChild("controlBar");
                    if (e) {
                        e.removeChild("pictureInPictureToggle")
                    }
                    t.getComponent("Component").prototype.fsApi_ = i.fsApi_
                });
                if (!t.browser.TOUCH_ENABLED) {
                    i.addClass("vjs-mouse");
                    if (o.isInBcFrame) {
                        t.dom.addClass(e.documentElement, "vjs-mouse")
                    }
                } else if (t.browser.IS_IPHONE) {
                    i.addClass("vjs-native")
                }
                i.requestAnimationFrame(function() {
                    var t = e.querySelector(".bc-wrap");
                    i.addClass("vjs-plugins-ready");
                    if (t) {
                        t.style.opacity = 0
                    }
                });
                i.on(["mouseenter", "ended", "touchend"], function() {
                    i.removeClass("not-hover")
                });
                i.on("mouseleave", function() {
                    i.addClass("not-hover");
                    if (!i.controlBar || !i.controlBar.el()) {
                        return
                    }
                    if (i.controlBar.hasClass("vjs-control-bar-visible")) {
                        i.controlBar.removeClass("vjs-control-bar-visible")
                    }
                });
                if (!t.browser.IS_ANY_SAFARI) {
                    i.one("loadeddata", function() {
                        if (i.language() !== undefined && i.catalog && i.catalog.getMetadata().variants !== undefined) {
                            var e = i.language() || "";
                            var t = i.textTracks();
                            if (t) {
                                var n = Array.prototype.filter.call(t, function(e) {
                                    return (e.kind === "captions" || e.kind === "subtitles") && e.mode === "showing"
                                });
                                var r;
                                var a;
                                if (!n.length) {
                                    for (a = 0; a < t.length; a++) {
                                        r = t[a];
                                        if ((r.kind === "captions" || r.kind === "subtitles") && r.language.toLowerCase() === e.toLowerCase()) {
                                            r.mode = "showing";
                                            return
                                        }
                                    }
                                    for (a = 0; a < t.length; a++) {
                                        r = t[a];
                                        if ((r.kind === "captions" || r.kind === "subtitles") && r.language.toLowerCase() === e.substring(0, 2).toLowerCase()) {
                                            r.mode = "showing";
                                            return
                                        }
                                    }
                                }
                            }
                        }
                    })
                }
                var _ = o.bcShimDestripeTime;
                if (_ !== undefined) {
                    if (_ > 1) {
                        i.trigger({
                            type: "usage",
                            name: "sdt-" + (Math.log(_) / Math.LN10).toFixed(1)
                        })
                    } else {
                        i.trigger({
                            type: "usage",
                            name: "sdt-0.0"
                        })
                    }
                }
                i.ready(function() {
                    if (i.bcinfo && i.bcinfo.PLAYER_LOADER || o.brightcovePlayerLoader) {
                        i.trigger({
                            type: "usage",
                            name: "player-loader"
                        })
                    }
                    if (i.bcinfo && i.bcinfo.REACT_PLAYER_LOADER || o.BrightcoveReactPlayerLoader) {
                        i.trigger({
                            type: "usage",
                            name: "react-player-loader"
                        })
                    }
                });
                if (i.options_.debug) {
                    i.log.level("debug");
                    i.log.history.enable()
                } else {
                    i.log.level("off");
                    i.log.history.disable()
                }
                var b = [{
                    name: "proxyTracks",
                    register: $,
                    opts: {
                        debug: i.options_.debug
                    }
                }, {
                    name: "seekEvents",
                    register: ne,
                    opts: {
                        verbose: i.options_.debug
                    }
                }, {
                    name: "touchActive",
                    register: oe
                }, {
                    name: "urlparams",
                    register: H,
                    opts: {
                        iframe: o.isInBcFrame,
                        time: s.startTime
                    }
                }, {
                    name: "playerInfo",
                    register: ye
                }, {
                    name: "endscreen",
                    register: _e
                }];
                b.forEach(function(e) {
                    var n = e.name
                      , r = e.opts
                      , a = e.register;
                    if (!i.hasPlugin(n)) {
                        a(t)
                    }
                    if (!i.usingPlugin(n)) {
                        i[n](r)
                    }
                });
                se(t, i, n);
                i.on("dispose", function() {
                    i = a.runtime_ = null;
                    t.log.history.clear()
                })
            }
            function Ee(e, t, n) {
                var i = e.videojs;
                var r = -1;
                return function a(s) {
                    var o = i.getPlayer(s);
                    if (o) {
                        o.trigger({
                            type: "usage",
                            name: "bc-used-as-getter"
                        });
                        return o
                    }
                    r++;
                    var u = e.getRuntime({
                        playerIndex: r
                    });
                    i.hookOnce("beforesetup", function(e, n) {
                        n = q(i, u, e, n);
                        if (I.isFn(t)) {
                            return t(i, u, e, n)
                        }
                        return n
                    });
                    i.hookOnce("setup", function(t) {
                        ke(i, u, t, e);
                        if (I.isFn(n)) {
                            n(i, u, t)
                        }
                    });
                    return i.apply(void 0, arguments)
                }
            }
            var Pe = {
                accountId: "",
                adConfigId: "",
                applicationId: "",
                playsinline: false,
                loop: false,
                muted: false,
                autoplay: false,
                crossorigin: false,
                css: {},
                plugins: [],
                debug: false,
                contextMenu: {},
                deliveryConfigId: "",
                embedId: "default",
                misconfiguredWithMultipleAdPlugins: false,
                playerId: "default",
                skin: "luna",
                usingAdFailover: false,
                usingIMAPrerollWithSSAI: false,
                version: "0.0.0"
            };
            var Ie = {
                brightcovePlayerLoader: t.brightcovePlayerLoader,
                BrightcoveReactPlayerLoader: t.BrightcoveReactPlayerLoader,
                bcShimDestripeTime: t.bcShimDestripeTime,
                userAgent: t.navigator.userAgent
            };
            var Ce = function() {
                function n(e, t) {
                    if (e === void 0) {
                        e = {}
                    }
                    if (t === void 0) {
                        t = {}
                    }
                    var i = n.shared.videojs;
                    if (!i) {
                        throw new Error("missing videojs")
                    }
                    this.runtime = {
                        environment: i.mergeOptions(Ie, t),
                        settings: i.mergeOptions(Pe, e)
                    };
                    if (this.runtime.settings.misconfiguredWithMultipleAdPlugins) {
                        i.log.warn('Brightcove Player "' + this.runtime.settings.playerId + '" is mis-configured with multiple ad plugins.')
                    }
                    this.videojs = i;
                    this.util = I;
                    i.bc_ = I;
                    this.detectRuntimeEnvironment();
                    this.setupGlobalEnv();
                    I.perf.mark("bcAdBlockDetectStart");
                    B().then(function(e) {
                        I.perf.mark("bcAdBlockDetectEnd");
                        I.perf.measure("bcAdBlockDetect", "bcAdBlockDetectStart", "bcAdBlockDetectEnd")
                    })
                }
                var i = n.prototype;
                i.getRuntime = function e(t) {
                    return this.videojs.mergeOptions(this.runtime, {
                        settings: t
                    })
                }
                ;
                i.getAutoplayConditions = function e(t) {
                    if (t === void 0) {
                        t = "video"
                    }
                    var n = this.runtime.environment;
                    if (!n.autoplay) {
                        n.autoplay = {}
                    }
                    return L(t, this.videojs).then(function(e) {
                        n.autoplay[t] = e;
                        return e
                    })
                }
                ;
                i.detectRuntimeEnvironment = function n() {
                    var i = this.videojs.dom;
                    var r = this.runtime.environment;
                    var a = i.hasClass(e.documentElement, "bc-iframe");
                    var s = I.qs();
                    r.usingRequireJs = I.isFn(t.define) && t.define.amd && I.isFn(t.require && t.require.toUrl);
                    r.isInAnyFrame = i.isInFrame();
                    r.isInBcFrame = a;
                    r.queryString = a ? s.search : {};
                    r.urlHash = a ? s.hash : {};
                    this.setScriptUrl();
                    this.setScriptBaseUrl()
                }
                ;
                i.setScriptUrl = function n() {
                    var i = this.runtime.environment;
                    if (i.isInBcFrame) {
                        i.scriptUrl = ""
                    } else if (i.usingRequireJs) {
                        i.scriptUrl = t.require.toUrl("bc")
                    } else if (e.currentScript) {
                        i.scriptUrl = e.currentScript.src
                    } else {
                        var r = e.getElementsByTagName("script");
                        i.scriptUrl = r.length && r[r.length - 1].src || ""
                    }
                }
                ;
                i.setScriptBaseUrl = function e() {
                    var t = this.runtime.environment;
                    if (t.scriptUrl) {
                        t.scriptBaseUrl = t.scriptUrl.split("/").slice(0, -1).join("/")
                    } else {
                        t.scriptBaseUrl = "."
                    }
                }
                ;
                i.safeSetGlobal = function e(n, i) {
                    if (!I.isNil(t[n])) {
                        return this.videojs.log.warn("setting window." + n + " would overwrite an existing global, skipping")
                    }
                    t[n] = i
                }
                ;
                i.setupGlobalEnv = function e() {
                    var t = this;
                    var n = this.videojs;
                    var i = this.runtime.environment;
                    var r = i.queryStringToWindow;
                    if (!r || !i.isInBcFrame) {
                        return
                    }
                    var a = n.mergeOptions(i.queryString);
                    if (r.target) {
                        this.safeSetGlobal(r.target, a)
                    }
                    if (Array.isArray(r.globals)) {
                        r.globals.forEach(function(e) {
                            t.safeSetGlobal(e, a[e])
                        })
                    }
                }
                ;
                i.createInitializer = function e(n, i) {
                    var r = this;
                    var a = this.videojs;
                    var s = t.bc;
                    var o = this.runtime.settings
                      , u = o.embedId
                      , l = o.playerId
                      , d = o.skin
                      , c = o.version;
                    var f = Ee(this, n, i);
                    f.SKIN = d;
                    f.VERSION = c;
                    f.videojs = a;
                    f[l + "_" + u] = f;
                    if (s) {
                        Object.keys(s).forEach(function(e) {
                            var t = s[e];
                            if (typeof t === "function" && typeof t.videojs === "function") {
                                f[e] = t;
                                delete s[e]
                            }
                        })
                    }
                    Object.defineProperty(f, "usingAdBlocker", {
                        enumerable: true,
                        value: B
                    });
                    Object.defineProperty(f, "getAutoplayConditions", {
                        enumerable: true,
                        value: function e(t) {
                            return r.getAutoplayConditions(t)
                        }
                    });
                    t.bc = f;
                    return f
                }
                ;
                n.dedupeVideojs = function e(i, r) {
                    var a = i;
                    n.shared.firstVideojs = r || i;
                    if (r && r.VERSION === i.VERSION) {
                        a = r
                    } else if (t.bc) {
                        var s = Object.keys(t.bc);
                        for (var o = 0; o < s.length; o++) {
                            var u = s[o];
                            var l = t.bc[u];
                            if (typeof l === "function" && typeof l.videojs === "function") {
                                if (l.videojs.VERSION === i.VERSION) {
                                    a = l.videojs;
                                    break
                                }
                            }
                        }
                    }
                    t.videojs = a;
                    n.shared.videojs = a;
                    return a
                }
                ;
                n.restoreFirstVideojs = function e() {
                    t.videojs = n.shared.firstVideojs
                }
                ;
                return n
            }();
            Ce.defaultSettings = Pe;
            Ce.shared = {};
            Ce.VERSION = n;
            return Ce
        }(document, window);
        (function(e, t) {
            typeof exports === "object" && typeof module !== "undefined" ? module.exports = t() : typeof define === "function" && define.amd ? define(t) : (e = e || self,
            e.videojs = t())
        }
        )(this, function() {
            "use strict";
            var e = "7.12.1";
            var t = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
            function n(e, t) {
                return t = {
                    exports: {}
                },
                e(t, t.exports),
                t.exports
            }
            var i;
            if (typeof window !== "undefined") {
                i = window
            } else if (typeof t !== "undefined") {
                i = t
            } else if (typeof self !== "undefined") {
                i = self
            } else {
                i = {}
            }
            var r = i;
            var a = {};
            var s = typeof t !== "undefined" ? t : typeof window !== "undefined" ? window : {};
            var o;
            if (typeof document !== "undefined") {
                o = document
            } else {
                o = s["__GLOBAL_DOCUMENT_CACHE@4"];
                if (!o) {
                    o = s["__GLOBAL_DOCUMENT_CACHE@4"] = a
                }
            }
            var u = o;
            var l = {
                prefixed: true
            };
            var d = [["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror", "fullscreen"], ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror", "-webkit-full-screen"], ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror", "-moz-full-screen"], ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError", "-ms-fullscreen"]];
            var c = d[0];
            var f;
            for (var p = 0; p < d.length; p++) {
                if (d[p][1]in u) {
                    f = d[p];
                    break
                }
            }
            if (f) {
                for (var h = 0; h < f.length; h++) {
                    l[c[h]] = f[h]
                }
                l.prefixed = f[0] !== c[0]
            }
            var v = [];
            var g = function e(t, n) {
                return function(e, i, a) {
                    var s = n.levels[i];
                    var o = new RegExp("^(" + s + ")$");
                    if (e !== "log") {
                        a.unshift(e.toUpperCase() + ":")
                    }
                    a.unshift(t + ":");
                    if (v) {
                        v.push([].concat(a));
                        var u = v.length - 1e3;
                        v.splice(0, u > 0 ? u : 0)
                    }
                    if (!r.console) {
                        return
                    }
                    var l = r.console[e];
                    if (!l && e === "debug") {
                        l = r.console.info || r.console.log
                    }
                    if (!l || !s || !o.test(e)) {
                        return
                    }
                    l[Array.isArray(a) ? "apply" : "call"](r.console, a)
                }
            };
            function m(e) {
                var t = "info";
                var n;
                var i = function e() {
                    for (var i = arguments.length, r = new Array(i), a = 0; a < i; a++) {
                        r[a] = arguments[a]
                    }
                    n("log", t, r)
                };
                n = g(e, i);
                i.createLogger = function(t) {
                    return m(e + ": " + t)
                }
                ;
                i.levels = {
                    all: "debug|log|warn|error",
                    off: "",
                    debug: "debug|log|warn|error",
                    info: "log|warn|error",
                    warn: "warn|error",
                    error: "error",
                    DEFAULT: t
                };
                i.level = function(e) {
                    if (typeof e === "string") {
                        if (!i.levels.hasOwnProperty(e)) {
                            throw new Error('"' + e + '" in not a valid log level')
                        }
                        t = e
                    }
                    return t
                }
                ;
                i.history = function() {
                    return v ? [].concat(v) : []
                }
                ;
                i.history.filter = function(e) {
                    return (v || []).filter(function(t) {
                        return new RegExp(".*" + e + ".*").test(t[0])
                    })
                }
                ;
                i.history.clear = function() {
                    if (v) {
                        v.length = 0
                    }
                }
                ;
                i.history.disable = function() {
                    if (v !== null) {
                        v.length = 0;
                        v = null
                    }
                }
                ;
                i.history.enable = function() {
                    if (v === null) {
                        v = []
                    }
                }
                ;
                i.error = function() {
                    for (var e = arguments.length, i = new Array(e), r = 0; r < e; r++) {
                        i[r] = arguments[r]
                    }
                    return n("error", t, i)
                }
                ;
                i.warn = function() {
                    for (var e = arguments.length, i = new Array(e), r = 0; r < e; r++) {
                        i[r] = arguments[r]
                    }
                    return n("warn", t, i)
                }
                ;
                i.debug = function() {
                    for (var e = arguments.length, i = new Array(e), r = 0; r < e; r++) {
                        i[r] = arguments[r]
                    }
                    return n("debug", t, i)
                }
                ;
                return i
            }
            var y = m("VIDEOJS");
            var _ = y.createLogger;
            var b = n(function(e) {
                function t() {
                    e.exports = t = Object.assign || function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = arguments[t];
                            for (var i in n) {
                                if (Object.prototype.hasOwnProperty.call(n, i)) {
                                    e[i] = n[i]
                                }
                            }
                        }
                        return e
                    }
                    ;
                    return t.apply(this, arguments)
                }
                e.exports = t
            });
            var S = Object.prototype.toString;
            var A = function e(t) {
                return P(t) ? Object.keys(t) : []
            };
            function T(e, t) {
                A(e).forEach(function(n) {
                    return t(e[n], n)
                })
            }
            function k(e, t, n) {
                if (n === void 0) {
                    n = 0
                }
                return A(e).reduce(function(n, i) {
                    return t(n, e[i], i)
                }, n)
            }
            function E(e) {
                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) {
                    n[i - 1] = arguments[i]
                }
                if (Object.assign) {
                    return b.apply(void 0, [e].concat(n))
                }
                n.forEach(function(t) {
                    if (!t) {
                        return
                    }
                    T(t, function(t, n) {
                        e[n] = t
                    })
                });
                return e
            }
            function P(e) {
                return !!e && typeof e === "object"
            }
            function I(e) {
                return P(e) && S.call(e) === "[object Object]" && e.constructor === Object
            }
            function C(e, t) {
                if (!e || !t) {
                    return ""
                }
                if (typeof r.getComputedStyle === "function") {
                    var n = r.getComputedStyle(e);
                    return n ? n.getPropertyValue(t) || n[t] : ""
                }
                return ""
            }
            var w = r.navigator && r.navigator.userAgent || "";
            var j = /AppleWebKit\/([\d.]+)/i.exec(w);
            var L = j ? parseFloat(j.pop()) : null;
            var O = /iPod/i.test(w);
            var x = function() {
                var e = w.match(/OS (\d+)_/i);
                if (e && e[1]) {
                    return e[1]
                }
                return null
            }();
            var D = /Android/i.test(w);
            var N = function() {
                var e = w.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
                if (!e) {
                    return null
                }
                var t = e[1] && parseFloat(e[1]);
                var n = e[2] && parseFloat(e[2]);
                if (t && n) {
                    return parseFloat(e[1] + "." + e[2])
                } else if (t) {
                    return t
                }
                return null
            }();
            var R = D && N < 5 && L < 537;
            var M = /Firefox/i.test(w);
            var U = /Edg/i.test(w);
            var B = !U && (/Chrome/i.test(w) || /CriOS/i.test(w));
            var F = function() {
                var e = w.match(/(Chrome|CriOS)\/(\d+)/);
                if (e && e[2]) {
                    return parseFloat(e[2])
                }
                return null
            }();
            var V = function() {
                var e = /MSIE\s(\d+)\.\d/.exec(w);
                var t = e && parseFloat(e[1]);
                if (!t && /Trident\/7.0/i.test(w) && /rv:11.0/.test(w)) {
                    t = 11
                }
                return t
            }();
            var q = /Safari/i.test(w) && !B && !D && !U;
            var H = /Windows/i.test(w);
            var G = Boolean($() && ("ontouchstart"in r || r.navigator.maxTouchPoints || r.DocumentTouch && r.document instanceof r.DocumentTouch));
            var W = /iPad/i.test(w) || q && G && !/iPhone/i.test(w);
            var K = /iPhone/i.test(w) && !W;
            var z = K || W || O;
            var Y = (q || z) && !B;
            var X = Object.freeze({
                __proto__: null,
                IS_IPOD: O,
                IOS_VERSION: x,
                IS_ANDROID: D,
                ANDROID_VERSION: N,
                IS_NATIVE_ANDROID: R,
                IS_FIREFOX: M,
                IS_EDGE: U,
                IS_CHROME: B,
                CHROME_VERSION: F,
                IE_VERSION: V,
                IS_SAFARI: q,
                IS_WINDOWS: H,
                TOUCH_ENABLED: G,
                IS_IPAD: W,
                IS_IPHONE: K,
                IS_IOS: z,
                IS_ANY_SAFARI: Y
            });
            function Q(e) {
                return typeof e === "string" && Boolean(e.trim())
            }
            function Z(e) {
                if (e.indexOf(" ") >= 0) {
                    throw new Error("class has illegal whitespace characters")
                }
            }
            function J(e) {
                return new RegExp("(^|\\s)" + e + "($|\\s)")
            }
            function $() {
                return u === r.document
            }
            function ee(e) {
                return P(e) && e.nodeType === 1
            }
            function te() {
                try {
                    return r.parent !== r.self
                } catch (e) {
                    return true
                }
            }
            function ne(e) {
                return function(t, n) {
                    if (!Q(t)) {
                        return u[e](null)
                    }
                    if (Q(n)) {
                        n = u.querySelector(n)
                    }
                    var i = ee(n) ? n : u;
                    return i[e] && i[e](t)
                }
            }
            function ie(e, t, n, i) {
                if (e === void 0) {
                    e = "div"
                }
                if (t === void 0) {
                    t = {}
                }
                if (n === void 0) {
                    n = {}
                }
                var r = u.createElement(e);
                Object.getOwnPropertyNames(t).forEach(function(e) {
                    var n = t[e];
                    if (e.indexOf("aria-") !== -1 || e === "role" || e === "type") {
                        y.warn("Setting attributes in the second argument of createEl()\n" + "has been deprecated. Use the third argument instead.\n" + ("createEl(type, properties, attributes). Attempting to set " + e + " to " + n + "."));
                        r.setAttribute(e, n)
                    } else if (e === "textContent") {
                        re(r, n)
                    } else if (r[e] !== n || e === "tabIndex") {
                        r[e] = n
                    }
                });
                Object.getOwnPropertyNames(n).forEach(function(e) {
                    r.setAttribute(e, n[e])
                });
                if (i) {
                    Te(r, i)
                }
                return r
            }
            function re(e, t) {
                if (typeof e.textContent === "undefined") {
                    e.innerText = t
                } else {
                    e.textContent = t
                }
                return e
            }
            function ae(e, t) {
                if (t.firstChild) {
                    t.insertBefore(e, t.firstChild)
                } else {
                    t.appendChild(e)
                }
            }
            function se(e, t) {
                Z(t);
                if (e.classList) {
                    return e.classList.contains(t)
                }
                return J(t).test(e.className)
            }
            function oe(e, t) {
                if (e.classList) {
                    e.classList.add(t)
                } else if (!se(e, t)) {
                    e.className = (e.className + " " + t).trim()
                }
                return e
            }
            function ue(e, t) {
                if (e.classList) {
                    e.classList.remove(t)
                } else {
                    Z(t);
                    e.className = e.className.split(/\s+/).filter(function(e) {
                        return e !== t
                    }).join(" ")
                }
                return e
            }
            function le(e, t, n) {
                var i = se(e, t);
                if (typeof n === "function") {
                    n = n(e, t)
                }
                if (typeof n !== "boolean") {
                    n = !i
                }
                if (n === i) {
                    return
                }
                if (n) {
                    oe(e, t)
                } else {
                    ue(e, t)
                }
                return e
            }
            function de(e, t) {
                Object.getOwnPropertyNames(t).forEach(function(n) {
                    var i = t[n];
                    if (i === null || typeof i === "undefined" || i === false) {
                        e.removeAttribute(n)
                    } else {
                        e.setAttribute(n, i === true ? "" : i)
                    }
                })
            }
            function ce(e) {
                var t = {};
                var n = "," + "autoplay,controls,playsinline,loop,muted,default,defaultMuted" + ",";
                if (e && e.attributes && e.attributes.length > 0) {
                    var i = e.attributes;
                    for (var r = i.length - 1; r >= 0; r--) {
                        var a = i[r].name;
                        var s = i[r].value;
                        if (typeof e[a] === "boolean" || n.indexOf("," + a + ",") !== -1) {
                            s = s !== null ? true : false
                        }
                        t[a] = s
                    }
                }
                return t
            }
            function fe(e, t) {
                return e.getAttribute(t)
            }
            function pe(e, t, n) {
                e.setAttribute(t, n)
            }
            function he(e, t) {
                e.removeAttribute(t)
            }
            function ve() {
                u.body.focus();
                u.onselectstart = function() {
                    return false
                }
            }
            function ge() {
                u.onselectstart = function() {
                    return true
                }
            }
            function me(e) {
                if (e && e.getBoundingClientRect && e.parentNode) {
                    var t = e.getBoundingClientRect();
                    var n = {};
                    ["bottom", "height", "left", "right", "top", "width"].forEach(function(e) {
                        if (t[e] !== undefined) {
                            n[e] = t[e]
                        }
                    });
                    if (!n.height) {
                        n.height = parseFloat(C(e, "height"))
                    }
                    if (!n.width) {
                        n.width = parseFloat(C(e, "width"))
                    }
                    return n
                }
            }
            function ye(e) {
                if (!e || e && !e.offsetParent) {
                    return {
                        left: 0,
                        top: 0,
                        width: 0,
                        height: 0
                    }
                }
                var t = e.offsetWidth;
                var n = e.offsetHeight;
                var i = 0;
                var r = 0;
                while (e.offsetParent && e !== u[l.fullscreenElement]) {
                    i += e.offsetLeft;
                    r += e.offsetTop;
                    e = e.offsetParent
                }
                return {
                    left: i,
                    top: r,
                    width: t,
                    height: n
                }
            }
            function _e(e, t) {
                var n = {
                    x: 0,
                    y: 0
                };
                if (z) {
                    var i = e;
                    while (i && i.nodeName.toLowerCase() !== "html") {
                        var r = C(i, "transform");
                        if (/^matrix/.test(r)) {
                            var a = r.slice(7, -1).split(/,\s/).map(Number);
                            n.x += a[4];
                            n.y += a[5]
                        } else if (/^matrix3d/.test(r)) {
                            var s = r.slice(9, -1).split(/,\s/).map(Number);
                            n.x += s[12];
                            n.y += s[13]
                        }
                        i = i.parentNode
                    }
                }
                var o = {};
                var u = ye(t.target);
                var l = ye(e);
                var d = l.width;
                var c = l.height;
                var f = t.offsetY - (l.top - u.top);
                var p = t.offsetX - (l.left - u.left);
                if (t.changedTouches) {
                    p = t.changedTouches[0].pageX - l.left;
                    f = t.changedTouches[0].pageY + l.top;
                    if (z) {
                        p -= n.x;
                        f -= n.y
                    }
                }
                o.y = 1 - Math.max(0, Math.min(1, f / c));
                o.x = Math.max(0, Math.min(1, p / d));
                return o
            }
            function be(e) {
                return P(e) && e.nodeType === 3
            }
            function Se(e) {
                while (e.firstChild) {
                    e.removeChild(e.firstChild)
                }
                return e
            }
            function Ae(e) {
                if (typeof e === "function") {
                    e = e()
                }
                return (Array.isArray(e) ? e : [e]).map(function(e) {
                    if (typeof e === "function") {
                        e = e()
                    }
                    if (ee(e) || be(e)) {
                        return e
                    }
                    if (typeof e === "string" && /\S/.test(e)) {
                        return u.createTextNode(e)
                    }
                }).filter(function(e) {
                    return e
                })
            }
            function Te(e, t) {
                Ae(t).forEach(function(t) {
                    return e.appendChild(t)
                });
                return e
            }
            function ke(e, t) {
                return Te(Se(e), t)
            }
            function Ee(e) {
                if (e.button === undefined && e.buttons === undefined) {
                    return true
                }
                if (e.button === 0 && e.buttons === undefined) {
                    return true
                }
                if (e.type === "mouseup" && e.button === 0 && e.buttons === 0) {
                    return true
                }
                if (e.button !== 0 || e.buttons !== 1) {
                    return false
                }
                return true
            }
            var Pe = ne("querySelector");
            var Ie = ne("querySelectorAll");
            var Ce = Object.freeze({
                __proto__: null,
                isReal: $,
                isEl: ee,
                isInFrame: te,
                createEl: ie,
                textContent: re,
                prependTo: ae,
                hasClass: se,
                addClass: oe,
                removeClass: ue,
                toggleClass: le,
                setAttributes: de,
                getAttributes: ce,
                getAttribute: fe,
                setAttribute: pe,
                removeAttribute: he,
                blockTextSelection: ve,
                unblockTextSelection: ge,
                getBoundingClientRect: me,
                findPosition: ye,
                getPointerPosition: _e,
                isTextNode: be,
                emptyEl: Se,
                normalizeContent: Ae,
                appendContent: Te,
                insertContent: ke,
                isSingleLeftClick: Ee,
                $: Pe,
                $$: Ie
            });
            var we = false;
            var je;
            var Le = function e() {
                if (!$() || je.options.autoSetup === false) {
                    return
                }
                var t = Array.prototype.slice.call(u.getElementsByTagName("video"));
                var n = Array.prototype.slice.call(u.getElementsByTagName("audio"));
                var i = Array.prototype.slice.call(u.getElementsByTagName("video-js"));
                var r = t.concat(n, i);
                if (r && r.length > 0) {
                    for (var a = 0, s = r.length; a < s; a++) {
                        var o = r[a];
                        if (o && o.getAttribute) {
                            if (o.player === undefined) {
                                var l = o.getAttribute("data-setup");
                                if (l !== null) {
                                    je(o)
                                }
                            }
                        } else {
                            Oe(1);
                            break
                        }
                    }
                } else if (!we) {
                    Oe(1)
                }
            };
            function Oe(e, t) {
                if (t) {
                    je = t
                }
                r.setTimeout(Le, e)
            }
            function xe() {
                we = true;
                r.removeEventListener("load", xe)
            }
            if ($()) {
                if (u.readyState === "complete") {
                    xe()
                } else {
                    r.addEventListener("load", xe)
                }
            }
            var De = function e(t) {
                var n = u.createElement("style");
                n.className = t;
                return n
            };
            var Ne = function e(t, n) {
                if (t.styleSheet) {
                    t.styleSheet.cssText = n
                } else {
                    t.textContent = n
                }
            };
            var Re = 3;
            var Me = Re;
            function Ue() {
                return Me++
            }
            var Be;
            if (!r.WeakMap) {
                Be = function() {
                    function e() {
                        this.vdata = "vdata" + Math.floor(r.performance && r.performance.now() || Date.now());
                        this.data = {}
                    }
                    var t = e.prototype;
                    t.set = function e(t, n) {
                        var i = t[this.vdata] || Ue();
                        if (!t[this.vdata]) {
                            t[this.vdata] = i
                        }
                        this.data[i] = n;
                        return this
                    }
                    ;
                    t.get = function e(t) {
                        var n = t[this.vdata];
                        if (n) {
                            return this.data[n]
                        }
                        y("We have no data for this element", t);
                        return undefined
                    }
                    ;
                    t.has = function e(t) {
                        var n = t[this.vdata];
                        return n in this.data
                    }
                    ;
                    t["delete"] = function e(t) {
                        var n = t[this.vdata];
                        if (n) {
                            delete this.data[n];
                            delete t[this.vdata]
                        }
                    }
                    ;
                    return e
                }()
            }
            var Fe = r.WeakMap ? new WeakMap : new Be;
            function Ve(e, t) {
                if (!Fe.has(e)) {
                    return
                }
                var n = Fe.get(e);
                if (n.handlers[t].length === 0) {
                    delete n.handlers[t];
                    if (e.removeEventListener) {
                        e.removeEventListener(t, n.dispatcher, false)
                    } else if (e.detachEvent) {
                        e.detachEvent("on" + t, n.dispatcher)
                    }
                }
                if (Object.getOwnPropertyNames(n.handlers).length <= 0) {
                    delete n.handlers;
                    delete n.dispatcher;
                    delete n.disabled
                }
                if (Object.getOwnPropertyNames(n).length === 0) {
                    Fe["delete"](e)
                }
            }
            function qe(e, t, n, i) {
                n.forEach(function(n) {
                    e(t, n, i)
                })
            }
            function He(e) {
                if (e.fixed_) {
                    return e
                }
                function t() {
                    return true
                }
                function n() {
                    return false
                }
                if (!e || !e.isPropagationStopped) {
                    var i = e || r.event;
                    e = {};
                    for (var a in i) {
                        if (a !== "layerX" && a !== "layerY" && a !== "keyLocation" && a !== "webkitMovementX" && a !== "webkitMovementY") {
                            if (!(a === "returnValue" && i.preventDefault)) {
                                e[a] = i[a]
                            }
                        }
                    }
                    if (!e.target) {
                        e.target = e.srcElement || u
                    }
                    if (!e.relatedTarget) {
                        e.relatedTarget = e.fromElement === e.target ? e.toElement : e.fromElement
                    }
                    e.preventDefault = function() {
                        if (i.preventDefault) {
                            i.preventDefault()
                        }
                        e.returnValue = false;
                        i.returnValue = false;
                        e.defaultPrevented = true
                    }
                    ;
                    e.defaultPrevented = false;
                    e.stopPropagation = function() {
                        if (i.stopPropagation) {
                            i.stopPropagation()
                        }
                        e.cancelBubble = true;
                        i.cancelBubble = true;
                        e.isPropagationStopped = t
                    }
                    ;
                    e.isPropagationStopped = n;
                    e.stopImmediatePropagation = function() {
                        if (i.stopImmediatePropagation) {
                            i.stopImmediatePropagation()
                        }
                        e.isImmediatePropagationStopped = t;
                        e.stopPropagation()
                    }
                    ;
                    e.isImmediatePropagationStopped = n;
                    if (e.clientX !== null && e.clientX !== undefined) {
                        var s = u.documentElement;
                        var o = u.body;
                        e.pageX = e.clientX + (s && s.scrollLeft || o && o.scrollLeft || 0) - (s && s.clientLeft || o && o.clientLeft || 0);
                        e.pageY = e.clientY + (s && s.scrollTop || o && o.scrollTop || 0) - (s && s.clientTop || o && o.clientTop || 0)
                    }
                    e.which = e.charCode || e.keyCode;
                    if (e.button !== null && e.button !== undefined) {
                        e.button = e.button & 1 ? 0 : e.button & 4 ? 1 : e.button & 2 ? 2 : 0
                    }
                }
                e.fixed_ = true;
                return e
            }
            var Ge;
            var We = function e() {
                if (typeof Ge !== "boolean") {
                    Ge = false;
                    try {
                        var t = Object.defineProperty({}, "passive", {
                            get: function e() {
                                Ge = true
                            }
                        });
                        r.addEventListener("test", null, t);
                        r.removeEventListener("test", null, t)
                    } catch (e) {}
                }
                return Ge
            };
            var Ke = ["touchstart", "touchmove"];
            function ze(e, t, n) {
                if (Array.isArray(t)) {
                    return qe(ze, e, t, n)
                }
                if (!Fe.has(e)) {
                    Fe.set(e, {})
                }
                var i = Fe.get(e);
                if (!i.handlers) {
                    i.handlers = {}
                }
                if (!i.handlers[t]) {
                    i.handlers[t] = []
                }
                if (!n.guid) {
                    n.guid = Ue()
                }
                i.handlers[t].push(n);
                if (!i.dispatcher) {
                    i.disabled = false;
                    i.dispatcher = function(t, n) {
                        if (i.disabled) {
                            return
                        }
                        t = He(t);
                        var r = i.handlers[t.type];
                        if (r) {
                            var a = r.slice(0);
                            for (var s = 0, o = a.length; s < o; s++) {
                                if (t.isImmediatePropagationStopped()) {
                                    break
                                } else {
                                    try {
                                        a[s].call(e, t, n)
                                    } catch (e) {
                                        y.error(e)
                                    }
                                }
                            }
                        }
                    }
                }
                if (i.handlers[t].length === 1) {
                    if (e.addEventListener) {
                        var r = false;
                        if (We() && Ke.indexOf(t) > -1) {
                            r = {
                                passive: true
                            }
                        }
                        e.addEventListener(t, i.dispatcher, r)
                    } else if (e.attachEvent) {
                        e.attachEvent("on" + t, i.dispatcher)
                    }
                }
            }
            function Ye(e, t, n) {
                if (!Fe.has(e)) {
                    return
                }
                var i = Fe.get(e);
                if (!i.handlers) {
                    return
                }
                if (Array.isArray(t)) {
                    return qe(Ye, e, t, n)
                }
                var r = function e(t, n) {
                    i.handlers[n] = [];
                    Ve(t, n)
                };
                if (t === undefined) {
                    for (var a in i.handlers) {
                        if (Object.prototype.hasOwnProperty.call(i.handlers || {}, a)) {
                            r(e, a)
                        }
                    }
                    return
                }
                var s = i.handlers[t];
                if (!s) {
                    return
                }
                if (!n) {
                    r(e, t);
                    return
                }
                if (n.guid) {
                    for (var o = 0; o < s.length; o++) {
                        if (s[o].guid === n.guid) {
                            s.splice(o--, 1)
                        }
                    }
                }
                Ve(e, t)
            }
            function Xe(e, t, n) {
                var i = Fe.has(e) ? Fe.get(e) : {};
                var r = e.parentNode || e.ownerDocument;
                if (typeof t === "string") {
                    t = {
                        type: t,
                        target: e
                    }
                } else if (!t.target) {
                    t.target = e
                }
                t = He(t);
                if (i.dispatcher) {
                    i.dispatcher.call(e, t, n)
                }
                if (r && !t.isPropagationStopped() && t.bubbles === true) {
                    Xe.call(null, r, t, n)
                } else if (!r && !t.defaultPrevented && t.target && t.target[t.type]) {
                    if (!Fe.has(t.target)) {
                        Fe.set(t.target, {})
                    }
                    var a = Fe.get(t.target);
                    if (t.target[t.type]) {
                        a.disabled = true;
                        if (typeof t.target[t.type] === "function") {
                            t.target[t.type]()
                        }
                        a.disabled = false
                    }
                }
                return !t.defaultPrevented
            }
            function Qe(e, t, n) {
                if (Array.isArray(t)) {
                    return qe(Qe, e, t, n)
                }
                var i = function i() {
                    Ye(e, t, i);
                    n.apply(this, arguments)
                };
                i.guid = n.guid = n.guid || Ue();
                ze(e, t, i)
            }
            function Ze(e, t, n) {
                var i = function i() {
                    Ye(e, t, i);
                    n.apply(this, arguments)
                };
                i.guid = n.guid = n.guid || Ue();
                ze(e, t, i)
            }
            var Je = Object.freeze({
                __proto__: null,
                fixEvent: He,
                on: ze,
                off: Ye,
                trigger: Xe,
                one: Qe,
                any: Ze
            });
            var $e = 30;
            var et = function e(t, n, i) {
                if (!n.guid) {
                    n.guid = Ue()
                }
                var r = n.bind(t);
                r.guid = i ? i + "_" + n.guid : n.guid;
                return r
            };
            var tt = function e(t, n) {
                var i = r.performance.now();
                var a = function e() {
                    var a = r.performance.now();
                    if (a - i >= n) {
                        t.apply(void 0, arguments);
                        i = a
                    }
                };
                return a
            };
            var nt = function e(t, n, i, a) {
                if (a === void 0) {
                    a = r
                }
                var s;
                var o = function e() {
                    a.clearTimeout(s);
                    s = null
                };
                var u = function e() {
                    var r = this;
                    var o = arguments;
                    var u = function e() {
                        s = null;
                        u = null;
                        if (!i) {
                            t.apply(r, o)
                        }
                    };
                    if (!s && i) {
                        t.apply(r, o)
                    }
                    a.clearTimeout(s);
                    s = a.setTimeout(u, n)
                };
                u.cancel = o;
                return u
            };
            var it = function e() {};
            it.prototype.allowedEvents_ = {};
            it.prototype.on = function(e, t) {
                var n = this.addEventListener;
                this.addEventListener = function() {}
                ;
                ze(this, e, t);
                this.addEventListener = n
            }
            ;
            it.prototype.addEventListener = it.prototype.on;
            it.prototype.off = function(e, t) {
                Ye(this, e, t)
            }
            ;
            it.prototype.removeEventListener = it.prototype.off;
            it.prototype.one = function(e, t) {
                var n = this.addEventListener;
                this.addEventListener = function() {}
                ;
                Qe(this, e, t);
                this.addEventListener = n
            }
            ;
            it.prototype.any = function(e, t) {
                var n = this.addEventListener;
                this.addEventListener = function() {}
                ;
                Ze(this, e, t);
                this.addEventListener = n
            }
            ;
            it.prototype.trigger = function(e) {
                var t = e.type || e;
                if (typeof e === "string") {
                    e = {
                        type: t
                    }
                }
                e = He(e);
                if (this.allowedEvents_[t] && this["on" + t]) {
                    this["on" + t](e)
                }
                Xe(this, e)
            }
            ;
            it.prototype.dispatchEvent = it.prototype.trigger;
            var rt;
            it.prototype.queueTrigger = function(e) {
                var t = this;
                if (!rt) {
                    rt = new Map
                }
                var n = e.type || e;
                var i = rt.get(this);
                if (!i) {
                    i = new Map;
                    rt.set(this, i)
                }
                var a = i.get(n);
                i["delete"](n);
                r.clearTimeout(a);
                var s = r.setTimeout(function() {
                    if (i.size === 0) {
                        i = null;
                        rt["delete"](t)
                    }
                    t.trigger(e)
                }, 0);
                i.set(n, s)
            }
            ;
            var at = function e(t) {
                if (typeof t.name === "function") {
                    return t.name()
                }
                if (typeof t.name === "string") {
                    return t.name
                }
                if (t.name_) {
                    return t.name_
                }
                if (t.constructor && t.constructor.name) {
                    return t.constructor.name
                }
                return typeof t
            };
            var st = function e(t) {
                return t instanceof it || !!t.eventBusEl_ && ["on", "one", "off", "trigger"].every(function(e) {
                    return typeof t[e] === "function"
                })
            };
            var ot = function e(t, n) {
                if (st(t)) {
                    n()
                } else {
                    if (!t.eventedCallbacks) {
                        t.eventedCallbacks = []
                    }
                    t.eventedCallbacks.push(n)
                }
            };
            var ut = function e(t) {
                return typeof t === "string" && /\S/.test(t) || Array.isArray(t) && !!t.length
            };
            var lt = function e(t, n, i) {
                if (!t || !t.nodeName && !st(t)) {
                    throw new Error("Invalid target for " + at(n) + "#" + i + "; must be a DOM node or evented object.")
                }
            };
            var dt = function e(t, n, i) {
                if (!ut(t)) {
                    throw new Error("Invalid event type for " + at(n) + "#" + i + "; must be a non-empty string or array.")
                }
            };
            var ct = function e(t, n, i) {
                if (typeof t !== "function") {
                    throw new Error("Invalid listener for " + at(n) + "#" + i + "; must be a function.")
                }
            };
            var ft = function e(t, n, i) {
                var r = n.length < 3 || n[0] === t || n[0] === t.eventBusEl_;
                var a;
                var s;
                var o;
                if (r) {
                    a = t.eventBusEl_;
                    if (n.length >= 3) {
                        n.shift()
                    }
                    s = n[0];
                    o = n[1]
                } else {
                    a = n[0];
                    s = n[1];
                    o = n[2]
                }
                lt(a, t, i);
                dt(s, t, i);
                ct(o, t, i);
                o = et(t, o);
                return {
                    isTargetingSelf: r,
                    target: a,
                    type: s,
                    listener: o
                }
            };
            var pt = function e(t, n, i, r) {
                lt(t, t, n);
                if (t.nodeName) {
                    Je[n](t, i, r)
                } else {
                    t[n](i, r)
                }
            };
            var ht = {
                on: function e() {
                    var t = this;
                    for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
                        i[r] = arguments[r]
                    }
                    var a = ft(this, i, "on")
                      , s = a.isTargetingSelf
                      , o = a.target
                      , u = a.type
                      , l = a.listener;
                    pt(o, "on", u, l);
                    if (!s) {
                        var d = function e() {
                            return t.off(o, u, l)
                        };
                        d.guid = l.guid;
                        var c = function e() {
                            return t.off("dispose", d)
                        };
                        c.guid = l.guid;
                        pt(this, "on", "dispose", d);
                        pt(o, "on", "dispose", c)
                    }
                },
                one: function e() {
                    var t = this;
                    for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
                        i[r] = arguments[r]
                    }
                    var a = ft(this, i, "one")
                      , s = a.isTargetingSelf
                      , o = a.target
                      , u = a.type
                      , l = a.listener;
                    if (s) {
                        pt(o, "one", u, l)
                    } else {
                        var d = function e() {
                            t.off(o, u, e);
                            for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
                                i[r] = arguments[r]
                            }
                            l.apply(null, i)
                        };
                        d.guid = l.guid;
                        pt(o, "one", u, d)
                    }
                },
                any: function e() {
                    var t = this;
                    for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
                        i[r] = arguments[r]
                    }
                    var a = ft(this, i, "any")
                      , s = a.isTargetingSelf
                      , o = a.target
                      , u = a.type
                      , l = a.listener;
                    if (s) {
                        pt(o, "any", u, l)
                    } else {
                        var d = function e() {
                            t.off(o, u, e);
                            for (var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
                                i[r] = arguments[r]
                            }
                            l.apply(null, i)
                        };
                        d.guid = l.guid;
                        pt(o, "any", u, d)
                    }
                },
                off: function e(t, n, i) {
                    if (!t || ut(t)) {
                        Ye(this.eventBusEl_, t, n)
                    } else {
                        var r = t;
                        var a = n;
                        lt(r, this, "off");
                        dt(a, this, "off");
                        ct(i, this, "off");
                        i = et(this, i);
                        this.off("dispose", i);
                        if (r.nodeName) {
                            Ye(r, a, i);
                            Ye(r, "dispose", i)
                        } else if (st(r)) {
                            r.off(a, i);
                            r.off("dispose", i)
                        }
                    }
                },
                trigger: function e(t, n) {
                    lt(this.eventBusEl_, this, "trigger");
                    var i = t && typeof t !== "string" ? t.type : t;
                    if (!ut(i)) {
                        var r = "Invalid event type for " + at(this) + "#trigger; " + "must be a non-empty string or object with a type key that has a non-empty value.";
                        if (t) {
                            (this.log || y).error(r)
                        } else {
                            throw new Error(r)
                        }
                    }
                    return Xe(this.eventBusEl_, t, n)
                }
            };
            function vt(e, t) {
                if (t === void 0) {
                    t = {}
                }
                var n = t
                  , i = n.eventBusKey;
                if (i) {
                    if (!e[i].nodeName) {
                        throw new Error('The eventBusKey "' + i + '" does not refer to an element.')
                    }
                    e.eventBusEl_ = e[i]
                } else {
                    e.eventBusEl_ = ie("span", {
                        className: "vjs-event-bus"
                    })
                }
                E(e, ht);
                if (e.eventedCallbacks) {
                    e.eventedCallbacks.forEach(function(e) {
                        e()
                    })
                }
                e.on("dispose", function() {
                    e.off();
                    r.setTimeout(function() {
                        e.eventBusEl_ = null
                    }, 0)
                });
                return e
            }
            var gt = {
                state: {},
                setState: function e(t) {
                    var n = this;
                    if (typeof t === "function") {
                        t = t()
                    }
                    var i;
                    T(t, function(e, t) {
                        if (n.state[t] !== e) {
                            i = i || {};
                            i[t] = {
                                from: n.state[t],
                                to: e
                            }
                        }
                        n.state[t] = e
                    });
                    if (i && st(this)) {
                        this.trigger({
                            changes: i,
                            type: "statechanged"
                        })
                    }
                    return i
                }
            };
            function mt(e, t) {
                E(e, gt);
                e.state = E({}, e.state, t);
                if (typeof e.handleStateChanged === "function" && st(e)) {
                    e.on("statechanged", e.handleStateChanged)
                }
                return e
            }
            var yt = function e(t) {
                if (typeof t !== "string") {
                    return t
                }
                return t.replace(/./, function(e) {
                    return e.toLowerCase()
                })
            };
            var _t = function e(t) {
                if (typeof t !== "string") {
                    return t
                }
                return t.replace(/./, function(e) {
                    return e.toUpperCase()
                })
            };
            var bt = function e(t, n) {
                return _t(t) === _t(n)
            };
            function St() {
                var e = {};
                for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
                    n[i] = arguments[i]
                }
                n.forEach(function(t) {
                    if (!t) {
                        return
                    }
                    T(t, function(t, n) {
                        if (!I(t)) {
                            e[n] = t;
                            return
                        }
                        if (!I(e[n])) {
                            e[n] = {}
                        }
                        e[n] = St(e[n], t)
                    })
                });
                return e
            }
            var At = function() {
                function e() {
                    this.map_ = {}
                }
                var t = e.prototype;
                t.has = function e(t) {
                    return t in this.map_
                }
                ;
                t["delete"] = function e(t) {
                    var n = this.has(t);
                    delete this.map_[t];
                    return n
                }
                ;
                t.set = function e(t, n) {
                    this.map_[t] = n;
                    return this
                }
                ;
                t.forEach = function e(t, n) {
                    for (var i in this.map_) {
                        t.call(n, this.map_[i], i, this)
                    }
                }
                ;
                return e
            }();
            var Tt = r.Map ? r.Map : At;
            var kt = function() {
                function e() {
                    this.set_ = {}
                }
                var t = e.prototype;
                t.has = function e(t) {
                    return t in this.set_
                }
                ;
                t["delete"] = function e(t) {
                    var n = this.has(t);
                    delete this.set_[t];
                    return n
                }
                ;
                t.add = function e(t) {
                    this.set_[t] = 1;
                    return this
                }
                ;
                t.forEach = function e(t, n) {
                    for (var i in this.set_) {
                        t.call(n, i, i, this)
                    }
                }
                ;
                return e
            }();
            var Et = r.Set ? r.Set : kt;
            var Pt = function() {
                function e(e, t, n) {
                    if (!e && this.play) {
                        this.player_ = e = this
                    } else {
                        this.player_ = e
                    }
                    this.isDisposed_ = false;
                    this.parentComponent_ = null;
                    this.options_ = St({}, this.options_);
                    t = this.options_ = St(this.options_, t);
                    this.id_ = t.id || t.el && t.el.id;
                    if (!this.id_) {
                        var i = e && e.id && e.id() || "no_player";
                        this.id_ = i + "_component_" + Ue()
                    }
                    this.name_ = t.name || null;
                    if (t.el) {
                        this.el_ = t.el
                    } else if (t.createEl !== false) {
                        this.el_ = this.createEl()
                    }
                    if (t.evented !== false) {
                        vt(this, {
                            eventBusKey: this.el_ ? "el_" : null
                        });
                        this.handleLanguagechange = this.handleLanguagechange.bind(this);
                        this.on(this.player_, "languagechange", this.handleLanguagechange)
                    }
                    mt(this, this.constructor.defaultState);
                    this.children_ = [];
                    this.childIndex_ = {};
                    this.childNameIndex_ = {};
                    this.setTimeoutIds_ = new Et;
                    this.setIntervalIds_ = new Et;
                    this.rafIds_ = new Et;
                    this.namedRafs_ = new Tt;
                    this.clearingTimersOnDispose_ = false;
                    if (t.initChildren !== false) {
                        this.initChildren()
                    }
                    this.ready(n);
                    if (t.reportTouchActivity !== false) {
                        this.enableTouchActivity()
                    }
                }
                var t = e.prototype;
                t.dispose = function e() {
                    if (this.isDisposed_) {
                        return
                    }
                    if (this.readyQueue_) {
                        this.readyQueue_.length = 0
                    }
                    this.trigger({
                        type: "dispose",
                        bubbles: false
                    });
                    this.isDisposed_ = true;
                    if (this.children_) {
                        for (var t = this.children_.length - 1; t >= 0; t--) {
                            if (this.children_[t].dispose) {
                                this.children_[t].dispose()
                            }
                        }
                    }
                    this.children_ = null;
                    this.childIndex_ = null;
                    this.childNameIndex_ = null;
                    this.parentComponent_ = null;
                    if (this.el_) {
                        if (this.el_.parentNode) {
                            this.el_.parentNode.removeChild(this.el_)
                        }
                        if (Fe.has(this.el_)) {
                            Fe["delete"](this.el_)
                        }
                        this.el_ = null
                    }
                    this.player_ = null
                }
                ;
                t.isDisposed = function e() {
                    return Boolean(this.isDisposed_)
                }
                ;
                t.player = function e() {
                    return this.player_
                }
                ;
                t.options = function e(t) {
                    if (!t) {
                        return this.options_
                    }
                    this.options_ = St(this.options_, t);
                    return this.options_
                }
                ;
                t.el = function e() {
                    return this.el_
                }
                ;
                t.createEl = function e(t, n, i) {
                    return ie(t, n, i)
                }
                ;
                t.localize = function e(t, n, i) {
                    if (i === void 0) {
                        i = t
                    }
                    var r = this.player_.language && this.player_.language();
                    var a = this.player_.languages && this.player_.languages();
                    var s = a && a[r];
                    var o = r && r.split("-")[0];
                    var u = a && a[o];
                    var l = i;
                    if (s && s[t]) {
                        l = s[t]
                    } else if (u && u[t]) {
                        l = u[t]
                    }
                    if (n) {
                        l = l.replace(/\{(\d+)\}/g, function(e, t) {
                            var i = n[t - 1];
                            var r = i;
                            if (typeof i === "undefined") {
                                r = e
                            }
                            return r
                        })
                    }
                    return l
                }
                ;
                t.handleLanguagechange = function e() {}
                ;
                t.contentEl = function e() {
                    return this.contentEl_ || this.el_
                }
                ;
                t.id = function e() {
                    return this.id_
                }
                ;
                t.name = function e() {
                    return this.name_
                }
                ;
                t.children = function e() {
                    return this.children_
                }
                ;
                t.getChildById = function e(t) {
                    return this.childIndex_[t]
                }
                ;
                t.getChild = function e(t) {
                    if (!t) {
                        return
                    }
                    return this.childNameIndex_[t]
                }
                ;
                t.getDescendant = function e() {
                    for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
                        n[i] = arguments[i]
                    }
                    n = n.reduce(function(e, t) {
                        return e.concat(t)
                    }, []);
                    var r = this;
                    for (var a = 0; a < n.length; a++) {
                        r = r.getChild(n[a]);
                        if (!r || !r.getChild) {
                            return
                        }
                    }
                    return r
                }
                ;
                t.addChild = function t(n, i, r) {
                    if (i === void 0) {
                        i = {}
                    }
                    if (r === void 0) {
                        r = this.children_.length
                    }
                    var a;
                    var s;
                    if (typeof n === "string") {
                        s = _t(n);
                        var o = i.componentClass || s;
                        i.name = s;
                        var u = e.getComponent(o);
                        if (!u) {
                            throw new Error("Component " + o + " does not exist")
                        }
                        if (typeof u !== "function") {
                            return null
                        }
                        a = new u(this.player_ || this,i)
                    } else {
                        a = n
                    }
                    if (a.parentComponent_) {
                        a.parentComponent_.removeChild(a)
                    }
                    this.children_.splice(r, 0, a);
                    a.parentComponent_ = this;
                    if (typeof a.id === "function") {
                        this.childIndex_[a.id()] = a
                    }
                    s = s || a.name && _t(a.name());
                    if (s) {
                        this.childNameIndex_[s] = a;
                        this.childNameIndex_[yt(s)] = a
                    }
                    if (typeof a.el === "function" && a.el()) {
                        var l = null;
                        if (this.children_[r + 1]) {
                            if (this.children_[r + 1].el_) {
                                l = this.children_[r + 1].el_
                            } else if (ee(this.children_[r + 1])) {
                                l = this.children_[r + 1]
                            }
                        }
                        this.contentEl().insertBefore(a.el(), l)
                    }
                    return a
                }
                ;
                t.removeChild = function e(t) {
                    if (typeof t === "string") {
                        t = this.getChild(t)
                    }
                    if (!t || !this.children_) {
                        return
                    }
                    var n = false;
                    for (var i = this.children_.length - 1; i >= 0; i--) {
                        if (this.children_[i] === t) {
                            n = true;
                            this.children_.splice(i, 1);
                            break
                        }
                    }
                    if (!n) {
                        return
                    }
                    t.parentComponent_ = null;
                    this.childIndex_[t.id()] = null;
                    this.childNameIndex_[_t(t.name())] = null;
                    this.childNameIndex_[yt(t.name())] = null;
                    var r = t.el();
                    if (r && r.parentNode === this.contentEl()) {
                        this.contentEl().removeChild(t.el())
                    }
                }
                ;
                t.initChildren = function t() {
                    var n = this;
                    var i = this.options_.children;
                    if (i) {
                        var r = this.options_;
                        var a = function e(t) {
                            var i = t.name;
                            var a = t.opts;
                            if (r[i] !== undefined) {
                                a = r[i]
                            }
                            if (a === false) {
                                return
                            }
                            if (a === true) {
                                a = {}
                            }
                            a.playerOptions = n.options_.playerOptions;
                            var s = n.addChild(i, a);
                            if (s) {
                                n[i] = s
                            }
                        };
                        var s;
                        var o = e.getComponent("Tech");
                        if (Array.isArray(i)) {
                            s = i
                        } else {
                            s = Object.keys(i)
                        }
                        s.concat(Object.keys(this.options_).filter(function(e) {
                            return !s.some(function(t) {
                                if (typeof t === "string") {
                                    return e === t
                                }
                                return e === t.name
                            })
                        })).map(function(e) {
                            var t;
                            var r;
                            if (typeof e === "string") {
                                t = e;
                                r = i[t] || n.options_[t] || {}
                            } else {
                                t = e.name;
                                r = e
                            }
                            return {
                                name: t,
                                opts: r
                            }
                        }).filter(function(t) {
                            var n = e.getComponent(t.opts.componentClass || _t(t.name));
                            return n && !o.isTech(n)
                        }).forEach(a)
                    }
                }
                ;
                t.buildCSSClass = function e() {
                    return ""
                }
                ;
                t.ready = function e(t, n) {
                    if (n === void 0) {
                        n = false
                    }
                    if (!t) {
                        return
                    }
                    if (!this.isReady_) {
                        this.readyQueue_ = this.readyQueue_ || [];
                        this.readyQueue_.push(t);
                        return
                    }
                    if (n) {
                        t.call(this)
                    } else {
                        this.setTimeout(t, 1)
                    }
                }
                ;
                t.triggerReady = function e() {
                    this.isReady_ = true;
                    this.setTimeout(function() {
                        var e = this.readyQueue_;
                        this.readyQueue_ = [];
                        if (e && e.length > 0) {
                            e.forEach(function(e) {
                                e.call(this)
                            }, this)
                        }
                        this.trigger("ready")
                    }, 1)
                }
                ;
                t.$ = function e(t, n) {
                    return Pe(t, n || this.contentEl())
                }
                ;
                t.$$ = function e(t, n) {
                    return Ie(t, n || this.contentEl())
                }
                ;
                t.hasClass = function e(t) {
                    return se(this.el_, t)
                }
                ;
                t.addClass = function e(t) {
                    oe(this.el_, t)
                }
                ;
                t.removeClass = function e(t) {
                    ue(this.el_, t)
                }
                ;
                t.toggleClass = function e(t, n) {
                    le(this.el_, t, n)
                }
                ;
                t.show = function e() {
                    this.removeClass("vjs-hidden")
                }
                ;
                t.hide = function e() {
                    this.addClass("vjs-hidden")
                }
                ;
                t.lockShowing = function e() {
                    this.addClass("vjs-lock-showing")
                }
                ;
                t.unlockShowing = function e() {
                    this.removeClass("vjs-lock-showing")
                }
                ;
                t.getAttribute = function e(t) {
                    return fe(this.el_, t)
                }
                ;
                t.setAttribute = function e(t, n) {
                    pe(this.el_, t, n)
                }
                ;
                t.removeAttribute = function e(t) {
                    he(this.el_, t)
                }
                ;
                t.width = function e(t, n) {
                    return this.dimension("width", t, n)
                }
                ;
                t.height = function e(t, n) {
                    return this.dimension("height", t, n)
                }
                ;
                t.dimensions = function e(t, n) {
                    this.width(t, true);
                    this.height(n)
                }
                ;
                t.dimension = function e(t, n, i) {
                    if (n !== undefined) {
                        if (n === null || n !== n) {
                            n = 0
                        }
                        if (("" + n).indexOf("%") !== -1 || ("" + n).indexOf("px") !== -1) {
                            this.el_.style[t] = n
                        } else if (n === "auto") {
                            this.el_.style[t] = ""
                        } else {
                            this.el_.style[t] = n + "px"
                        }
                        if (!i) {
                            this.trigger("componentresize")
                        }
                        return
                    }
                    if (!this.el_) {
                        return 0
                    }
                    var r = this.el_.style[t];
                    var a = r.indexOf("px");
                    if (a !== -1) {
                        return parseInt(r.slice(0, a), 10)
                    }
                    return parseInt(this.el_["offset" + _t(t)], 10)
                }
                ;
                t.currentDimension = function e(t) {
                    var n = 0;
                    if (t !== "width" && t !== "height") {
                        throw new Error("currentDimension only accepts width or height value")
                    }
                    n = C(this.el_, t);
                    n = parseFloat(n);
                    if (n === 0 || isNaN(n)) {
                        var i = "offset" + _t(t);
                        n = this.el_[i]
                    }
                    return n
                }
                ;
                t.currentDimensions = function e() {
                    return {
                        width: this.currentDimension("width"),
                        height: this.currentDimension("height")
                    }
                }
                ;
                t.currentWidth = function e() {
                    return this.currentDimension("width")
                }
                ;
                t.currentHeight = function e() {
                    return this.currentDimension("height")
                }
                ;
                t.focus = function e() {
                    this.el_.focus()
                }
                ;
                t.blur = function e() {
                    this.el_.blur()
                }
                ;
                t.handleKeyDown = function e(t) {
                    if (this.player_) {
                        t.stopPropagation();
                        this.player_.handleKeyDown(t)
                    }
                }
                ;
                t.handleKeyPress = function e(t) {
                    this.handleKeyDown(t)
                }
                ;
                t.emitTapEvents = function e() {
                    var t = 0;
                    var n = null;
                    var i = 10;
                    var a = 200;
                    var s;
                    this.on("touchstart", function(e) {
                        if (e.touches.length === 1) {
                            n = {
                                pageX: e.touches[0].pageX,
                                pageY: e.touches[0].pageY
                            };
                            t = r.performance.now();
                            s = true
                        }
                    });
                    this.on("touchmove", function(e) {
                        if (e.touches.length > 1) {
                            s = false
                        } else if (n) {
                            var t = e.touches[0].pageX - n.pageX;
                            var r = e.touches[0].pageY - n.pageY;
                            var a = Math.sqrt(t * t + r * r);
                            if (a > i) {
                                s = false
                            }
                        }
                    });
                    var o = function e() {
                        s = false
                    };
                    this.on("touchleave", o);
                    this.on("touchcancel", o);
                    this.on("touchend", function(e) {
                        n = null;
                        if (s === true) {
                            var i = r.performance.now() - t;
                            if (i < a) {
                                e.preventDefault();
                                this.trigger("tap")
                            }
                        }
                    })
                }
                ;
                t.enableTouchActivity = function e() {
                    if (!this.player() || !this.player().reportUserActivity) {
                        return
                    }
                    var t = et(this.player(), this.player().reportUserActivity);
                    var n;
                    this.on("touchstart", function() {
                        t();
                        this.clearInterval(n);
                        n = this.setInterval(t, 250)
                    });
                    var i = function e(i) {
                        t();
                        this.clearInterval(n)
                    };
                    this.on("touchmove", t);
                    this.on("touchend", i);
                    this.on("touchcancel", i)
                }
                ;
                t.setTimeout = function e(t, n) {
                    var i = this;
                    var a;
                    t = et(this, t);
                    this.clearTimersOnDispose_();
                    a = r.setTimeout(function() {
                        if (i.setTimeoutIds_.has(a)) {
                            i.setTimeoutIds_["delete"](a)
                        }
                        t()
                    }, n);
                    this.setTimeoutIds_.add(a);
                    return a
                }
                ;
                t.clearTimeout = function e(t) {
                    if (this.setTimeoutIds_.has(t)) {
                        this.setTimeoutIds_["delete"](t);
                        r.clearTimeout(t)
                    }
                    return t
                }
                ;
                t.setInterval = function e(t, n) {
                    t = et(this, t);
                    this.clearTimersOnDispose_();
                    var i = r.setInterval(t, n);
                    this.setIntervalIds_.add(i);
                    return i
                }
                ;
                t.clearInterval = function e(t) {
                    if (this.setIntervalIds_.has(t)) {
                        this.setIntervalIds_["delete"](t);
                        r.clearInterval(t)
                    }
                    return t
                }
                ;
                t.requestAnimationFrame = function e(t) {
                    var n = this;
                    if (!this.supportsRaf_) {
                        return this.setTimeout(t, 1e3 / 60)
                    }
                    this.clearTimersOnDispose_();
                    var i;
                    t = et(this, t);
                    i = r.requestAnimationFrame(function() {
                        if (n.rafIds_.has(i)) {
                            n.rafIds_["delete"](i)
                        }
                        t()
                    });
                    this.rafIds_.add(i);
                    return i
                }
                ;
                t.requestNamedAnimationFrame = function e(t, n) {
                    var i = this;
                    if (this.namedRafs_.has(t)) {
                        return
                    }
                    this.clearTimersOnDispose_();
                    n = et(this, n);
                    var r = this.requestAnimationFrame(function() {
                        n();
                        if (i.namedRafs_.has(t)) {
                            i.namedRafs_["delete"](t)
                        }
                    });
                    this.namedRafs_.set(t, r);
                    return t
                }
                ;
                t.cancelNamedAnimationFrame = function e(t) {
                    if (!this.namedRafs_.has(t)) {
                        return
                    }
                    this.cancelAnimationFrame(this.namedRafs_.get(t));
                    this.namedRafs_["delete"](t)
                }
                ;
                t.cancelAnimationFrame = function e(t) {
                    if (!this.supportsRaf_) {
                        return this.clearTimeout(t)
                    }
                    if (this.rafIds_.has(t)) {
                        this.rafIds_["delete"](t);
                        r.cancelAnimationFrame(t)
                    }
                    return t
                }
                ;
                t.clearTimersOnDispose_ = function e() {
                    var t = this;
                    if (this.clearingTimersOnDispose_) {
                        return
                    }
                    this.clearingTimersOnDispose_ = true;
                    this.one("dispose", function() {
                        [["namedRafs_", "cancelNamedAnimationFrame"], ["rafIds_", "cancelAnimationFrame"], ["setTimeoutIds_", "clearTimeout"], ["setIntervalIds_", "clearInterval"]].forEach(function(e) {
                            var n = e[0]
                              , i = e[1];
                            t[n].forEach(function(e, n) {
                                return t[i](n)
                            })
                        });
                        t.clearingTimersOnDispose_ = false
                    })
                }
                ;
                e.registerComponent = function t(n, i) {
                    if (typeof n !== "string" || !n) {
                        throw new Error('Illegal component name, "' + n + '"; must be a non-empty string.')
                    }
                    var r = e.getComponent("Tech");
                    var a = r && r.isTech(i);
                    var s = e === i || e.prototype.isPrototypeOf(i.prototype);
                    if (a || !s) {
                        var o;
                        if (a) {
                            o = "techs must be registered using Tech.registerTech()"
                        } else {
                            o = "must be a Component subclass"
                        }
                        throw new Error('Illegal component, "' + n + '"; ' + o + ".")
                    }
                    n = _t(n);
                    if (!e.components_) {
                        e.components_ = {}
                    }
                    var u = e.getComponent("Player");
                    if (n === "Player" && u && u.players) {
                        var l = u.players;
                        var d = Object.keys(l);
                        if (l && d.length > 0 && d.map(function(e) {
                            return l[e]
                        }).every(Boolean)) {
                            throw new Error("Can not register Player component after player has been created.")
                        }
                    }
                    e.components_[n] = i;
                    e.components_[yt(n)] = i;
                    return i
                }
                ;
                e.getComponent = function t(n) {
                    if (!n || !e.components_) {
                        return
                    }
                    return e.components_[n]
                }
                ;
                return e
            }();
            Pt.prototype.supportsRaf_ = typeof r.requestAnimationFrame === "function" && typeof r.cancelAnimationFrame === "function";
            Pt.registerComponent("Component", Pt);
            function It(e) {
                if (e === void 0) {
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                }
                return e
            }
            var Ct = It;
            var wt = n(function(e) {
                function t(n) {
                    "@babel/helpers - typeof";
                    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                        e.exports = t = function e(t) {
                            return typeof t
                        }
                    } else {
                        e.exports = t = function e(t) {
                            return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                        }
                    }
                    return t(n)
                }
                e.exports = t
            });
            var jt = n(function(e) {
                function t(n) {
                    e.exports = t = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
                        return t.__proto__ || Object.getPrototypeOf(t)
                    }
                    ;
                    return t(n)
                }
                e.exports = t
            });
            function Lt(e, t) {
                e.prototype = Object.create(t.prototype);
                e.prototype.constructor = e;
                e.__proto__ = t
            }
            var Ot = Lt;
            function xt(e, t, n) {
                if (typeof t !== "number" || t < 0 || t > n) {
                    throw new Error("Failed to execute '" + e + "' on 'TimeRanges': The index provided (" + t + ") is non-numeric or out of bounds (0-" + n + ").")
                }
            }
            function Dt(e, t, n, i) {
                xt(e, i, n.length - 1);
                return n[i][t]
            }
            function Nt(e) {
                if (e === undefined || e.length === 0) {
                    return {
                        length: 0,
                        start: function e() {
                            throw new Error("This TimeRanges object is empty")
                        },
                        end: function e() {
                            throw new Error("This TimeRanges object is empty")
                        }
                    }
                }
                return {
                    length: e.length,
                    start: Dt.bind(null, "start", 0, e),
                    end: Dt.bind(null, "end", 1, e)
                }
            }
            function Rt(e, t) {
                if (Array.isArray(e)) {
                    return Nt(e)
                } else if (e === undefined || t === undefined) {
                    return Nt()
                }
                return Nt([[e, t]])
            }
            function Mt(e, t) {
                var n = 0;
                var i;
                var r;
                if (!t) {
                    return 0
                }
                if (!e || !e.length) {
                    e = Rt(0, 0)
                }
                for (var a = 0; a < e.length; a++) {
                    i = e.start(a);
                    r = e.end(a);
                    if (r > t) {
                        r = t
                    }
                    n += r - i
                }
                return n / t
            }
            function Ut(e) {
                if (e instanceof Ut) {
                    return e
                }
                if (typeof e === "number") {
                    this.code = e
                } else if (typeof e === "string") {
                    this.message = e
                } else if (P(e)) {
                    if (typeof e.code === "number") {
                        this.code = e.code
                    }
                    E(this, e)
                }
                if (!this.message) {
                    this.message = Ut.defaultMessages[this.code] || ""
                }
            }
            Ut.prototype.code = 0;
            Ut.prototype.message = "";
            Ut.prototype.status = null;
            Ut.errorTypes = ["MEDIA_ERR_CUSTOM", "MEDIA_ERR_ABORTED", "MEDIA_ERR_NETWORK", "MEDIA_ERR_DECODE", "MEDIA_ERR_SRC_NOT_SUPPORTED", "MEDIA_ERR_ENCRYPTED"];
            Ut.defaultMessages = {
                1: "You aborted the media playback",
                2: "A network error caused the media download to fail part-way.",
                3: "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.",
                4: "The media could not be loaded, either because the server or network failed or because the format is not supported.",
                5: "The media is encrypted and we do not have the keys to decrypt it."
            };
            for (var Bt = 0; Bt < Ut.errorTypes.length; Bt++) {
                Ut[Ut.errorTypes[Bt]] = Bt;
                Ut.prototype[Ut.errorTypes[Bt]] = Bt
            }
            var Ft = Vt;
            function Vt(e, t) {
                var n;
                var i = null;
                try {
                    n = JSON.parse(e, t)
                } catch (e) {
                    i = e
                }
                return [i, n]
            }
            function qt(e) {
                return e !== undefined && e !== null && typeof e.then === "function"
            }
            function Ht(e) {
                if (qt(e)) {
                    e.then(null, function(e) {})
                }
            }
            var Gt = function e(t) {
                var n = ["kind", "label", "language", "id", "inBandMetadataTrackDispatchType", "mode", "src"].reduce(function(e, n, i) {
                    if (t[n]) {
                        e[n] = t[n]
                    }
                    return e
                }, {
                    cues: t.cues && Array.prototype.map.call(t.cues, function(e) {
                        return {
                            startTime: e.startTime,
                            endTime: e.endTime,
                            text: e.text,
                            id: e.id
                        }
                    })
                });
                return n
            };
            var Wt = function e(t) {
                var n = t.$$("track");
                var i = Array.prototype.map.call(n, function(e) {
                    return e.track
                });
                var r = Array.prototype.map.call(n, function(e) {
                    var t = Gt(e.track);
                    if (e.src) {
                        t.src = e.src
                    }
                    return t
                });
                return r.concat(Array.prototype.filter.call(t.textTracks(), function(e) {
                    return i.indexOf(e) === -1
                }).map(Gt))
            };
            var Kt = function e(t, n) {
                t.forEach(function(e) {
                    var t = n.addRemoteTextTrack(e).track;
                    if (!e.src && e.cues) {
                        e.cues.forEach(function(e) {
                            return t.addCue(e)
                        })
                    }
                });
                return n.textTracks()
            };
            var zt = {
                textTracksToJson: Wt,
                jsonToTextTracks: Kt,
                trackToJson_: Gt
            };
            var Yt = n(function(e, t) {
                function n(e) {
                    if (e && "object" === typeof e) {
                        var t = e.which || e.keyCode || e.charCode;
                        if (t)
                            e = t
                    }
                    if ("number" === typeof e)
                        return s[e];
                    var n = String(e);
                    var a = i[n.toLowerCase()];
                    if (a)
                        return a;
                    var a = r[n.toLowerCase()];
                    if (a)
                        return a;
                    if (n.length === 1)
                        return n.charCodeAt(0);
                    return undefined
                }
                n.isEventKey = function e(t, n) {
                    if (t && "object" === typeof t) {
                        var a = t.which || t.keyCode || t.charCode;
                        if (a === null || a === undefined) {
                            return false
                        }
                        if (typeof n === "string") {
                            var s = i[n.toLowerCase()];
                            if (s) {
                                return s === a
                            }
                            var s = r[n.toLowerCase()];
                            if (s) {
                                return s === a
                            }
                        } else if (typeof n === "number") {
                            return n === a
                        }
                        return false
                    }
                }
                ;
                t = e.exports = n;
                var i = t.code = t.codes = {
                    backspace: 8,
                    tab: 9,
                    enter: 13,
                    shift: 16,
                    ctrl: 17,
                    alt: 18,
                    "pause/break": 19,
                    "caps lock": 20,
                    esc: 27,
                    space: 32,
                    "page up": 33,
                    "page down": 34,
                    end: 35,
                    home: 36,
                    left: 37,
                    up: 38,
                    right: 39,
                    down: 40,
                    insert: 45,
                    delete: 46,
                    command: 91,
                    "left command": 91,
                    "right command": 93,
                    "numpad *": 106,
                    "numpad +": 107,
                    "numpad -": 109,
                    "numpad .": 110,
                    "numpad /": 111,
                    "num lock": 144,
                    "scroll lock": 145,
                    "my computer": 182,
                    "my calculator": 183,
                    ";": 186,
                    "=": 187,
                    ",": 188,
                    "-": 189,
                    ".": 190,
                    "/": 191,
                    "`": 192,
                    "[": 219,
                    "\\": 220,
                    "]": 221,
                    "'": 222
                };
                var r = t.aliases = {
                    windows: 91,
                    "\u21e7": 16,
                    "\u2325": 18,
                    "\u2303": 17,
                    "\u2318": 91,
                    ctl: 17,
                    control: 17,
                    option: 18,
                    pause: 19,
                    break: 19,
                    caps: 20,
                    return: 13,
                    escape: 27,
                    spc: 32,
                    spacebar: 32,
                    pgup: 33,
                    pgdn: 34,
                    ins: 45,
                    del: 46,
                    cmd: 91
                };
                for (a = 97; a < 123; a++) {
                    i[String.fromCharCode(a)] = a - 32
                }
                for (var a = 48; a < 58; a++) {
                    i[a - 48] = a
                }
                for (a = 1; a < 13; a++) {
                    i["f" + a] = a + 111
                }
                for (a = 0; a < 10; a++) {
                    i["numpad " + a] = a + 96
                }
                var s = t.names = t.title = {};
                for (a in i) {
                    s[i[a]] = a
                }
                for (var o in r) {
                    i[o] = r[o]
                }
            });
            var Xt = Yt.code;
            var Qt = Yt.codes;
            var Zt = Yt.aliases;
            var Jt = Yt.names;
            var $t = Yt.title;
            var en = "vjs-modal-dialog";
            var tn = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.handleKeyDown_ = function(e) {
                        return i.handleKeyDown(e)
                    }
                    ;
                    i.close_ = function(e) {
                        return i.close(e)
                    }
                    ;
                    i.opened_ = i.hasBeenOpened_ = i.hasBeenFilled_ = false;
                    i.closeable(!i.options_.uncloseable);
                    i.content(i.options_.content);
                    i.contentEl_ = ie("div", {
                        className: en + "-content"
                    }, {
                        role: "document"
                    });
                    i.descEl_ = ie("p", {
                        className: en + "-description vjs-control-text",
                        id: i.el().getAttribute("aria-describedby")
                    });
                    re(i.descEl_, i.description());
                    i.el_.appendChild(i.descEl_);
                    i.el_.appendChild(i.contentEl_);
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: this.buildCSSClass(),
                        tabIndex: -1
                    }, {
                        "aria-describedby": this.id() + "_description",
                        "aria-hidden": "true",
                        "aria-label": this.label(),
                        role: "dialog"
                    })
                }
                ;
                n.dispose = function t() {
                    this.contentEl_ = null;
                    this.descEl_ = null;
                    this.previouslyActiveEl_ = null;
                    e.prototype.dispose.call(this)
                }
                ;
                n.buildCSSClass = function t() {
                    return en + " vjs-hidden " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.label = function e() {
                    return this.localize(this.options_.label || "Modal Window")
                }
                ;
                n.description = function e() {
                    var t = this.options_.description || this.localize("This is a modal window.");
                    if (this.closeable()) {
                        t += " " + this.localize("This modal can be closed by pressing the Escape key or activating the close button.")
                    }
                    return t
                }
                ;
                n.open = function e() {
                    if (!this.opened_) {
                        var t = this.player();
                        this.trigger("beforemodalopen");
                        this.opened_ = true;
                        if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {
                            this.fill()
                        }
                        this.wasPlaying_ = !t.paused();
                        if (this.options_.pauseOnOpen && this.wasPlaying_) {
                            t.pause()
                        }
                        this.on("keydown", this.handleKeyDown_);
                        this.hadControls_ = t.controls();
                        t.controls(false);
                        this.show();
                        this.conditionalFocus_();
                        this.el().setAttribute("aria-hidden", "false");
                        this.trigger("modalopen");
                        this.hasBeenOpened_ = true
                    }
                }
                ;
                n.opened = function e(t) {
                    if (typeof t === "boolean") {
                        this[t ? "open" : "close"]()
                    }
                    return this.opened_
                }
                ;
                n.close = function e() {
                    if (!this.opened_) {
                        return
                    }
                    var t = this.player();
                    this.trigger("beforemodalclose");
                    this.opened_ = false;
                    if (this.wasPlaying_ && this.options_.pauseOnOpen) {
                        t.play()
                    }
                    this.off("keydown", this.handleKeyDown_);
                    if (this.hadControls_) {
                        t.controls(true)
                    }
                    this.hide();
                    this.el().setAttribute("aria-hidden", "true");
                    this.trigger("modalclose");
                    this.conditionalBlur_();
                    if (this.options_.temporary) {
                        this.dispose()
                    }
                }
                ;
                n.closeable = function e(t) {
                    if (typeof t === "boolean") {
                        var e = this.closeable_ = !!t;
                        var n = this.getChild("closeButton");
                        if (e && !n) {
                            var i = this.contentEl_;
                            this.contentEl_ = this.el_;
                            n = this.addChild("closeButton", {
                                controlText: "Close Modal Dialog"
                            });
                            this.contentEl_ = i;
                            this.on(n, "close", this.close_)
                        }
                        if (!e && n) {
                            this.off(n, "close", this.close_);
                            this.removeChild(n);
                            n.dispose()
                        }
                    }
                    return this.closeable_
                }
                ;
                n.fill = function e() {
                    this.fillWith(this.content())
                }
                ;
                n.fillWith = function e(t) {
                    var n = this.contentEl();
                    var i = n.parentNode;
                    var r = n.nextSibling;
                    this.trigger("beforemodalfill");
                    this.hasBeenFilled_ = true;
                    i.removeChild(n);
                    this.empty();
                    ke(n, t);
                    this.trigger("modalfill");
                    if (r) {
                        i.insertBefore(n, r)
                    } else {
                        i.appendChild(n)
                    }
                    var a = this.getChild("closeButton");
                    if (a) {
                        i.appendChild(a.el_)
                    }
                }
                ;
                n.empty = function e() {
                    this.trigger("beforemodalempty");
                    Se(this.contentEl());
                    this.trigger("modalempty")
                }
                ;
                n.content = function e(t) {
                    if (typeof t !== "undefined") {
                        this.content_ = t
                    }
                    return this.content_
                }
                ;
                n.conditionalFocus_ = function e() {
                    var t = u.activeElement;
                    var n = this.player_.el_;
                    this.previouslyActiveEl_ = null;
                    if (n.contains(t) || n === t) {
                        this.previouslyActiveEl_ = t;
                        this.focus()
                    }
                }
                ;
                n.conditionalBlur_ = function e() {
                    if (this.previouslyActiveEl_) {
                        this.previouslyActiveEl_.focus();
                        this.previouslyActiveEl_ = null
                    }
                }
                ;
                n.handleKeyDown = function e(t) {
                    t.stopPropagation();
                    if (Yt.isEventKey(t, "Escape") && this.closeable()) {
                        t.preventDefault();
                        this.close();
                        return
                    }
                    if (!Yt.isEventKey(t, "Tab")) {
                        return
                    }
                    var n = this.focusableEls_();
                    var i = this.el_.querySelector(":focus");
                    var r;
                    for (var a = 0; a < n.length; a++) {
                        if (i === n[a]) {
                            r = a;
                            break
                        }
                    }
                    if (u.activeElement === this.el_) {
                        r = 0
                    }
                    if (t.shiftKey && r === 0) {
                        n[n.length - 1].focus();
                        t.preventDefault()
                    } else if (!t.shiftKey && r === n.length - 1) {
                        n[0].focus();
                        t.preventDefault()
                    }
                }
                ;
                n.focusableEls_ = function e() {
                    var t = this.el_.querySelectorAll("*");
                    return Array.prototype.filter.call(t, function(e) {
                        return (e instanceof r.HTMLAnchorElement || e instanceof r.HTMLAreaElement) && e.hasAttribute("href") || (e instanceof r.HTMLInputElement || e instanceof r.HTMLSelectElement || e instanceof r.HTMLTextAreaElement || e instanceof r.HTMLButtonElement) && !e.hasAttribute("disabled") || e instanceof r.HTMLIFrameElement || e instanceof r.HTMLObjectElement || e instanceof r.HTMLEmbedElement || e.hasAttribute("tabindex") && e.getAttribute("tabindex") !== -1 || e.hasAttribute("contenteditable")
                    })
                }
                ;
                return t
            }(Pt);
            tn.prototype.options_ = {
                pauseOnOpen: true,
                temporary: true
            };
            Pt.registerComponent("ModalDialog", tn);
            var nn = function(e) {
                Ot(t, e);
                function t(t) {
                    var n;
                    if (t === void 0) {
                        t = []
                    }
                    n = e.call(this) || this;
                    n.tracks_ = [];
                    Object.defineProperty(Ct(n), "length", {
                        get: function e() {
                            return this.tracks_.length
                        }
                    });
                    for (var i = 0; i < t.length; i++) {
                        n.addTrack(t[i])
                    }
                    return n
                }
                var n = t.prototype;
                n.addTrack = function e(t) {
                    var n = this;
                    var i = this.tracks_.length;
                    if (!("" + i in this)) {
                        Object.defineProperty(this, i, {
                            get: function e() {
                                return this.tracks_[i]
                            }
                        })
                    }
                    if (this.tracks_.indexOf(t) === -1) {
                        this.tracks_.push(t);
                        this.trigger({
                            track: t,
                            type: "addtrack",
                            target: this
                        })
                    }
                    t.labelchange_ = function() {
                        n.trigger({
                            track: t,
                            type: "labelchange",
                            target: n
                        })
                    }
                    ;
                    if (st(t)) {
                        t.addEventListener("labelchange", t.labelchange_)
                    }
                }
                ;
                n.removeTrack = function e(t) {
                    var n;
                    for (var i = 0, r = this.length; i < r; i++) {
                        if (this[i] === t) {
                            n = this[i];
                            if (n.off) {
                                n.off()
                            }
                            this.tracks_.splice(i, 1);
                            break
                        }
                    }
                    if (!n) {
                        return
                    }
                    this.trigger({
                        track: n,
                        type: "removetrack",
                        target: this
                    })
                }
                ;
                n.getTrackById = function e(t) {
                    var n = null;
                    for (var i = 0, r = this.length; i < r; i++) {
                        var a = this[i];
                        if (a.id === t) {
                            n = a;
                            break
                        }
                    }
                    return n
                }
                ;
                return t
            }(it);
            nn.prototype.allowedEvents_ = {
                change: "change",
                addtrack: "addtrack",
                removetrack: "removetrack",
                labelchange: "labelchange"
            };
            for (var rn in nn.prototype.allowedEvents_) {
                nn.prototype["on" + rn] = null
            }
            var an = function e(t, n) {
                for (var i = 0; i < t.length; i++) {
                    if (!Object.keys(t[i]).length || n.id === t[i].id) {
                        continue
                    }
                    t[i].enabled = false
                }
            };
            var sn = function(e) {
                Ot(t, e);
                function t(t) {
                    var n;
                    if (t === void 0) {
                        t = []
                    }
                    for (var i = t.length - 1; i >= 0; i--) {
                        if (t[i].enabled) {
                            an(t, t[i]);
                            break
                        }
                    }
                    n = e.call(this, t) || this;
                    n.changing_ = false;
                    return n
                }
                var n = t.prototype;
                n.addTrack = function t(n) {
                    var i = this;
                    if (n.enabled) {
                        an(this, n)
                    }
                    e.prototype.addTrack.call(this, n);
                    if (!n.addEventListener) {
                        return
                    }
                    n.enabledChange_ = function() {
                        if (i.changing_) {
                            return
                        }
                        i.changing_ = true;
                        an(i, n);
                        i.changing_ = false;
                        i.trigger("change")
                    }
                    ;
                    n.addEventListener("enabledchange", n.enabledChange_)
                }
                ;
                n.removeTrack = function t(n) {
                    e.prototype.removeTrack.call(this, n);
                    if (n.removeEventListener && n.enabledChange_) {
                        n.removeEventListener("enabledchange", n.enabledChange_);
                        n.enabledChange_ = null
                    }
                }
                ;
                return t
            }(nn);
            var on = function e(t, n) {
                for (var i = 0; i < t.length; i++) {
                    if (!Object.keys(t[i]).length || n.id === t[i].id) {
                        continue
                    }
                    t[i].selected = false
                }
            };
            var un = function(e) {
                Ot(t, e);
                function t(t) {
                    var n;
                    if (t === void 0) {
                        t = []
                    }
                    for (var i = t.length - 1; i >= 0; i--) {
                        if (t[i].selected) {
                            on(t, t[i]);
                            break
                        }
                    }
                    n = e.call(this, t) || this;
                    n.changing_ = false;
                    Object.defineProperty(Ct(n), "selectedIndex", {
                        get: function e() {
                            for (var t = 0; t < this.length; t++) {
                                if (this[t].selected) {
                                    return t
                                }
                            }
                            return -1
                        },
                        set: function e() {}
                    });
                    return n
                }
                var n = t.prototype;
                n.addTrack = function t(n) {
                    var i = this;
                    if (n.selected) {
                        on(this, n)
                    }
                    e.prototype.addTrack.call(this, n);
                    if (!n.addEventListener) {
                        return
                    }
                    n.selectedChange_ = function() {
                        if (i.changing_) {
                            return
                        }
                        i.changing_ = true;
                        on(i, n);
                        i.changing_ = false;
                        i.trigger("change")
                    }
                    ;
                    n.addEventListener("selectedchange", n.selectedChange_)
                }
                ;
                n.removeTrack = function t(n) {
                    e.prototype.removeTrack.call(this, n);
                    if (n.removeEventListener && n.selectedChange_) {
                        n.removeEventListener("selectedchange", n.selectedChange_);
                        n.selectedChange_ = null
                    }
                }
                ;
                return t
            }(nn);
            var ln = function(e) {
                Ot(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var n = t.prototype;
                n.addTrack = function t(n) {
                    var i = this;
                    e.prototype.addTrack.call(this, n);
                    if (!this.queueChange_) {
                        this.queueChange_ = function() {
                            return i.queueTrigger("change")
                        }
                    }
                    if (!this.triggerSelectedlanguagechange) {
                        this.triggerSelectedlanguagechange_ = function() {
                            return i.trigger("selectedlanguagechange")
                        }
                    }
                    n.addEventListener("modechange", this.queueChange_);
                    var r = ["metadata", "chapters"];
                    if (r.indexOf(n.kind) === -1) {
                        n.addEventListener("modechange", this.triggerSelectedlanguagechange_)
                    }
                }
                ;
                n.removeTrack = function t(n) {
                    e.prototype.removeTrack.call(this, n);
                    if (n.removeEventListener) {
                        if (this.queueChange_) {
                            n.removeEventListener("modechange", this.queueChange_)
                        }
                        if (this.selectedlanguagechange_) {
                            n.removeEventListener("modechange", this.triggerSelectedlanguagechange_)
                        }
                    }
                }
                ;
                return t
            }(nn);
            var dn = function() {
                function e(e) {
                    if (e === void 0) {
                        e = []
                    }
                    this.trackElements_ = [];
                    Object.defineProperty(this, "length", {
                        get: function e() {
                            return this.trackElements_.length
                        }
                    });
                    for (var t = 0, n = e.length; t < n; t++) {
                        this.addTrackElement_(e[t])
                    }
                }
                var t = e.prototype;
                t.addTrackElement_ = function e(t) {
                    var n = this.trackElements_.length;
                    if (!("" + n in this)) {
                        Object.defineProperty(this, n, {
                            get: function e() {
                                return this.trackElements_[n]
                            }
                        })
                    }
                    if (this.trackElements_.indexOf(t) === -1) {
                        this.trackElements_.push(t)
                    }
                }
                ;
                t.getTrackElementByTrack_ = function e(t) {
                    var n;
                    for (var i = 0, r = this.trackElements_.length; i < r; i++) {
                        if (t === this.trackElements_[i].track) {
                            n = this.trackElements_[i];
                            break
                        }
                    }
                    return n
                }
                ;
                t.removeTrackElement_ = function e(t) {
                    for (var n = 0, i = this.trackElements_.length; n < i; n++) {
                        if (t === this.trackElements_[n]) {
                            if (this.trackElements_[n].track && typeof this.trackElements_[n].track.off === "function") {
                                this.trackElements_[n].track.off()
                            }
                            if (typeof this.trackElements_[n].off === "function") {
                                this.trackElements_[n].off()
                            }
                            this.trackElements_.splice(n, 1);
                            break
                        }
                    }
                }
                ;
                return e
            }();
            var cn = function() {
                function e(t) {
                    e.prototype.setCues_.call(this, t);
                    Object.defineProperty(this, "length", {
                        get: function e() {
                            return this.length_
                        }
                    })
                }
                var t = e.prototype;
                t.setCues_ = function e(t) {
                    var n = this.length || 0;
                    var i = 0;
                    var r = t.length;
                    this.cues_ = t;
                    this.length_ = t.length;
                    var a = function e(t) {
                        if (!("" + t in this)) {
                            Object.defineProperty(this, "" + t, {
                                get: function e() {
                                    return this.cues_[t]
                                }
                            })
                        }
                    };
                    if (n < r) {
                        i = n;
                        for (; i < r; i++) {
                            a.call(this, i)
                        }
                    }
                }
                ;
                t.getCueById = function e(t) {
                    var n = null;
                    for (var i = 0, r = this.length; i < r; i++) {
                        var a = this[i];
                        if (a.id === t) {
                            n = a;
                            break
                        }
                    }
                    return n
                }
                ;
                return e
            }();
            var fn = {
                alternative: "alternative",
                captions: "captions",
                main: "main",
                sign: "sign",
                subtitles: "subtitles",
                commentary: "commentary"
            };
            var pn = {
                alternative: "alternative",
                descriptions: "descriptions",
                main: "main",
                "main-desc": "main-desc",
                translation: "translation",
                commentary: "commentary"
            };
            var hn = {
                subtitles: "subtitles",
                captions: "captions",
                descriptions: "descriptions",
                chapters: "chapters",
                metadata: "metadata"
            };
            var vn = {
                disabled: "disabled",
                hidden: "hidden",
                showing: "showing"
            };
            var gn = function(e) {
                Ot(t, e);
                function t(t) {
                    var n;
                    if (t === void 0) {
                        t = {}
                    }
                    n = e.call(this) || this;
                    var i = {
                        id: t.id || "vjs_track_" + Ue(),
                        kind: t.kind || "",
                        language: t.language || ""
                    };
                    var r = t.label || "";
                    var a = function e(t) {
                        Object.defineProperty(Ct(n), t, {
                            get: function e() {
                                return i[t]
                            },
                            set: function e() {}
                        })
                    };
                    for (var s in i) {
                        a(s)
                    }
                    Object.defineProperty(Ct(n), "label", {
                        get: function e() {
                            return r
                        },
                        set: function e(t) {
                            if (t !== r) {
                                r = t;
                                this.trigger("labelchange")
                            }
                        }
                    });
                    return n
                }
                return t
            }(it);
            var mn = function e(t) {
                var n = ["protocol", "hostname", "port", "pathname", "search", "hash", "host"];
                var i = u.createElement("a");
                i.href = t;
                var a = i.host === "" && i.protocol !== "file:";
                var s;
                if (a) {
                    s = u.createElement("div");
                    s.innerHTML = '<a href="' + t + '"></a>';
                    i = s.firstChild;
                    s.setAttribute("style", "display:none; position:absolute;");
                    u.body.appendChild(s)
                }
                var o = {};
                for (var l = 0; l < n.length; l++) {
                    o[n[l]] = i[n[l]]
                }
                if (o.protocol === "http:") {
                    o.host = o.host.replace(/:80$/, "")
                }
                if (o.protocol === "https:") {
                    o.host = o.host.replace(/:443$/, "")
                }
                if (!o.protocol) {
                    o.protocol = r.location.protocol
                }
                if (a) {
                    u.body.removeChild(s)
                }
                return o
            };
            var yn = function e(t) {
                if (!t.match(/^https?:\/\//)) {
                    var n = u.createElement("div");
                    n.innerHTML = '<a href="' + t + '">x</a>';
                    t = n.firstChild.href
                }
                return t
            };
            var _n = function e(t) {
                if (typeof t === "string") {
                    var n = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/;
                    var i = n.exec(t);
                    if (i) {
                        return i.pop().toLowerCase()
                    }
                }
                return ""
            };
            var bn = function e(t, n) {
                if (n === void 0) {
                    n = r.location
                }
                var i = mn(t);
                var a = i.protocol === ":" ? n.protocol : i.protocol;
                var s = a + i.host !== n.protocol + n.host;
                return s
            };
            var Sn = Object.freeze({
                __proto__: null,
                parseUrl: mn,
                getAbsoluteURL: yn,
                getFileExtension: _n,
                isCrossOrigin: bn
            });
            var An;
            if (typeof window !== "undefined") {
                An = window
            } else if (typeof t !== "undefined") {
                An = t
            } else if (typeof self !== "undefined") {
                An = self
            } else {
                An = {}
            }
            var Tn = An;
            var kn = Pn;
            var En = Object.prototype.toString;
            function Pn(e) {
                var t = En.call(e);
                return t === "[object Function]" || typeof e === "function" && t !== "[object RegExp]" || typeof window !== "undefined" && (e === window.setTimeout || e === window.alert || e === window.confirm || e === window.prompt)
            }
            var In = function e(t) {
                var n = {};
                if (!t) {
                    return n
                }
                t.trim().split("\n").forEach(function(e) {
                    var t = e.indexOf(":");
                    var i = e.slice(0, t).trim().toLowerCase();
                    var r = e.slice(t + 1).trim();
                    if (typeof n[i] === "undefined") {
                        n[i] = r
                    } else if (Array.isArray(n[i])) {
                        n[i].push(r)
                    } else {
                        n[i] = [n[i], r]
                    }
                });
                return n
            };
            var Cn = xn;
            var wn = xn;
            xn.XMLHttpRequest = Tn.XMLHttpRequest || Rn;
            xn.XDomainRequest = "withCredentials"in new xn.XMLHttpRequest ? xn.XMLHttpRequest : Tn.XDomainRequest;
            jn(["get", "put", "post", "patch", "head", "delete"], function(e) {
                xn[e === "delete" ? "del" : e] = function(t, n, i) {
                    n = On(t, n, i);
                    n.method = e.toUpperCase();
                    return Dn(n)
                }
            });
            function jn(e, t) {
                for (var n = 0; n < e.length; n++) {
                    t(e[n])
                }
            }
            function Ln(e) {
                for (var t in e) {
                    if (e.hasOwnProperty(t))
                        return false
                }
                return true
            }
            function On(e, t, n) {
                var i = e;
                if (kn(t)) {
                    n = t;
                    if (typeof e === "string") {
                        i = {
                            uri: e
                        }
                    }
                } else {
                    i = b({}, t, {
                        uri: e
                    })
                }
                i.callback = n;
                return i
            }
            function xn(e, t, n) {
                t = On(e, t, n);
                return Dn(t)
            }
            function Dn(e) {
                if (typeof e.callback === "undefined") {
                    throw new Error("callback argument missing")
                }
                var t = false;
                var n = function n(i, r, a) {
                    if (!t) {
                        t = true;
                        e.callback(i, r, a)
                    }
                };
                function i() {
                    if (o.readyState === 4) {
                        setTimeout(s, 0)
                    }
                }
                function r() {
                    var e = undefined;
                    if (o.response) {
                        e = o.response
                    } else {
                        e = o.responseText || Nn(o)
                    }
                    if (v) {
                        try {
                            e = JSON.parse(e)
                        } catch (e) {}
                    }
                    return e
                }
                function a(e) {
                    clearTimeout(g);
                    if (!(e instanceof Error)) {
                        e = new Error("" + (e || "Unknown XMLHttpRequest Error"))
                    }
                    e.statusCode = 0;
                    return n(e, m)
                }
                function s() {
                    if (l)
                        return;
                    var t;
                    clearTimeout(g);
                    if (e.useXDR && o.status === undefined) {
                        t = 200
                    } else {
                        t = o.status === 1223 ? 204 : o.status
                    }
                    var i = m;
                    var a = null;
                    if (t !== 0) {
                        i = {
                            body: r(),
                            statusCode: t,
                            method: c,
                            headers: {},
                            url: d,
                            rawRequest: o
                        };
                        if (o.getAllResponseHeaders) {
                            i.headers = In(o.getAllResponseHeaders())
                        }
                    } else {
                        a = new Error("Internal XMLHttpRequest Error")
                    }
                    return n(a, i, i.body)
                }
                var o = e.xhr || null;
                if (!o) {
                    if (e.cors || e.useXDR) {
                        o = new xn.XDomainRequest
                    } else {
                        o = new xn.XMLHttpRequest
                    }
                }
                var u;
                var l;
                var d = o.url = e.uri || e.url;
                var c = o.method = e.method || "GET";
                var f = e.body || e.data;
                var p = o.headers = e.headers || {};
                var h = !!e.sync;
                var v = false;
                var g;
                var m = {
                    body: undefined,
                    headers: {},
                    statusCode: 0,
                    method: c,
                    url: d,
                    rawRequest: o
                };
                if ("json"in e && e.json !== false) {
                    v = true;
                    p["accept"] || p["Accept"] || (p["Accept"] = "application/json");
                    if (c !== "GET" && c !== "HEAD") {
                        p["content-type"] || p["Content-Type"] || (p["Content-Type"] = "application/json");
                        f = JSON.stringify(e.json === true ? f : e.json)
                    }
                }
                o.onreadystatechange = i;
                o.onload = s;
                o.onerror = a;
                o.onprogress = function() {}
                ;
                o.onabort = function() {
                    l = true
                }
                ;
                o.ontimeout = a;
                o.open(c, d, !h, e.username, e.password);
                if (!h) {
                    o.withCredentials = !!e.withCredentials
                }
                if (!h && e.timeout > 0) {
                    g = setTimeout(function() {
                        if (l)
                            return;
                        l = true;
                        o.abort("timeout");
                        var e = new Error("XMLHttpRequest timeout");
                        e.code = "ETIMEDOUT";
                        a(e)
                    }, e.timeout)
                }
                if (o.setRequestHeader) {
                    for (u in p) {
                        if (p.hasOwnProperty(u)) {
                            o.setRequestHeader(u, p[u])
                        }
                    }
                } else if (e.headers && !Ln(e.headers)) {
                    throw new Error("Headers cannot be set on an XDomainRequest object")
                }
                if ("responseType"in e) {
                    o.responseType = e.responseType
                }
                if ("beforeSend"in e && typeof e.beforeSend === "function") {
                    e.beforeSend(o)
                }
                o.send(f || null);
                return o
            }
            function Nn(e) {
                try {
                    if (e.responseType === "document") {
                        return e.responseXML
                    }
                    var t = e.responseXML && e.responseXML.documentElement.nodeName === "parsererror";
                    if (e.responseType === "" && !t) {
                        return e.responseXML
                    }
                } catch (e) {}
                return null
            }
            function Rn() {}
            Cn["default"] = wn;
            var Mn = function e(t, n) {
                var i = new r.WebVTT.Parser(r,r.vttjs,r.WebVTT.StringDecoder());
                var a = [];
                i.oncue = function(e) {
                    n.addCue(e)
                }
                ;
                i.onparsingerror = function(e) {
                    a.push(e)
                }
                ;
                i.onflush = function() {
                    n.trigger({
                        type: "loadeddata",
                        target: n
                    })
                }
                ;
                i.parse(t);
                if (a.length > 0) {
                    if (r.console && r.console.groupCollapsed) {
                        r.console.groupCollapsed("Text Track parsing errors for " + n.src)
                    }
                    a.forEach(function(e) {
                        return y.error(e)
                    });
                    if (r.console && r.console.groupEnd) {
                        r.console.groupEnd()
                    }
                }
                i.flush()
            };
            var Un = function e(t, n) {
                var i = {
                    uri: t
                };
                var a = bn(t);
                if (a) {
                    i.cors = a
                }
                var s = n.tech_.crossOrigin() === "use-credentials";
                if (s) {
                    i.withCredentials = s
                }
                Cn(i, et(this, function(e, t, i) {
                    if (e) {
                        return y.error(e, t)
                    }
                    n.loaded_ = true;
                    if (typeof r.WebVTT !== "function") {
                        if (n.tech_) {
                            n.tech_.any(["vttjsloaded", "vttjserror"], function(e) {
                                if (e.type === "vttjserror") {
                                    y.error("vttjs failed to load, stopping trying to process " + n.src);
                                    return
                                }
                                return Mn(i, n)
                            })
                        }
                    } else {
                        Mn(i, n)
                    }
                }))
            };
            var Bn = function(e) {
                Ot(t, e);
                function t(t) {
                    var n;
                    if (t === void 0) {
                        t = {}
                    }
                    if (!t.tech) {
                        throw new Error("A tech was not provided.")
                    }
                    var i = St(t, {
                        kind: hn[t.kind] || "subtitles",
                        language: t.language || t.srclang || ""
                    });
                    var r = vn[i.mode] || "disabled";
                    var a = i["default"];
                    if (i.kind === "metadata" || i.kind === "chapters") {
                        r = "hidden"
                    }
                    n = e.call(this, i) || this;
                    n.tech_ = i.tech;
                    n.cues_ = [];
                    n.activeCues_ = [];
                    n.preload_ = n.tech_.preloadTextTracks !== false;
                    var s = new cn(n.cues_);
                    var o = new cn(n.activeCues_);
                    var u = false;
                    var l = et(Ct(n), function() {
                        if (!this.tech_.isReady_ || this.tech_.isDisposed()) {
                            return
                        }
                        this.activeCues = this.activeCues;
                        if (u) {
                            this.trigger("cuechange");
                            u = false
                        }
                    });
                    var d = function e() {
                        n.tech_.off("timeupdate", l)
                    };
                    n.tech_.one("dispose", d);
                    if (r !== "disabled") {
                        n.tech_.on("timeupdate", l)
                    }
                    Object.defineProperties(Ct(n), {
                        default: {
                            get: function e() {
                                return a
                            },
                            set: function e() {}
                        },
                        mode: {
                            get: function e() {
                                return r
                            },
                            set: function e(t) {
                                if (!vn[t]) {
                                    return
                                }
                                if (r === t) {
                                    return
                                }
                                r = t;
                                if (!this.preload_ && r !== "disabled" && this.cues.length === 0) {
                                    Un(this.src, this)
                                }
                                this.tech_.off("timeupdate", l);
                                if (r !== "disabled") {
                                    this.tech_.on("timeupdate", l)
                                }
                                this.trigger("modechange")
                            }
                        },
                        cues: {
                            get: function e() {
                                if (!this.loaded_) {
                                    return null
                                }
                                return s
                            },
                            set: function e() {}
                        },
                        activeCues: {
                            get: function e() {
                                if (!this.loaded_) {
                                    return null
                                }
                                if (this.cues.length === 0) {
                                    return o
                                }
                                var t = this.tech_.currentTime();
                                var n = [];
                                for (var i = 0, r = this.cues.length; i < r; i++) {
                                    var a = this.cues[i];
                                    if (a.startTime <= t && a.endTime >= t) {
                                        n.push(a)
                                    } else if (a.startTime === a.endTime && a.startTime <= t && a.startTime + .5 >= t) {
                                        n.push(a)
                                    }
                                }
                                u = false;
                                if (n.length !== this.activeCues_.length) {
                                    u = true
                                } else {
                                    for (var s = 0; s < n.length; s++) {
                                        if (this.activeCues_.indexOf(n[s]) === -1) {
                                            u = true
                                        }
                                    }
                                }
                                this.activeCues_ = n;
                                o.setCues_(this.activeCues_);
                                return o
                            },
                            set: function e() {}
                        }
                    });
                    if (i.src) {
                        n.src = i.src;
                        if (!n.preload_) {
                            n.loaded_ = true
                        }
                        if (n.preload_ || i.kind !== "subtitles" && i.kind !== "captions") {
                            Un(n.src, Ct(n))
                        }
                    } else {
                        n.loaded_ = true
                    }
                    return n
                }
                var n = t.prototype;
                n.addCue = function e(t) {
                    var n = t;
                    if (r.vttjs && !(t instanceof r.vttjs.VTTCue)) {
                        n = new r.vttjs.VTTCue(t.startTime,t.endTime,t.text);
                        for (var i in t) {
                            if (!(i in n)) {
                                n[i] = t[i]
                            }
                        }
                        n.id = t.id;
                        n.originalCue_ = t
                    }
                    var a = this.tech_.textTracks();
                    for (var s = 0; s < a.length; s++) {
                        if (a[s] !== this) {
                            a[s].removeCue(n)
                        }
                    }
                    this.cues_.push(n);
                    this.cues.setCues_(this.cues_)
                }
                ;
                n.removeCue = function e(t) {
                    var n = this.cues_.length;
                    while (n--) {
                        var i = this.cues_[n];
                        if (i === t || i.originalCue_ && i.originalCue_ === t) {
                            this.cues_.splice(n, 1);
                            this.cues.setCues_(this.cues_);
                            break
                        }
                    }
                }
                ;
                return t
            }(gn);
            Bn.prototype.allowedEvents_ = {
                cuechange: "cuechange"
            };
            var Fn = function(e) {
                Ot(t, e);
                function t(t) {
                    var n;
                    if (t === void 0) {
                        t = {}
                    }
                    var i = St(t, {
                        kind: pn[t.kind] || ""
                    });
                    n = e.call(this, i) || this;
                    var r = false;
                    Object.defineProperty(Ct(n), "enabled", {
                        get: function e() {
                            return r
                        },
                        set: function e(t) {
                            if (typeof t !== "boolean" || t === r) {
                                return
                            }
                            r = t;
                            this.trigger("enabledchange")
                        }
                    });
                    if (i.enabled) {
                        n.enabled = i.enabled
                    }
                    n.loaded_ = true;
                    return n
                }
                return t
            }(gn);
            var Vn = function(e) {
                Ot(t, e);
                function t(t) {
                    var n;
                    if (t === void 0) {
                        t = {}
                    }
                    var i = St(t, {
                        kind: fn[t.kind] || ""
                    });
                    n = e.call(this, i) || this;
                    var r = false;
                    Object.defineProperty(Ct(n), "selected", {
                        get: function e() {
                            return r
                        },
                        set: function e(t) {
                            if (typeof t !== "boolean" || t === r) {
                                return
                            }
                            r = t;
                            this.trigger("selectedchange")
                        }
                    });
                    if (i.selected) {
                        n.selected = i.selected
                    }
                    return n
                }
                return t
            }(gn);
            var qn = 0;
            var Hn = 1;
            var Gn = 2;
            var Wn = 3;
            var Kn = function(e) {
                Ot(t, e);
                function t(t) {
                    var n;
                    if (t === void 0) {
                        t = {}
                    }
                    n = e.call(this) || this;
                    var i;
                    var r = new Bn(t);
                    n.kind = r.kind;
                    n.src = r.src;
                    n.srclang = r.language;
                    n.label = r.label;
                    n["default"] = r["default"];
                    Object.defineProperties(Ct(n), {
                        readyState: {
                            get: function e() {
                                return i
                            }
                        },
                        track: {
                            get: function e() {
                                return r
                            }
                        }
                    });
                    i = qn;
                    r.addEventListener("loadeddata", function() {
                        i = Gn;
                        n.trigger({
                            type: "load",
                            target: Ct(n)
                        })
                    });
                    return n
                }
                return t
            }(it);
            Kn.prototype.allowedEvents_ = {
                load: "load"
            };
            Kn.NONE = qn;
            Kn.LOADING = Hn;
            Kn.LOADED = Gn;
            Kn.ERROR = Wn;
            var zn = {
                audio: {
                    ListClass: sn,
                    TrackClass: Fn,
                    capitalName: "Audio"
                },
                video: {
                    ListClass: un,
                    TrackClass: Vn,
                    capitalName: "Video"
                },
                text: {
                    ListClass: ln,
                    TrackClass: Bn,
                    capitalName: "Text"
                }
            };
            Object.keys(zn).forEach(function(e) {
                zn[e].getterName = e + "Tracks";
                zn[e].privateName = e + "Tracks_"
            });
            var Yn = {
                remoteText: {
                    ListClass: ln,
                    TrackClass: Bn,
                    capitalName: "RemoteText",
                    getterName: "remoteTextTracks",
                    privateName: "remoteTextTracks_"
                },
                remoteTextEl: {
                    ListClass: dn,
                    TrackClass: Kn,
                    capitalName: "RemoteTextTrackEls",
                    getterName: "remoteTextTrackEls",
                    privateName: "remoteTextTrackEls_"
                }
            };
            var Xn = b({}, zn, Yn);
            Yn.names = Object.keys(Yn);
            zn.names = Object.keys(zn);
            Xn.names = [].concat(Yn.names).concat(zn.names);
            var Qn = {};
            function Zn(e, t, n, i, r) {
                if (r === void 0) {
                    r = {}
                }
                var a = e.textTracks();
                r.kind = t;
                if (n) {
                    r.label = n
                }
                if (i) {
                    r.language = i
                }
                r.tech = e;
                var s = new Xn.text.TrackClass(r);
                a.addTrack(s);
                return s
            }
            var Jn = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    if (t === void 0) {
                        t = {}
                    }
                    if (n === void 0) {
                        n = function e() {}
                    }
                    t.reportTouchActivity = false;
                    i = e.call(this, null, t, n) || this;
                    i.onDurationChange_ = function(e) {
                        return i.onDurationChange(e)
                    }
                    ;
                    i.trackProgress_ = function(e) {
                        return i.trackProgress(e)
                    }
                    ;
                    i.trackCurrentTime_ = function(e) {
                        return i.trackCurrentTime(e)
                    }
                    ;
                    i.stopTrackingCurrentTime_ = function(e) {
                        return i.stopTrackingCurrentTime(e)
                    }
                    ;
                    i.disposeSourceHandler_ = function(e) {
                        return i.disposeSourceHandler(e)
                    }
                    ;
                    i.hasStarted_ = false;
                    i.on("playing", function() {
                        this.hasStarted_ = true
                    });
                    i.on("loadstart", function() {
                        this.hasStarted_ = false
                    });
                    Xn.names.forEach(function(e) {
                        var n = Xn[e];
                        if (t && t[n.getterName]) {
                            i[n.privateName] = t[n.getterName]
                        }
                    });
                    if (!i.featuresProgressEvents) {
                        i.manualProgressOn()
                    }
                    if (!i.featuresTimeupdateEvents) {
                        i.manualTimeUpdatesOn()
                    }
                    ["Text", "Audio", "Video"].forEach(function(e) {
                        if (t["native" + e + "Tracks"] === false) {
                            i["featuresNative" + e + "Tracks"] = false
                        }
                    });
                    if (t.nativeCaptions === false || t.nativeTextTracks === false) {
                        i.featuresNativeTextTracks = false
                    } else if (t.nativeCaptions === true || t.nativeTextTracks === true) {
                        i.featuresNativeTextTracks = true
                    }
                    if (!i.featuresNativeTextTracks) {
                        i.emulateTextTracks()
                    }
                    i.preloadTextTracks = t.preloadTextTracks !== false;
                    i.autoRemoteTextTracks_ = new Xn.text.ListClass;
                    i.initTrackListeners();
                    if (!t.nativeControlsForTouch) {
                        i.emitTapEvents()
                    }
                    if (i.constructor) {
                        i.name_ = i.constructor.name || "Unknown Tech"
                    }
                    return i
                }
                var n = t.prototype;
                n.triggerSourceset = function e(t) {
                    var n = this;
                    if (!this.isReady_) {
                        this.one("ready", function() {
                            return n.setTimeout(function() {
                                return n.triggerSourceset(t)
                            }, 1)
                        })
                    }
                    this.trigger({
                        src: t,
                        type: "sourceset"
                    })
                }
                ;
                n.manualProgressOn = function e() {
                    this.on("durationchange", this.onDurationChange_);
                    this.manualProgress = true;
                    this.one("ready", this.trackProgress_)
                }
                ;
                n.manualProgressOff = function e() {
                    this.manualProgress = false;
                    this.stopTrackingProgress();
                    this.off("durationchange", this.onDurationChange_)
                }
                ;
                n.trackProgress = function e(t) {
                    this.stopTrackingProgress();
                    this.progressInterval = this.setInterval(et(this, function() {
                        var e = this.bufferedPercent();
                        if (this.bufferedPercent_ !== e) {
                            this.trigger("progress")
                        }
                        this.bufferedPercent_ = e;
                        if (e === 1) {
                            this.stopTrackingProgress()
                        }
                    }), 500)
                }
                ;
                n.onDurationChange = function e(t) {
                    this.duration_ = this.duration()
                }
                ;
                n.buffered = function e() {
                    return Rt(0, 0)
                }
                ;
                n.bufferedPercent = function e() {
                    return Mt(this.buffered(), this.duration_)
                }
                ;
                n.stopTrackingProgress = function e() {
                    this.clearInterval(this.progressInterval)
                }
                ;
                n.manualTimeUpdatesOn = function e() {
                    this.manualTimeUpdates = true;
                    this.on("play", this.trackCurrentTime_);
                    this.on("pause", this.stopTrackingCurrentTime_)
                }
                ;
                n.manualTimeUpdatesOff = function e() {
                    this.manualTimeUpdates = false;
                    this.stopTrackingCurrentTime();
                    this.off("play", this.trackCurrentTime_);
                    this.off("pause", this.stopTrackingCurrentTime_)
                }
                ;
                n.trackCurrentTime = function e() {
                    if (this.currentTimeInterval) {
                        this.stopTrackingCurrentTime()
                    }
                    this.currentTimeInterval = this.setInterval(function() {
                        this.trigger({
                            type: "timeupdate",
                            target: this,
                            manuallyTriggered: true
                        })
                    }, 250)
                }
                ;
                n.stopTrackingCurrentTime = function e() {
                    this.clearInterval(this.currentTimeInterval);
                    this.trigger({
                        type: "timeupdate",
                        target: this,
                        manuallyTriggered: true
                    })
                }
                ;
                n.dispose = function t() {
                    this.clearTracks(zn.names);
                    if (this.manualProgress) {
                        this.manualProgressOff()
                    }
                    if (this.manualTimeUpdates) {
                        this.manualTimeUpdatesOff()
                    }
                    e.prototype.dispose.call(this)
                }
                ;
                n.clearTracks = function e(t) {
                    var n = this;
                    t = [].concat(t);
                    t.forEach(function(e) {
                        var t = n[e + "Tracks"]() || [];
                        var i = t.length;
                        while (i--) {
                            var r = t[i];
                            if (e === "text") {
                                n.removeRemoteTextTrack(r)
                            }
                            t.removeTrack(r)
                        }
                    })
                }
                ;
                n.cleanupAutoTextTracks = function e() {
                    var t = this.autoRemoteTextTracks_ || [];
                    var n = t.length;
                    while (n--) {
                        var i = t[n];
                        this.removeRemoteTextTrack(i)
                    }
                }
                ;
                n.reset = function e() {}
                ;
                n.crossOrigin = function e() {}
                ;
                n.setCrossOrigin = function e() {}
                ;
                n.error = function e(t) {
                    if (t !== undefined) {
                        this.error_ = new Ut(t);
                        this.trigger("error")
                    }
                    return this.error_
                }
                ;
                n.played = function e() {
                    if (this.hasStarted_) {
                        return Rt(0, 0)
                    }
                    return Rt()
                }
                ;
                n.play = function e() {}
                ;
                n.setScrubbing = function e() {}
                ;
                n.scrubbing = function e() {}
                ;
                n.setCurrentTime = function e() {
                    if (this.manualTimeUpdates) {
                        this.trigger({
                            type: "timeupdate",
                            target: this,
                            manuallyTriggered: true
                        })
                    }
                }
                ;
                n.initTrackListeners = function e() {
                    var t = this;
                    zn.names.forEach(function(e) {
                        var n = zn[e];
                        var i = function n() {
                            t.trigger(e + "trackchange")
                        };
                        var r = t[n.getterName]();
                        r.addEventListener("removetrack", i);
                        r.addEventListener("addtrack", i);
                        t.on("dispose", function() {
                            r.removeEventListener("removetrack", i);
                            r.removeEventListener("addtrack", i)
                        })
                    })
                }
                ;
                n.addWebVttScript_ = function e() {
                    var t = this;
                    if (r.WebVTT) {
                        return
                    }
                    if (u.body.contains(this.el())) {
                        if (!this.options_["vtt.js"] && I(Qn) && Object.keys(Qn).length > 0) {
                            this.trigger("vttjsloaded");
                            return
                        }
                        var n = u.createElement("script");
                        n.src = this.options_["vtt.js"] || "https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js";
                        n.onload = function() {
                            t.trigger("vttjsloaded")
                        }
                        ;
                        n.onerror = function() {
                            t.trigger("vttjserror")
                        }
                        ;
                        this.on("dispose", function() {
                            n.onload = null;
                            n.onerror = null
                        });
                        r.WebVTT = true;
                        this.el().parentNode.appendChild(n)
                    } else {
                        this.ready(this.addWebVttScript_)
                    }
                }
                ;
                n.emulateTextTracks = function e() {
                    var t = this;
                    var n = this.textTracks();
                    var i = this.remoteTextTracks();
                    var r = function e(t) {
                        return n.addTrack(t.track)
                    };
                    var a = function e(t) {
                        return n.removeTrack(t.track)
                    };
                    i.on("addtrack", r);
                    i.on("removetrack", a);
                    this.addWebVttScript_();
                    var s = function e() {
                        return t.trigger("texttrackchange")
                    };
                    var o = function e() {
                        s();
                        for (var t = 0; t < n.length; t++) {
                            var i = n[t];
                            i.removeEventListener("cuechange", s);
                            if (i.mode === "showing") {
                                i.addEventListener("cuechange", s)
                            }
                        }
                    };
                    o();
                    n.addEventListener("change", o);
                    n.addEventListener("addtrack", o);
                    n.addEventListener("removetrack", o);
                    this.on("dispose", function() {
                        i.off("addtrack", r);
                        i.off("removetrack", a);
                        n.removeEventListener("change", o);
                        n.removeEventListener("addtrack", o);
                        n.removeEventListener("removetrack", o);
                        for (var e = 0; e < n.length; e++) {
                            var t = n[e];
                            t.removeEventListener("cuechange", s)
                        }
                    })
                }
                ;
                n.addTextTrack = function e(t, n, i) {
                    if (!t) {
                        throw new Error("TextTrack kind is required but was not provided")
                    }
                    return Zn(this, t, n, i)
                }
                ;
                n.createRemoteTextTrack = function e(t) {
                    var n = St(t, {
                        tech: this
                    });
                    return new Yn.remoteTextEl.TrackClass(n)
                }
                ;
                n.addRemoteTextTrack = function e(t, n) {
                    var i = this;
                    if (t === void 0) {
                        t = {}
                    }
                    var r = this.createRemoteTextTrack(t);
                    if (n !== true && n !== false) {
                        y.warn('Calling addRemoteTextTrack without explicitly setting the "manualCleanup" parameter to `true` is deprecated and default to `false` in future version of video.js');
                        n = true
                    }
                    this.remoteTextTrackEls().addTrackElement_(r);
                    this.remoteTextTracks().addTrack(r.track);
                    if (n !== true) {
                        this.ready(function() {
                            return i.autoRemoteTextTracks_.addTrack(r.track)
                        })
                    }
                    return r
                }
                ;
                n.removeRemoteTextTrack = function e(t) {
                    var n = this.remoteTextTrackEls().getTrackElementByTrack_(t);
                    this.remoteTextTrackEls().removeTrackElement_(n);
                    this.remoteTextTracks().removeTrack(t);
                    this.autoRemoteTextTracks_.removeTrack(t)
                }
                ;
                n.getVideoPlaybackQuality = function e() {
                    return {}
                }
                ;
                n.requestPictureInPicture = function e() {
                    var t = this.options_.Promise || r.Promise;
                    if (t) {
                        return t.reject()
                    }
                }
                ;
                n.disablePictureInPicture = function e() {
                    return true
                }
                ;
                n.setDisablePictureInPicture = function e() {}
                ;
                n.setPoster = function e() {}
                ;
                n.playsinline = function e() {}
                ;
                n.setPlaysinline = function e() {}
                ;
                n.overrideNativeAudioTracks = function e() {}
                ;
                n.overrideNativeVideoTracks = function e() {}
                ;
                n.canPlayType = function e() {
                    return ""
                }
                ;
                t.canPlayType = function e() {
                    return ""
                }
                ;
                t.canPlaySource = function e(n, i) {
                    return t.canPlayType(n.type)
                }
                ;
                t.isTech = function e(n) {
                    return n.prototype instanceof t || n instanceof t || n === t
                }
                ;
                t.registerTech = function e(n, i) {
                    if (!t.techs_) {
                        t.techs_ = {}
                    }
                    if (!t.isTech(i)) {
                        throw new Error("Tech " + n + " must be a Tech")
                    }
                    if (!t.canPlayType) {
                        throw new Error("Techs must have a static canPlayType method on them")
                    }
                    if (!t.canPlaySource) {
                        throw new Error("Techs must have a static canPlaySource method on them")
                    }
                    n = _t(n);
                    t.techs_[n] = i;
                    t.techs_[yt(n)] = i;
                    if (n !== "Tech") {
                        t.defaultTechOrder_.push(n)
                    }
                    return i
                }
                ;
                t.getTech = function e(n) {
                    if (!n) {
                        return
                    }
                    if (t.techs_ && t.techs_[n]) {
                        return t.techs_[n]
                    }
                    n = _t(n);
                    if (r && r.videojs && r.videojs[n]) {
                        y.warn("The " + n + " tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)");
                        return r.videojs[n]
                    }
                }
                ;
                return t
            }(Pt);
            Xn.names.forEach(function(e) {
                var t = Xn[e];
                Jn.prototype[t.getterName] = function() {
                    this[t.privateName] = this[t.privateName] || new t.ListClass;
                    return this[t.privateName]
                }
            });
            Jn.prototype.featuresVolumeControl = true;
            Jn.prototype.featuresMuteControl = true;
            Jn.prototype.featuresFullscreenResize = false;
            Jn.prototype.featuresPlaybackRate = false;
            Jn.prototype.featuresProgressEvents = false;
            Jn.prototype.featuresSourceset = false;
            Jn.prototype.featuresTimeupdateEvents = false;
            Jn.prototype.featuresNativeTextTracks = false;
            Jn.withSourceHandlers = function(e) {
                e.registerSourceHandler = function(t, n) {
                    var i = e.sourceHandlers;
                    if (!i) {
                        i = e.sourceHandlers = []
                    }
                    if (n === undefined) {
                        n = i.length
                    }
                    i.splice(n, 0, t)
                }
                ;
                e.canPlayType = function(t) {
                    var n = e.sourceHandlers || [];
                    var i;
                    for (var r = 0; r < n.length; r++) {
                        i = n[r].canPlayType(t);
                        if (i) {
                            return i
                        }
                    }
                    return ""
                }
                ;
                e.selectSourceHandler = function(t, n) {
                    var i = e.sourceHandlers || [];
                    var r;
                    for (var a = 0; a < i.length; a++) {
                        r = i[a].canHandleSource(t, n);
                        if (r) {
                            return i[a]
                        }
                    }
                    return null
                }
                ;
                e.canPlaySource = function(t, n) {
                    var i = e.selectSourceHandler(t, n);
                    if (i) {
                        return i.canHandleSource(t, n)
                    }
                    return ""
                }
                ;
                var t = ["seekable", "seeking", "duration"];
                t.forEach(function(e) {
                    var t = this[e];
                    if (typeof t !== "function") {
                        return
                    }
                    this[e] = function() {
                        if (this.sourceHandler_ && this.sourceHandler_[e]) {
                            return this.sourceHandler_[e].apply(this.sourceHandler_, arguments)
                        }
                        return t.apply(this, arguments)
                    }
                }, e.prototype);
                e.prototype.setSource = function(t) {
                    var n = e.selectSourceHandler(t, this.options_);
                    if (!n) {
                        if (e.nativeSourceHandler) {
                            n = e.nativeSourceHandler
                        } else {
                            y.error("No source handler found for the current source.")
                        }
                    }
                    this.disposeSourceHandler();
                    this.off("dispose", this.disposeSourceHandler_);
                    if (n !== e.nativeSourceHandler) {
                        this.currentSource_ = t
                    }
                    this.sourceHandler_ = n.handleSource(t, this, this.options_);
                    this.one("dispose", this.disposeSourceHandler_)
                }
                ;
                e.prototype.disposeSourceHandler = function() {
                    if (this.currentSource_) {
                        this.clearTracks(["audio", "video"]);
                        this.currentSource_ = null
                    }
                    this.cleanupAutoTextTracks();
                    if (this.sourceHandler_) {
                        if (this.sourceHandler_.dispose) {
                            this.sourceHandler_.dispose()
                        }
                        this.sourceHandler_ = null
                    }
                }
            }
            ;
            Pt.registerComponent("Tech", Jn);
            Jn.registerTech("Tech", Jn);
            Jn.defaultTechOrder_ = [];
            var $n = {};
            var ei = {};
            var ti = {};
            function ni(e, t) {
                $n[e] = $n[e] || [];
                $n[e].push(t)
            }
            function ii(e, t, n) {
                e.setTimeout(function() {
                    return vi(t, $n[t.type], n, e)
                }, 1)
            }
            function ri(e, t) {
                e.forEach(function(e) {
                    return e.setTech && e.setTech(t)
                })
            }
            function ai(e, t, n) {
                return e.reduceRight(ci(n), t[n]())
            }
            function si(e, t, n, i) {
                return t[n](e.reduce(ci(n), i))
            }
            function oi(e, t, n, i) {
                if (i === void 0) {
                    i = null
                }
                var r = "call" + _t(n);
                var a = e.reduce(ci(r), i);
                var s = a === ti;
                var o = s ? null : t[n](a);
                fi(e, n, o, s);
                return o
            }
            var ui = {
                buffered: 1,
                currentTime: 1,
                duration: 1,
                muted: 1,
                played: 1,
                paused: 1,
                seekable: 1,
                volume: 1
            };
            var li = {
                setCurrentTime: 1,
                setMuted: 1,
                setVolume: 1
            };
            var di = {
                play: 1,
                pause: 1
            };
            function ci(e) {
                return function(t, n) {
                    if (t === ti) {
                        return ti
                    }
                    if (n[e]) {
                        return n[e](t)
                    }
                    return t
                }
            }
            function fi(e, t, n, i) {
                for (var r = e.length - 1; r >= 0; r--) {
                    var a = e[r];
                    if (a[t]) {
                        a[t](i, n)
                    }
                }
            }
            function pi(e) {
                ei[e.id()] = null
            }
            function hi(e, t) {
                var n = ei[e.id()];
                var i = null;
                if (n === undefined || n === null) {
                    i = t(e);
                    ei[e.id()] = [[t, i]];
                    return i
                }
                for (var r = 0; r < n.length; r++) {
                    var a = n[r]
                      , s = a[0]
                      , o = a[1];
                    if (s !== t) {
                        continue
                    }
                    i = o
                }
                if (i === null) {
                    i = t(e);
                    n.push([t, i])
                }
                return i
            }
            function vi(e, t, n, i, r, a) {
                if (e === void 0) {
                    e = {}
                }
                if (t === void 0) {
                    t = []
                }
                if (r === void 0) {
                    r = []
                }
                if (a === void 0) {
                    a = false
                }
                var s = t
                  , o = s[0]
                  , u = s.slice(1);
                if (typeof o === "string") {
                    vi(e, $n[o], n, i, r, a)
                } else if (o) {
                    var l = hi(i, o);
                    if (!l.setSource) {
                        r.push(l);
                        return vi(e, u, n, i, r, a)
                    }
                    l.setSource(E({}, e), function(t, s) {
                        if (t) {
                            return vi(e, u, n, i, r, a)
                        }
                        r.push(l);
                        vi(s, e.type === s.type ? u : $n[s.type], n, i, r, a)
                    })
                } else if (u.length) {
                    vi(e, u, n, i, r, a)
                } else if (a) {
                    n(e, r)
                } else {
                    vi(e, $n["*"], n, i, r, true)
                }
            }
            var gi = {
                opus: "video/ogg",
                ogv: "video/ogg",
                mp4: "video/mp4",
                mov: "video/mp4",
                m4v: "video/mp4",
                mkv: "video/x-matroska",
                m4a: "audio/mp4",
                mp3: "audio/mpeg",
                aac: "audio/aac",
                caf: "audio/x-caf",
                flac: "audio/flac",
                oga: "audio/ogg",
                wav: "audio/wav",
                m3u8: "application/x-mpegURL",
                jpg: "image/jpeg",
                jpeg: "image/jpeg",
                gif: "image/gif",
                png: "image/png",
                svg: "image/svg+xml",
                webp: "image/webp"
            };
            var mi = function e(t) {
                if (t === void 0) {
                    t = ""
                }
                var n = _n(t);
                var i = gi[n.toLowerCase()];
                return i || ""
            };
            var yi = function e(t, n) {
                if (!n) {
                    return ""
                }
                if (t.cache_.source.src === n && t.cache_.source.type) {
                    return t.cache_.source.type
                }
                var i = t.cache_.sources.filter(function(e) {
                    return e.src === n
                });
                if (i.length) {
                    return i[0].type
                }
                var r = t.$$("source");
                for (var a = 0; a < r.length; a++) {
                    var s = r[a];
                    if (s.type && s.src && s.src === n) {
                        return s.type
                    }
                }
                return mi(n)
            };
            var _i = function e(t) {
                if (Array.isArray(t)) {
                    var n = [];
                    t.forEach(function(t) {
                        t = e(t);
                        if (Array.isArray(t)) {
                            n = n.concat(t)
                        } else if (P(t)) {
                            n.push(t)
                        }
                    });
                    t = n
                } else if (typeof t === "string" && t.trim()) {
                    t = [bi({
                        src: t
                    })]
                } else if (P(t) && typeof t.src === "string" && t.src && t.src.trim()) {
                    t = [bi(t)]
                } else {
                    t = []
                }
                return t
            };
            function bi(e) {
                if (!e.type) {
                    var t = mi(e.src);
                    if (t) {
                        e.type = t
                    }
                }
                return e
            }
            var Si = function(e) {
                Ot(t, e);
                function t(t, n, i) {
                    var r;
                    var a = St({
                        createEl: false
                    }, n);
                    r = e.call(this, t, a, i) || this;
                    if (!n.playerOptions.sources || n.playerOptions.sources.length === 0) {
                        for (var s = 0, o = n.playerOptions.techOrder; s < o.length; s++) {
                            var u = _t(o[s]);
                            var l = Jn.getTech(u);
                            if (!u) {
                                l = Pt.getComponent(u)
                            }
                            if (l && l.isSupported()) {
                                t.loadTech_(u);
                                break
                            }
                        }
                    } else {
                        t.src(n.playerOptions.sources)
                    }
                    return r
                }
                return t
            }(Pt);
            Pt.registerComponent("MediaLoader", Si);
            var Ai = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.handleMouseOver_ = function(e) {
                        return i.handleMouseOver(e)
                    }
                    ;
                    i.handleMouseOut_ = function(e) {
                        return i.handleMouseOut(e)
                    }
                    ;
                    i.handleClick_ = function(e) {
                        return i.handleClick(e)
                    }
                    ;
                    i.handleKeyDown_ = function(e) {
                        return i.handleKeyDown(e)
                    }
                    ;
                    i.emitTapEvents();
                    i.enable();
                    return i
                }
                var n = t.prototype;
                n.createEl = function t(n, i, r) {
                    if (n === void 0) {
                        n = "div"
                    }
                    if (i === void 0) {
                        i = {}
                    }
                    if (r === void 0) {
                        r = {}
                    }
                    i = E({
                        innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
                        className: this.buildCSSClass(),
                        tabIndex: 0
                    }, i);
                    if (n === "button") {
                        y.error("Creating a ClickableComponent with an HTML element of " + n + " is not supported; use a Button instead.")
                    }
                    r = E({
                        role: "button"
                    }, r);
                    this.tabIndex_ = i.tabIndex;
                    var a = e.prototype.createEl.call(this, n, i, r);
                    this.createControlTextEl(a);
                    return a
                }
                ;
                n.dispose = function t() {
                    this.controlTextEl_ = null;
                    e.prototype.dispose.call(this)
                }
                ;
                n.createControlTextEl = function e(t) {
                    this.controlTextEl_ = ie("span", {
                        className: "vjs-control-text"
                    }, {
                        "aria-live": "polite"
                    });
                    if (t) {
                        t.appendChild(this.controlTextEl_)
                    }
                    this.controlText(this.controlText_, t);
                    return this.controlTextEl_
                }
                ;
                n.controlText = function e(t, n) {
                    if (n === void 0) {
                        n = this.el()
                    }
                    if (t === undefined) {
                        return this.controlText_ || "Need Text"
                    }
                    var i = this.localize(t);
                    this.controlText_ = t;
                    re(this.controlTextEl_, i);
                    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {
                        n.setAttribute("title", i)
                    }
                }
                ;
                n.buildCSSClass = function t() {
                    return "vjs-control vjs-button " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.enable = function e() {
                    if (!this.enabled_) {
                        this.enabled_ = true;
                        this.removeClass("vjs-disabled");
                        this.el_.setAttribute("aria-disabled", "false");
                        if (typeof this.tabIndex_ !== "undefined") {
                            this.el_.setAttribute("tabIndex", this.tabIndex_)
                        }
                        this.on(["tap", "click"], this.handleClick_);
                        this.on("keydown", this.handleKeyDown_)
                    }
                }
                ;
                n.disable = function e() {
                    this.enabled_ = false;
                    this.addClass("vjs-disabled");
                    this.el_.setAttribute("aria-disabled", "true");
                    if (typeof this.tabIndex_ !== "undefined") {
                        this.el_.removeAttribute("tabIndex")
                    }
                    this.off("mouseover", this.handleMouseOver_);
                    this.off("mouseout", this.handleMouseOut_);
                    this.off(["tap", "click"], this.handleClick_);
                    this.off("keydown", this.handleKeyDown_)
                }
                ;
                n.handleLanguagechange = function e() {
                    this.controlText(this.controlText_)
                }
                ;
                n.handleClick = function e(t) {
                    if (this.options_.clickHandler) {
                        this.options_.clickHandler.call(this, arguments)
                    }
                }
                ;
                n.handleKeyDown = function t(n) {
                    if (Yt.isEventKey(n, "Space") || Yt.isEventKey(n, "Enter")) {
                        n.preventDefault();
                        n.stopPropagation();
                        this.trigger("click")
                    } else {
                        e.prototype.handleKeyDown.call(this, n)
                    }
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("ClickableComponent", Ai);
            var Ti = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.update();
                    i.update_ = function(e) {
                        return i.update(e)
                    }
                    ;
                    t.on("posterchange", i.update_);
                    return i
                }
                var n = t.prototype;
                n.dispose = function t() {
                    this.player().off("posterchange", this.update_);
                    e.prototype.dispose.call(this)
                }
                ;
                n.createEl = function e() {
                    var t = ie("div", {
                        className: "vjs-poster",
                        tabIndex: -1
                    });
                    return t
                }
                ;
                n.update = function e(t) {
                    var n = this.player().poster();
                    this.setSrc(n);
                    if (n) {
                        this.show()
                    } else {
                        this.hide()
                    }
                }
                ;
                n.setSrc = function e(t) {
                    var n = "";
                    if (t) {
                        n = 'url("' + t + '")'
                    }
                    this.el_.style.backgroundImage = n
                }
                ;
                n.handleClick = function e(t) {
                    if (!this.player_.controls()) {
                        return
                    }
                    var n = this.player_.usingPlugin("eme") && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;
                    if (this.player_.tech(true) && !((V || U) && n)) {
                        this.player_.tech(true).focus()
                    }
                    if (this.player_.paused()) {
                        Ht(this.player_.play())
                    } else {
                        this.player_.pause()
                    }
                }
                ;
                return t
            }(Ai);
            Pt.registerComponent("PosterImage", Ti);
            var ki = "#222";
            var Ei = "#ccc";
            var Pi = {
                monospace: "monospace",
                sansSerif: "sans-serif",
                serif: "serif",
                monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace',
                monospaceSerif: '"Courier New", monospace',
                proportionalSansSerif: "sans-serif",
                proportionalSerif: "serif",
                casual: '"Comic Sans MS", Impact, fantasy',
                script: '"Monotype Corsiva", cursive',
                smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif'
            };
            function Ii(e, t) {
                var n;
                if (e.length === 4) {
                    n = e[1] + e[1] + e[2] + e[2] + e[3] + e[3]
                } else if (e.length === 7) {
                    n = e.slice(1)
                } else {
                    throw new Error("Invalid color code provided, " + e + "; must be formatted as e.g. #f0e or #f604e2.")
                }
                return "rgba(" + parseInt(n.slice(0, 2), 16) + "," + parseInt(n.slice(2, 4), 16) + "," + parseInt(n.slice(4, 6), 16) + "," + t + ")"
            }
            function Ci(e, t, n) {
                try {
                    e.style[t] = n
                } catch (e) {
                    return
                }
            }
            var wi = function(e) {
                Ot(t, e);
                function t(t, n, i) {
                    var a;
                    a = e.call(this, t, n, i) || this;
                    var s = function e(t) {
                        return a.updateDisplay(t)
                    };
                    t.on("loadstart", function(e) {
                        return a.toggleDisplay(e)
                    });
                    t.on("texttrackchange", s);
                    t.on("loadedmetadata", function(e) {
                        return a.preselectTrack(e)
                    });
                    t.ready(et(Ct(a), function() {
                        if (t.tech_ && t.tech_.featuresNativeTextTracks) {
                            this.hide();
                            return
                        }
                        t.on("fullscreenchange", s);
                        t.on("playerresize", s);
                        r.addEventListener("orientationchange", s);
                        t.on("dispose", function() {
                            return r.removeEventListener("orientationchange", s)
                        });
                        var e = this.options_.playerOptions.tracks || [];
                        for (var n = 0; n < e.length; n++) {
                            this.player_.addRemoteTextTrack(e[n], true)
                        }
                        this.preselectTrack()
                    }));
                    return a
                }
                var n = t.prototype;
                n.preselectTrack = function e() {
                    var t = {
                        captions: 1,
                        subtitles: 1
                    };
                    var n = this.player_.textTracks();
                    var i = this.player_.cache_.selectedLanguage;
                    var r;
                    var a;
                    var s;
                    for (var o = 0; o < n.length; o++) {
                        var u = n[o];
                        if (i && i.enabled && i.language && i.language === u.language && u.kind in t) {
                            if (u.kind === i.kind) {
                                s = u
                            } else if (!s) {
                                s = u
                            }
                        } else if (i && !i.enabled) {
                            s = null;
                            r = null;
                            a = null
                        } else if (u["default"]) {
                            if (u.kind === "descriptions" && !r) {
                                r = u
                            } else if (u.kind in t && !a) {
                                a = u
                            }
                        }
                    }
                    if (s) {
                        s.mode = "showing"
                    } else if (a) {
                        a.mode = "showing"
                    } else if (r) {
                        r.mode = "showing"
                    }
                }
                ;
                n.toggleDisplay = function e() {
                    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {
                        this.hide()
                    } else {
                        this.show()
                    }
                }
                ;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-text-track-display"
                    }, {
                        "aria-live": "off",
                        "aria-atomic": "true"
                    })
                }
                ;
                n.clearDisplay = function e() {
                    if (typeof r.WebVTT === "function") {
                        r.WebVTT.processCues(r, [], this.el_)
                    }
                }
                ;
                n.updateDisplay = function e() {
                    var t = this.player_.textTracks();
                    var n = this.options_.allowMultipleShowingTracks;
                    this.clearDisplay();
                    if (n) {
                        var i = [];
                        for (var r = 0; r < t.length; ++r) {
                            var a = t[r];
                            if (a.mode !== "showing") {
                                continue
                            }
                            i.push(a)
                        }
                        this.updateForTrack(i);
                        return
                    }
                    var s = null;
                    var o = null;
                    var u = t.length;
                    while (u--) {
                        var l = t[u];
                        if (l.mode === "showing") {
                            if (l.kind === "descriptions") {
                                s = l
                            } else {
                                o = l
                            }
                        }
                    }
                    if (o) {
                        if (this.getAttribute("aria-live") !== "off") {
                            this.setAttribute("aria-live", "off")
                        }
                        this.updateForTrack(o)
                    } else if (s) {
                        if (this.getAttribute("aria-live") !== "assertive") {
                            this.setAttribute("aria-live", "assertive")
                        }
                        this.updateForTrack(s)
                    }
                }
                ;
                n.updateDisplayState = function e(t) {
                    var n = this.player_.textTrackSettings.getValues();
                    var i = t.activeCues;
                    var a = i.length;
                    while (a--) {
                        var s = i[a];
                        if (!s) {
                            continue
                        }
                        var o = s.displayState;
                        if (n.color) {
                            o.firstChild.style.color = n.color
                        }
                        if (n.textOpacity) {
                            Ci(o.firstChild, "color", Ii(n.color || "#fff", n.textOpacity))
                        }
                        if (n.backgroundColor) {
                            o.firstChild.style.backgroundColor = n.backgroundColor
                        }
                        if (n.backgroundOpacity) {
                            Ci(o.firstChild, "backgroundColor", Ii(n.backgroundColor || "#000", n.backgroundOpacity))
                        }
                        if (n.windowColor) {
                            if (n.windowOpacity) {
                                Ci(o, "backgroundColor", Ii(n.windowColor, n.windowOpacity))
                            } else {
                                o.style.backgroundColor = n.windowColor
                            }
                        }
                        if (n.edgeStyle) {
                            if (n.edgeStyle === "dropshadow") {
                                o.firstChild.style.textShadow = "2px 2px 3px " + ki + ", 2px 2px 4px " + ki + ", 2px 2px 5px " + ki
                            } else if (n.edgeStyle === "raised") {
                                o.firstChild.style.textShadow = "1px 1px " + ki + ", 2px 2px " + ki + ", 3px 3px " + ki
                            } else if (n.edgeStyle === "depressed") {
                                o.firstChild.style.textShadow = "1px 1px " + Ei + ", 0 1px " + Ei + ", -1px -1px " + ki + ", 0 -1px " + ki
                            } else if (n.edgeStyle === "uniform") {
                                o.firstChild.style.textShadow = "0 0 4px " + ki + ", 0 0 4px " + ki + ", 0 0 4px " + ki + ", 0 0 4px " + ki
                            }
                        }
                        if (n.fontPercent && n.fontPercent !== 1) {
                            var u = r.parseFloat(o.style.fontSize);
                            o.style.fontSize = u * n.fontPercent + "px";
                            o.style.height = "auto";
                            o.style.top = "auto"
                        }
                        if (n.fontFamily && n.fontFamily !== "default") {
                            if (n.fontFamily === "small-caps") {
                                o.firstChild.style.fontVariant = "small-caps"
                            } else {
                                o.firstChild.style.fontFamily = Pi[n.fontFamily]
                            }
                        }
                    }
                }
                ;
                n.updateForTrack = function e(t) {
                    if (!Array.isArray(t)) {
                        t = [t]
                    }
                    if (typeof r.WebVTT !== "function" || t.every(function(e) {
                        return !e.activeCues
                    })) {
                        return
                    }
                    var n = [];
                    for (var i = 0; i < t.length; ++i) {
                        var a = t[i];
                        for (var s = 0; s < a.activeCues.length; ++s) {
                            n.push(a.activeCues[s])
                        }
                    }
                    r.WebVTT.processCues(r, n, this.el_);
                    for (var o = 0; o < t.length; ++o) {
                        var u = t[o];
                        for (var l = 0; l < u.activeCues.length; ++l) {
                            var d = u.activeCues[l].displayState;
                            oe(d, "vjs-text-track-cue");
                            oe(d, "vjs-text-track-cue-" + (u.language ? u.language : o))
                        }
                        if (this.player_.textTrackSettings) {
                            this.updateDisplayState(u)
                        }
                    }
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("TextTrackDisplay", wi);
            var ji = function(e) {
                Ot(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var n = t.prototype;
                n.createEl = function t() {
                    var n = this.player_.isAudio();
                    var i = this.localize(n ? "Audio Player" : "Video Player");
                    var r = ie("span", {
                        className: "vjs-control-text",
                        innerHTML: this.localize("{1} is loading.", [i])
                    });
                    var a = e.prototype.createEl.call(this, "div", {
                        className: "vjs-loading-spinner",
                        dir: "ltr"
                    });
                    a.appendChild(r);
                    return a
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("LoadingSpinner", ji);
            var Li = function(e) {
                Ot(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var n = t.prototype;
                n.createEl = function e(t, n, i) {
                    if (n === void 0) {
                        n = {}
                    }
                    if (i === void 0) {
                        i = {}
                    }
                    t = "button";
                    n = E({
                        innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
                        className: this.buildCSSClass()
                    }, n);
                    i = E({
                        type: "button"
                    }, i);
                    var r = Pt.prototype.createEl.call(this, t, n, i);
                    this.createControlTextEl(r);
                    return r
                }
                ;
                n.addChild = function e(t, n) {
                    if (n === void 0) {
                        n = {}
                    }
                    var i = this.constructor.name;
                    y.warn("Adding an actionable (user controllable) child to a Button (" + i + ") is not supported; use a ClickableComponent instead.");
                    return Pt.prototype.addChild.call(this, t, n)
                }
                ;
                n.enable = function t() {
                    e.prototype.enable.call(this);
                    this.el_.removeAttribute("disabled")
                }
                ;
                n.disable = function t() {
                    e.prototype.disable.call(this);
                    this.el_.setAttribute("disabled", "disabled")
                }
                ;
                n.handleKeyDown = function t(n) {
                    if (Yt.isEventKey(n, "Space") || Yt.isEventKey(n, "Enter")) {
                        n.stopPropagation();
                        return
                    }
                    e.prototype.handleKeyDown.call(this, n)
                }
                ;
                return t
            }(Ai);
            Pt.registerComponent("Button", Li);
            var Oi = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.mouseused_ = false;
                    i.on("mousedown", function(e) {
                        return i.handleMouseDown(e)
                    });
                    return i
                }
                var n = t.prototype;
                n.buildCSSClass = function e() {
                    return "vjs-big-play-button"
                }
                ;
                n.handleClick = function e(t) {
                    var n = this.player_.play();
                    if (this.mouseused_ && t.clientX && t.clientY) {
                        var i = this.player_.usingPlugin("eme") && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;
                        Ht(n);
                        if (this.player_.tech(true) && !((V || U) && i)) {
                            this.player_.tech(true).focus()
                        }
                        return
                    }
                    var r = this.player_.getChild("controlBar");
                    var a = r && r.getChild("playToggle");
                    if (!a) {
                        this.player_.tech(true).focus();
                        return
                    }
                    var s = function e() {
                        return a.focus()
                    };
                    if (qt(n)) {
                        n.then(s, function() {})
                    } else {
                        this.setTimeout(s, 1)
                    }
                }
                ;
                n.handleKeyDown = function t(n) {
                    this.mouseused_ = false;
                    e.prototype.handleKeyDown.call(this, n)
                }
                ;
                n.handleMouseDown = function e(t) {
                    this.mouseused_ = true
                }
                ;
                return t
            }(Li);
            Oi.prototype.controlText_ = "Play Video";
            Pt.registerComponent("BigPlayButton", Oi);
            var xi = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.controlText(n && n.controlText || i.localize("Close"));
                    return i
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-close-button " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.handleClick = function e(t) {
                    this.trigger({
                        type: "close",
                        bubbles: false
                    })
                }
                ;
                n.handleKeyDown = function t(n) {
                    if (Yt.isEventKey(n, "Esc")) {
                        n.preventDefault();
                        n.stopPropagation();
                        this.trigger("click")
                    } else {
                        e.prototype.handleKeyDown.call(this, n)
                    }
                }
                ;
                return t
            }(Li);
            Pt.registerComponent("CloseButton", xi);
            var Di = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    if (n === void 0) {
                        n = {}
                    }
                    i = e.call(this, t, n) || this;
                    n.replay = n.replay === undefined || n.replay;
                    i.on(t, "play", function(e) {
                        return i.handlePlay(e)
                    });
                    i.on(t, "pause", function(e) {
                        return i.handlePause(e)
                    });
                    if (n.replay) {
                        i.on(t, "ended", function(e) {
                            return i.handleEnded(e)
                        })
                    }
                    return i
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-play-control " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.handleClick = function e(t) {
                    if (this.player_.paused()) {
                        this.player_.play()
                    } else {
                        this.player_.pause()
                    }
                }
                ;
                n.handleSeeked = function e(t) {
                    this.removeClass("vjs-ended");
                    if (this.player_.paused()) {
                        this.handlePause(t)
                    } else {
                        this.handlePlay(t)
                    }
                }
                ;
                n.handlePlay = function e(t) {
                    this.removeClass("vjs-ended");
                    this.removeClass("vjs-paused");
                    this.addClass("vjs-playing");
                    this.controlText("Pause")
                }
                ;
                n.handlePause = function e(t) {
                    this.removeClass("vjs-playing");
                    this.addClass("vjs-paused");
                    this.controlText("Play")
                }
                ;
                n.handleEnded = function e(t) {
                    var n = this;
                    this.removeClass("vjs-playing");
                    this.addClass("vjs-ended");
                    this.controlText("Replay");
                    this.one(this.player_, "seeked", function(e) {
                        return n.handleSeeked(e)
                    })
                }
                ;
                return t
            }(Li);
            Di.prototype.controlText_ = "Play";
            Pt.registerComponent("PlayToggle", Di);
            var Ni = function e(t, n) {
                t = t < 0 ? 0 : t;
                var i = Math.floor(t % 60);
                var r = Math.floor(t / 60 % 60);
                var a = Math.floor(t / 3600);
                var s = Math.floor(n / 60 % 60);
                var o = Math.floor(n / 3600);
                if (isNaN(t) || t === Infinity) {
                    a = r = i = "-"
                }
                a = a > 0 || o > 0 ? a + ":" : "";
                r = ((a || s >= 10) && r < 10 ? "0" + r : r) + ":";
                i = i < 10 ? "0" + i : i;
                return a + r + i
            };
            var Ri = Ni;
            function Mi(e) {
                Ri = e
            }
            function Ui() {
                Ri = Ni
            }
            function Bi(e, t) {
                if (t === void 0) {
                    t = e
                }
                return Ri(e, t)
            }
            var Fi = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.on(t, ["timeupdate", "ended"], function(e) {
                        return i.updateContent(e)
                    });
                    i.updateTextNode_();
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    var n = this.buildCSSClass();
                    var i = e.prototype.createEl.call(this, "div", {
                        className: n + " vjs-time-control vjs-control",
                        innerHTML: '<span class="vjs-control-text" role="presentation">' + this.localize(this.labelText_) + "\xa0</span>"
                    });
                    this.contentEl_ = ie("span", {
                        className: n + "-display"
                    }, {
                        "aria-live": "off",
                        role: "presentation"
                    });
                    i.appendChild(this.contentEl_);
                    return i
                }
                ;
                n.dispose = function t() {
                    this.contentEl_ = null;
                    this.textNode_ = null;
                    e.prototype.dispose.call(this)
                }
                ;
                n.updateTextNode_ = function e(t) {
                    var n = this;
                    if (t === void 0) {
                        t = 0
                    }
                    t = Bi(t);
                    if (this.formattedTime_ === t) {
                        return
                    }
                    this.formattedTime_ = t;
                    this.requestNamedAnimationFrame("TimeDisplay#updateTextNode_", function() {
                        if (!n.contentEl_) {
                            return
                        }
                        var e = n.textNode_;
                        if (e && n.contentEl_.firstChild !== e) {
                            e = null;
                            y.warn("TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.")
                        }
                        n.textNode_ = u.createTextNode(n.formattedTime_);
                        if (!n.textNode_) {
                            return
                        }
                        if (e) {
                            n.contentEl_.replaceChild(n.textNode_, e)
                        } else {
                            n.contentEl_.appendChild(n.textNode_)
                        }
                    })
                }
                ;
                n.updateContent = function e(t) {}
                ;
                return t
            }(Pt);
            Fi.prototype.labelText_ = "Time";
            Fi.prototype.controlText_ = "Time";
            Pt.registerComponent("TimeDisplay", Fi);
            var Vi = function(e) {
                Ot(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var n = t.prototype;
                n.buildCSSClass = function e() {
                    return "vjs-current-time"
                }
                ;
                n.updateContent = function e(t) {
                    var n;
                    if (this.player_.ended()) {
                        n = this.player_.duration()
                    } else {
                        n = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime()
                    }
                    this.updateTextNode_(n)
                }
                ;
                return t
            }(Fi);
            Vi.prototype.labelText_ = "Current Time";
            Vi.prototype.controlText_ = "Current Time";
            Pt.registerComponent("CurrentTimeDisplay", Vi);
            var qi = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    var r = function e(t) {
                        return i.updateContent(t)
                    };
                    i.on(t, "durationchange", r);
                    i.on(t, "loadstart", r);
                    i.on(t, "loadedmetadata", r);
                    return i
                }
                var n = t.prototype;
                n.buildCSSClass = function e() {
                    return "vjs-duration"
                }
                ;
                n.updateContent = function e(t) {
                    var n = this.player_.duration();
                    this.updateTextNode_(n)
                }
                ;
                return t
            }(Fi);
            qi.prototype.labelText_ = "Duration";
            qi.prototype.controlText_ = "Duration";
            Pt.registerComponent("DurationDisplay", qi);
            var Hi = function(e) {
                Ot(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-time-control vjs-time-divider",
                        innerHTML: "<div><span>/</span></div>"
                    }, {
                        "aria-hidden": true
                    })
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("TimeDivider", Hi);
            var Gi = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.on(t, "durationchange", function(e) {
                        return i.updateContent(e)
                    });
                    return i
                }
                var n = t.prototype;
                n.buildCSSClass = function e() {
                    return "vjs-remaining-time"
                }
                ;
                n.createEl = function t() {
                    var n = e.prototype.createEl.call(this);
                    n.insertBefore(ie("span", {}, {
                        "aria-hidden": true
                    }, "-"), this.contentEl_);
                    return n
                }
                ;
                n.updateContent = function e(t) {
                    if (typeof this.player_.duration() !== "number") {
                        return
                    }
                    var n;
                    if (this.player_.ended()) {
                        n = 0
                    } else if (this.player_.remainingTimeDisplay) {
                        n = this.player_.remainingTimeDisplay()
                    } else {
                        n = this.player_.remainingTime()
                    }
                    this.updateTextNode_(n)
                }
                ;
                return t
            }(Fi);
            Gi.prototype.labelText_ = "Remaining Time";
            Gi.prototype.controlText_ = "Remaining Time";
            Pt.registerComponent("RemainingTimeDisplay", Gi);
            var Wi = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.updateShowing();
                    i.on(i.player(), "durationchange", function(e) {
                        return i.updateShowing(e)
                    });
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    var n = e.prototype.createEl.call(this, "div", {
                        className: "vjs-live-control vjs-control"
                    });
                    this.contentEl_ = ie("div", {
                        className: "vjs-live-display",
                        innerHTML: '<span class="vjs-control-text">' + this.localize("Stream Type") + "\xa0</span>" + this.localize("LIVE")
                    }, {
                        "aria-live": "off"
                    });
                    n.appendChild(this.contentEl_);
                    return n
                }
                ;
                n.dispose = function t() {
                    this.contentEl_ = null;
                    e.prototype.dispose.call(this)
                }
                ;
                n.updateShowing = function e(t) {
                    if (this.player().duration() === Infinity) {
                        this.show()
                    } else {
                        this.hide()
                    }
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("LiveDisplay", Wi);
            var Ki = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.updateLiveEdgeStatus();
                    if (i.player_.liveTracker) {
                        i.updateLiveEdgeStatusHandler_ = function(e) {
                            return i.updateLiveEdgeStatus(e)
                        }
                        ;
                        i.on(i.player_.liveTracker, "liveedgechange", i.updateLiveEdgeStatusHandler_)
                    }
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    var n = e.prototype.createEl.call(this, "button", {
                        className: "vjs-seek-to-live-control vjs-control"
                    });
                    this.textEl_ = ie("span", {
                        className: "vjs-seek-to-live-text",
                        innerHTML: this.localize("LIVE")
                    }, {
                        "aria-hidden": "true"
                    });
                    n.appendChild(this.textEl_);
                    return n
                }
                ;
                n.updateLiveEdgeStatus = function e() {
                    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {
                        this.setAttribute("aria-disabled", true);
                        this.addClass("vjs-at-live-edge");
                        this.controlText("Seek to live, currently playing live")
                    } else {
                        this.setAttribute("aria-disabled", false);
                        this.removeClass("vjs-at-live-edge");
                        this.controlText("Seek to live, currently behind live")
                    }
                }
                ;
                n.handleClick = function e() {
                    this.player_.liveTracker.seekToLiveEdge()
                }
                ;
                n.dispose = function t() {
                    if (this.player_.liveTracker) {
                        this.off(this.player_.liveTracker, "liveedgechange", this.updateLiveEdgeStatusHandler_)
                    }
                    this.textEl_ = null;
                    e.prototype.dispose.call(this)
                }
                ;
                return t
            }(Li);
            Ki.prototype.controlText_ = "Seek to live, currently playing live";
            Pt.registerComponent("SeekToLive", Ki);
            var zi = function e(t, n, i) {
                t = Number(t);
                return Math.min(i, Math.max(n, isNaN(t) ? n : t))
            };
            var Yi = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.handleMouseDown_ = function(e) {
                        return i.handleMouseDown(e)
                    }
                    ;
                    i.handleMouseUp_ = function(e) {
                        return i.handleMouseUp(e)
                    }
                    ;
                    i.handleKeyDown_ = function(e) {
                        return i.handleKeyDown(e)
                    }
                    ;
                    i.handleClick_ = function(e) {
                        return i.handleClick(e)
                    }
                    ;
                    i.handleMouseMove_ = function(e) {
                        return i.handleMouseMove(e)
                    }
                    ;
                    i.update_ = function(e) {
                        return i.update(e)
                    }
                    ;
                    i.bar = i.getChild(i.options_.barName);
                    i.vertical(!!i.options_.vertical);
                    i.enable();
                    return i
                }
                var n = t.prototype;
                n.enabled = function e() {
                    return this.enabled_
                }
                ;
                n.enable = function e() {
                    if (this.enabled()) {
                        return
                    }
                    this.on("mousedown", this.handleMouseDown_);
                    this.on("touchstart", this.handleMouseDown_);
                    this.on("keydown", this.handleKeyDown_);
                    this.on("click", this.handleClick_);
                    this.on(this.player_, "controlsvisible", this.update);
                    if (this.playerEvent) {
                        this.on(this.player_, this.playerEvent, this.update)
                    }
                    this.removeClass("disabled");
                    this.setAttribute("tabindex", 0);
                    this.enabled_ = true
                }
                ;
                n.disable = function e() {
                    if (!this.enabled()) {
                        return
                    }
                    var t = this.bar.el_.ownerDocument;
                    this.off("mousedown", this.handleMouseDown_);
                    this.off("touchstart", this.handleMouseDown_);
                    this.off("keydown", this.handleKeyDown_);
                    this.off("click", this.handleClick_);
                    this.off(this.player_, "controlsvisible", this.update_);
                    this.off(t, "mousemove", this.handleMouseMove_);
                    this.off(t, "mouseup", this.handleMouseUp_);
                    this.off(t, "touchmove", this.handleMouseMove_);
                    this.off(t, "touchend", this.handleMouseUp_);
                    this.removeAttribute("tabindex");
                    this.addClass("disabled");
                    if (this.playerEvent) {
                        this.off(this.player_, this.playerEvent, this.update)
                    }
                    this.enabled_ = false
                }
                ;
                n.createEl = function t(n, i, r) {
                    if (i === void 0) {
                        i = {}
                    }
                    if (r === void 0) {
                        r = {}
                    }
                    i.className = i.className + " vjs-slider";
                    i = E({
                        tabIndex: 0
                    }, i);
                    r = E({
                        role: "slider",
                        "aria-valuenow": 0,
                        "aria-valuemin": 0,
                        "aria-valuemax": 100,
                        tabIndex: 0
                    }, r);
                    return e.prototype.createEl.call(this, n, i, r)
                }
                ;
                n.handleMouseDown = function e(t) {
                    var n = this.bar.el_.ownerDocument;
                    if (t.type === "mousedown") {
                        t.preventDefault()
                    }
                    if (t.type === "touchstart" && !B) {
                        t.preventDefault()
                    }
                    ve();
                    this.addClass("vjs-sliding");
                    this.trigger("slideractive");
                    this.on(n, "mousemove", this.handleMouseMove_);
                    this.on(n, "mouseup", this.handleMouseUp_);
                    this.on(n, "touchmove", this.handleMouseMove_);
                    this.on(n, "touchend", this.handleMouseUp_);
                    this.handleMouseMove(t)
                }
                ;
                n.handleMouseMove = function e(t) {}
                ;
                n.handleMouseUp = function e() {
                    var t = this.bar.el_.ownerDocument;
                    ge();
                    this.removeClass("vjs-sliding");
                    this.trigger("sliderinactive");
                    this.off(t, "mousemove", this.handleMouseMove_);
                    this.off(t, "mouseup", this.handleMouseUp_);
                    this.off(t, "touchmove", this.handleMouseMove_);
                    this.off(t, "touchend", this.handleMouseUp_);
                    this.update()
                }
                ;
                n.update = function e() {
                    var t = this;
                    if (!this.el_ || !this.bar) {
                        return
                    }
                    var n = this.getProgress();
                    if (n === this.progress_) {
                        return n
                    }
                    this.progress_ = n;
                    this.requestNamedAnimationFrame("Slider#update", function() {
                        var e = t.vertical() ? "height" : "width";
                        t.bar.el().style[e] = (n * 100).toFixed(2) + "%"
                    });
                    return n
                }
                ;
                n.getProgress = function e() {
                    return Number(zi(this.getPercent(), 0, 1).toFixed(4))
                }
                ;
                n.calculateDistance = function e(t) {
                    var n = _e(this.el_, t);
                    if (this.vertical()) {
                        return n.y
                    }
                    return n.x
                }
                ;
                n.handleKeyDown = function t(n) {
                    if (Yt.isEventKey(n, "Left") || Yt.isEventKey(n, "Down")) {
                        n.preventDefault();
                        n.stopPropagation();
                        this.stepBack()
                    } else if (Yt.isEventKey(n, "Right") || Yt.isEventKey(n, "Up")) {
                        n.preventDefault();
                        n.stopPropagation();
                        this.stepForward()
                    } else {
                        e.prototype.handleKeyDown.call(this, n)
                    }
                }
                ;
                n.handleClick = function e(t) {
                    t.stopPropagation();
                    t.preventDefault()
                }
                ;
                n.vertical = function e(t) {
                    if (t === undefined) {
                        return this.vertical_ || false
                    }
                    this.vertical_ = !!t;
                    if (this.vertical_) {
                        this.addClass("vjs-slider-vertical")
                    } else {
                        this.addClass("vjs-slider-horizontal")
                    }
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("Slider", Yi);
            var Xi = function e(t, n) {
                return zi(t / n * 100, 0, 100).toFixed(2) + "%"
            };
            var Qi = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.partEls_ = [];
                    i.on(t, "progress", function(e) {
                        return i.update(e)
                    });
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    var n = e.prototype.createEl.call(this, "div", {
                        className: "vjs-load-progress"
                    });
                    var i = ie("span", {
                        className: "vjs-control-text"
                    });
                    var r = ie("span", {
                        textContent: this.localize("Loaded")
                    });
                    var a = u.createTextNode(": ");
                    this.percentageEl_ = ie("span", {
                        className: "vjs-control-text-loaded-percentage",
                        textContent: "0%"
                    });
                    n.appendChild(i);
                    i.appendChild(r);
                    i.appendChild(a);
                    i.appendChild(this.percentageEl_);
                    return n
                }
                ;
                n.dispose = function t() {
                    this.partEls_ = null;
                    this.percentageEl_ = null;
                    e.prototype.dispose.call(this)
                }
                ;
                n.update = function e(t) {
                    var n = this;
                    this.requestNamedAnimationFrame("LoadProgressBar#update", function() {
                        var e = n.player_.liveTracker;
                        var t = n.player_.buffered();
                        var i = e && e.isLive() ? e.seekableEnd() : n.player_.duration();
                        var r = n.player_.bufferedEnd();
                        var a = n.partEls_;
                        var s = Xi(r, i);
                        if (n.percent_ !== s) {
                            n.el_.style.width = s;
                            re(n.percentageEl_, s);
                            n.percent_ = s
                        }
                        for (var o = 0; o < t.length; o++) {
                            var u = t.start(o);
                            var l = t.end(o);
                            var d = a[o];
                            if (!d) {
                                d = n.el_.appendChild(ie());
                                a[o] = d
                            }
                            if (d.dataset.start === u && d.dataset.end === l) {
                                continue
                            }
                            d.dataset.start = u;
                            d.dataset.end = l;
                            d.style.left = Xi(u, r);
                            d.style.width = Xi(l - u, r)
                        }
                        for (var c = a.length; c > t.length; c--) {
                            n.el_.removeChild(a[c - 1])
                        }
                        a.length = t.length
                    })
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("LoadProgressBar", Qi);
            var Zi = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.update = tt(et(Ct(i), i.update), $e);
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-time-tooltip"
                    }, {
                        "aria-hidden": "true"
                    })
                }
                ;
                n.update = function e(t, n, i) {
                    var r = ye(this.el_);
                    var a = me(this.player_.el());
                    var s = t.width * n;
                    if (!a || !r) {
                        return
                    }
                    var o = t.left - a.left + s;
                    var u = t.width - s + (a.right - t.right);
                    var l = r.width / 2;
                    if (o < l) {
                        l += l - o
                    } else if (u < l) {
                        l = u
                    }
                    if (l < 0) {
                        l = 0
                    } else if (l > r.width) {
                        l = r.width
                    }
                    l = Math.round(l);
                    this.el_.style.right = "-" + l + "px";
                    this.write(i)
                }
                ;
                n.write = function e(t) {
                    re(this.el_, t)
                }
                ;
                n.updateTime = function e(t, n, i, r) {
                    var a = this;
                    this.requestNamedAnimationFrame("TimeTooltip#updateTime", function() {
                        var e;
                        var s = a.player_.duration();
                        if (a.player_.liveTracker && a.player_.liveTracker.isLive()) {
                            var o = a.player_.liveTracker.liveWindow();
                            var u = o - n * o;
                            e = (u < 1 ? "" : "-") + Bi(u, o)
                        } else {
                            e = Bi(i, s)
                        }
                        a.update(t, n, e);
                        if (r) {
                            r()
                        }
                    })
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("TimeTooltip", Zi);
            var Ji = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.update = tt(et(Ct(i), i.update), $e);
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-play-progress vjs-slider-bar"
                    }, {
                        "aria-hidden": "true"
                    })
                }
                ;
                n.update = function e(t, n) {
                    var i = this.getChild("timeTooltip");
                    if (!i) {
                        return
                    }
                    var r = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
                    i.updateTime(t, n, r)
                }
                ;
                return t
            }(Pt);
            Ji.prototype.options_ = {
                children: []
            };
            if (!z && !D) {
                Ji.prototype.options_.children.push("timeTooltip")
            }
            Pt.registerComponent("PlayProgressBar", Ji);
            var $i = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.update = tt(et(Ct(i), i.update), $e);
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-mouse-display"
                    })
                }
                ;
                n.update = function e(t, n) {
                    var i = this;
                    var r = n * this.player_.duration();
                    this.getChild("timeTooltip").updateTime(t, n, r, function() {
                        i.el_.style.left = t.width * n + "px"
                    })
                }
                ;
                return t
            }(Pt);
            $i.prototype.options_ = {
                children: ["timeTooltip"]
            };
            Pt.registerComponent("MouseTimeDisplay", $i);
            var er = 5;
            var tr = 12;
            var nr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.setEventHandlers_();
                    return i
                }
                var n = t.prototype;
                n.setEventHandlers_ = function e() {
                    var t = this;
                    this.update_ = et(this, this.update);
                    this.update = tt(this.update_, $e);
                    this.on(this.player_, ["ended", "durationchange", "timeupdate"], this.update);
                    if (this.player_.liveTracker) {
                        this.on(this.player_.liveTracker, "liveedgechange", this.update)
                    }
                    this.updateInterval = null;
                    this.enableIntervalHandler_ = function(e) {
                        return t.enableInterval_(e)
                    }
                    ;
                    this.disableIntervalHandler_ = function(e) {
                        return t.disableInterval_(e)
                    }
                    ;
                    this.on(this.player_, ["playing"], this.enableIntervalHandler_);
                    this.on(this.player_, ["ended", "pause", "waiting"], this.disableIntervalHandler_);
                    if ("hidden"in u && "visibilityState"in u) {
                        this.on(u, "visibilitychange", this.toggleVisibility_)
                    }
                }
                ;
                n.toggleVisibility_ = function e(t) {
                    if (u.visibilityState === "hidden") {
                        this.cancelNamedAnimationFrame("SeekBar#update");
                        this.cancelNamedAnimationFrame("Slider#update");
                        this.disableInterval_(t)
                    } else {
                        if (!this.player_.ended() && !this.player_.paused()) {
                            this.enableInterval_()
                        }
                        this.update()
                    }
                }
                ;
                n.enableInterval_ = function e() {
                    if (this.updateInterval) {
                        return
                    }
                    this.updateInterval = this.setInterval(this.update, $e)
                }
                ;
                n.disableInterval_ = function e(t) {
                    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && t && t.type !== "ended") {
                        return
                    }
                    if (!this.updateInterval) {
                        return
                    }
                    this.clearInterval(this.updateInterval);
                    this.updateInterval = null
                }
                ;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-progress-holder"
                    }, {
                        "aria-label": this.localize("Progress Bar")
                    })
                }
                ;
                n.update = function t(n) {
                    var i = this;
                    if (u.visibilityState === "hidden") {
                        return
                    }
                    var r = e.prototype.update.call(this);
                    this.requestNamedAnimationFrame("SeekBar#update", function() {
                        var e = i.player_.ended() ? i.player_.duration() : i.getCurrentTime_();
                        var t = i.player_.liveTracker;
                        var n = i.player_.duration();
                        if (t && t.isLive()) {
                            n = i.player_.liveTracker.liveCurrentTime()
                        }
                        if (i.percent_ !== r) {
                            i.el_.setAttribute("aria-valuenow", (r * 100).toFixed(2));
                            i.percent_ = r
                        }
                        if (i.currentTime_ !== e || i.duration_ !== n) {
                            i.el_.setAttribute("aria-valuetext", i.localize("progress bar timing: currentTime={1} duration={2}", [Bi(e, n), Bi(n, n)], "{1} of {2}"));
                            i.currentTime_ = e;
                            i.duration_ = n
                        }
                        if (i.bar) {
                            i.bar.update(me(i.el()), i.getProgress())
                        }
                    });
                    return r
                }
                ;
                n.getCurrentTime_ = function e() {
                    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime()
                }
                ;
                n.getPercent = function e() {
                    var t = this.getCurrentTime_();
                    var n;
                    var i = this.player_.liveTracker;
                    if (i && i.isLive()) {
                        n = (t - i.seekableStart()) / i.liveWindow();
                        if (i.atLiveEdge()) {
                            n = 1
                        }
                    } else {
                        n = t / this.player_.duration()
                    }
                    return n
                }
                ;
                n.handleMouseDown = function t(n) {
                    if (!Ee(n)) {
                        return
                    }
                    n.stopPropagation();
                    this.player_.scrubbing(true);
                    this.videoWasPlaying = !this.player_.paused();
                    this.player_.pause();
                    e.prototype.handleMouseDown.call(this, n)
                }
                ;
                n.handleMouseMove = function e(t) {
                    if (!Ee(t)) {
                        return
                    }
                    var n;
                    var i = this.calculateDistance(t);
                    var r = this.player_.liveTracker;
                    if (!r || !r.isLive()) {
                        n = i * this.player_.duration();
                        if (n === this.player_.duration()) {
                            n = n - .1
                        }
                    } else {
                        if (i >= .99) {
                            r.seekToLiveEdge();
                            return
                        }
                        var a = r.seekableStart();
                        var s = r.liveCurrentTime();
                        n = a + i * r.liveWindow();
                        if (n >= s) {
                            n = s
                        }
                        if (n <= a) {
                            n = a + .1
                        }
                        if (n === Infinity) {
                            return
                        }
                    }
                    this.player_.currentTime(n)
                }
                ;
                n.enable = function t() {
                    e.prototype.enable.call(this);
                    var n = this.getChild("mouseTimeDisplay");
                    if (!n) {
                        return
                    }
                    n.show()
                }
                ;
                n.disable = function t() {
                    e.prototype.disable.call(this);
                    var n = this.getChild("mouseTimeDisplay");
                    if (!n) {
                        return
                    }
                    n.hide()
                }
                ;
                n.handleMouseUp = function t(n) {
                    e.prototype.handleMouseUp.call(this, n);
                    if (n) {
                        n.stopPropagation()
                    }
                    this.player_.scrubbing(false);
                    this.player_.trigger({
                        type: "timeupdate",
                        target: this,
                        manuallyTriggered: true
                    });
                    if (this.videoWasPlaying) {
                        Ht(this.player_.play())
                    } else {
                        this.update_()
                    }
                }
                ;
                n.stepForward = function e() {
                    this.player_.currentTime(this.player_.currentTime() + er)
                }
                ;
                n.stepBack = function e() {
                    this.player_.currentTime(this.player_.currentTime() - er)
                }
                ;
                n.handleAction = function e(t) {
                    if (this.player_.paused()) {
                        this.player_.play()
                    } else {
                        this.player_.pause()
                    }
                }
                ;
                n.handleKeyDown = function t(n) {
                    if (Yt.isEventKey(n, "Space") || Yt.isEventKey(n, "Enter")) {
                        n.preventDefault();
                        n.stopPropagation();
                        this.handleAction(n)
                    } else if (Yt.isEventKey(n, "Home")) {
                        n.preventDefault();
                        n.stopPropagation();
                        this.player_.currentTime(0)
                    } else if (Yt.isEventKey(n, "End")) {
                        n.preventDefault();
                        n.stopPropagation();
                        this.player_.currentTime(this.player_.duration())
                    } else if (/^[0-9]$/.test(Yt(n))) {
                        n.preventDefault();
                        n.stopPropagation();
                        var i = (Yt.codes[Yt(n)] - Yt.codes["0"]) * 10 / 100;
                        this.player_.currentTime(this.player_.duration() * i)
                    } else if (Yt.isEventKey(n, "PgDn")) {
                        n.preventDefault();
                        n.stopPropagation();
                        this.player_.currentTime(this.player_.currentTime() - er * tr)
                    } else if (Yt.isEventKey(n, "PgUp")) {
                        n.preventDefault();
                        n.stopPropagation();
                        this.player_.currentTime(this.player_.currentTime() + er * tr)
                    } else {
                        e.prototype.handleKeyDown.call(this, n)
                    }
                }
                ;
                n.dispose = function t() {
                    this.disableInterval_();
                    this.off(this.player_, ["ended", "durationchange", "timeupdate"], this.update);
                    if (this.player_.liveTracker) {
                        this.on(this.player_.liveTracker, "liveedgechange", this.update)
                    }
                    this.off(this.player_, ["playing"], this.enableIntervalHandler_);
                    this.off(this.player_, ["ended", "pause", "waiting"], this.disableIntervalHandler_);
                    if ("hidden"in u && "visibilityState"in u) {
                        this.off(u, "visibilitychange", this.toggleVisibility_)
                    }
                    e.prototype.dispose.call(this)
                }
                ;
                return t
            }(Yi);
            nr.prototype.options_ = {
                children: ["loadProgressBar", "playProgressBar"],
                barName: "playProgressBar"
            };
            if (!z && !D) {
                nr.prototype.options_.children.splice(1, 0, "mouseTimeDisplay")
            }
            Pt.registerComponent("SeekBar", nr);
            var ir = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.handleMouseMove = tt(et(Ct(i), i.handleMouseMove), $e);
                    i.throttledHandleMouseSeek = tt(et(Ct(i), i.handleMouseSeek), $e);
                    i.handleMouseUpHandler_ = function(e) {
                        return i.handleMouseUp(e)
                    }
                    ;
                    i.handleMouseDownHandler_ = function(e) {
                        return i.handleMouseDown(e)
                    }
                    ;
                    i.enable();
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-progress-control vjs-control"
                    })
                }
                ;
                n.handleMouseMove = function e(t) {
                    var n = this.getChild("seekBar");
                    if (!n) {
                        return
                    }
                    var i = n.getChild("playProgressBar");
                    var r = n.getChild("mouseTimeDisplay");
                    if (!i && !r) {
                        return
                    }
                    var a = n.el();
                    var s = ye(a);
                    var o = _e(a, t).x;
                    o = zi(o, 0, 1);
                    if (r) {
                        r.update(s, o)
                    }
                    if (i) {
                        i.update(s, n.getProgress())
                    }
                }
                ;
                n.handleMouseSeek = function e(t) {
                    var n = this.getChild("seekBar");
                    if (n) {
                        n.handleMouseMove(t)
                    }
                }
                ;
                n.enabled = function e() {
                    return this.enabled_
                }
                ;
                n.disable = function e() {
                    this.children().forEach(function(e) {
                        return e.disable && e.disable()
                    });
                    if (!this.enabled()) {
                        return
                    }
                    this.off(["mousedown", "touchstart"], this.handleMouseDownHandler_);
                    this.off(this.el_, "mousemove", this.handleMouseMove);
                    this.removeListenersAddedOnMousedownAndTouchstart();
                    this.addClass("disabled");
                    this.enabled_ = false;
                    if (this.player_.scrubbing()) {
                        var t = this.getChild("seekBar");
                        this.player_.scrubbing(false);
                        if (t.videoWasPlaying) {
                            Ht(this.player_.play())
                        }
                    }
                }
                ;
                n.enable = function e() {
                    this.children().forEach(function(e) {
                        return e.enable && e.enable()
                    });
                    if (this.enabled()) {
                        return
                    }
                    this.on(["mousedown", "touchstart"], this.handleMouseDownHandler_);
                    this.on(this.el_, "mousemove", this.handleMouseMove);
                    this.removeClass("disabled");
                    this.enabled_ = true
                }
                ;
                n.removeListenersAddedOnMousedownAndTouchstart = function e() {
                    var t = this.el_.ownerDocument;
                    this.off(t, "mousemove", this.throttledHandleMouseSeek);
                    this.off(t, "touchmove", this.throttledHandleMouseSeek);
                    this.off(t, "mouseup", this.handleMouseUpHandler_);
                    this.off(t, "touchend", this.handleMouseUpHandler_)
                }
                ;
                n.handleMouseDown = function e(t) {
                    var n = this.el_.ownerDocument;
                    var i = this.getChild("seekBar");
                    if (i) {
                        i.handleMouseDown(t)
                    }
                    this.on(n, "mousemove", this.throttledHandleMouseSeek);
                    this.on(n, "touchmove", this.throttledHandleMouseSeek);
                    this.on(n, "mouseup", this.handleMouseUpHandler_);
                    this.on(n, "touchend", this.handleMouseUpHandler_)
                }
                ;
                n.handleMouseUp = function e(t) {
                    var n = this.getChild("seekBar");
                    if (n) {
                        n.handleMouseUp(t)
                    }
                    this.removeListenersAddedOnMousedownAndTouchstart()
                }
                ;
                return t
            }(Pt);
            ir.prototype.options_ = {
                children: ["seekBar"]
            };
            Pt.registerComponent("ProgressControl", ir);
            var rr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.on(t, ["enterpictureinpicture", "leavepictureinpicture"], function(e) {
                        return i.handlePictureInPictureChange(e)
                    });
                    i.on(t, ["disablepictureinpicturechanged", "loadedmetadata"], function(e) {
                        return i.handlePictureInPictureEnabledChange(e)
                    });
                    i.disable();
                    return i
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-picture-in-picture-control " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.handlePictureInPictureEnabledChange = function e() {
                    if (u.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {
                        this.enable()
                    } else {
                        this.disable()
                    }
                }
                ;
                n.handlePictureInPictureChange = function e(t) {
                    if (this.player_.isInPictureInPicture()) {
                        this.controlText("Exit Picture-in-Picture")
                    } else {
                        this.controlText("Picture-in-Picture")
                    }
                    this.handlePictureInPictureEnabledChange()
                }
                ;
                n.handleClick = function e(t) {
                    if (!this.player_.isInPictureInPicture()) {
                        this.player_.requestPictureInPicture()
                    } else {
                        this.player_.exitPictureInPicture()
                    }
                }
                ;
                return t
            }(Li);
            rr.prototype.controlText_ = "Picture-in-Picture";
            Pt.registerComponent("PictureInPictureToggle", rr);
            var ar = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.on(t, "fullscreenchange", function(e) {
                        return i.handleFullscreenChange(e)
                    });
                    if (u[t.fsApi_.fullscreenEnabled] === false) {
                        i.disable()
                    }
                    return i
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-fullscreen-control " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.handleFullscreenChange = function e(t) {
                    if (this.player_.isFullscreen()) {
                        this.controlText("Non-Fullscreen")
                    } else {
                        this.controlText("Fullscreen")
                    }
                }
                ;
                n.handleClick = function e(t) {
                    if (!this.player_.isFullscreen()) {
                        this.player_.requestFullscreen()
                    } else {
                        this.player_.exitFullscreen()
                    }
                }
                ;
                return t
            }(Li);
            ar.prototype.controlText_ = "Fullscreen";
            Pt.registerComponent("FullscreenToggle", ar);
            var sr = function e(t, n) {
                if (n.tech_ && !n.tech_.featuresVolumeControl) {
                    t.addClass("vjs-hidden")
                }
                t.on(n, "loadstart", function() {
                    if (!n.tech_.featuresVolumeControl) {
                        t.addClass("vjs-hidden")
                    } else {
                        t.removeClass("vjs-hidden")
                    }
                })
            };
            var or = function(e) {
                Ot(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-volume-level",
                        innerHTML: '<span class="vjs-control-text"></span>'
                    })
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("VolumeLevel", or);
            var ur = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.update = tt(et(Ct(i), i.update), $e);
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-volume-tooltip"
                    }, {
                        "aria-hidden": "true"
                    })
                }
                ;
                n.update = function e(t, n, i, r) {
                    if (!i) {
                        var a = me(this.el_);
                        var s = me(this.player_.el());
                        var o = t.width * n;
                        if (!s || !a) {
                            return
                        }
                        var u = t.left - s.left + o;
                        var l = t.width - o + (s.right - t.right);
                        var d = a.width / 2;
                        if (u < d) {
                            d += d - u
                        } else if (l < d) {
                            d = l
                        }
                        if (d < 0) {
                            d = 0
                        } else if (d > a.width) {
                            d = a.width
                        }
                        this.el_.style.right = "-" + d + "px"
                    }
                    this.write(r + "%")
                }
                ;
                n.write = function e(t) {
                    re(this.el_, t)
                }
                ;
                n.updateVolume = function e(t, n, i, r, a) {
                    var s = this;
                    this.requestNamedAnimationFrame("VolumeLevelTooltip#updateVolume", function() {
                        s.update(t, n, i, r.toFixed(0));
                        if (a) {
                            a()
                        }
                    })
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("VolumeLevelTooltip", ur);
            var lr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.update = tt(et(Ct(i), i.update), $e);
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-mouse-display"
                    })
                }
                ;
                n.update = function e(t, n, i) {
                    var r = this;
                    var a = 100 * n;
                    this.getChild("volumeLevelTooltip").updateVolume(t, n, i, a, function() {
                        if (i) {
                            r.el_.style.bottom = t.height * n + "px"
                        } else {
                            r.el_.style.left = t.width * n + "px"
                        }
                    })
                }
                ;
                return t
            }(Pt);
            lr.prototype.options_ = {
                children: ["volumeLevelTooltip"]
            };
            Pt.registerComponent("MouseVolumeLevelDisplay", lr);
            var dr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.on("slideractive", function(e) {
                        return i.updateLastVolume_(e)
                    });
                    i.on(t, "volumechange", function(e) {
                        return i.updateARIAAttributes(e)
                    });
                    t.ready(function() {
                        return i.updateARIAAttributes()
                    });
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-volume-bar vjs-slider-bar"
                    }, {
                        "aria-label": this.localize("Volume Level"),
                        "aria-live": "polite"
                    })
                }
                ;
                n.handleMouseDown = function t(n) {
                    if (!Ee(n)) {
                        return
                    }
                    e.prototype.handleMouseDown.call(this, n)
                }
                ;
                n.handleMouseMove = function e(t) {
                    var n = this.getChild("mouseVolumeLevelDisplay");
                    if (n) {
                        var i = this.el();
                        var r = me(i);
                        var a = this.vertical();
                        var s = _e(i, t);
                        s = a ? s.y : s.x;
                        s = zi(s, 0, 1);
                        n.update(r, s, a)
                    }
                    if (!Ee(t)) {
                        return
                    }
                    this.checkMuted();
                    this.player_.volume(this.calculateDistance(t))
                }
                ;
                n.checkMuted = function e() {
                    if (this.player_.muted()) {
                        this.player_.muted(false)
                    }
                }
                ;
                n.getPercent = function e() {
                    if (this.player_.muted()) {
                        return 0
                    }
                    return this.player_.volume()
                }
                ;
                n.stepForward = function e() {
                    this.checkMuted();
                    this.player_.volume(this.player_.volume() + .1)
                }
                ;
                n.stepBack = function e() {
                    this.checkMuted();
                    this.player_.volume(this.player_.volume() - .1)
                }
                ;
                n.updateARIAAttributes = function e(t) {
                    var n = this.player_.muted() ? 0 : this.volumeAsPercentage_();
                    this.el_.setAttribute("aria-valuenow", n);
                    this.el_.setAttribute("aria-valuetext", n + "%")
                }
                ;
                n.volumeAsPercentage_ = function e() {
                    return Math.round(this.player_.volume() * 100)
                }
                ;
                n.updateLastVolume_ = function e() {
                    var t = this;
                    var n = this.player_.volume();
                    this.one("sliderinactive", function() {
                        if (t.player_.volume() === 0) {
                            t.player_.lastVolume_(n)
                        }
                    })
                }
                ;
                return t
            }(Yi);
            dr.prototype.options_ = {
                children: ["volumeLevel"],
                barName: "volumeLevel"
            };
            if (!z && !D) {
                dr.prototype.options_.children.splice(0, 0, "mouseVolumeLevelDisplay")
            }
            dr.prototype.playerEvent = "volumechange";
            Pt.registerComponent("VolumeBar", dr);
            var cr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    if (n === void 0) {
                        n = {}
                    }
                    n.vertical = n.vertical || false;
                    if (typeof n.volumeBar === "undefined" || I(n.volumeBar)) {
                        n.volumeBar = n.volumeBar || {};
                        n.volumeBar.vertical = n.vertical
                    }
                    i = e.call(this, t, n) || this;
                    sr(Ct(i), t);
                    i.throttledHandleMouseMove = tt(et(Ct(i), i.handleMouseMove), $e);
                    i.handleMouseUpHandler_ = function(e) {
                        return i.handleMouseUp(e)
                    }
                    ;
                    i.on("mousedown", function(e) {
                        return i.handleMouseDown(e)
                    });
                    i.on("touchstart", function(e) {
                        return i.handleMouseDown(e)
                    });
                    i.on("mousemove", function(e) {
                        return i.handleMouseMove(e)
                    });
                    i.on(i.volumeBar, ["focus", "slideractive"], function() {
                        i.volumeBar.addClass("vjs-slider-active");
                        i.addClass("vjs-slider-active");
                        i.trigger("slideractive")
                    });
                    i.on(i.volumeBar, ["blur", "sliderinactive"], function() {
                        i.volumeBar.removeClass("vjs-slider-active");
                        i.removeClass("vjs-slider-active");
                        i.trigger("sliderinactive")
                    });
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    var n = "vjs-volume-horizontal";
                    if (this.options_.vertical) {
                        n = "vjs-volume-vertical"
                    }
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-volume-control vjs-control " + n
                    })
                }
                ;
                n.handleMouseDown = function e(t) {
                    var n = this.el_.ownerDocument;
                    this.on(n, "mousemove", this.throttledHandleMouseMove);
                    this.on(n, "touchmove", this.throttledHandleMouseMove);
                    this.on(n, "mouseup", this.handleMouseUpHandler_);
                    this.on(n, "touchend", this.handleMouseUpHandler_)
                }
                ;
                n.handleMouseUp = function e(t) {
                    var n = this.el_.ownerDocument;
                    this.off(n, "mousemove", this.throttledHandleMouseMove);
                    this.off(n, "touchmove", this.throttledHandleMouseMove);
                    this.off(n, "mouseup", this.handleMouseUpHandler_);
                    this.off(n, "touchend", this.handleMouseUpHandler_)
                }
                ;
                n.handleMouseMove = function e(t) {
                    this.volumeBar.handleMouseMove(t)
                }
                ;
                return t
            }(Pt);
            cr.prototype.options_ = {
                children: ["volumeBar"]
            };
            Pt.registerComponent("VolumeControl", cr);
            var fr = function e(t, n) {
                if (n.tech_ && !n.tech_.featuresMuteControl) {
                    t.addClass("vjs-hidden")
                }
                t.on(n, "loadstart", function() {
                    if (!n.tech_.featuresMuteControl) {
                        t.addClass("vjs-hidden")
                    } else {
                        t.removeClass("vjs-hidden")
                    }
                })
            };
            var pr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    fr(Ct(i), t);
                    i.on(t, ["loadstart", "volumechange"], function(e) {
                        return i.update(e)
                    });
                    return i
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-mute-control " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.handleClick = function e(t) {
                    var n = this.player_.volume();
                    var i = this.player_.lastVolume_();
                    if (n === 0) {
                        var r = i < .1 ? .1 : i;
                        this.player_.volume(r);
                        this.player_.muted(false)
                    } else {
                        this.player_.muted(this.player_.muted() ? false : true)
                    }
                }
                ;
                n.update = function e(t) {
                    this.updateIcon_();
                    this.updateControlText_()
                }
                ;
                n.updateIcon_ = function e() {
                    var t = this.player_.volume();
                    var n = 3;
                    if (z && this.player_.tech_ && this.player_.tech_.el_) {
                        this.player_.muted(this.player_.tech_.el_.muted)
                    }
                    if (t === 0 || this.player_.muted()) {
                        n = 0
                    } else if (t < .33) {
                        n = 1
                    } else if (t < .67) {
                        n = 2
                    }
                    for (var i = 0; i < 4; i++) {
                        ue(this.el_, "vjs-vol-" + i)
                    }
                    oe(this.el_, "vjs-vol-" + n)
                }
                ;
                n.updateControlText_ = function e() {
                    var t = this.player_.muted() || this.player_.volume() === 0;
                    var n = t ? "Unmute" : "Mute";
                    if (this.controlText() !== n) {
                        this.controlText(n)
                    }
                }
                ;
                return t
            }(Li);
            pr.prototype.controlText_ = "Mute";
            Pt.registerComponent("MuteToggle", pr);
            var hr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    if (n === void 0) {
                        n = {}
                    }
                    if (typeof n.inline !== "undefined") {
                        n.inline = n.inline
                    } else {
                        n.inline = true
                    }
                    if (typeof n.volumeControl === "undefined" || I(n.volumeControl)) {
                        n.volumeControl = n.volumeControl || {};
                        n.volumeControl.vertical = !n.inline
                    }
                    i = e.call(this, t, n) || this;
                    i.handleKeyPressHandler_ = function(e) {
                        return i.handleKeyPress(e)
                    }
                    ;
                    i.on(t, ["loadstart"], function(e) {
                        return i.volumePanelState_(e)
                    });
                    i.on(i.muteToggle, "keyup", function(e) {
                        return i.handleKeyPress(e)
                    });
                    i.on(i.volumeControl, "keyup", function(e) {
                        return i.handleVolumeControlKeyUp(e)
                    });
                    i.on("keydown", function(e) {
                        return i.handleKeyPress(e)
                    });
                    i.on("mouseover", function(e) {
                        return i.handleMouseOver(e)
                    });
                    i.on("mouseout", function(e) {
                        return i.handleMouseOut(e)
                    });
                    i.on(i.volumeControl, ["slideractive"], i.sliderActive_);
                    i.on(i.volumeControl, ["sliderinactive"], i.sliderInactive_);
                    return i
                }
                var n = t.prototype;
                n.sliderActive_ = function e() {
                    this.addClass("vjs-slider-active")
                }
                ;
                n.sliderInactive_ = function e() {
                    this.removeClass("vjs-slider-active")
                }
                ;
                n.volumePanelState_ = function e() {
                    if (this.volumeControl.hasClass("vjs-hidden") && this.muteToggle.hasClass("vjs-hidden")) {
                        this.addClass("vjs-hidden")
                    }
                    if (this.volumeControl.hasClass("vjs-hidden") && !this.muteToggle.hasClass("vjs-hidden")) {
                        this.addClass("vjs-mute-toggle-only")
                    }
                }
                ;
                n.createEl = function t() {
                    var n = "vjs-volume-panel-horizontal";
                    if (!this.options_.inline) {
                        n = "vjs-volume-panel-vertical"
                    }
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-volume-panel vjs-control " + n
                    })
                }
                ;
                n.dispose = function t() {
                    this.handleMouseOut();
                    e.prototype.dispose.call(this)
                }
                ;
                n.handleVolumeControlKeyUp = function e(t) {
                    if (Yt.isEventKey(t, "Esc")) {
                        this.muteToggle.focus()
                    }
                }
                ;
                n.handleMouseOver = function e(t) {
                    this.addClass("vjs-hover");
                    ze(u, "keyup", this.handleKeyPressHandler_)
                }
                ;
                n.handleMouseOut = function e(t) {
                    this.removeClass("vjs-hover");
                    Ye(u, "keyup", this.handleKeyPressHandler_)
                }
                ;
                n.handleKeyPress = function e(t) {
                    if (Yt.isEventKey(t, "Esc")) {
                        this.handleMouseOut()
                    }
                }
                ;
                return t
            }(Pt);
            hr.prototype.options_ = {
                children: ["muteToggle", "volumeControl"]
            };
            Pt.registerComponent("VolumePanel", hr);
            var vr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    if (n) {
                        i.menuButton_ = n.menuButton
                    }
                    i.focusedChild_ = -1;
                    i.on("keydown", function(e) {
                        return i.handleKeyDown(e)
                    });
                    i.boundHandleBlur_ = function(e) {
                        return i.handleBlur(e)
                    }
                    ;
                    i.boundHandleTapClick_ = function(e) {
                        return i.handleTapClick(e)
                    }
                    ;
                    return i
                }
                var n = t.prototype;
                n.addEventListenerForItem = function e(t) {
                    if (!(t instanceof Pt)) {
                        return
                    }
                    this.on(t, "blur", this.boundHandleBlur_);
                    this.on(t, ["tap", "click"], this.boundHandleTapClick_)
                }
                ;
                n.removeEventListenerForItem = function e(t) {
                    if (!(t instanceof Pt)) {
                        return
                    }
                    this.off(t, "blur", this.boundHandleBlur_);
                    this.off(t, ["tap", "click"], this.boundHandleTapClick_)
                }
                ;
                n.removeChild = function t(n) {
                    if (typeof n === "string") {
                        n = this.getChild(n)
                    }
                    this.removeEventListenerForItem(n);
                    e.prototype.removeChild.call(this, n)
                }
                ;
                n.addItem = function e(t) {
                    var n = this.addChild(t);
                    if (n) {
                        this.addEventListenerForItem(n)
                    }
                }
                ;
                n.createEl = function t() {
                    var n = this.options_.contentElType || "ul";
                    this.contentEl_ = ie(n, {
                        className: "vjs-menu-content"
                    });
                    this.contentEl_.setAttribute("role", "menu");
                    var i = e.prototype.createEl.call(this, "div", {
                        append: this.contentEl_,
                        className: "vjs-menu"
                    });
                    i.appendChild(this.contentEl_);
                    ze(i, "click", function(e) {
                        e.preventDefault();
                        e.stopImmediatePropagation()
                    });
                    return i
                }
                ;
                n.dispose = function t() {
                    this.contentEl_ = null;
                    this.boundHandleBlur_ = null;
                    this.boundHandleTapClick_ = null;
                    e.prototype.dispose.call(this)
                }
                ;
                n.handleBlur = function e(t) {
                    var n = t.relatedTarget || u.activeElement;
                    if (!this.children().some(function(e) {
                        return e.el() === n
                    })) {
                        var i = this.menuButton_;
                        if (i && i.buttonPressed_ && n !== i.el().firstChild) {
                            i.unpressButton()
                        }
                    }
                }
                ;
                n.handleTapClick = function e(t) {
                    if (this.menuButton_) {
                        this.menuButton_.unpressButton();
                        var n = this.children();
                        if (!Array.isArray(n)) {
                            return
                        }
                        var i = n.filter(function(e) {
                            return e.el() === t.target
                        })[0];
                        if (!i) {
                            return
                        }
                        if (i.name() !== "CaptionSettingsMenuItem") {
                            this.menuButton_.focus()
                        }
                    }
                }
                ;
                n.handleKeyDown = function e(t) {
                    if (Yt.isEventKey(t, "Left") || Yt.isEventKey(t, "Down")) {
                        t.preventDefault();
                        t.stopPropagation();
                        this.stepForward()
                    } else if (Yt.isEventKey(t, "Right") || Yt.isEventKey(t, "Up")) {
                        t.preventDefault();
                        t.stopPropagation();
                        this.stepBack()
                    }
                }
                ;
                n.stepForward = function e() {
                    var t = 0;
                    if (this.focusedChild_ !== undefined) {
                        t = this.focusedChild_ + 1
                    }
                    this.focus(t)
                }
                ;
                n.stepBack = function e() {
                    var t = 0;
                    if (this.focusedChild_ !== undefined) {
                        t = this.focusedChild_ - 1
                    }
                    this.focus(t)
                }
                ;
                n.focus = function e(t) {
                    if (t === void 0) {
                        t = 0
                    }
                    var n = this.children().slice();
                    var i = n.length && n[0].hasClass("vjs-menu-title");
                    if (i) {
                        n.shift()
                    }
                    if (n.length > 0) {
                        if (t < 0) {
                            t = 0
                        } else if (t >= n.length) {
                            t = n.length - 1
                        }
                        this.focusedChild_ = t;
                        n[t].el_.focus()
                    }
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("Menu", vr);
            var gr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    if (n === void 0) {
                        n = {}
                    }
                    i = e.call(this, t, n) || this;
                    i.menuButton_ = new Li(t,n);
                    i.menuButton_.controlText(i.controlText_);
                    i.menuButton_.el_.setAttribute("aria-haspopup", "true");
                    var r = Li.prototype.buildCSSClass();
                    i.menuButton_.el_.className = i.buildCSSClass() + " " + r;
                    i.menuButton_.removeClass("vjs-control");
                    i.addChild(i.menuButton_);
                    i.update();
                    i.enabled_ = true;
                    var a = function e(t) {
                        return i.handleClick(t)
                    };
                    i.handleMenuKeyUp_ = function(e) {
                        return i.handleMenuKeyUp(e)
                    }
                    ;
                    i.on(i.menuButton_, "tap", a);
                    i.on(i.menuButton_, "click", a);
                    i.on(i.menuButton_, "keydown", function(e) {
                        return i.handleKeyDown(e)
                    });
                    i.on(i.menuButton_, "mouseenter", function() {
                        i.addClass("vjs-hover");
                        i.menu.show();
                        ze(u, "keyup", i.handleMenuKeyUp_)
                    });
                    i.on("mouseleave", function(e) {
                        return i.handleMouseLeave(e)
                    });
                    i.on("keydown", function(e) {
                        return i.handleSubmenuKeyDown(e)
                    });
                    return i
                }
                var n = t.prototype;
                n.update = function e() {
                    var t = this.createMenu();
                    if (this.menu) {
                        this.menu.dispose();
                        this.removeChild(this.menu)
                    }
                    this.menu = t;
                    this.addChild(t);
                    this.buttonPressed_ = false;
                    this.menuButton_.el_.setAttribute("aria-expanded", "false");
                    if (this.items && this.items.length <= this.hideThreshold_) {
                        this.hide()
                    } else {
                        this.show()
                    }
                }
                ;
                n.createMenu = function e() {
                    var t = new vr(this.player_,{
                        menuButton: this
                    });
                    this.hideThreshold_ = 0;
                    if (this.options_.title) {
                        var n = ie("li", {
                            className: "vjs-menu-title",
                            innerHTML: _t(this.options_.title),
                            tabIndex: -1
                        });
                        this.hideThreshold_ += 1;
                        var i = new Pt(this.player_,{
                            el: n
                        });
                        t.addItem(i)
                    }
                    this.items = this.createItems();
                    if (this.items) {
                        for (var r = 0; r < this.items.length; r++) {
                            t.addItem(this.items[r])
                        }
                    }
                    return t
                }
                ;
                n.createItems = function e() {}
                ;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: this.buildWrapperCSSClass()
                    }, {})
                }
                ;
                n.buildWrapperCSSClass = function t() {
                    var n = "vjs-menu-button";
                    if (this.options_.inline === true) {
                        n += "-inline"
                    } else {
                        n += "-popup"
                    }
                    var i = Li.prototype.buildCSSClass();
                    return "vjs-menu-button " + n + " " + i + " " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.buildCSSClass = function t() {
                    var n = "vjs-menu-button";
                    if (this.options_.inline === true) {
                        n += "-inline"
                    } else {
                        n += "-popup"
                    }
                    return "vjs-menu-button " + n + " " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.controlText = function e(t, n) {
                    if (n === void 0) {
                        n = this.menuButton_.el()
                    }
                    return this.menuButton_.controlText(t, n)
                }
                ;
                n.dispose = function t() {
                    this.handleMouseLeave();
                    e.prototype.dispose.call(this)
                }
                ;
                n.handleClick = function e(t) {
                    if (this.buttonPressed_) {
                        this.unpressButton()
                    } else {
                        this.pressButton()
                    }
                }
                ;
                n.handleMouseLeave = function e(t) {
                    this.removeClass("vjs-hover");
                    Ye(u, "keyup", this.handleMenuKeyUp_)
                }
                ;
                n.focus = function e() {
                    this.menuButton_.focus()
                }
                ;
                n.blur = function e() {
                    this.menuButton_.blur()
                }
                ;
                n.handleKeyDown = function e(t) {
                    if (Yt.isEventKey(t, "Esc") || Yt.isEventKey(t, "Tab")) {
                        if (this.buttonPressed_) {
                            this.unpressButton()
                        }
                        if (!Yt.isEventKey(t, "Tab")) {
                            t.preventDefault();
                            this.menuButton_.focus()
                        }
                    } else if (Yt.isEventKey(t, "Up") || Yt.isEventKey(t, "Down")) {
                        if (!this.buttonPressed_) {
                            t.preventDefault();
                            this.pressButton()
                        }
                    }
                }
                ;
                n.handleMenuKeyUp = function e(t) {
                    if (Yt.isEventKey(t, "Esc") || Yt.isEventKey(t, "Tab")) {
                        this.removeClass("vjs-hover")
                    }
                }
                ;
                n.handleSubmenuKeyPress = function e(t) {
                    this.handleSubmenuKeyDown(t)
                }
                ;
                n.handleSubmenuKeyDown = function e(t) {
                    if (Yt.isEventKey(t, "Esc") || Yt.isEventKey(t, "Tab")) {
                        if (this.buttonPressed_) {
                            this.unpressButton()
                        }
                        if (!Yt.isEventKey(t, "Tab")) {
                            t.preventDefault();
                            this.menuButton_.focus()
                        }
                    }
                }
                ;
                n.pressButton = function e() {
                    if (this.enabled_) {
                        this.buttonPressed_ = true;
                        this.menu.show();
                        this.menu.lockShowing();
                        this.menuButton_.el_.setAttribute("aria-expanded", "true");
                        if (z && te()) {
                            return
                        }
                        this.menu.focus()
                    }
                }
                ;
                n.unpressButton = function e() {
                    if (this.enabled_) {
                        this.buttonPressed_ = false;
                        this.menu.unlockShowing();
                        this.menu.hide();
                        this.menuButton_.el_.setAttribute("aria-expanded", "false")
                    }
                }
                ;
                n.disable = function e() {
                    this.unpressButton();
                    this.enabled_ = false;
                    this.addClass("vjs-disabled");
                    this.menuButton_.disable()
                }
                ;
                n.enable = function e() {
                    this.enabled_ = true;
                    this.removeClass("vjs-disabled");
                    this.menuButton_.enable()
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("MenuButton", gr);
            var mr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    var r = n.tracks;
                    i = e.call(this, t, n) || this;
                    if (i.items.length <= 1) {
                        i.hide()
                    }
                    if (!r) {
                        return Ct(i)
                    }
                    var a = et(Ct(i), i.update);
                    r.addEventListener("removetrack", a);
                    r.addEventListener("addtrack", a);
                    r.addEventListener("labelchange", a);
                    i.player_.on("ready", a);
                    i.player_.on("dispose", function() {
                        r.removeEventListener("removetrack", a);
                        r.removeEventListener("addtrack", a);
                        r.removeEventListener("labelchange", a)
                    });
                    return i
                }
                return t
            }(gr);
            Pt.registerComponent("TrackButton", mr);
            var yr = ["Tab", "Esc", "Up", "Down", "Right", "Left"];
            var _r = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.selectable = n.selectable;
                    i.isSelected_ = n.selected || false;
                    i.multiSelectable = n.multiSelectable;
                    i.selected(i.isSelected_);
                    if (i.selectable) {
                        if (i.multiSelectable) {
                            i.el_.setAttribute("role", "menuitemcheckbox")
                        } else {
                            i.el_.setAttribute("role", "menuitemradio")
                        }
                    } else {
                        i.el_.setAttribute("role", "menuitem")
                    }
                    return i
                }
                var n = t.prototype;
                n.createEl = function t(n, i, r) {
                    this.nonIconControl = true;
                    return e.prototype.createEl.call(this, "li", E({
                        className: "vjs-menu-item",
                        innerHTML: '<span class="vjs-menu-item-text">' + this.localize(this.options_.label) + "</span>",
                        tabIndex: -1
                    }, i), r)
                }
                ;
                n.handleKeyDown = function t(n) {
                    if (!yr.some(function(e) {
                        return Yt.isEventKey(n, e)
                    })) {
                        e.prototype.handleKeyDown.call(this, n)
                    }
                }
                ;
                n.handleClick = function e(t) {
                    this.selected(true)
                }
                ;
                n.selected = function e(t) {
                    if (this.selectable) {
                        if (t) {
                            this.addClass("vjs-selected");
                            this.el_.setAttribute("aria-checked", "true");
                            this.controlText(", selected");
                            this.isSelected_ = true
                        } else {
                            this.removeClass("vjs-selected");
                            this.el_.setAttribute("aria-checked", "false");
                            this.controlText("");
                            this.isSelected_ = false
                        }
                    }
                }
                ;
                return t
            }(Ai);
            Pt.registerComponent("MenuItem", _r);
            var br = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    var a = n.track;
                    var s = t.textTracks();
                    n.label = a.label || a.language || "Unknown";
                    n.selected = a.mode === "showing";
                    i = e.call(this, t, n) || this;
                    i.track = a;
                    i.kinds = (n.kinds || [n.kind || i.track.kind]).filter(Boolean);
                    var o = function e() {
                        for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) {
                            n[r] = arguments[r]
                        }
                        i.handleTracksChange.apply(Ct(i), n)
                    };
                    var l = function e() {
                        for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) {
                            n[r] = arguments[r]
                        }
                        i.handleSelectedLanguageChange.apply(Ct(i), n)
                    };
                    t.on(["loadstart", "texttrackchange"], o);
                    s.addEventListener("change", o);
                    s.addEventListener("selectedlanguagechange", l);
                    i.on("dispose", function() {
                        t.off(["loadstart", "texttrackchange"], o);
                        s.removeEventListener("change", o);
                        s.removeEventListener("selectedlanguagechange", l)
                    });
                    if (s.onchange === undefined) {
                        var d;
                        i.on(["tap", "click"], function() {
                            if (typeof r.Event !== "object") {
                                try {
                                    d = new r.Event("change")
                                } catch (e) {}
                            }
                            if (!d) {
                                d = u.createEvent("Event");
                                d.initEvent("change", true, true)
                            }
                            s.dispatchEvent(d)
                        })
                    }
                    i.handleTracksChange();
                    return i
                }
                var n = t.prototype;
                n.handleClick = function t(n) {
                    var i = this.track;
                    var r = this.player_.textTracks();
                    e.prototype.handleClick.call(this, n);
                    if (!r) {
                        return
                    }
                    for (var a = 0; a < r.length; a++) {
                        var s = r[a];
                        if (this.kinds.indexOf(s.kind) === -1) {
                            continue
                        }
                        if (s === i) {
                            if (s.mode !== "showing") {
                                s.mode = "showing"
                            }
                        } else if (s.mode !== "disabled") {
                            s.mode = "disabled"
                        }
                    }
                }
                ;
                n.handleTracksChange = function e(t) {
                    var n = this.track.mode === "showing";
                    if (n !== this.isSelected_) {
                        this.selected(n)
                    }
                }
                ;
                n.handleSelectedLanguageChange = function e(t) {
                    if (this.track.mode === "showing") {
                        var n = this.player_.cache_.selectedLanguage;
                        if (n && n.enabled && n.language === this.track.language && n.kind !== this.track.kind) {
                            return
                        }
                        this.player_.cache_.selectedLanguage = {
                            enabled: true,
                            language: this.track.language,
                            kind: this.track.kind
                        }
                    }
                }
                ;
                n.dispose = function t() {
                    this.track = null;
                    e.prototype.dispose.call(this)
                }
                ;
                return t
            }(_r);
            Pt.registerComponent("TextTrackMenuItem", br);
            var Sr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    n.track = {
                        player: t,
                        kind: n.kind,
                        kinds: n.kinds,
                        default: false,
                        mode: "disabled"
                    };
                    if (!n.kinds) {
                        n.kinds = [n.kind]
                    }
                    if (n.label) {
                        n.track.label = n.label
                    } else {
                        n.track.label = n.kinds.join(" and ") + " off"
                    }
                    n.selectable = true;
                    n.multiSelectable = false;
                    return e.call(this, t, n) || this
                }
                var n = t.prototype;
                n.handleTracksChange = function e(t) {
                    var n = this.player().textTracks();
                    var i = true;
                    for (var r = 0, a = n.length; r < a; r++) {
                        var s = n[r];
                        if (this.options_.kinds.indexOf(s.kind) > -1 && s.mode === "showing") {
                            i = false;
                            break
                        }
                    }
                    if (i !== this.isSelected_) {
                        this.selected(i)
                    }
                }
                ;
                n.handleSelectedLanguageChange = function e(t) {
                    var n = this.player().textTracks();
                    var i = true;
                    for (var r = 0, a = n.length; r < a; r++) {
                        var s = n[r];
                        if (["captions", "descriptions", "subtitles"].indexOf(s.kind) > -1 && s.mode === "showing") {
                            i = false;
                            break
                        }
                    }
                    if (i) {
                        this.player_.cache_.selectedLanguage = {
                            enabled: false
                        }
                    }
                }
                ;
                return t
            }(br);
            Pt.registerComponent("OffTextTrackMenuItem", Sr);
            var Ar = function(e) {
                Ot(t, e);
                function t(t, n) {
                    if (n === void 0) {
                        n = {}
                    }
                    n.tracks = t.textTracks();
                    return e.call(this, t, n) || this
                }
                var n = t.prototype;
                n.createItems = function e(t, n) {
                    if (t === void 0) {
                        t = []
                    }
                    if (n === void 0) {
                        n = br
                    }
                    var i;
                    if (this.label_) {
                        i = this.label_ + " off"
                    }
                    t.push(new Sr(this.player_,{
                        kinds: this.kinds_,
                        kind: this.kind_,
                        label: i
                    }));
                    this.hideThreshold_ += 1;
                    var r = this.player_.textTracks();
                    if (!Array.isArray(this.kinds_)) {
                        this.kinds_ = [this.kind_]
                    }
                    for (var a = 0; a < r.length; a++) {
                        var s = r[a];
                        if (this.kinds_.indexOf(s.kind) > -1) {
                            var o = new n(this.player_,{
                                track: s,
                                kinds: this.kinds_,
                                kind: this.kind_,
                                selectable: true,
                                multiSelectable: false
                            });
                            o.addClass("vjs-" + s.kind + "-menu-item");
                            t.push(o)
                        }
                    }
                    return t
                }
                ;
                return t
            }(mr);
            Pt.registerComponent("TextTrackButton", Ar);
            var Tr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    var r = n.track;
                    var a = n.cue;
                    var s = t.currentTime();
                    n.selectable = true;
                    n.multiSelectable = false;
                    n.label = a.text;
                    n.selected = a.startTime <= s && s < a.endTime;
                    i = e.call(this, t, n) || this;
                    i.track = r;
                    i.cue = a;
                    r.addEventListener("cuechange", et(Ct(i), i.update));
                    return i
                }
                var n = t.prototype;
                n.handleClick = function t(n) {
                    e.prototype.handleClick.call(this);
                    this.player_.currentTime(this.cue.startTime);
                    this.update(this.cue.startTime)
                }
                ;
                n.update = function e(t) {
                    var n = this.cue;
                    var i = this.player_.currentTime();
                    this.selected(n.startTime <= i && i < n.endTime)
                }
                ;
                return t
            }(_r);
            Pt.registerComponent("ChaptersTrackMenuItem", Tr);
            var kr = function(e) {
                Ot(t, e);
                function t(t, n, i) {
                    return e.call(this, t, n, i) || this
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-chapters-button " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.buildWrapperCSSClass = function t() {
                    return "vjs-chapters-button " + e.prototype.buildWrapperCSSClass.call(this)
                }
                ;
                n.update = function t(n) {
                    if (!this.track_ || n && (n.type === "addtrack" || n.type === "removetrack")) {
                        this.setTrack(this.findChaptersTrack())
                    }
                    e.prototype.update.call(this)
                }
                ;
                n.setTrack = function e(t) {
                    if (this.track_ === t) {
                        return
                    }
                    if (!this.updateHandler_) {
                        this.updateHandler_ = this.update.bind(this)
                    }
                    if (this.track_) {
                        var n = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
                        if (n) {
                            n.removeEventListener("load", this.updateHandler_)
                        }
                        this.track_ = null
                    }
                    this.track_ = t;
                    if (this.track_) {
                        this.track_.mode = "hidden";
                        var i = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
                        if (i) {
                            i.addEventListener("load", this.updateHandler_)
                        }
                    }
                }
                ;
                n.findChaptersTrack = function e() {
                    var t = this.player_.textTracks() || [];
                    for (var n = t.length - 1; n >= 0; n--) {
                        var i = t[n];
                        if (i.kind === this.kind_) {
                            return i
                        }
                    }
                }
                ;
                n.getMenuCaption = function e() {
                    if (this.track_ && this.track_.label) {
                        return this.track_.label
                    }
                    return this.localize(_t(this.kind_))
                }
                ;
                n.createMenu = function t() {
                    this.options_.title = this.getMenuCaption();
                    return e.prototype.createMenu.call(this)
                }
                ;
                n.createItems = function e() {
                    var t = [];
                    if (!this.track_) {
                        return t
                    }
                    var n = this.track_.cues;
                    if (!n) {
                        return t
                    }
                    for (var i = 0, r = n.length; i < r; i++) {
                        var a = n[i];
                        var s = new Tr(this.player_,{
                            track: this.track_,
                            cue: a
                        });
                        t.push(s)
                    }
                    return t
                }
                ;
                return t
            }(Ar);
            kr.prototype.kind_ = "chapters";
            kr.prototype.controlText_ = "Chapters";
            Pt.registerComponent("ChaptersButton", kr);
            var Er = function(e) {
                Ot(t, e);
                function t(t, n, i) {
                    var r;
                    r = e.call(this, t, n, i) || this;
                    var a = t.textTracks();
                    var s = et(Ct(r), r.handleTracksChange);
                    a.addEventListener("change", s);
                    r.on("dispose", function() {
                        a.removeEventListener("change", s)
                    });
                    return r
                }
                var n = t.prototype;
                n.handleTracksChange = function e(t) {
                    var n = this.player().textTracks();
                    var i = false;
                    for (var r = 0, a = n.length; r < a; r++) {
                        var s = n[r];
                        if (s.kind !== this.kind_ && s.mode === "showing") {
                            i = true;
                            break
                        }
                    }
                    if (i) {
                        this.disable()
                    } else {
                        this.enable()
                    }
                }
                ;
                n.buildCSSClass = function t() {
                    return "vjs-descriptions-button " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.buildWrapperCSSClass = function t() {
                    return "vjs-descriptions-button " + e.prototype.buildWrapperCSSClass.call(this)
                }
                ;
                return t
            }(Ar);
            Er.prototype.kind_ = "descriptions";
            Er.prototype.controlText_ = "Descriptions";
            Pt.registerComponent("DescriptionsButton", Er);
            var Pr = function(e) {
                Ot(t, e);
                function t(t, n, i) {
                    return e.call(this, t, n, i) || this
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-subtitles-button " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.buildWrapperCSSClass = function t() {
                    return "vjs-subtitles-button " + e.prototype.buildWrapperCSSClass.call(this)
                }
                ;
                return t
            }(Ar);
            Pr.prototype.kind_ = "subtitles";
            Pr.prototype.controlText_ = "Subtitles";
            Pt.registerComponent("SubtitlesButton", Pr);
            var Ir = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    n.track = {
                        player: t,
                        kind: n.kind,
                        label: n.kind + " settings",
                        selectable: false,
                        default: false,
                        mode: "disabled"
                    };
                    n.selectable = false;
                    n.name = "CaptionSettingsMenuItem";
                    i = e.call(this, t, n) || this;
                    i.addClass("vjs-texttrack-settings");
                    i.controlText(", opens " + n.kind + " settings dialog");
                    return i
                }
                var n = t.prototype;
                n.handleClick = function e(t) {
                    this.player().getChild("textTrackSettings").open()
                }
                ;
                return t
            }(br);
            Pt.registerComponent("CaptionSettingsMenuItem", Ir);
            var Cr = function(e) {
                Ot(t, e);
                function t(t, n, i) {
                    return e.call(this, t, n, i) || this
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-captions-button " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.buildWrapperCSSClass = function t() {
                    return "vjs-captions-button " + e.prototype.buildWrapperCSSClass.call(this)
                }
                ;
                n.createItems = function t() {
                    var n = [];
                    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild("textTrackSettings")) {
                        n.push(new Ir(this.player_,{
                            kind: this.kind_
                        }));
                        this.hideThreshold_ += 1
                    }
                    return e.prototype.createItems.call(this, n)
                }
                ;
                return t
            }(Ar);
            Cr.prototype.kind_ = "captions";
            Cr.prototype.controlText_ = "Captions";
            Pt.registerComponent("CaptionsButton", Cr);
            var wr = function(e) {
                Ot(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var n = t.prototype;
                n.createEl = function t(n, i, r) {
                    var a = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label);
                    if (this.options_.track.kind === "captions") {
                        a += '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' + this.localize("Captions") + "</span>\n      "
                    }
                    a += "</span>";
                    var s = e.prototype.createEl.call(this, n, E({
                        innerHTML: a
                    }, i), r);
                    return s
                }
                ;
                return t
            }(br);
            Pt.registerComponent("SubsCapsMenuItem", wr);
            var jr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    if (n === void 0) {
                        n = {}
                    }
                    i = e.call(this, t, n) || this;
                    i.label_ = "subtitles";
                    if (["en", "en-us", "en-ca", "fr-ca"].indexOf(i.player_.language_) > -1) {
                        i.label_ = "captions"
                    }
                    i.menuButton_.controlText(_t(i.label_));
                    return i
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-subs-caps-button " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.buildWrapperCSSClass = function t() {
                    return "vjs-subs-caps-button " + e.prototype.buildWrapperCSSClass.call(this)
                }
                ;
                n.createItems = function t() {
                    var n = [];
                    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild("textTrackSettings")) {
                        n.push(new Ir(this.player_,{
                            kind: this.label_
                        }));
                        this.hideThreshold_ += 1
                    }
                    n = e.prototype.createItems.call(this, n, wr);
                    return n
                }
                ;
                return t
            }(Ar);
            jr.prototype.kinds_ = ["captions", "subtitles"];
            jr.prototype.controlText_ = "Subtitles";
            Pt.registerComponent("SubsCapsButton", jr);
            var Lr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    var r = n.track;
                    var a = t.audioTracks();
                    n.label = r.label || r.language || "Unknown";
                    n.selected = r.enabled;
                    i = e.call(this, t, n) || this;
                    i.track = r;
                    i.addClass("vjs-" + r.kind + "-menu-item");
                    var s = function e() {
                        for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) {
                            n[r] = arguments[r]
                        }
                        i.handleTracksChange.apply(Ct(i), n)
                    };
                    a.addEventListener("change", s);
                    i.on("dispose", function() {
                        a.removeEventListener("change", s)
                    });
                    return i
                }
                var n = t.prototype;
                n.createEl = function t(n, i, r) {
                    var a = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label);
                    if (this.options_.track.kind === "main-desc") {
                        a += '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' + this.localize("Descriptions") + "</span>\n      "
                    }
                    a += "</span>";
                    var s = e.prototype.createEl.call(this, n, E({
                        innerHTML: a
                    }, i), r);
                    return s
                }
                ;
                n.handleClick = function t(n) {
                    e.prototype.handleClick.call(this, n);
                    this.track.enabled = true
                }
                ;
                n.handleTracksChange = function e(t) {
                    this.selected(this.track.enabled)
                }
                ;
                return t
            }(_r);
            Pt.registerComponent("AudioTrackMenuItem", Lr);
            var Or = function(e) {
                Ot(t, e);
                function t(t, n) {
                    if (n === void 0) {
                        n = {}
                    }
                    n.tracks = t.audioTracks();
                    return e.call(this, t, n) || this
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-audio-button " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.buildWrapperCSSClass = function t() {
                    return "vjs-audio-button " + e.prototype.buildWrapperCSSClass.call(this)
                }
                ;
                n.createItems = function e(t) {
                    if (t === void 0) {
                        t = []
                    }
                    this.hideThreshold_ = 1;
                    var n = this.player_.audioTracks();
                    for (var i = 0; i < n.length; i++) {
                        var r = n[i];
                        t.push(new Lr(this.player_,{
                            track: r,
                            selectable: true,
                            multiSelectable: false
                        }))
                    }
                    return t
                }
                ;
                return t
            }(mr);
            Or.prototype.controlText_ = "Audio Track";
            Pt.registerComponent("AudioTrackButton", Or);
            var xr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    var r = n.rate;
                    var a = parseFloat(r, 10);
                    n.label = r;
                    n.selected = a === 1;
                    n.selectable = true;
                    n.multiSelectable = false;
                    i = e.call(this, t, n) || this;
                    i.label = r;
                    i.rate = a;
                    i.on(t, "ratechange", function(e) {
                        return i.update(e)
                    });
                    return i
                }
                var n = t.prototype;
                n.handleClick = function t(n) {
                    e.prototype.handleClick.call(this);
                    this.player().playbackRate(this.rate)
                }
                ;
                n.update = function e(t) {
                    this.selected(this.player().playbackRate() === this.rate)
                }
                ;
                return t
            }(_r);
            xr.prototype.contentElType = "button";
            Pt.registerComponent("PlaybackRateMenuItem", xr);
            var Dr = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.updateVisibility();
                    i.updateLabel();
                    i.on(t, "loadstart", function(e) {
                        return i.updateVisibility(e)
                    });
                    i.on(t, "ratechange", function(e) {
                        return i.updateLabel(e)
                    });
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    var n = e.prototype.createEl.call(this);
                    this.labelEl_ = ie("div", {
                        className: "vjs-playback-rate-value",
                        innerHTML: "1x"
                    });
                    n.appendChild(this.labelEl_);
                    return n
                }
                ;
                n.dispose = function t() {
                    this.labelEl_ = null;
                    e.prototype.dispose.call(this)
                }
                ;
                n.buildCSSClass = function t() {
                    return "vjs-playback-rate " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.buildWrapperCSSClass = function t() {
                    return "vjs-playback-rate " + e.prototype.buildWrapperCSSClass.call(this)
                }
                ;
                n.createMenu = function e() {
                    var t = new vr(this.player());
                    var n = this.playbackRates();
                    if (n) {
                        for (var i = n.length - 1; i >= 0; i--) {
                            t.addChild(new xr(this.player(),{
                                rate: n[i] + "x"
                            }))
                        }
                    }
                    return t
                }
                ;
                n.updateARIAAttributes = function e() {
                    this.el().setAttribute("aria-valuenow", this.player().playbackRate())
                }
                ;
                n.handleClick = function e(t) {
                    var n = this.player().playbackRate();
                    var i = this.playbackRates();
                    var r = i[0];
                    for (var a = 0; a < i.length; a++) {
                        if (i[a] > n) {
                            r = i[a];
                            break
                        }
                    }
                    this.player().playbackRate(r)
                }
                ;
                n.playbackRates = function e() {
                    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates
                }
                ;
                n.playbackRateSupported = function e() {
                    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0
                }
                ;
                n.updateVisibility = function e(t) {
                    if (this.playbackRateSupported()) {
                        this.removeClass("vjs-hidden")
                    } else {
                        this.addClass("vjs-hidden")
                    }
                }
                ;
                n.updateLabel = function e(t) {
                    if (this.playbackRateSupported()) {
                        this.labelEl_.innerHTML = this.player().playbackRate() + "x"
                    }
                }
                ;
                return t
            }(gr);
            Dr.prototype.controlText_ = "Playback Rate";
            Pt.registerComponent("PlaybackRateMenuButton", Dr);
            var Nr = function(e) {
                Ot(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-spacer " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: this.buildCSSClass()
                    })
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("Spacer", Nr);
            var Rr = function(e) {
                Ot(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-custom-control-spacer " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.createEl = function t() {
                    var n = e.prototype.createEl.call(this, {
                        className: this.buildCSSClass()
                    });
                    n.innerHTML = "\xa0";
                    return n
                }
                ;
                return t
            }(Nr);
            Pt.registerComponent("CustomControlSpacer", Rr);
            var Mr = function(e) {
                Ot(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "div", {
                        className: "vjs-control-bar",
                        dir: "ltr"
                    })
                }
                ;
                return t
            }(Pt);
            Mr.prototype.options_ = {
                children: ["playToggle", "volumePanel", "currentTimeDisplay", "timeDivider", "durationDisplay", "progressControl", "liveDisplay", "seekToLive", "remainingTimeDisplay", "customControlSpacer", "playbackRateMenuButton", "chaptersButton", "descriptionsButton", "subsCapsButton", "audioTrackButton", "fullscreenToggle"]
            };
            if ("exitPictureInPicture"in u) {
                Mr.prototype.options_.children.splice(Mr.prototype.options_.children.length - 1, 0, "pictureInPictureToggle")
            }
            Pt.registerComponent("ControlBar", Mr);
            var Ur = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    i.on(t, "error", function(e) {
                        return i.open(e)
                    });
                    return i
                }
                var n = t.prototype;
                n.buildCSSClass = function t() {
                    return "vjs-error-display " + e.prototype.buildCSSClass.call(this)
                }
                ;
                n.content = function e() {
                    var t = this.player().error();
                    return t ? this.localize(t.message) : ""
                }
                ;
                return t
            }(tn);
            Ur.prototype.options_ = b({}, tn.prototype.options_, {
                pauseOnOpen: false,
                fillAlways: true,
                temporary: false,
                uncloseable: true
            });
            Pt.registerComponent("ErrorDisplay", Ur);
            var Br = "vjs-text-track-settings";
            var Fr = ["#000", "Black"];
            var Vr = ["#00F", "Blue"];
            var qr = ["#0FF", "Cyan"];
            var Hr = ["#0F0", "Green"];
            var Gr = ["#F0F", "Magenta"];
            var Wr = ["#F00", "Red"];
            var Kr = ["#FFF", "White"];
            var zr = ["#FF0", "Yellow"];
            var Yr = ["1", "Opaque"];
            var Xr = ["0.5", "Semi-Transparent"];
            var Qr = ["0", "Transparent"];
            var Zr = {
                backgroundColor: {
                    selector: ".vjs-bg-color > select",
                    id: "captions-background-color-%s",
                    label: "Color",
                    options: [Fr, Kr, Wr, Hr, Vr, zr, Gr, qr]
                },
                backgroundOpacity: {
                    selector: ".vjs-bg-opacity > select",
                    id: "captions-background-opacity-%s",
                    label: "Transparency",
                    options: [Yr, Xr, Qr]
                },
                color: {
                    selector: ".vjs-fg-color > select",
                    id: "captions-foreground-color-%s",
                    label: "Color",
                    options: [Kr, Fr, Wr, Hr, Vr, zr, Gr, qr]
                },
                edgeStyle: {
                    selector: ".vjs-edge-style > select",
                    id: "%s",
                    label: "Text Edge Style",
                    options: [["none", "None"], ["raised", "Raised"], ["depressed", "Depressed"], ["uniform", "Uniform"], ["dropshadow", "Dropshadow"]]
                },
                fontFamily: {
                    selector: ".vjs-font-family > select",
                    id: "captions-font-family-%s",
                    label: "Font Family",
                    options: [["proportionalSansSerif", "Proportional Sans-Serif"], ["monospaceSansSerif", "Monospace Sans-Serif"], ["proportionalSerif", "Proportional Serif"], ["monospaceSerif", "Monospace Serif"], ["casual", "Casual"], ["script", "Script"], ["small-caps", "Small Caps"]]
                },
                fontPercent: {
                    selector: ".vjs-font-percent > select",
                    id: "captions-font-size-%s",
                    label: "Font Size",
                    options: [["0.50", "50%"], ["0.75", "75%"], ["1.00", "100%"], ["1.25", "125%"], ["1.50", "150%"], ["1.75", "175%"], ["2.00", "200%"], ["3.00", "300%"], ["4.00", "400%"]],
                    default: 2,
                    parser: function e(t) {
                        return t === "1.00" ? null : Number(t)
                    }
                },
                textOpacity: {
                    selector: ".vjs-text-opacity > select",
                    id: "captions-foreground-opacity-%s",
                    label: "Transparency",
                    options: [Yr, Xr]
                },
                windowColor: {
                    selector: ".vjs-window-color > select",
                    id: "captions-window-color-%s",
                    label: "Color"
                },
                windowOpacity: {
                    selector: ".vjs-window-opacity > select",
                    id: "captions-window-opacity-%s",
                    label: "Transparency",
                    options: [Qr, Xr, Yr]
                }
            };
            Zr.windowColor.options = Zr.backgroundColor.options;
            function Jr(e, t) {
                if (t) {
                    e = t(e)
                }
                if (e && e !== "none") {
                    return e
                }
            }
            function $r(e, t) {
                var n = e.options[e.options.selectedIndex].value;
                return Jr(n, t)
            }
            function ea(e, t, n) {
                if (!t) {
                    return
                }
                for (var i = 0; i < e.options.length; i++) {
                    if (Jr(e.options[i].value, n) === t) {
                        e.selectedIndex = i;
                        break
                    }
                }
            }
            var ta = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    n.temporary = false;
                    i = e.call(this, t, n) || this;
                    i.updateDisplay = i.updateDisplay.bind(Ct(i));
                    i.fill();
                    i.hasBeenOpened_ = i.hasBeenFilled_ = true;
                    i.endDialog = ie("p", {
                        className: "vjs-control-text",
                        textContent: i.localize("End of dialog window.")
                    });
                    i.el().appendChild(i.endDialog);
                    i.setDefaults();
                    if (n.persistTextTrackSettings === undefined) {
                        i.options_.persistTextTrackSettings = i.options_.playerOptions.persistTextTrackSettings
                    }
                    i.on(i.$(".vjs-done-button"), "click", function() {
                        i.saveSettings();
                        i.close()
                    });
                    i.on(i.$(".vjs-default-button"), "click", function() {
                        i.setDefaults();
                        i.updateDisplay()
                    });
                    T(Zr, function(e) {
                        i.on(i.$(e.selector), "change", i.updateDisplay)
                    });
                    if (i.options_.persistTextTrackSettings) {
                        i.restoreSettings()
                    }
                    return i
                }
                var n = t.prototype;
                n.dispose = function t() {
                    this.endDialog = null;
                    e.prototype.dispose.call(this)
                }
                ;
                n.createElSelect_ = function e(t, n, i) {
                    var r = this;
                    if (n === void 0) {
                        n = ""
                    }
                    if (i === void 0) {
                        i = "label"
                    }
                    var a = Zr[t];
                    var s = a.id.replace("%s", this.id_);
                    var o = [n, s].join(" ").trim();
                    return ["<" + i + ' id="' + s + '" class="' + (i === "label" ? "vjs-label" : "") + '">', this.localize(a.label), "</" + i + ">", '<select aria-labelledby="' + o + '">'].concat(a.options.map(function(e) {
                        var t = s + "-" + e[1].replace(/\W+/g, "");
                        return ['<option id="' + t + '" value="' + e[0] + '" ', 'aria-labelledby="' + o + " " + t + '">', r.localize(e[1]), "</option>"].join("")
                    })).concat("</select>").join("")
                }
                ;
                n.createElFgColor_ = function e() {
                    var t = "captions-text-legend-" + this.id_;
                    return ['<fieldset class="vjs-fg-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Text"), "</legend>", this.createElSelect_("color", t), '<span class="vjs-text-opacity vjs-opacity">', this.createElSelect_("textOpacity", t), "</span>", "</fieldset>"].join("")
                }
                ;
                n.createElBgColor_ = function e() {
                    var t = "captions-background-" + this.id_;
                    return ['<fieldset class="vjs-bg-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Background"), "</legend>", this.createElSelect_("backgroundColor", t), '<span class="vjs-bg-opacity vjs-opacity">', this.createElSelect_("backgroundOpacity", t), "</span>", "</fieldset>"].join("")
                }
                ;
                n.createElWinColor_ = function e() {
                    var t = "captions-window-" + this.id_;
                    return ['<fieldset class="vjs-window-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Window"), "</legend>", this.createElSelect_("windowColor", t), '<span class="vjs-window-opacity vjs-opacity">', this.createElSelect_("windowOpacity", t), "</span>", "</fieldset>"].join("")
                }
                ;
                n.createElColors_ = function e() {
                    return ie("div", {
                        className: "vjs-track-settings-colors",
                        innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join("")
                    })
                }
                ;
                n.createElFont_ = function e() {
                    return ie("div", {
                        className: "vjs-track-settings-font",
                        innerHTML: ['<fieldset class="vjs-font-percent vjs-track-setting">', this.createElSelect_("fontPercent", "", "legend"), "</fieldset>", '<fieldset class="vjs-edge-style vjs-track-setting">', this.createElSelect_("edgeStyle", "", "legend"), "</fieldset>", '<fieldset class="vjs-font-family vjs-track-setting">', this.createElSelect_("fontFamily", "", "legend"), "</fieldset>"].join("")
                    })
                }
                ;
                n.createElControls_ = function e() {
                    var t = this.localize("restore all settings to the default values");
                    return ie("div", {
                        className: "vjs-track-settings-controls",
                        innerHTML: ['<button type="button" class="vjs-default-button" title="' + t + '">', this.localize("Reset"), '<span class="vjs-control-text"> ' + t + "</span>", "</button>", '<button type="button" class="vjs-done-button">' + this.localize("Done") + "</button>"].join("")
                    })
                }
                ;
                n.content = function e() {
                    return [this.createElColors_(), this.createElFont_(), this.createElControls_()]
                }
                ;
                n.label = function e() {
                    return this.localize("Caption Settings Dialog")
                }
                ;
                n.description = function e() {
                    return this.localize("Beginning of dialog window. Escape will cancel and close the window.")
                }
                ;
                n.buildCSSClass = function t() {
                    return e.prototype.buildCSSClass.call(this) + " vjs-text-track-settings"
                }
                ;
                n.getValues = function e() {
                    var t = this;
                    return k(Zr, function(e, n, i) {
                        var r = $r(t.$(n.selector), n.parser);
                        if (r !== undefined) {
                            e[i] = r
                        }
                        return e
                    }, {})
                }
                ;
                n.setValues = function e(t) {
                    var n = this;
                    T(Zr, function(e, i) {
                        ea(n.$(e.selector), t[i], e.parser)
                    })
                }
                ;
                n.setDefaults = function e() {
                    var t = this;
                    T(Zr, function(e) {
                        var n = e.hasOwnProperty("default") ? e["default"] : 0;
                        t.$(e.selector).selectedIndex = n
                    })
                }
                ;
                n.restoreSettings = function e() {
                    var t;
                    try {
                        t = JSON.parse(r.localStorage.getItem(Br))
                    } catch (e) {
                        y.warn(e)
                    }
                    if (t) {
                        this.setValues(t)
                    }
                }
                ;
                n.saveSettings = function e() {
                    if (!this.options_.persistTextTrackSettings) {
                        return
                    }
                    var t = this.getValues();
                    try {
                        if (Object.keys(t).length) {
                            r.localStorage.setItem(Br, JSON.stringify(t))
                        } else {
                            r.localStorage.removeItem(Br)
                        }
                    } catch (e) {
                        y.warn(e)
                    }
                }
                ;
                n.updateDisplay = function e() {
                    var t = this.player_.getChild("textTrackDisplay");
                    if (t) {
                        t.updateDisplay()
                    }
                }
                ;
                n.conditionalBlur_ = function e() {
                    this.previouslyActiveEl_ = null;
                    var t = this.player_.controlBar;
                    var n = t && t.subsCapsButton;
                    var i = t && t.captionsButton;
                    if (n) {
                        n.focus()
                    } else if (i) {
                        i.focus()
                    }
                }
                ;
                return t
            }(tn);
            Pt.registerComponent("TextTrackSettings", ta);
            var na = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    var a = n.ResizeObserver || r.ResizeObserver;
                    if (n.ResizeObserver === null) {
                        a = false
                    }
                    var s = St({
                        createEl: !a,
                        reportTouchActivity: false
                    }, n);
                    i = e.call(this, t, s) || this;
                    i.ResizeObserver = n.ResizeObserver || r.ResizeObserver;
                    i.loadListener_ = null;
                    i.resizeObserver_ = null;
                    i.debouncedHandler_ = nt(function() {
                        i.resizeHandler()
                    }, 100, false, Ct(i));
                    if (a) {
                        i.resizeObserver_ = new i.ResizeObserver(i.debouncedHandler_);
                        i.resizeObserver_.observe(t.el())
                    } else {
                        i.loadListener_ = function() {
                            if (!i.el_ || !i.el_.contentWindow) {
                                return
                            }
                            var e = i.debouncedHandler_;
                            var t = i.unloadListener_ = function() {
                                Ye(this, "resize", e);
                                Ye(this, "unload", t);
                                t = null
                            }
                            ;
                            ze(i.el_.contentWindow, "unload", t);
                            ze(i.el_.contentWindow, "resize", e)
                        }
                        ;
                        i.one("load", i.loadListener_)
                    }
                    return i
                }
                var n = t.prototype;
                n.createEl = function t() {
                    return e.prototype.createEl.call(this, "iframe", {
                        className: "vjs-resize-manager",
                        tabIndex: -1
                    }, {
                        "aria-hidden": "true"
                    })
                }
                ;
                n.resizeHandler = function e() {
                    if (!this.player_ || !this.player_.trigger) {
                        return
                    }
                    this.player_.trigger("playerresize")
                }
                ;
                n.dispose = function t() {
                    if (this.debouncedHandler_) {
                        this.debouncedHandler_.cancel()
                    }
                    if (this.resizeObserver_) {
                        if (this.player_.el()) {
                            this.resizeObserver_.unobserve(this.player_.el())
                        }
                        this.resizeObserver_.disconnect()
                    }
                    if (this.loadListener_) {
                        this.off("load", this.loadListener_)
                    }
                    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {
                        this.unloadListener_.call(this.el_.contentWindow)
                    }
                    this.ResizeObserver = null;
                    this.resizeObserver = null;
                    this.debouncedHandler_ = null;
                    this.loadListener_ = null;
                    e.prototype.dispose.call(this)
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("ResizeManager", na);
            var ia = {
                trackingThreshold: 30,
                liveTolerance: 15
            };
            var ra = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    var r = St(ia, n, {
                        createEl: false
                    });
                    i = e.call(this, t, r) || this;
                    i.handleVisibilityChange_ = function(e) {
                        return i.handleVisibilityChange(e)
                    }
                    ;
                    i.trackLiveHandler_ = function() {
                        return i.trackLive_()
                    }
                    ;
                    i.handlePlay_ = function(e) {
                        return i.handlePlay(e)
                    }
                    ;
                    i.handleFirstTimeupdate_ = function(e) {
                        return i.handleFirstTimeupdate(e)
                    }
                    ;
                    i.handleSeeked_ = function(e) {
                        return i.handleSeeked(e)
                    }
                    ;
                    i.seekToLiveEdge_ = function(e) {
                        return i.seekToLiveEdge(e)
                    }
                    ;
                    i.reset_();
                    i.on(i.player_, "durationchange", function(e) {
                        return i.handleDurationchange(e)
                    });
                    i.one(i.player_, "canplay", function() {
                        return i.toggleTracking()
                    });
                    if (V && "hidden"in u && "visibilityState"in u) {
                        i.on(u, "visibilitychange", i.handleVisibilityChange_)
                    }
                    return i
                }
                var n = t.prototype;
                n.handleVisibilityChange = function e() {
                    if (this.player_.duration() !== Infinity) {
                        return
                    }
                    if (u.hidden) {
                        this.stopTracking()
                    } else {
                        this.startTracking()
                    }
                }
                ;
                n.trackLive_ = function e() {
                    var t = this.player_.seekable();
                    if (!t || !t.length) {
                        return
                    }
                    var n = Number(r.performance.now().toFixed(4));
                    var i = this.lastTime_ === -1 ? 0 : (n - this.lastTime_) / 1e3;
                    this.lastTime_ = n;
                    this.pastSeekEnd_ = this.pastSeekEnd() + i;
                    var a = this.liveCurrentTime();
                    var s = this.player_.currentTime();
                    var o = this.player_.paused() || this.seekedBehindLive_ || Math.abs(a - s) > this.options_.liveTolerance;
                    if (!this.timeupdateSeen_ || a === Infinity) {
                        o = false
                    }
                    if (o !== this.behindLiveEdge_) {
                        this.behindLiveEdge_ = o;
                        this.trigger("liveedgechange")
                    }
                }
                ;
                n.handleDurationchange = function e() {
                    this.toggleTracking()
                }
                ;
                n.toggleTracking = function e() {
                    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {
                        if (this.player_.options_.liveui) {
                            this.player_.addClass("vjs-liveui")
                        }
                        this.startTracking()
                    } else {
                        this.player_.removeClass("vjs-liveui");
                        this.stopTracking()
                    }
                }
                ;
                n.startTracking = function e() {
                    if (this.isTracking()) {
                        return
                    }
                    if (!this.timeupdateSeen_) {
                        this.timeupdateSeen_ = this.player_.hasStarted()
                    }
                    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, $e);
                    this.trackLive_();
                    this.on(this.player_, ["play", "pause"], this.trackLiveHandler_);
                    if (!this.timeupdateSeen_) {
                        this.one(this.player_, "play", this.handlePlay_);
                        this.one(this.player_, "timeupdate", this.handleFirstTimeupdate_)
                    } else {
                        this.on(this.player_, "seeked", this.handleSeeked_)
                    }
                }
                ;
                n.handleFirstTimeupdate = function e() {
                    this.timeupdateSeen_ = true;
                    this.on(this.player_, "seeked", this.handleSeeked_)
                }
                ;
                n.handleSeeked = function e() {
                    var t = Math.abs(this.liveCurrentTime() - this.player_.currentTime());
                    this.seekedBehindLive_ = this.skipNextSeeked_ ? false : t > 2;
                    this.skipNextSeeked_ = false;
                    this.trackLive_()
                }
                ;
                n.handlePlay = function e() {
                    this.one(this.player_, "timeupdate", this.seekToLiveEdge_)
                }
                ;
                n.reset_ = function e() {
                    this.lastTime_ = -1;
                    this.pastSeekEnd_ = 0;
                    this.lastSeekEnd_ = -1;
                    this.behindLiveEdge_ = true;
                    this.timeupdateSeen_ = false;
                    this.seekedBehindLive_ = false;
                    this.skipNextSeeked_ = false;
                    this.clearInterval(this.trackingInterval_);
                    this.trackingInterval_ = null;
                    this.off(this.player_, ["play", "pause"], this.trackLiveHandler_);
                    this.off(this.player_, "seeked", this.handleSeeked_);
                    this.off(this.player_, "play", this.handlePlay_);
                    this.off(this.player_, "timeupdate", this.handleFirstTimeupdate_);
                    this.off(this.player_, "timeupdate", this.seekToLiveEdge_)
                }
                ;
                n.stopTracking = function e() {
                    if (!this.isTracking()) {
                        return
                    }
                    this.reset_();
                    this.trigger("liveedgechange")
                }
                ;
                n.seekableEnd = function e() {
                    var t = this.player_.seekable();
                    var n = [];
                    var i = t ? t.length : 0;
                    while (i--) {
                        n.push(t.end(i))
                    }
                    return n.length ? n.sort()[n.length - 1] : Infinity
                }
                ;
                n.seekableStart = function e() {
                    var t = this.player_.seekable();
                    var n = [];
                    var i = t ? t.length : 0;
                    while (i--) {
                        n.push(t.start(i))
                    }
                    return n.length ? n.sort()[0] : 0
                }
                ;
                n.liveWindow = function e() {
                    var t = this.liveCurrentTime();
                    if (t === Infinity) {
                        return 0
                    }
                    return t - this.seekableStart()
                }
                ;
                n.isLive = function e() {
                    return this.isTracking()
                }
                ;
                n.atLiveEdge = function e() {
                    return !this.behindLiveEdge()
                }
                ;
                n.liveCurrentTime = function e() {
                    return this.pastSeekEnd() + this.seekableEnd()
                }
                ;
                n.pastSeekEnd = function e() {
                    var t = this.seekableEnd();
                    if (this.lastSeekEnd_ !== -1 && t !== this.lastSeekEnd_) {
                        this.pastSeekEnd_ = 0
                    }
                    this.lastSeekEnd_ = t;
                    return this.pastSeekEnd_
                }
                ;
                n.behindLiveEdge = function e() {
                    return this.behindLiveEdge_
                }
                ;
                n.isTracking = function e() {
                    return typeof this.trackingInterval_ === "number"
                }
                ;
                n.seekToLiveEdge = function e() {
                    this.seekedBehindLive_ = false;
                    if (this.atLiveEdge()) {
                        return
                    }
                    this.skipNextSeeked_ = true;
                    this.player_.currentTime(this.liveCurrentTime())
                }
                ;
                n.dispose = function t() {
                    this.off(u, "visibilitychange", this.handleVisibilityChange_);
                    this.stopTracking();
                    e.prototype.dispose.call(this)
                }
                ;
                return t
            }(Pt);
            Pt.registerComponent("LiveTracker", ra);
            var aa = function e(t) {
                var n = t.el();
                if (n.hasAttribute("src")) {
                    t.triggerSourceset(n.src);
                    return true
                }
                var i = t.$$("source");
                var r = [];
                var a = "";
                if (!i.length) {
                    return false
                }
                for (var s = 0; s < i.length; s++) {
                    var o = i[s].src;
                    if (o && r.indexOf(o) === -1) {
                        r.push(o)
                    }
                }
                if (!r.length) {
                    return false
                }
                if (r.length === 1) {
                    a = r[0]
                }
                t.triggerSourceset(a);
                return true
            };
            var sa = Object.defineProperty({}, "innerHTML", {
                get: function e() {
                    return this.cloneNode(true).innerHTML
                },
                set: function e(t) {
                    var n = u.createElement(this.nodeName.toLowerCase());
                    n.innerHTML = t;
                    var i = u.createDocumentFragment();
                    while (n.childNodes.length) {
                        i.appendChild(n.childNodes[0])
                    }
                    this.innerText = "";
                    r.Element.prototype.appendChild.call(this, i);
                    return this.innerHTML
                }
            });
            var oa = function e(t, n) {
                var i = {};
                for (var r = 0; r < t.length; r++) {
                    i = Object.getOwnPropertyDescriptor(t[r], n);
                    if (i && i.set && i.get) {
                        break
                    }
                }
                i.enumerable = true;
                i.configurable = true;
                return i
            };
            var ua = function e(t) {
                return oa([t.el(), r.HTMLMediaElement.prototype, r.Element.prototype, sa], "innerHTML")
            };
            var la = function e(t) {
                var n = t.el();
                if (n.resetSourceWatch_) {
                    return
                }
                var i = {};
                var r = ua(t);
                var a = function e(i) {
                    return function() {
                        for (var e = arguments.length, r = new Array(e), a = 0; a < e; a++) {
                            r[a] = arguments[a]
                        }
                        var s = i.apply(n, r);
                        aa(t);
                        return s
                    }
                };
                ["append", "appendChild", "insertAdjacentHTML"].forEach(function(e) {
                    if (!n[e]) {
                        return
                    }
                    i[e] = n[e];
                    n[e] = a(i[e])
                });
                Object.defineProperty(n, "innerHTML", St(r, {
                    set: a(r.set)
                }));
                n.resetSourceWatch_ = function() {
                    n.resetSourceWatch_ = null;
                    Object.keys(i).forEach(function(e) {
                        n[e] = i[e]
                    });
                    Object.defineProperty(n, "innerHTML", r)
                }
                ;
                t.one("sourceset", n.resetSourceWatch_)
            };
            var da = Object.defineProperty({}, "src", {
                get: function e() {
                    if (this.hasAttribute("src")) {
                        return yn(r.Element.prototype.getAttribute.call(this, "src"))
                    }
                    return ""
                },
                set: function e(t) {
                    r.Element.prototype.setAttribute.call(this, "src", t);
                    return t
                }
            });
            var ca = function e(t) {
                return oa([t.el(), r.HTMLMediaElement.prototype, da], "src")
            };
            var fa = function e(t) {
                if (!t.featuresSourceset) {
                    return
                }
                var n = t.el();
                if (n.resetSourceset_) {
                    return
                }
                var i = ca(t);
                var r = n.setAttribute;
                var a = n.load;
                Object.defineProperty(n, "src", St(i, {
                    set: function e(r) {
                        var a = i.set.call(n, r);
                        t.triggerSourceset(n.src);
                        return a
                    }
                }));
                n.setAttribute = function(e, i) {
                    var a = r.call(n, e, i);
                    if (/src/i.test(e)) {
                        t.triggerSourceset(n.src)
                    }
                    return a
                }
                ;
                n.load = function() {
                    var e = a.call(n);
                    if (!aa(t)) {
                        t.triggerSourceset("");
                        la(t)
                    }
                    return e
                }
                ;
                if (n.currentSrc) {
                    t.triggerSourceset(n.currentSrc)
                } else if (!aa(t)) {
                    la(t)
                }
                n.resetSourceset_ = function() {
                    n.resetSourceset_ = null;
                    n.load = a;
                    n.setAttribute = r;
                    Object.defineProperty(n, "src", i);
                    if (n.resetSourceWatch_) {
                        n.resetSourceWatch_()
                    }
                }
            };
            var pa = function e(t, n, i, r) {
                if (r === void 0) {
                    r = true
                }
                var a = function e(i) {
                    return Object.defineProperty(t, n, {
                        value: i,
                        enumerable: true,
                        writable: true
                    })
                };
                var s = {
                    configurable: true,
                    enumerable: true,
                    get: function e() {
                        var t = i();
                        a(t);
                        return t
                    }
                };
                if (r) {
                    s.set = a
                }
                return Object.defineProperty(t, n, s)
            };
            var ha = function(e) {
                Ot(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this, t, n) || this;
                    var r = t.source;
                    var a = false;
                    if (r && (i.el_.currentSrc !== r.src || t.tag && t.tag.initNetworkState_ === 3)) {
                        i.setSource(r)
                    } else {
                        i.handleLateInit_(i.el_)
                    }
                    if (t.enableSourceset) {
                        i.setupSourcesetHandling_()
                    }
                    i.isScrubbing_ = false;
                    if (i.el_.hasChildNodes()) {
                        var s = i.el_.childNodes;
                        var o = s.length;
                        var u = [];
                        while (o--) {
                            var l = s[o];
                            var d = l.nodeName.toLowerCase();
                            if (d === "track") {
                                if (!i.featuresNativeTextTracks) {
                                    u.push(l)
                                } else {
                                    i.remoteTextTrackEls().addTrackElement_(l);
                                    i.remoteTextTracks().addTrack(l.track);
                                    i.textTracks().addTrack(l.track);
                                    if (!a && !i.el_.hasAttribute("crossorigin") && bn(l.src)) {
                                        a = true
                                    }
                                }
                            }
                        }
                        for (var c = 0; c < u.length; c++) {
                            i.el_.removeChild(u[c])
                        }
                    }
                    i.proxyNativeTracks_();
                    if (i.featuresNativeTextTracks && a) {
                        y.warn("Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\n" + "This may prevent text tracks from loading.")
                    }
                    i.restoreMetadataTracksInIOSNativePlayer_();
                    if ((G || K || R) && t.nativeControlsForTouch === true) {
                        i.setControls(true)
                    }
                    i.proxyWebkitFullscreen_();
                    i.triggerReady();
                    return i
                }
                var n = t.prototype;
                n.dispose = function n() {
                    if (this.el_ && this.el_.resetSourceset_) {
                        this.el_.resetSourceset_()
                    }
                    t.disposeMediaElement(this.el_);
                    this.options_ = null;
                    e.prototype.dispose.call(this)
                }
                ;
                n.setupSourcesetHandling_ = function e() {
                    fa(this)
                }
                ;
                n.restoreMetadataTracksInIOSNativePlayer_ = function e() {
                    var t = this.textTracks();
                    var n;
                    var i = function e() {
                        n = [];
                        for (var i = 0; i < t.length; i++) {
                            var r = t[i];
                            if (r.kind === "metadata") {
                                n.push({
                                    track: r,
                                    storedMode: r.mode
                                })
                            }
                        }
                    };
                    i();
                    t.addEventListener("change", i);
                    this.on("dispose", function() {
                        return t.removeEventListener("change", i)
                    });
                    var r = function e() {
                        for (var i = 0; i < n.length; i++) {
                            var r = n[i];
                            if (r.track.mode === "disabled" && r.track.mode !== r.storedMode) {
                                r.track.mode = r.storedMode
                            }
                        }
                        t.removeEventListener("change", e)
                    };
                    this.on("webkitbeginfullscreen", function() {
                        t.removeEventListener("change", i);
                        t.removeEventListener("change", r);
                        t.addEventListener("change", r)
                    });
                    this.on("webkitendfullscreen", function() {
                        t.removeEventListener("change", i);
                        t.addEventListener("change", i);
                        t.removeEventListener("change", r)
                    })
                }
                ;
                n.overrideNative_ = function e(t, n) {
                    var i = this;
                    if (n !== this["featuresNative" + t + "Tracks"]) {
                        return
                    }
                    var r = t.toLowerCase();
                    if (this[r + "TracksListeners_"]) {
                        Object.keys(this[r + "TracksListeners_"]).forEach(function(e) {
                            var t = i.el()[r + "Tracks"];
                            t.removeEventListener(e, i[r + "TracksListeners_"][e])
                        })
                    }
                    this["featuresNative" + t + "Tracks"] = !n;
                    this[r + "TracksListeners_"] = null;
                    this.proxyNativeTracksForType_(r)
                }
                ;
                n.overrideNativeAudioTracks = function e(t) {
                    this.overrideNative_("Audio", t)
                }
                ;
                n.overrideNativeVideoTracks = function e(t) {
                    this.overrideNative_("Video", t)
                }
                ;
                n.proxyNativeTracksForType_ = function e(t) {
                    var n = this;
                    var i = zn[t];
                    var r = this.el()[i.getterName];
                    var a = this[i.getterName]();
                    if (!this["featuresNative" + i.capitalName + "Tracks"] || !r || !r.addEventListener) {
                        return
                    }
                    var s = {
                        change: function e(i) {
                            var r = {
                                type: "change",
                                target: a,
                                currentTarget: a,
                                srcElement: a
                            };
                            a.trigger(r);
                            if (t === "text") {
                                n[Yn.remoteText.getterName]().trigger(r)
                            }
                        },
                        addtrack: function e(t) {
                            a.addTrack(t.track)
                        },
                        removetrack: function e(t) {
                            a.removeTrack(t.track)
                        }
                    };
                    var o = function e() {
                        var t = [];
                        for (var n = 0; n < a.length; n++) {
                            var i = false;
                            for (var s = 0; s < r.length; s++) {
                                if (r[s] === a[n]) {
                                    i = true;
                                    break
                                }
                            }
                            if (!i) {
                                t.push(a[n])
                            }
                        }
                        while (t.length) {
                            a.removeTrack(t.shift())
                        }
                    };
                    this[i.getterName + "Listeners_"] = s;
                    Object.keys(s).forEach(function(e) {
                        var t = s[e];
                        r.addEventListener(e, t);
                        n.on("dispose", function(n) {
                            return r.removeEventListener(e, t)
                        })
                    });
                    this.on("loadstart", o);
                    this.on("dispose", function(e) {
                        return n.off("loadstart", o)
                    })
                }
                ;
                n.proxyNativeTracks_ = function e() {
                    var t = this;
                    zn.names.forEach(function(e) {
                        t.proxyNativeTracksForType_(e)
                    })
                }
                ;
                n.createEl = function e() {
                    var n = this.options_.tag;
                    if (!n || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {
                        if (n) {
                            var i = n.cloneNode(true);
                            if (n.parentNode) {
                                n.parentNode.insertBefore(i, n)
                            }
                            t.disposeMediaElement(n);
                            n = i
                        } else {
                            n = u.createElement("video");
                            var r = this.options_.tag && ce(this.options_.tag);
                            var a = St({}, r);
                            if (!G || this.options_.nativeControlsForTouch !== true) {
                                delete a.controls
                            }
                            de(n, E(a, {
                                id: this.options_.techId,
                                class: "vjs-tech"
                            }))
                        }
                        n.playerId = this.options_.playerId
                    }
                    if (typeof this.options_.preload !== "undefined") {
                        pe(n, "preload", this.options_.preload)
                    }
                    if (this.options_.disablePictureInPicture !== undefined) {
                        n.disablePictureInPicture = this.options_.disablePictureInPicture
                    }
                    var s = ["loop", "muted", "playsinline", "autoplay"];
                    for (var o = 0; o < s.length; o++) {
                        var l = s[o];
                        var d = this.options_[l];
                        if (typeof d !== "undefined") {
                            if (d) {
                                pe(n, l, l)
                            } else {
                                he(n, l)
                            }
                            n[l] = d
                        }
                    }
                    return n
                }
                ;
                n.handleLateInit_ = function e(t) {
                    if (t.networkState === 0 || t.networkState === 3) {
                        return
                    }
                    if (t.readyState === 0) {
                        var n = false;
                        var i = function e() {
                            n = true
                        };
                        this.on("loadstart", i);
                        var r = function e() {
                            if (!n) {
                                this.trigger("loadstart")
                            }
                        };
                        this.on("loadedmetadata", r);
                        this.ready(function() {
                            this.off("loadstart", i);
                            this.off("loadedmetadata", r);
                            if (!n) {
                                this.trigger("loadstart")
                            }
                        });
                        return
                    }
                    var a = ["loadstart"];
                    a.push("loadedmetadata");
                    if (t.readyState >= 2) {
                        a.push("loadeddata")
                    }
                    if (t.readyState >= 3) {
                        a.push("canplay")
                    }
                    if (t.readyState >= 4) {
                        a.push("canplaythrough")
                    }
                    this.ready(function() {
                        a.forEach(function(e) {
                            this.trigger(e)
                        }, this)
                    })
                }
                ;
                n.setScrubbing = function e(t) {
                    this.isScrubbing_ = t
                }
                ;
                n.scrubbing = function e() {
                    return this.isScrubbing_
                }
                ;
                n.setCurrentTime = function e(t) {
                    try {
                        if (this.isScrubbing_ && this.el_.fastSeek && Y) {
                            this.el_.fastSeek(t)
                        } else {
                            this.el_.currentTime = t
                        }
                    } catch (e) {
                        y(e, "Video is not ready. (Video.js)")
                    }
                }
                ;
                n.duration = function e() {
                    var t = this;
                    if (this.el_.duration === Infinity && D && B && this.el_.currentTime === 0) {
                        var n = function e() {
                            if (t.el_.currentTime > 0) {
                                if (t.el_.duration === Infinity) {
                                    t.trigger("durationchange")
                                }
                                t.off("timeupdate", e)
                            }
                        };
                        this.on("timeupdate", n);
                        return NaN
                    }
                    return this.el_.duration || NaN
                }
                ;
                n.width = function e() {
                    return this.el_.offsetWidth
                }
                ;
                n.height = function e() {
                    return this.el_.offsetHeight
                }
                ;
                n.proxyWebkitFullscreen_ = function e() {
                    var t = this;
                    if (!("webkitDisplayingFullscreen"in this.el_)) {
                        return
                    }
                    var n = function e() {
                        this.trigger("fullscreenchange", {
                            isFullscreen: false
                        })
                    };
                    var i = function e() {
                        if ("webkitPresentationMode"in this.el_ && this.el_.webkitPresentationMode !== "picture-in-picture") {
                            this.one("webkitendfullscreen", n);
                            this.trigger("fullscreenchange", {
                                isFullscreen: true,
                                nativeIOSFullscreen: true
                            })
                        }
                    };
                    this.on("webkitbeginfullscreen", i);
                    this.on("dispose", function() {
                        t.off("webkitbeginfullscreen", i);
                        t.off("webkitendfullscreen", n)
                    })
                }
                ;
                n.supportsFullScreen = function e() {
                    if (typeof this.el_.webkitEnterFullScreen === "function") {
                        var t = r.navigator && r.navigator.userAgent || "";
                        if (/Android/.test(t) || !/Chrome|Mac OS X 10.5/.test(t)) {
                            return true
                        }
                    }
                    return false
                }
                ;
                n.enterFullScreen = function e() {
                    var t = this.el_;
                    if (t.paused && t.networkState <= t.HAVE_METADATA) {
                        Ht(this.el_.play());
                        this.setTimeout(function() {
                            t.pause();
                            try {
                                t.webkitEnterFullScreen()
                            } catch (e) {
                                this.trigger("fullscreenerror", e)
                            }
                        }, 0)
                    } else {
                        try {
                            t.webkitEnterFullScreen()
                        } catch (e) {
                            this.trigger("fullscreenerror", e)
                        }
                    }
                }
                ;
                n.exitFullScreen = function e() {
                    if (!this.el_.webkitDisplayingFullscreen) {
                        this.trigger("fullscreenerror", new Error("The video is not fullscreen"));
                        return
                    }
                    this.el_.webkitExitFullScreen()
                }
                ;
                n.requestPictureInPicture = function e() {
                    return this.el_.requestPictureInPicture()
                }
                ;
                n.src = function e(t) {
                    if (t === undefined) {
                        return this.el_.src
                    }
                    this.setSrc(t)
                }
                ;
                n.reset = function e() {
                    t.resetMediaElement(this.el_)
                }
                ;
                n.currentSrc = function e() {
                    if (this.currentSource_) {
                        return this.currentSource_.src
                    }
                    return this.el_.currentSrc
                }
                ;
                n.setControls = function e(t) {
                    this.el_.controls = !!t
                }
                ;
                n.addTextTrack = function t(n, i, r) {
                    if (!this.featuresNativeTextTracks) {
                        return e.prototype.addTextTrack.call(this, n, i, r)
                    }
                    return this.el_.addTextTrack(n, i, r)
                }
                ;
                n.createRemoteTextTrack = function t(n) {
                    if (!this.featuresNativeTextTracks) {
                        return e.prototype.createRemoteTextTrack.call(this, n)
                    }
                    var i = u.createElement("track");
                    if (n.kind) {
                        i.kind = n.kind
                    }
                    if (n.label) {
                        i.label = n.label
                    }
                    if (n.language || n.srclang) {
                        i.srclang = n.language || n.srclang
                    }
                    if (n["default"]) {
                        i["default"] = n["default"]
                    }
                    if (n.id) {
                        i.id = n.id
                    }
                    if (n.src) {
                        i.src = n.src
                    }
                    return i
                }
                ;
                n.addRemoteTextTrack = function t(n, i) {
                    var r = e.prototype.addRemoteTextTrack.call(this, n, i);
                    if (this.featuresNativeTextTracks) {
                        this.el().appendChild(r)
                    }
                    return r
                }
                ;
                n.removeRemoteTextTrack = function t(n) {
                    e.prototype.removeRemoteTextTrack.call(this, n);
                    if (this.featuresNativeTextTracks) {
                        var i = this.$$("track");
                        var r = i.length;
                        while (r--) {
                            if (n === i[r] || n === i[r].track) {
                                this.el().removeChild(i[r])
                            }
                        }
                    }
                }
                ;
                n.getVideoPlaybackQuality = function e() {
                    if (typeof this.el().getVideoPlaybackQuality === "function") {
                        return this.el().getVideoPlaybackQuality()
                    }
                    var t = {};
                    if (typeof this.el().webkitDroppedFrameCount !== "undefined" && typeof this.el().webkitDecodedFrameCount !== "undefined") {
                        t.droppedVideoFrames = this.el().webkitDroppedFrameCount;
                        t.totalVideoFrames = this.el().webkitDecodedFrameCount
                    }
                    if (r.performance && typeof r.performance.now === "function") {
                        t.creationTime = r.performance.now()
                    } else if (r.performance && r.performance.timing && typeof r.performance.timing.navigationStart === "number") {
                        t.creationTime = r.Date.now() - r.performance.timing.navigationStart
                    }
                    return t
                }
                ;
                return t
            }(Jn);
            pa(ha, "TEST_VID", function() {
                if (!$()) {
                    return
                }
                var e = u.createElement("video");
                var t = u.createElement("track");
                t.kind = "captions";
                t.srclang = "en";
                t.label = "English";
                e.appendChild(t);
                return e
            });
            ha.isSupported = function() {
                try {
                    ha.TEST_VID.volume = .5
                } catch (e) {
                    return false
                }
                return !!(ha.TEST_VID && ha.TEST_VID.canPlayType)
            }
            ;
            ha.canPlayType = function(e) {
                return ha.TEST_VID.canPlayType(e)
            }
            ;
            ha.canPlaySource = function(e, t) {
                return ha.canPlayType(e.type)
            }
            ;
            ha.canControlVolume = function() {
                try {
                    var e = ha.TEST_VID.volume;
                    ha.TEST_VID.volume = e / 2 + .1;
                    return e !== ha.TEST_VID.volume
                } catch (e) {
                    return false
                }
            }
            ;
            ha.canMuteVolume = function() {
                try {
                    var e = ha.TEST_VID.muted;
                    ha.TEST_VID.muted = !e;
                    if (ha.TEST_VID.muted) {
                        pe(ha.TEST_VID, "muted", "muted")
                    } else {
                        he(ha.TEST_VID, "muted", "muted")
                    }
                    return e !== ha.TEST_VID.muted
                } catch (e) {
                    return false
                }
            }
            ;
            ha.canControlPlaybackRate = function() {
                if (D && B && F < 58) {
                    return false
                }
                try {
                    var e = ha.TEST_VID.playbackRate;
                    ha.TEST_VID.playbackRate = e / 2 + .1;
                    return e !== ha.TEST_VID.playbackRate
                } catch (e) {
                    return false
                }
            }
            ;
            ha.canOverrideAttributes = function() {
                try {
                    var e = function e() {};
                    Object.defineProperty(u.createElement("video"), "src", {
                        get: e,
                        set: e
                    });
                    Object.defineProperty(u.createElement("audio"), "src", {
                        get: e,
                        set: e
                    });
                    Object.defineProperty(u.createElement("video"), "innerHTML", {
                        get: e,
                        set: e
                    });
                    Object.defineProperty(u.createElement("audio"), "innerHTML", {
                        get: e,
                        set: e
                    })
                } catch (e) {
                    return false
                }
                return true
            }
            ;
            ha.supportsNativeTextTracks = function() {
                return Y || z && B
            }
            ;
            ha.supportsNativeVideoTracks = function() {
                return !!(ha.TEST_VID && ha.TEST_VID.videoTracks)
            }
            ;
            ha.supportsNativeAudioTracks = function() {
                return !!(ha.TEST_VID && ha.TEST_VID.audioTracks)
            }
            ;
            ha.Events = ["loadstart", "suspend", "abort", "error", "emptied", "stalled", "loadedmetadata", "loadeddata", "canplay", "canplaythrough", "playing", "waiting", "seeking", "seeked", "ended", "durationchange", "timeupdate", "progress", "play", "pause", "ratechange", "resize", "volumechange"];
            [["featuresVolumeControl", "canControlVolume"], ["featuresMuteControl", "canMuteVolume"], ["featuresPlaybackRate", "canControlPlaybackRate"], ["featuresSourceset", "canOverrideAttributes"], ["featuresNativeTextTracks", "supportsNativeTextTracks"], ["featuresNativeVideoTracks", "supportsNativeVideoTracks"], ["featuresNativeAudioTracks", "supportsNativeAudioTracks"]].forEach(function(e) {
                var t = e[0]
                  , n = e[1];
                pa(ha.prototype, t, function() {
                    return ha[n]()
                }, true)
            });
            ha.prototype.movingMediaElementInDOM = !z;
            ha.prototype.featuresFullscreenResize = true;
            ha.prototype.featuresProgressEvents = true;
            ha.prototype.featuresTimeupdateEvents = true;
            var va;
            ha.patchCanPlayType = function() {
                if (N >= 4 && !M && !B) {
                    va = ha.TEST_VID && ha.TEST_VID.constructor.prototype.canPlayType;
                    ha.TEST_VID.constructor.prototype.canPlayType = function(e) {
                        var t = /^application\/(?:x-|vnd\.apple\.)mpegurl/i;
                        if (e && t.test(e)) {
                            return "maybe"
                        }
                        return va.call(this, e)
                    }
                }
            }
            ;
            ha.unpatchCanPlayType = function() {
                var e = ha.TEST_VID.constructor.prototype.canPlayType;
                if (va) {
                    ha.TEST_VID.constructor.prototype.canPlayType = va
                }
                return e
            }
            ;
            ha.patchCanPlayType();
            ha.disposeMediaElement = function(e) {
                if (!e) {
                    return
                }
                if (e.parentNode) {
                    e.parentNode.removeChild(e)
                }
                while (e.hasChildNodes()) {
                    e.removeChild(e.firstChild)
                }
                e.removeAttribute("src");
                if (typeof e.load === "function") {
                    (function() {
                        try {
                            e.load()
                        } catch (e) {}
                    }
                    )()
                }
            }
            ;
            ha.resetMediaElement = function(e) {
                if (!e) {
                    return
                }
                var t = e.querySelectorAll("source");
                var n = t.length;
                while (n--) {
                    e.removeChild(t[n])
                }
                e.removeAttribute("src");
                if (typeof e.load === "function") {
                    (function() {
                        try {
                            e.load()
                        } catch (e) {}
                    }
                    )()
                }
            }
            ;
            ["muted", "defaultMuted", "autoplay", "controls", "loop", "playsinline"].forEach(function(e) {
                ha.prototype[e] = function() {
                    return this.el_[e] || this.el_.hasAttribute(e)
                }
            });
            ["muted", "defaultMuted", "autoplay", "loop", "playsinline"].forEach(function(e) {
                ha.prototype["set" + _t(e)] = function(t) {
                    this.el_[e] = t;
                    if (t) {
                        this.el_.setAttribute(e, e)
                    } else {
                        this.el_.removeAttribute(e)
                    }
                }
            });
            ["paused", "currentTime", "buffered", "volume", "poster", "preload", "error", "seeking", "seekable", "ended", "playbackRate", "defaultPlaybackRate", "disablePictureInPicture", "played", "networkState", "readyState", "videoWidth", "videoHeight", "crossOrigin"].forEach(function(e) {
                ha.prototype[e] = function() {
                    return this.el_[e]
                }
            });
            ["volume", "src", "poster", "preload", "playbackRate", "defaultPlaybackRate", "disablePictureInPicture", "crossOrigin"].forEach(function(e) {
                ha.prototype["set" + _t(e)] = function(t) {
                    this.el_[e] = t
                }
            });
            ["pause", "load", "play"].forEach(function(e) {
                ha.prototype[e] = function() {
                    return this.el_[e]()
                }
            });
            Jn.withSourceHandlers(ha);
            ha.nativeSourceHandler = {};
            ha.nativeSourceHandler.canPlayType = function(e) {
                try {
                    return ha.TEST_VID.canPlayType(e)
                } catch (e) {
                    return ""
                }
            }
            ;
            ha.nativeSourceHandler.canHandleSource = function(e, t) {
                if (e.type) {
                    return ha.nativeSourceHandler.canPlayType(e.type)
                } else if (e.src) {
                    var n = _n(e.src);
                    return ha.nativeSourceHandler.canPlayType("video/" + n)
                }
                return ""
            }
            ;
            ha.nativeSourceHandler.handleSource = function(e, t, n) {
                t.setSrc(e.src)
            }
            ;
            ha.nativeSourceHandler.dispose = function() {}
            ;
            ha.registerSourceHandler(ha.nativeSourceHandler);
            Jn.registerTech("Html5", ha);
            var ga = ["progress", "abort", "suspend", "emptied", "stalled", "loadedmetadata", "loadeddata", "timeupdate", "resize", "volumechange", "texttrackchange"];
            var ma = {
                canplay: "CanPlay",
                canplaythrough: "CanPlayThrough",
                playing: "Playing",
                seeked: "Seeked"
            };
            var ya = ["tiny", "xsmall", "small", "medium", "large", "xlarge", "huge"];
            var _a = {};
            ya.forEach(function(e) {
                var t = e.charAt(0) === "x" ? "x-" + e.substring(1) : e;
                _a[e] = "vjs-layout-" + t
            });
            var ba = {
                tiny: 210,
                xsmall: 320,
                small: 425,
                medium: 768,
                large: 1440,
                xlarge: 2560,
                huge: Infinity
            };
            var Sa = function(t) {
                Ot(n, t);
                function n(i, r, a) {
                    var s;
                    i.id = i.id || r.id || "vjs_video_" + Ue();
                    r = E(n.getTagSettings(i), r);
                    r.initChildren = false;
                    r.createEl = false;
                    r.evented = false;
                    r.reportTouchActivity = false;
                    if (!r.language) {
                        if (typeof i.closest === "function") {
                            var o = i.closest("[lang]");
                            if (o && o.getAttribute) {
                                r.language = o.getAttribute("lang")
                            }
                        } else {
                            var d = i;
                            while (d && d.nodeType === 1) {
                                if (ce(d).hasOwnProperty("lang")) {
                                    r.language = d.getAttribute("lang");
                                    break
                                }
                                d = d.parentNode
                            }
                        }
                    }
                    s = t.call(this, null, r, a) || this;
                    s.boundDocumentFullscreenChange_ = function(e) {
                        return s.documentFullscreenChange_(e)
                    }
                    ;
                    s.boundFullWindowOnEscKey_ = function(e) {
                        return s.fullWindowOnEscKey(e)
                    }
                    ;
                    s.boundUpdateStyleEl_ = function(e) {
                        return s.updateStyleEl_(e)
                    }
                    ;
                    s.boundApplyInitTime_ = function(e) {
                        return s.applyInitTime_(e)
                    }
                    ;
                    s.boundUpdateCurrentBreakpoint_ = function(e) {
                        return s.updateCurrentBreakpoint_(e)
                    }
                    ;
                    s.boundHandleTechClick_ = function(e) {
                        return s.handleTechClick_(e)
                    }
                    ;
                    s.boundHandleTechDoubleClick_ = function(e) {
                        return s.handleTechDoubleClick_(e)
                    }
                    ;
                    s.boundHandleTechTouchStart_ = function(e) {
                        return s.handleTechTouchStart_(e)
                    }
                    ;
                    s.boundHandleTechTouchMove_ = function(e) {
                        return s.handleTechTouchMove_(e)
                    }
                    ;
                    s.boundHandleTechTouchEnd_ = function(e) {
                        return s.handleTechTouchEnd_(e)
                    }
                    ;
                    s.boundHandleTechTap_ = function(e) {
                        return s.handleTechTap_(e)
                    }
                    ;
                    s.isFullscreen_ = false;
                    s.log = _(s.id_);
                    s.fsApi_ = l;
                    s.isPosterFromTech_ = false;
                    s.queuedCallbacks_ = [];
                    s.isReady_ = false;
                    s.hasStarted_ = false;
                    s.userActive_ = false;
                    s.debugEnabled_ = false;
                    if (!s.options_ || !s.options_.techOrder || !s.options_.techOrder.length) {
                        throw new Error("No techOrder specified. Did you overwrite " + "videojs.options instead of just changing the " + "properties you want to override?")
                    }
                    s.tag = i;
                    s.tagAttributes = i && ce(i);
                    s.language(s.options_.language);
                    if (r.languages) {
                        var c = {};
                        Object.getOwnPropertyNames(r.languages).forEach(function(e) {
                            c[e.toLowerCase()] = r.languages[e]
                        });
                        s.languages_ = c
                    } else {
                        s.languages_ = n.prototype.options_.languages
                    }
                    s.resetCache_();
                    s.poster_ = r.poster || "";
                    s.controls_ = !!r.controls;
                    i.controls = false;
                    i.removeAttribute("controls");
                    s.changingSrc_ = false;
                    s.playCallbacks_ = [];
                    s.playTerminatedQueue_ = [];
                    if (i.hasAttribute("autoplay")) {
                        s.autoplay(true)
                    } else {
                        s.autoplay(s.options_.autoplay)
                    }
                    if (r.plugins) {
                        Object.keys(r.plugins).forEach(function(e) {
                            if (typeof s[e] !== "function") {
                                throw new Error('plugin "' + e + '" does not exist')
                            }
                        })
                    }
                    s.scrubbing_ = false;
                    s.el_ = s.createEl();
                    vt(Ct(s), {
                        eventBusKey: "el_"
                    });
                    if (s.fsApi_.requestFullscreen) {
                        ze(u, s.fsApi_.fullscreenchange, s.boundDocumentFullscreenChange_);
                        s.on(s.fsApi_.fullscreenchange, s.boundDocumentFullscreenChange_)
                    }
                    if (s.fluid_) {
                        s.on(["playerreset", "resize"], s.boundUpdateStyleEl_)
                    }
                    var f = St(s.options_);
                    if (r.plugins) {
                        Object.keys(r.plugins).forEach(function(e) {
                            s[e](r.plugins[e])
                        })
                    }
                    if (r.debug) {
                        s.debug(true)
                    }
                    s.options_.playerOptions = f;
                    s.middleware_ = [];
                    s.initChildren();
                    s.isAudio(i.nodeName.toLowerCase() === "audio");
                    if (s.controls()) {
                        s.addClass("vjs-controls-enabled")
                    } else {
                        s.addClass("vjs-controls-disabled")
                    }
                    s.el_.setAttribute("role", "region");
                    if (s.isAudio()) {
                        s.el_.setAttribute("aria-label", s.localize("Audio Player"))
                    } else {
                        s.el_.setAttribute("aria-label", s.localize("Video Player"))
                    }
                    if (s.isAudio()) {
                        s.addClass("vjs-audio")
                    }
                    if (s.flexNotSupported_()) {
                        s.addClass("vjs-no-flex")
                    }
                    if (G) {
                        s.addClass("vjs-touch-enabled")
                    }
                    if (!z) {
                        s.addClass("vjs-workinghover")
                    }
                    n.players[s.id_] = Ct(s);
                    var p = e.split(".")[0];
                    s.addClass("vjs-v" + p);
                    s.userActive(true);
                    s.reportUserActivity();
                    s.one("play", function(e) {
                        return s.listenForUserActivity_(e)
                    });
                    s.on("stageclick", function(e) {
                        return s.handleStageClick_(e)
                    });
                    s.on("keydown", function(e) {
                        return s.handleKeyDown(e)
                    });
                    s.on("languagechange", function(e) {
                        return s.handleLanguagechange(e)
                    });
                    s.breakpoints(s.options_.breakpoints);
                    s.responsive(s.options_.responsive);
                    return s
                }
                var i = n.prototype;
                i.dispose = function e() {
                    var i = this;
                    this.trigger("dispose");
                    this.off("dispose");
                    Ye(u, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);
                    Ye(u, "keydown", this.boundFullWindowOnEscKey_);
                    if (this.styleEl_ && this.styleEl_.parentNode) {
                        this.styleEl_.parentNode.removeChild(this.styleEl_);
                        this.styleEl_ = null
                    }
                    n.players[this.id_] = null;
                    if (this.tag && this.tag.player) {
                        this.tag.player = null
                    }
                    if (this.el_ && this.el_.player) {
                        this.el_.player = null
                    }
                    if (this.tech_) {
                        this.tech_.dispose();
                        this.isPosterFromTech_ = false;
                        this.poster_ = ""
                    }
                    if (this.playerElIngest_) {
                        this.playerElIngest_ = null
                    }
                    if (this.tag) {
                        this.tag = null
                    }
                    pi(this);
                    Xn.names.forEach(function(e) {
                        var t = Xn[e];
                        var n = i[t.getterName]();
                        if (n && n.off) {
                            n.off()
                        }
                    });
                    t.prototype.dispose.call(this)
                }
                ;
                i.createEl = function e() {
                    var n = this.tag;
                    var i;
                    var a = this.playerElIngest_ = n.parentNode && n.parentNode.hasAttribute && n.parentNode.hasAttribute("data-vjs-player");
                    var s = this.tag.tagName.toLowerCase() === "video-js";
                    if (a) {
                        i = this.el_ = n.parentNode
                    } else if (!s) {
                        i = this.el_ = t.prototype.createEl.call(this, "div")
                    }
                    var o = ce(n);
                    if (s) {
                        i = this.el_ = n;
                        n = this.tag = u.createElement("video");
                        while (i.children.length) {
                            n.appendChild(i.firstChild)
                        }
                        if (!se(i, "video-js")) {
                            oe(i, "video-js")
                        }
                        i.appendChild(n);
                        a = this.playerElIngest_ = i;
                        Object.keys(i).forEach(function(e) {
                            try {
                                n[e] = i[e]
                            } catch (e) {}
                        })
                    }
                    n.setAttribute("tabindex", "-1");
                    o.tabindex = "-1";
                    if (V || B && H) {
                        n.setAttribute("role", "application");
                        o.role = "application"
                    }
                    n.removeAttribute("width");
                    n.removeAttribute("height");
                    if ("width"in o) {
                        delete o.width
                    }
                    if ("height"in o) {
                        delete o.height
                    }
                    Object.getOwnPropertyNames(o).forEach(function(e) {
                        if (!(s && e === "class")) {
                            i.setAttribute(e, o[e])
                        }
                        if (s) {
                            n.setAttribute(e, o[e])
                        }
                    });
                    n.playerId = n.id;
                    n.id += "_html5_api";
                    n.className = "vjs-tech";
                    n.player = i.player = this;
                    this.addClass("vjs-paused");
                    if (r.VIDEOJS_NO_DYNAMIC_STYLE !== true) {
                        this.styleEl_ = De("vjs-styles-dimensions");
                        var l = Pe(".vjs-styles-defaults");
                        var d = Pe("head");
                        d.insertBefore(this.styleEl_, l ? l.nextSibling : d.firstChild)
                    }
                    this.fill_ = false;
                    this.fluid_ = false;
                    this.width(this.options_.width);
                    this.height(this.options_.height);
                    this.fill(this.options_.fill);
                    this.fluid(this.options_.fluid);
                    this.aspectRatio(this.options_.aspectRatio);
                    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);
                    var c = n.getElementsByTagName("a");
                    for (var f = 0; f < c.length; f++) {
                        var p = c.item(f);
                        oe(p, "vjs-hidden");
                        p.setAttribute("hidden", "hidden")
                    }
                    n.initNetworkState_ = n.networkState;
                    if (n.parentNode && !a) {
                        n.parentNode.insertBefore(i, n)
                    }
                    ae(n, i);
                    this.children_.unshift(n);
                    this.el_.setAttribute("lang", this.language_);
                    this.el_ = i;
                    return i
                }
                ;
                i.crossOrigin = function e(t) {
                    if (!t) {
                        return this.techGet_("crossOrigin")
                    }
                    if (t !== "anonymous" && t !== "use-credentials") {
                        y.warn('crossOrigin must be "anonymous" or "use-credentials", given "' + t + '"');
                        return
                    }
                    this.techCall_("setCrossOrigin", t);
                    return
                }
                ;
                i.width = function e(t) {
                    return this.dimension("width", t)
                }
                ;
                i.height = function e(t) {
                    return this.dimension("height", t)
                }
                ;
                i.dimension = function e(t, n) {
                    var i = t + "_";
                    if (n === undefined) {
                        return this[i] || 0
                    }
                    if (n === "" || n === "auto") {
                        this[i] = undefined;
                        this.updateStyleEl_();
                        return
                    }
                    var r = parseFloat(n);
                    if (isNaN(r)) {
                        y.error('Improper value "' + n + '" supplied for for ' + t);
                        return
                    }
                    this[i] = r;
                    this.updateStyleEl_()
                }
                ;
                i.fluid = function e(t) {
                    var n = this;
                    if (t === undefined) {
                        return !!this.fluid_
                    }
                    this.fluid_ = !!t;
                    if (st(this)) {
                        this.off(["playerreset", "resize"], this.boundUpdateStyleEl_)
                    }
                    if (t) {
                        this.addClass("vjs-fluid");
                        this.fill(false);
                        ot(this, function() {
                            n.on(["playerreset", "resize"], n.boundUpdateStyleEl_)
                        })
                    } else {
                        this.removeClass("vjs-fluid")
                    }
                    this.updateStyleEl_()
                }
                ;
                i.fill = function e(t) {
                    if (t === undefined) {
                        return !!this.fill_
                    }
                    this.fill_ = !!t;
                    if (t) {
                        this.addClass("vjs-fill");
                        this.fluid(false)
                    } else {
                        this.removeClass("vjs-fill")
                    }
                }
                ;
                i.aspectRatio = function e(t) {
                    if (t === undefined) {
                        return this.aspectRatio_
                    }
                    if (!/^\d+\:\d+$/.test(t)) {
                        throw new Error("Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.")
                    }
                    this.aspectRatio_ = t;
                    this.fluid(true);
                    this.updateStyleEl_()
                }
                ;
                i.updateStyleEl_ = function e() {
                    if (r.VIDEOJS_NO_DYNAMIC_STYLE === true) {
                        var t = typeof this.width_ === "number" ? this.width_ : this.options_.width;
                        var n = typeof this.height_ === "number" ? this.height_ : this.options_.height;
                        var i = this.tech_ && this.tech_.el();
                        if (i) {
                            if (t >= 0) {
                                i.width = t
                            }
                            if (n >= 0) {
                                i.height = n
                            }
                        }
                        return
                    }
                    var a;
                    var s;
                    var o;
                    var u;
                    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== "auto") {
                        o = this.aspectRatio_
                    } else if (this.videoWidth() > 0) {
                        o = this.videoWidth() + ":" + this.videoHeight()
                    } else {
                        o = "16:9"
                    }
                    var l = o.split(":");
                    var d = l[1] / l[0];
                    if (this.width_ !== undefined) {
                        a = this.width_
                    } else if (this.height_ !== undefined) {
                        a = this.height_ / d
                    } else {
                        a = this.videoWidth() || 300
                    }
                    if (this.height_ !== undefined) {
                        s = this.height_
                    } else {
                        s = a * d
                    }
                    if (/^[^a-zA-Z]/.test(this.id())) {
                        u = "dimensions-" + this.id()
                    } else {
                        u = this.id() + "-dimensions"
                    }
                    this.addClass(u);
                    Ne(this.styleEl_, "\n      ." + u + " {\n        width: " + a + "px;\n        height: " + s + "px;\n      }\n\n      ." + u + ".vjs-fluid {\n        padding-top: " + d * 100 + "%;\n      }\n    ")
                }
                ;
                i.loadTech_ = function e(t, n) {
                    var i = this;
                    if (this.tech_) {
                        this.unloadTech_()
                    }
                    var r = _t(t);
                    var a = t.charAt(0).toLowerCase() + t.slice(1);
                    if (r !== "Html5" && this.tag) {
                        Jn.getTech("Html5").disposeMediaElement(this.tag);
                        this.tag.player = null;
                        this.tag = null
                    }
                    this.techName_ = r;
                    this.isReady_ = false;
                    var s = typeof this.autoplay() === "string" ? false : this.autoplay();
                    var o = {
                        source: n,
                        autoplay: s,
                        nativeControlsForTouch: this.options_.nativeControlsForTouch,
                        playerId: this.id(),
                        techId: this.id() + "_" + a + "_api",
                        playsinline: this.options_.playsinline,
                        preload: this.options_.preload,
                        loop: this.options_.loop,
                        disablePictureInPicture: this.options_.disablePictureInPicture,
                        muted: this.options_.muted,
                        poster: this.poster(),
                        language: this.language(),
                        playerElIngest: this.playerElIngest_ || false,
                        "vtt.js": this.options_["vtt.js"],
                        canOverridePoster: !!this.options_.techCanOverridePoster,
                        enableSourceset: this.options_.enableSourceset,
                        Promise: this.options_.Promise
                    };
                    Xn.names.forEach(function(e) {
                        var t = Xn[e];
                        o[t.getterName] = i[t.privateName]
                    });
                    E(o, this.options_[r]);
                    E(o, this.options_[a]);
                    E(o, this.options_[t.toLowerCase()]);
                    if (this.tag) {
                        o.tag = this.tag
                    }
                    if (n && n.src === this.cache_.src && this.cache_.currentTime > 0) {
                        o.startTime = this.cache_.currentTime
                    }
                    var u = Jn.getTech(t);
                    if (!u) {
                        throw new Error("No Tech named '" + r + "' exists! '" + r + "' should be registered using videojs.registerTech()'")
                    }
                    this.tech_ = new u(o);
                    this.tech_.ready(et(this, this.handleTechReady_), true);
                    zt.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);
                    ga.forEach(function(e) {
                        i.on(i.tech_, e, function(t) {
                            return i["handleTech" + _t(e) + "_"](t)
                        })
                    });
                    Object.keys(ma).forEach(function(e) {
                        i.on(i.tech_, e, function(t) {
                            if (i.tech_.playbackRate() === 0 && i.tech_.seeking()) {
                                i.queuedCallbacks_.push({
                                    callback: i["handleTech" + ma[e] + "_"].bind(i),
                                    event: t
                                });
                                return
                            }
                            i["handleTech" + ma[e] + "_"](t)
                        })
                    });
                    this.on(this.tech_, "loadstart", function(e) {
                        return i.handleTechLoadStart_(e)
                    });
                    this.on(this.tech_, "sourceset", function(e) {
                        return i.handleTechSourceset_(e)
                    });
                    this.on(this.tech_, "waiting", function(e) {
                        return i.handleTechWaiting_(e)
                    });
                    this.on(this.tech_, "ended", function(e) {
                        return i.handleTechEnded_(e)
                    });
                    this.on(this.tech_, "seeking", function(e) {
                        return i.handleTechSeeking_(e)
                    });
                    this.on(this.tech_, "play", function(e) {
                        return i.handleTechPlay_(e)
                    });
                    this.on(this.tech_, "firstplay", function(e) {
                        return i.handleTechFirstPlay_(e)
                    });
                    this.on(this.tech_, "pause", function(e) {
                        return i.handleTechPause_(e)
                    });
                    this.on(this.tech_, "durationchange", function(e) {
                        return i.handleTechDurationChange_(e)
                    });
                    this.on(this.tech_, "fullscreenchange", function(e) {
                        return i.handleTechFullscreenChange_(e)
                    });
                    this.on(this.tech_, "fullscreenerror", function(e) {
                        return i.handleTechFullscreenError_(e)
                    });
                    this.on(this.tech_, "enterpictureinpicture", function(e) {
                        return i.handleTechEnterPictureInPicture_(e)
                    });
                    this.on(this.tech_, "leavepictureinpicture", function(e) {
                        return i.handleTechLeavePictureInPicture_(e)
                    });
                    this.on(this.tech_, "error", function(e) {
                        return i.handleTechError_(e)
                    });
                    this.on(this.tech_, "posterchange", function(e) {
                        return i.handleTechPosterChange_(e)
                    });
                    this.on(this.tech_, "textdata", function(e) {
                        return i.handleTechTextData_(e)
                    });
                    this.on(this.tech_, "ratechange", function(e) {
                        return i.handleTechRateChange_(e)
                    });
                    this.on(this.tech_, "loadedmetadata", this.boundUpdateStyleEl_);
                    this.usingNativeControls(this.techGet_("controls"));
                    if (this.controls() && !this.usingNativeControls()) {
                        this.addTechControlsListeners_()
                    }
                    if (this.tech_.el().parentNode !== this.el() && (r !== "Html5" || !this.tag)) {
                        ae(this.tech_.el(), this.el())
                    }
                    if (this.tag) {
                        this.tag.player = null;
                        this.tag = null
                    }
                }
                ;
                i.unloadTech_ = function e() {
                    var t = this;
                    Xn.names.forEach(function(e) {
                        var n = Xn[e];
                        t[n.privateName] = t[n.getterName]()
                    });
                    this.textTracksJson_ = zt.textTracksToJson(this.tech_);
                    this.isReady_ = false;
                    this.tech_.dispose();
                    this.tech_ = false;
                    if (this.isPosterFromTech_) {
                        this.poster_ = "";
                        this.trigger("posterchange")
                    }
                    this.isPosterFromTech_ = false
                }
                ;
                i.tech = function e(t) {
                    if (t === undefined) {
                        y.warn("Using the tech directly can be dangerous. I hope you know what you're doing.\n" + "See https://github.com/videojs/video.js/issues/2617 for more info.\n")
                    }
                    return this.tech_
                }
                ;
                i.addTechControlsListeners_ = function e() {
                    this.removeTechControlsListeners_();
                    this.on(this.tech_, "mouseup", this.boundHandleTechClick_);
                    this.on(this.tech_, "dblclick", this.boundHandleTechDoubleClick_);
                    this.on(this.tech_, "touchstart", this.boundHandleTechTouchStart_);
                    this.on(this.tech_, "touchmove", this.boundHandleTechTouchMove_);
                    this.on(this.tech_, "touchend", this.boundHandleTechTouchEnd_);
                    this.on(this.tech_, "tap", this.boundHandleTechTap_)
                }
                ;
                i.removeTechControlsListeners_ = function e() {
                    this.off(this.tech_, "tap", this.boundHandleTechTap_);
                    this.off(this.tech_, "touchstart", this.boundHandleTechTouchStart_);
                    this.off(this.tech_, "touchmove", this.boundHandleTechTouchMove_);
                    this.off(this.tech_, "touchend", this.boundHandleTechTouchEnd_);
                    this.off(this.tech_, "mouseup", this.boundHandleTechClick_);
                    this.off(this.tech_, "dblclick", this.boundHandleTechDoubleClick_)
                }
                ;
                i.handleTechReady_ = function e() {
                    this.triggerReady();
                    if (this.cache_.volume) {
                        this.techCall_("setVolume", this.cache_.volume)
                    }
                    this.handleTechPosterChange_();
                    this.handleTechDurationChange_()
                }
                ;
                i.handleTechLoadStart_ = function e() {
                    this.removeClass("vjs-ended");
                    this.removeClass("vjs-seeking");
                    this.error(null);
                    this.handleTechDurationChange_();
                    if (!this.paused()) {
                        this.trigger("loadstart");
                        this.trigger("firstplay")
                    } else {
                        this.hasStarted(false);
                        this.trigger("loadstart")
                    }
                    this.manualAutoplay_(this.autoplay())
                }
                ;
                i.manualAutoplay_ = function e(t) {
                    var n = this;
                    if (!this.tech_ || typeof t !== "string") {
                        return
                    }
                    var i = function e() {
                        var t = n.muted();
                        n.muted(true);
                        var i = function e() {
                            n.muted(t)
                        };
                        n.playTerminatedQueue_.push(i);
                        var r = n.play();
                        if (!qt(r)) {
                            return
                        }
                        return r["catch"](i)
                    };
                    var r;
                    if (t === "any" && this.muted() !== true) {
                        r = this.play();
                        if (qt(r)) {
                            r = r["catch"](i)
                        }
                    } else if (t === "muted" && this.muted() !== true) {
                        r = i()
                    } else {
                        r = this.play()
                    }
                    if (!qt(r)) {
                        return
                    }
                    return r.then(function() {
                        n.trigger({
                            type: "autoplay-success",
                            autoplay: t
                        })
                    })["catch"](function(e) {
                        n.trigger({
                            type: "autoplay-failure",
                            autoplay: t
                        })
                    })
                }
                ;
                i.updateSourceCaches_ = function e(t) {
                    if (t === void 0) {
                        t = ""
                    }
                    var n = t;
                    var i = "";
                    if (typeof n !== "string") {
                        n = t.src;
                        i = t.type
                    }
                    this.cache_.source = this.cache_.source || {};
                    this.cache_.sources = this.cache_.sources || [];
                    if (n && !i) {
                        i = yi(this, n)
                    }
                    this.cache_.source = St({}, t, {
                        src: n,
                        type: i
                    });
                    var r = this.cache_.sources.filter(function(e) {
                        return e.src && e.src === n
                    });
                    var a = [];
                    var s = this.$$("source");
                    var o = [];
                    for (var u = 0; u < s.length; u++) {
                        var l = ce(s[u]);
                        a.push(l);
                        if (l.src && l.src === n) {
                            o.push(l.src)
                        }
                    }
                    if (o.length && !r.length) {
                        this.cache_.sources = a
                    } else if (!r.length) {
                        this.cache_.sources = [this.cache_.source]
                    }
                    this.cache_.src = n
                }
                ;
                i.handleTechSourceset_ = function e(t) {
                    var n = this;
                    if (!this.changingSrc_) {
                        var i = function e(t) {
                            return n.updateSourceCaches_(t)
                        };
                        var r = this.currentSource().src;
                        var a = t.src;
                        if (r && !/^blob:/.test(r) && /^blob:/.test(a)) {
                            if (!this.lastSource_ || this.lastSource_.tech !== a && this.lastSource_.player !== r) {
                                i = function e() {}
                            }
                        }
                        i(a);
                        if (!t.src) {
                            this.tech_.any(["sourceset", "loadstart"], function(e) {
                                if (e.type === "sourceset") {
                                    return
                                }
                                var t = n.techGet("currentSrc");
                                n.lastSource_.tech = t;
                                n.updateSourceCaches_(t)
                            })
                        }
                    }
                    this.lastSource_ = {
                        player: this.currentSource().src,
                        tech: t.src
                    };
                    this.trigger({
                        src: t.src,
                        type: "sourceset"
                    })
                }
                ;
                i.hasStarted = function e(t) {
                    if (t === undefined) {
                        return this.hasStarted_
                    }
                    if (t === this.hasStarted_) {
                        return
                    }
                    this.hasStarted_ = t;
                    if (this.hasStarted_) {
                        this.addClass("vjs-has-started");
                        this.trigger("firstplay")
                    } else {
                        this.removeClass("vjs-has-started")
                    }
                }
                ;
                i.handleTechPlay_ = function e() {
                    this.removeClass("vjs-ended");
                    this.removeClass("vjs-paused");
                    this.addClass("vjs-playing");
                    this.hasStarted(true);
                    this.trigger("play")
                }
                ;
                i.handleTechRateChange_ = function e() {
                    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {
                        this.queuedCallbacks_.forEach(function(e) {
                            return e.callback(e.event)
                        });
                        this.queuedCallbacks_ = []
                    }
                    this.cache_.lastPlaybackRate = this.tech_.playbackRate();
                    this.trigger("ratechange")
                }
                ;
                i.handleTechWaiting_ = function e() {
                    var t = this;
                    this.addClass("vjs-waiting");
                    this.trigger("waiting");
                    var n = this.currentTime();
                    var i = function e() {
                        if (n !== t.currentTime()) {
                            t.removeClass("vjs-waiting");
                            t.off("timeupdate", e)
                        }
                    };
                    this.on("timeupdate", i)
                }
                ;
                i.handleTechCanPlay_ = function e() {
                    this.removeClass("vjs-waiting");
                    this.trigger("canplay")
                }
                ;
                i.handleTechCanPlayThrough_ = function e() {
                    this.removeClass("vjs-waiting");
                    this.trigger("canplaythrough")
                }
                ;
                i.handleTechPlaying_ = function e() {
                    this.removeClass("vjs-waiting");
                    this.trigger("playing")
                }
                ;
                i.handleTechSeeking_ = function e() {
                    this.addClass("vjs-seeking");
                    this.trigger("seeking")
                }
                ;
                i.handleTechSeeked_ = function e() {
                    this.removeClass("vjs-seeking");
                    this.removeClass("vjs-ended");
                    this.trigger("seeked")
                }
                ;
                i.handleTechFirstPlay_ = function e() {
                    if (this.options_.starttime) {
                        y.warn("Passing the `starttime` option to the player will be deprecated in 6.0");
                        this.currentTime(this.options_.starttime)
                    }
                    this.addClass("vjs-has-started");
                    this.trigger("firstplay")
                }
                ;
                i.handleTechPause_ = function e() {
                    this.removeClass("vjs-playing");
                    this.addClass("vjs-paused");
                    this.trigger("pause")
                }
                ;
                i.handleTechEnded_ = function e() {
                    this.addClass("vjs-ended");
                    if (this.options_.loop) {
                        this.currentTime(0);
                        this.play()
                    } else if (!this.paused()) {
                        this.pause()
                    }
                    this.trigger("ended")
                }
                ;
                i.handleTechDurationChange_ = function e() {
                    this.duration(this.techGet_("duration"))
                }
                ;
                i.handleTechClick_ = function e(t) {
                    if (!Ee(t)) {
                        return
                    }
                    if (!this.controls_) {
                        return
                    }
                    if (this.paused()) {
                        Ht(this.play())
                    } else {
                        this.pause()
                    }
                }
                ;
                i.handleTechDoubleClick_ = function e(t) {
                    if (!this.controls_) {
                        return
                    }
                    var n = Array.prototype.some.call(this.$$(".vjs-control-bar, .vjs-modal-dialog"), function(e) {
                        return e.contains(t.target)
                    });
                    if (!n) {
                        if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {
                            if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === "function") {
                                this.options_.userActions.doubleClick.call(this, t)
                            } else if (this.isFullscreen()) {
                                this.exitFullscreen()
                            } else {
                                this.requestFullscreen()
                            }
                        }
                    }
                }
                ;
                i.handleTechTap_ = function e() {
                    this.userActive(!this.userActive())
                }
                ;
                i.handleTechTouchStart_ = function e() {
                    this.userWasActive = this.userActive()
                }
                ;
                i.handleTechTouchMove_ = function e() {
                    if (this.userWasActive) {
                        this.reportUserActivity()
                    }
                }
                ;
                i.handleTechTouchEnd_ = function e(t) {
                    if (t.cancelable) {
                        t.preventDefault()
                    }
                }
                ;
                i.handleStageClick_ = function e() {
                    this.reportUserActivity()
                }
                ;
                i.toggleFullscreenClass_ = function e() {
                    if (this.isFullscreen()) {
                        this.addClass("vjs-fullscreen")
                    } else {
                        this.removeClass("vjs-fullscreen")
                    }
                }
                ;
                i.documentFullscreenChange_ = function e(t) {
                    var n = t.target.player;
                    if (n && n !== this) {
                        return
                    }
                    var i = this.el();
                    var r = u[this.fsApi_.fullscreenElement] === i;
                    if (!r && i.matches) {
                        r = i.matches(":" + this.fsApi_.fullscreen)
                    } else if (!r && i.msMatchesSelector) {
                        r = i.msMatchesSelector(":" + this.fsApi_.fullscreen)
                    }
                    this.isFullscreen(r)
                }
                ;
                i.handleTechFullscreenChange_ = function e(t, n) {
                    if (n) {
                        if (n.nativeIOSFullscreen) {
                            this.toggleClass("vjs-ios-native-fs")
                        }
                        this.isFullscreen(n.isFullscreen)
                    }
                }
                ;
                i.handleTechFullscreenError_ = function e(t, n) {
                    this.trigger("fullscreenerror", n)
                }
                ;
                i.togglePictureInPictureClass_ = function e() {
                    if (this.isInPictureInPicture()) {
                        this.addClass("vjs-picture-in-picture")
                    } else {
                        this.removeClass("vjs-picture-in-picture")
                    }
                }
                ;
                i.handleTechEnterPictureInPicture_ = function e(t) {
                    this.isInPictureInPicture(true)
                }
                ;
                i.handleTechLeavePictureInPicture_ = function e(t) {
                    this.isInPictureInPicture(false)
                }
                ;
                i.handleTechError_ = function e() {
                    var t = this.tech_.error();
                    this.error(t)
                }
                ;
                i.handleTechTextData_ = function e() {
                    var t = null;
                    if (arguments.length > 1) {
                        t = arguments[1]
                    }
                    this.trigger("textdata", t)
                }
                ;
                i.getCache = function e() {
                    return this.cache_
                }
                ;
                i.resetCache_ = function e() {
                    this.cache_ = {
                        currentTime: 0,
                        initTime: 0,
                        inactivityTimeout: this.options_.inactivityTimeout,
                        duration: NaN,
                        lastVolume: 1,
                        lastPlaybackRate: this.defaultPlaybackRate(),
                        media: null,
                        src: "",
                        source: {},
                        sources: [],
                        volume: 1
                    }
                }
                ;
                i.techCall_ = function e(t, n) {
                    this.ready(function() {
                        if (t in li) {
                            return si(this.middleware_, this.tech_, t, n)
                        } else if (t in di) {
                            return oi(this.middleware_, this.tech_, t, n)
                        }
                        try {
                            if (this.tech_) {
                                this.tech_[t](n)
                            }
                        } catch (e) {
                            y(e);
                            throw e
                        }
                    }, true)
                }
                ;
                i.techGet_ = function e(t) {
                    if (!this.tech_ || !this.tech_.isReady_) {
                        return
                    }
                    if (t in ui) {
                        return ai(this.middleware_, this.tech_, t)
                    } else if (t in di) {
                        return oi(this.middleware_, this.tech_, t)
                    }
                    try {
                        return this.tech_[t]()
                    } catch (e) {
                        if (this.tech_[t] === undefined) {
                            y("Video.js: " + t + " method not defined for " + this.techName_ + " playback technology.", e);
                            throw e
                        }
                        if (e.name === "TypeError") {
                            y("Video.js: " + t + " unavailable on " + this.techName_ + " playback technology element.", e);
                            this.tech_.isReady_ = false;
                            throw e
                        }
                        y(e);
                        throw e
                    }
                }
                ;
                i.play = function e() {
                    var t = this;
                    var n = this.options_.Promise || r.Promise;
                    if (n) {
                        return new n(function(e) {
                            t.play_(e)
                        }
                        )
                    }
                    return this.play_()
                }
                ;
                i.play_ = function e(t) {
                    var n = this;
                    if (t === void 0) {
                        t = Ht
                    }
                    this.playCallbacks_.push(t);
                    var i = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));
                    if (this.waitToPlay_) {
                        this.off(["ready", "loadstart"], this.waitToPlay_);
                        this.waitToPlay_ = null
                    }
                    if (!this.isReady_ || !i) {
                        this.waitToPlay_ = function(e) {
                            n.play_()
                        }
                        ;
                        this.one(["ready", "loadstart"], this.waitToPlay_);
                        if (!i && (Y || z)) {
                            this.load()
                        }
                        return
                    }
                    var r = this.techGet_("play");
                    if (r === null) {
                        this.runPlayTerminatedQueue_()
                    } else {
                        this.runPlayCallbacks_(r)
                    }
                }
                ;
                i.runPlayTerminatedQueue_ = function e() {
                    var t = this.playTerminatedQueue_.slice(0);
                    this.playTerminatedQueue_ = [];
                    t.forEach(function(e) {
                        e()
                    })
                }
                ;
                i.runPlayCallbacks_ = function e(t) {
                    var n = this.playCallbacks_.slice(0);
                    this.playCallbacks_ = [];
                    this.playTerminatedQueue_ = [];
                    n.forEach(function(e) {
                        e(t)
                    })
                }
                ;
                i.pause = function e() {
                    this.techCall_("pause")
                }
                ;
                i.paused = function e() {
                    return this.techGet_("paused") === false ? false : true
                }
                ;
                i.played = function e() {
                    return this.techGet_("played") || Rt(0, 0)
                }
                ;
                i.scrubbing = function e(t) {
                    if (typeof t === "undefined") {
                        return this.scrubbing_
                    }
                    this.scrubbing_ = !!t;
                    this.techCall_("setScrubbing", this.scrubbing_);
                    if (t) {
                        this.addClass("vjs-scrubbing")
                    } else {
                        this.removeClass("vjs-scrubbing")
                    }
                }
                ;
                i.currentTime = function e(t) {
                    if (typeof t !== "undefined") {
                        if (t < 0) {
                            t = 0
                        }
                        if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {
                            this.cache_.initTime = t;
                            this.off("canplay", this.boundApplyInitTime_);
                            this.one("canplay", this.boundApplyInitTime_);
                            return
                        }
                        this.techCall_("setCurrentTime", t);
                        this.cache_.initTime = 0;
                        return
                    }
                    this.cache_.currentTime = this.techGet_("currentTime") || 0;
                    return this.cache_.currentTime
                }
                ;
                i.applyInitTime_ = function e() {
                    this.currentTime(this.cache_.initTime)
                }
                ;
                i.duration = function e(t) {
                    if (t === undefined) {
                        return this.cache_.duration !== undefined ? this.cache_.duration : NaN
                    }
                    t = parseFloat(t);
                    if (t < 0) {
                        t = Infinity
                    }
                    if (t !== this.cache_.duration) {
                        this.cache_.duration = t;
                        if (t === Infinity) {
                            this.addClass("vjs-live")
                        } else {
                            this.removeClass("vjs-live")
                        }
                        if (!isNaN(t)) {
                            this.trigger("durationchange")
                        }
                    }
                }
                ;
                i.remainingTime = function e() {
                    return this.duration() - this.currentTime()
                }
                ;
                i.remainingTimeDisplay = function e() {
                    return Math.floor(this.duration()) - Math.floor(this.currentTime())
                }
                ;
                i.buffered = function e() {
                    var e = this.techGet_("buffered");
                    if (!e || !e.length) {
                        e = Rt(0, 0)
                    }
                    return e
                }
                ;
                i.bufferedPercent = function e() {
                    return Mt(this.buffered(), this.duration())
                }
                ;
                i.bufferedEnd = function e() {
                    var t = this.buffered();
                    var n = this.duration();
                    var i = t.end(t.length - 1);
                    if (i > n) {
                        i = n
                    }
                    return i
                }
                ;
                i.volume = function e(t) {
                    var n;
                    if (t !== undefined) {
                        n = Math.max(0, Math.min(1, parseFloat(t)));
                        this.cache_.volume = n;
                        this.techCall_("setVolume", n);
                        if (n > 0) {
                            this.lastVolume_(n)
                        }
                        return
                    }
                    n = parseFloat(this.techGet_("volume"));
                    return isNaN(n) ? 1 : n
                }
                ;
                i.muted = function e(t) {
                    if (t !== undefined) {
                        this.techCall_("setMuted", t);
                        return
                    }
                    return this.techGet_("muted") || false
                }
                ;
                i.defaultMuted = function e(t) {
                    if (t !== undefined) {
                        return this.techCall_("setDefaultMuted", t)
                    }
                    return this.techGet_("defaultMuted") || false
                }
                ;
                i.lastVolume_ = function e(t) {
                    if (t !== undefined && t !== 0) {
                        this.cache_.lastVolume = t;
                        return
                    }
                    return this.cache_.lastVolume
                }
                ;
                i.supportsFullScreen = function e() {
                    return this.techGet_("supportsFullScreen") || false
                }
                ;
                i.isFullscreen = function e(t) {
                    if (t !== undefined) {
                        var n = this.isFullscreen_;
                        this.isFullscreen_ = Boolean(t);
                        if (this.isFullscreen_ !== n && this.fsApi_.prefixed) {
                            this.trigger("fullscreenchange")
                        }
                        this.toggleFullscreenClass_();
                        return
                    }
                    return this.isFullscreen_
                }
                ;
                i.requestFullscreen = function e(t) {
                    var n = this.options_.Promise || r.Promise;
                    if (n) {
                        var i = this;
                        return new n(function(e, n) {
                            function r() {
                                i.off("fullscreenerror", s);
                                i.off("fullscreenchange", a)
                            }
                            function a() {
                                r();
                                e()
                            }
                            function s(e, t) {
                                r();
                                n(t)
                            }
                            i.one("fullscreenchange", a);
                            i.one("fullscreenerror", s);
                            var o = i.requestFullscreenHelper_(t);
                            if (o) {
                                o.then(r, r);
                                return o
                            }
                        }
                        )
                    }
                    return this.requestFullscreenHelper_()
                }
                ;
                i.requestFullscreenHelper_ = function e(t) {
                    var n = this;
                    var i;
                    if (!this.fsApi_.prefixed) {
                        i = this.options_.fullscreen && this.options_.fullscreen.options || {};
                        if (t !== undefined) {
                            i = t
                        }
                    }
                    if (this.fsApi_.requestFullscreen) {
                        var r = this.el_[this.fsApi_.requestFullscreen](i);
                        if (r) {
                            r.then(function() {
                                return n.isFullscreen(true)
                            }, function() {
                                return n.isFullscreen(false)
                            })
                        }
                        return r
                    } else if (this.tech_.supportsFullScreen()) {
                        this.techCall_("enterFullScreen")
                    } else {
                        this.enterFullWindow()
                    }
                }
                ;
                i.exitFullscreen = function e() {
                    var t = this.options_.Promise || r.Promise;
                    if (t) {
                        var n = this;
                        return new t(function(e, t) {
                            function i() {
                                n.off("fullscreenerror", a);
                                n.off("fullscreenchange", r)
                            }
                            function r() {
                                i();
                                e()
                            }
                            function a(e, n) {
                                i();
                                t(n)
                            }
                            n.one("fullscreenchange", r);
                            n.one("fullscreenerror", a);
                            var s = n.exitFullscreenHelper_();
                            if (s) {
                                s.then(i, i);
                                return s
                            }
                        }
                        )
                    }
                    return this.exitFullscreenHelper_()
                }
                ;
                i.exitFullscreenHelper_ = function e() {
                    var t = this;
                    if (this.fsApi_.requestFullscreen) {
                        var n = u[this.fsApi_.exitFullscreen]();
                        if (n) {
                            n.then(function() {
                                return t.isFullscreen(false)
                            })
                        }
                        return n
                    } else if (this.tech_.supportsFullScreen()) {
                        this.techCall_("exitFullScreen")
                    } else {
                        this.exitFullWindow()
                    }
                }
                ;
                i.enterFullWindow = function e() {
                    this.isFullscreen(true);
                    this.isFullWindow = true;
                    this.docOrigOverflow = u.documentElement.style.overflow;
                    ze(u, "keydown", this.boundFullWindowOnEscKey_);
                    u.documentElement.style.overflow = "hidden";
                    oe(u.body, "vjs-full-window");
                    this.trigger("enterFullWindow")
                }
                ;
                i.fullWindowOnEscKey = function e(t) {
                    if (Yt.isEventKey(t, "Esc")) {
                        if (this.isFullscreen() === true) {
                            this.exitFullscreen()
                        } else {
                            this.exitFullWindow()
                        }
                    }
                }
                ;
                i.exitFullWindow = function e() {
                    this.isFullscreen(false);
                    this.isFullWindow = false;
                    Ye(u, "keydown", this.boundFullWindowOnEscKey_);
                    u.documentElement.style.overflow = this.docOrigOverflow;
                    ue(u.body, "vjs-full-window");
                    this.trigger("exitFullWindow")
                }
                ;
                i.disablePictureInPicture = function e(t) {
                    if (t === undefined) {
                        return this.techGet_("disablePictureInPicture")
                    }
                    this.techCall_("setDisablePictureInPicture", t);
                    this.options_.disablePictureInPicture = t;
                    this.trigger("disablepictureinpicturechanged")
                }
                ;
                i.isInPictureInPicture = function e(t) {
                    if (t !== undefined) {
                        this.isInPictureInPicture_ = !!t;
                        this.togglePictureInPictureClass_();
                        return
                    }
                    return !!this.isInPictureInPicture_
                }
                ;
                i.requestPictureInPicture = function e() {
                    if ("pictureInPictureEnabled"in u && this.disablePictureInPicture() === false) {
                        return this.techGet_("requestPictureInPicture")
                    }
                }
                ;
                i.exitPictureInPicture = function e() {
                    if ("pictureInPictureEnabled"in u) {
                        return u.exitPictureInPicture()
                    }
                }
                ;
                i.handleKeyDown = function e(t) {
                    var n = this.options_.userActions;
                    if (!n || !n.hotkeys) {
                        return
                    }
                    var i = function e(t) {
                        var n = t.tagName.toLowerCase();
                        if (t.isContentEditable) {
                            return true
                        }
                        var i = ["button", "checkbox", "hidden", "radio", "reset", "submit"];
                        if (n === "input") {
                            return i.indexOf(t.type) === -1
                        }
                        var r = ["textarea"];
                        return r.indexOf(n) !== -1
                    };
                    if (i(this.el_.ownerDocument.activeElement)) {
                        return
                    }
                    if (typeof n.hotkeys === "function") {
                        n.hotkeys.call(this, t)
                    } else {
                        this.handleHotkeys(t)
                    }
                }
                ;
                i.handleHotkeys = function e(t) {
                    var n = this.options_.userActions ? this.options_.userActions.hotkeys : {};
                    var i = n.fullscreenKey
                      , r = i === void 0 ? function(e) {
                        return Yt.isEventKey(e, "f")
                    }
                    : i
                      , a = n.muteKey
                      , s = a === void 0 ? function(e) {
                        return Yt.isEventKey(e, "m")
                    }
                    : a
                      , o = n.playPauseKey
                      , l = o === void 0 ? function(e) {
                        return Yt.isEventKey(e, "k") || Yt.isEventKey(e, "Space")
                    }
                    : o;
                    if (r.call(this, t)) {
                        t.preventDefault();
                        t.stopPropagation();
                        var d = Pt.getComponent("FullscreenToggle");
                        if (u[this.fsApi_.fullscreenEnabled] !== false) {
                            d.prototype.handleClick.call(this, t)
                        }
                    } else if (s.call(this, t)) {
                        t.preventDefault();
                        t.stopPropagation();
                        var c = Pt.getComponent("MuteToggle");
                        c.prototype.handleClick.call(this, t)
                    } else if (l.call(this, t)) {
                        t.preventDefault();
                        t.stopPropagation();
                        var f = Pt.getComponent("PlayToggle");
                        f.prototype.handleClick.call(this, t)
                    }
                }
                ;
                i.canPlayType = function e(t) {
                    var n;
                    for (var i = 0, r = this.options_.techOrder; i < r.length; i++) {
                        var a = r[i];
                        var s = Jn.getTech(a);
                        if (!s) {
                            s = Pt.getComponent(a)
                        }
                        if (!s) {
                            y.error('The "' + a + '" tech is undefined. Skipped browser support check for that tech.');
                            continue
                        }
                        if (s.isSupported()) {
                            n = s.canPlayType(t);
                            if (n) {
                                return n
                            }
                        }
                    }
                    return ""
                }
                ;
                i.selectSource = function e(t) {
                    var n = this;
                    var i = this.options_.techOrder.map(function(e) {
                        return [e, Jn.getTech(e)]
                    }).filter(function(e) {
                        var t = e[0]
                          , n = e[1];
                        if (n) {
                            return n.isSupported()
                        }
                        y.error('The "' + t + '" tech is undefined. Skipped browser support check for that tech.');
                        return false
                    });
                    var r = function e(t, n, i) {
                        var r;
                        t.some(function(e) {
                            return n.some(function(t) {
                                r = i(e, t);
                                if (r) {
                                    return true
                                }
                            })
                        });
                        return r
                    };
                    var a;
                    var s = function e(t) {
                        return function(e, n) {
                            return t(n, e)
                        }
                    };
                    var o = function e(t, i) {
                        var r = t[0]
                          , a = t[1];
                        if (a.canPlaySource(i, n.options_[r.toLowerCase()])) {
                            return {
                                source: i,
                                tech: r
                            }
                        }
                    };
                    if (this.options_.sourceOrder) {
                        a = r(t, i, s(o))
                    } else {
                        a = r(i, t, o)
                    }
                    return a || false
                }
                ;
                i.handleSrc_ = function e(t, n) {
                    var i = this;
                    if (typeof t === "undefined") {
                        return this.cache_.src || ""
                    }
                    if (this.resetRetryOnError_) {
                        this.resetRetryOnError_()
                    }
                    var r = _i(t);
                    if (!r.length) {
                        this.setTimeout(function() {
                            this.error({
                                code: 4,
                                message: this.localize(this.options_.notSupportedMessage)
                            })
                        }, 0);
                        return
                    }
                    this.changingSrc_ = true;
                    if (!n) {
                        this.cache_.sources = r
                    }
                    this.updateSourceCaches_(r[0]);
                    ii(this, r[0], function(e, t) {
                        i.middleware_ = t;
                        if (!n) {
                            i.cache_.sources = r
                        }
                        i.updateSourceCaches_(e);
                        var a = i.src_(e);
                        if (a) {
                            if (r.length > 1) {
                                return i.handleSrc_(r.slice(1))
                            }
                            i.changingSrc_ = false;
                            i.setTimeout(function() {
                                this.error({
                                    code: 4,
                                    message: this.localize(this.options_.notSupportedMessage)
                                })
                            }, 0);
                            i.triggerReady();
                            return
                        }
                        ri(t, i.tech_)
                    });
                    if (this.options_.retryOnError && r.length > 1) {
                        var a = function e() {
                            i.error(null);
                            i.handleSrc_(r.slice(1), true)
                        };
                        var s = function e() {
                            i.off("error", a)
                        };
                        this.one("error", a);
                        this.one("playing", s);
                        this.resetRetryOnError_ = function() {
                            i.off("error", a);
                            i.off("playing", s)
                        }
                    }
                }
                ;
                i.src = function e(t) {
                    return this.handleSrc_(t, false)
                }
                ;
                i.src_ = function e(t) {
                    var n = this;
                    var i = this.selectSource([t]);
                    if (!i) {
                        return true
                    }
                    if (!bt(i.tech, this.techName_)) {
                        this.changingSrc_ = true;
                        this.loadTech_(i.tech, i.source);
                        this.tech_.ready(function() {
                            n.changingSrc_ = false
                        });
                        return false
                    }
                    this.ready(function() {
                        if (this.tech_.constructor.prototype.hasOwnProperty("setSource")) {
                            this.techCall_("setSource", t)
                        } else {
                            this.techCall_("src", t.src)
                        }
                        this.changingSrc_ = false
                    }, true);
                    return false
                }
                ;
                i.load = function e() {
                    this.techCall_("load")
                }
                ;
                i.reset = function e() {
                    var t = this;
                    var n = this.options_.Promise || r.Promise;
                    if (this.paused() || !n) {
                        this.doReset_()
                    } else {
                        var i = this.play();
                        Ht(i.then(function() {
                            return t.doReset_()
                        }))
                    }
                }
                ;
                i.doReset_ = function e() {
                    if (this.tech_) {
                        this.tech_.clearTracks("text")
                    }
                    this.resetCache_();
                    this.poster("");
                    this.loadTech_(this.options_.techOrder[0], null);
                    this.techCall_("reset");
                    this.resetControlBarUI_();
                    if (st(this)) {
                        this.trigger("playerreset")
                    }
                }
                ;
                i.resetControlBarUI_ = function e() {
                    this.resetProgressBar_();
                    this.resetPlaybackRate_();
                    this.resetVolumeBar_()
                }
                ;
                i.resetProgressBar_ = function e() {
                    this.currentTime(0);
                    var t = this.controlBar
                      , n = t.durationDisplay
                      , i = t.remainingTimeDisplay;
                    if (n) {
                        n.updateContent()
                    }
                    if (i) {
                        i.updateContent()
                    }
                }
                ;
                i.resetPlaybackRate_ = function e() {
                    this.playbackRate(this.defaultPlaybackRate());
                    this.handleTechRateChange_()
                }
                ;
                i.resetVolumeBar_ = function e() {
                    this.volume(1);
                    this.trigger("volumechange")
                }
                ;
                i.currentSources = function e() {
                    var t = this.currentSource();
                    var n = [];
                    if (Object.keys(t).length !== 0) {
                        n.push(t)
                    }
                    return this.cache_.sources || n
                }
                ;
                i.currentSource = function e() {
                    return this.cache_.source || {}
                }
                ;
                i.currentSrc = function e() {
                    return this.currentSource() && this.currentSource().src || ""
                }
                ;
                i.currentType = function e() {
                    return this.currentSource() && this.currentSource().type || ""
                }
                ;
                i.preload = function e(t) {
                    if (t !== undefined) {
                        this.techCall_("setPreload", t);
                        this.options_.preload = t;
                        return
                    }
                    return this.techGet_("preload")
                }
                ;
                i.autoplay = function e(t) {
                    if (t === undefined) {
                        return this.options_.autoplay || false
                    }
                    var n;
                    if (typeof t === "string" && /(any|play|muted)/.test(t)) {
                        this.options_.autoplay = t;
                        this.manualAutoplay_(t);
                        n = false
                    } else if (!t) {
                        this.options_.autoplay = false
                    } else {
                        this.options_.autoplay = true
                    }
                    n = typeof n === "undefined" ? this.options_.autoplay : n;
                    if (this.tech_) {
                        this.techCall_("setAutoplay", n)
                    }
                }
                ;
                i.playsinline = function e(t) {
                    if (t !== undefined) {
                        this.techCall_("setPlaysinline", t);
                        this.options_.playsinline = t;
                        return this
                    }
                    return this.techGet_("playsinline")
                }
                ;
                i.loop = function e(t) {
                    if (t !== undefined) {
                        this.techCall_("setLoop", t);
                        this.options_.loop = t;
                        return
                    }
                    return this.techGet_("loop")
                }
                ;
                i.poster = function e(t) {
                    if (t === undefined) {
                        return this.poster_
                    }
                    if (!t) {
                        t = ""
                    }
                    if (t === this.poster_) {
                        return
                    }
                    this.poster_ = t;
                    this.techCall_("setPoster", t);
                    this.isPosterFromTech_ = false;
                    this.trigger("posterchange")
                }
                ;
                i.handleTechPosterChange_ = function e() {
                    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {
                        var t = this.tech_.poster() || "";
                        if (t !== this.poster_) {
                            this.poster_ = t;
                            this.isPosterFromTech_ = true;
                            this.trigger("posterchange")
                        }
                    }
                }
                ;
                i.controls = function e(t) {
                    if (t === undefined) {
                        return !!this.controls_
                    }
                    t = !!t;
                    if (this.controls_ === t) {
                        return
                    }
                    this.controls_ = t;
                    if (this.usingNativeControls()) {
                        this.techCall_("setControls", t)
                    }
                    if (this.controls_) {
                        this.removeClass("vjs-controls-disabled");
                        this.addClass("vjs-controls-enabled");
                        this.trigger("controlsenabled");
                        if (!this.usingNativeControls()) {
                            this.addTechControlsListeners_()
                        }
                    } else {
                        this.removeClass("vjs-controls-enabled");
                        this.addClass("vjs-controls-disabled");
                        this.trigger("controlsdisabled");
                        if (!this.usingNativeControls()) {
                            this.removeTechControlsListeners_()
                        }
                    }
                }
                ;
                i.usingNativeControls = function e(t) {
                    if (t === undefined) {
                        return !!this.usingNativeControls_
                    }
                    t = !!t;
                    if (this.usingNativeControls_ === t) {
                        return
                    }
                    this.usingNativeControls_ = t;
                    if (this.usingNativeControls_) {
                        this.addClass("vjs-using-native-controls");
                        this.trigger("usingnativecontrols")
                    } else {
                        this.removeClass("vjs-using-native-controls");
                        this.trigger("usingcustomcontrols")
                    }
                }
                ;
                i.error = function e(t) {
                    if (t === undefined) {
                        return this.error_ || null
                    }
                    if (this.options_.suppressNotSupportedError && t && t.code === 4) {
                        var n = function e() {
                            this.error(t)
                        };
                        this.options_.suppressNotSupportedError = false;
                        this.any(["click", "touchstart"], n);
                        this.one("loadstart", function() {
                            this.off(["click", "touchstart"], n)
                        });
                        return
                    }
                    if (t === null) {
                        this.error_ = t;
                        this.removeClass("vjs-error");
                        if (this.errorDisplay) {
                            this.errorDisplay.close()
                        }
                        return
                    }
                    this.error_ = new Ut(t);
                    this.addClass("vjs-error");
                    y.error("(CODE:" + this.error_.code + " " + Ut.errorTypes[this.error_.code] + ")", this.error_.message, this.error_);
                    this.trigger("error");
                    return
                }
                ;
                i.reportUserActivity = function e(t) {
                    this.userActivity_ = true
                }
                ;
                i.userActive = function e(t) {
                    if (t === undefined) {
                        return this.userActive_
                    }
                    t = !!t;
                    if (t === this.userActive_) {
                        return
                    }
                    this.userActive_ = t;
                    if (this.userActive_) {
                        this.userActivity_ = true;
                        this.removeClass("vjs-user-inactive");
                        this.addClass("vjs-user-active");
                        this.trigger("useractive");
                        return
                    }
                    if (this.tech_) {
                        this.tech_.one("mousemove", function(e) {
                            e.stopPropagation();
                            e.preventDefault()
                        })
                    }
                    this.userActivity_ = false;
                    this.removeClass("vjs-user-active");
                    this.addClass("vjs-user-inactive");
                    this.trigger("userinactive")
                }
                ;
                i.listenForUserActivity_ = function e() {
                    var t;
                    var n;
                    var i;
                    var r = et(this, this.reportUserActivity);
                    var a = function e(t) {
                        if (t.screenX !== n || t.screenY !== i) {
                            n = t.screenX;
                            i = t.screenY;
                            r()
                        }
                    };
                    var s = function e() {
                        r();
                        this.clearInterval(t);
                        t = this.setInterval(r, 250)
                    };
                    var o = function e(n) {
                        r();
                        this.clearInterval(t)
                    };
                    this.on("mousedown", s);
                    this.on("mousemove", a);
                    this.on("mouseup", o);
                    this.on("mouseleave", o);
                    var u = this.getChild("controlBar");
                    if (u && !z && !D) {
                        u.on("mouseenter", function(e) {
                            this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;
                            this.player().options_.inactivityTimeout = 0
                        });
                        u.on("mouseleave", function(e) {
                            this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout
                        })
                    }
                    this.on("keydown", r);
                    this.on("keyup", r);
                    var l;
                    this.setInterval(function() {
                        if (!this.userActivity_) {
                            return
                        }
                        this.userActivity_ = false;
                        this.userActive(true);
                        this.clearTimeout(l);
                        var e = this.options_.inactivityTimeout;
                        if (e <= 0) {
                            return
                        }
                        l = this.setTimeout(function() {
                            if (!this.userActivity_) {
                                this.userActive(false)
                            }
                        }, e)
                    }, 250)
                }
                ;
                i.playbackRate = function e(t) {
                    if (t !== undefined) {
                        this.techCall_("setPlaybackRate", t);
                        return
                    }
                    if (this.tech_ && this.tech_.featuresPlaybackRate) {
                        return this.cache_.lastPlaybackRate || this.techGet_("playbackRate")
                    }
                    return 1
                }
                ;
                i.defaultPlaybackRate = function e(t) {
                    if (t !== undefined) {
                        return this.techCall_("setDefaultPlaybackRate", t)
                    }
                    if (this.tech_ && this.tech_.featuresPlaybackRate) {
                        return this.techGet_("defaultPlaybackRate")
                    }
                    return 1
                }
                ;
                i.isAudio = function e(t) {
                    if (t !== undefined) {
                        this.isAudio_ = !!t;
                        return
                    }
                    return !!this.isAudio_
                }
                ;
                i.addTextTrack = function e(t, n, i) {
                    if (this.tech_) {
                        return this.tech_.addTextTrack(t, n, i)
                    }
                }
                ;
                i.addRemoteTextTrack = function e(t, n) {
                    if (this.tech_) {
                        return this.tech_.addRemoteTextTrack(t, n)
                    }
                }
                ;
                i.removeRemoteTextTrack = function e(t) {
                    if (t === void 0) {
                        t = {}
                    }
                    var n = t
                      , i = n.track;
                    if (!i) {
                        i = t
                    }
                    if (this.tech_) {
                        return this.tech_.removeRemoteTextTrack(i)
                    }
                }
                ;
                i.getVideoPlaybackQuality = function e() {
                    return this.techGet_("getVideoPlaybackQuality")
                }
                ;
                i.videoWidth = function e() {
                    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0
                }
                ;
                i.videoHeight = function e() {
                    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0
                }
                ;
                i.language = function e(t) {
                    if (t === undefined) {
                        return this.language_
                    }
                    if (this.language_ !== String(t).toLowerCase()) {
                        this.language_ = String(t).toLowerCase();
                        if (st(this)) {
                            this.trigger("languagechange")
                        }
                    }
                }
                ;
                i.languages = function e() {
                    return St(n.prototype.options_.languages, this.languages_)
                }
                ;
                i.toJSON = function e() {
                    var t = St(this.options_);
                    var n = t.tracks;
                    t.tracks = [];
                    for (var i = 0; i < n.length; i++) {
                        var r = n[i];
                        r = St(r);
                        r.player = undefined;
                        t.tracks[i] = r
                    }
                    return t
                }
                ;
                i.createModal = function e(t, n) {
                    var i = this;
                    n = n || {};
                    n.content = t || "";
                    var r = new tn(this,n);
                    this.addChild(r);
                    r.on("dispose", function() {
                        i.removeChild(r)
                    });
                    r.open();
                    return r
                }
                ;
                i.updateCurrentBreakpoint_ = function e() {
                    if (!this.responsive()) {
                        return
                    }
                    var t = this.currentBreakpoint();
                    var n = this.currentWidth();
                    for (var i = 0; i < ya.length; i++) {
                        var r = ya[i];
                        var a = this.breakpoints_[r];
                        if (n <= a) {
                            if (t === r) {
                                return
                            }
                            if (t) {
                                this.removeClass(_a[t])
                            }
                            this.addClass(_a[r]);
                            this.breakpoint_ = r;
                            break
                        }
                    }
                }
                ;
                i.removeCurrentBreakpoint_ = function e() {
                    var t = this.currentBreakpointClass();
                    this.breakpoint_ = "";
                    if (t) {
                        this.removeClass(t)
                    }
                }
                ;
                i.breakpoints = function e(t) {
                    if (t === undefined) {
                        return E(this.breakpoints_)
                    }
                    this.breakpoint_ = "";
                    this.breakpoints_ = E({}, ba, t);
                    this.updateCurrentBreakpoint_();
                    return E(this.breakpoints_)
                }
                ;
                i.responsive = function e(t) {
                    if (t === undefined) {
                        return this.responsive_
                    }
                    t = Boolean(t);
                    var n = this.responsive_;
                    if (t === n) {
                        return
                    }
                    this.responsive_ = t;
                    if (t) {
                        this.on("playerresize", this.boundUpdateCurrentBreakpoint_);
                        this.updateCurrentBreakpoint_()
                    } else {
                        this.off("playerresize", this.boundUpdateCurrentBreakpoint_);
                        this.removeCurrentBreakpoint_()
                    }
                    return t
                }
                ;
                i.currentBreakpoint = function e() {
                    return this.breakpoint_
                }
                ;
                i.currentBreakpointClass = function e() {
                    return _a[this.breakpoint_] || ""
                }
                ;
                i.loadMedia = function e(t, n) {
                    var i = this;
                    if (!t || typeof t !== "object") {
                        return
                    }
                    this.reset();
                    this.cache_.media = St(t);
                    var r = this.cache_.media
                      , a = r.artwork
                      , s = r.poster
                      , o = r.src
                      , u = r.textTracks;
                    if (!a && s) {
                        this.cache_.media.artwork = [{
                            src: s,
                            type: mi(s)
                        }]
                    }
                    if (o) {
                        this.src(o)
                    }
                    if (s) {
                        this.poster(s)
                    }
                    if (Array.isArray(u)) {
                        u.forEach(function(e) {
                            return i.addRemoteTextTrack(e, false)
                        })
                    }
                    this.ready(n)
                }
                ;
                i.getMedia = function e() {
                    if (!this.cache_.media) {
                        var t = this.poster();
                        var n = this.currentSources();
                        var i = Array.prototype.map.call(this.remoteTextTracks(), function(e) {
                            return {
                                kind: e.kind,
                                label: e.label,
                                language: e.language,
                                src: e.src
                            }
                        });
                        var r = {
                            src: n,
                            textTracks: i
                        };
                        if (t) {
                            r.poster = t;
                            r.artwork = [{
                                src: r.poster,
                                type: mi(r.poster)
                            }]
                        }
                        return r
                    }
                    return St(this.cache_.media)
                }
                ;
                n.getTagSettings = function e(t) {
                    var n = {
                        sources: [],
                        tracks: []
                    };
                    var i = ce(t);
                    var r = i["data-setup"];
                    if (se(t, "vjs-fill")) {
                        i.fill = true
                    }
                    if (se(t, "vjs-fluid")) {
                        i.fluid = true
                    }
                    if (r !== null) {
                        var a = Ft(r || "{}")
                          , s = a[0]
                          , o = a[1];
                        if (s) {
                            y.error(s)
                        }
                        E(i, o)
                    }
                    E(n, i);
                    if (t.hasChildNodes()) {
                        var u = t.childNodes;
                        for (var l = 0, d = u.length; l < d; l++) {
                            var c = u[l];
                            var f = c.nodeName.toLowerCase();
                            if (f === "source") {
                                n.sources.push(ce(c))
                            } else if (f === "track") {
                                n.tracks.push(ce(c))
                            }
                        }
                    }
                    return n
                }
                ;
                i.flexNotSupported_ = function e() {
                    var t = u.createElement("i");
                    return !("flexBasis"in t.style || "webkitFlexBasis"in t.style || "mozFlexBasis"in t.style || "msFlexBasis"in t.style || "msFlexOrder"in t.style)
                }
                ;
                i.debug = function e(t) {
                    if (t === undefined) {
                        return this.debugEnabled_
                    }
                    if (t) {
                        this.trigger("debugon");
                        this.previousLogLevel_ = this.log.level;
                        this.log.level("debug");
                        this.debugEnabled_ = true
                    } else {
                        this.trigger("debugoff");
                        this.log.level(this.previousLogLevel_);
                        this.previousLogLevel_ = undefined;
                        this.debugEnabled_ = false
                    }
                }
                ;
                return n
            }(Pt);
            Xn.names.forEach(function(e) {
                var t = Xn[e];
                Sa.prototype[t.getterName] = function() {
                    if (this.tech_) {
                        return this.tech_[t.getterName]()
                    }
                    this[t.privateName] = this[t.privateName] || new t.ListClass;
                    return this[t.privateName]
                }
            });
            Sa.prototype.crossorigin = Sa.prototype.crossOrigin;
            Sa.players = {};
            var Aa = r.navigator;
            Sa.prototype.options_ = {
                techOrder: Jn.defaultTechOrder_,
                html5: {},
                inactivityTimeout: 2e3,
                playbackRates: [],
                liveui: false,
                children: ["mediaLoader", "posterImage", "textTrackDisplay", "loadingSpinner", "bigPlayButton", "liveTracker", "controlBar", "errorDisplay", "textTrackSettings", "resizeManager"],
                language: Aa && (Aa.languages && Aa.languages[0] || Aa.userLanguage || Aa.language) || "en",
                languages: {},
                notSupportedMessage: "No compatible source was found for this media.",
                fullscreen: {
                    options: {
                        navigationUI: "hide"
                    }
                },
                breakpoints: {},
                responsive: false
            };
            ["ended", "seeking", "seekable", "networkState", "readyState"].forEach(function(e) {
                Sa.prototype[e] = function() {
                    return this.techGet_(e)
                }
            });
            ga.forEach(function(e) {
                Sa.prototype["handleTech" + _t(e) + "_"] = function() {
                    return this.trigger(e)
                }
            });
            Pt.registerComponent("Player", Sa);
            var Ta = n(function(e) {
                function t(n, i) {
                    e.exports = t = Object.setPrototypeOf || function e(t, n) {
                        t.__proto__ = n;
                        return t
                    }
                    ;
                    return t(n, i)
                }
                e.exports = t
            });
            function ka() {
                if (typeof Reflect === "undefined" || !Reflect.construct)
                    return false;
                if (Reflect.construct.sham)
                    return false;
                if (typeof Proxy === "function")
                    return true;
                try {
                    Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));
                    return true
                } catch (e) {
                    return false
                }
            }
            var Ea = ka;
            var Pa = n(function(e) {
                function t(n, i, r) {
                    if (Ea()) {
                        e.exports = t = Reflect.construct
                    } else {
                        e.exports = t = function e(t, n, i) {
                            var r = [null];
                            r.push.apply(r, n);
                            var a = Function.bind.apply(t, r);
                            var s = new a;
                            if (i)
                                Ta(s, i.prototype);
                            return s
                        }
                    }
                    return t.apply(null, arguments)
                }
                e.exports = t
            });
            var Ia = "plugin";
            var Ca = "activePlugins_";
            var wa = {};
            var ja = function e(t) {
                return wa.hasOwnProperty(t)
            };
            var La = function e(t) {
                return ja(t) ? wa[t] : undefined
            };
            var Oa = function e(t, n) {
                t[Ca] = t[Ca] || {};
                t[Ca][n] = true
            };
            var xa = function e(t, n, i) {
                var r = (i ? "before" : "") + "pluginsetup";
                t.trigger(r, n);
                t.trigger(r + ":" + n.name, n)
            };
            var Da = function e(t, n) {
                var i = function e() {
                    xa(this, {
                        name: t,
                        plugin: n,
                        instance: null
                    }, true);
                    var i = n.apply(this, arguments);
                    Oa(this, t);
                    xa(this, {
                        name: t,
                        plugin: n,
                        instance: i
                    });
                    return i
                };
                Object.keys(n).forEach(function(e) {
                    i[e] = n[e]
                });
                return i
            };
            var Na = function e(t, n) {
                n.prototype.name = t;
                return function() {
                    xa(this, {
                        name: t,
                        plugin: n,
                        instance: null
                    }, true);
                    for (var e = arguments.length, i = new Array(e), r = 0; r < e; r++) {
                        i[r] = arguments[r]
                    }
                    var a = Pa(n, [this].concat(i));
                    this[t] = function() {
                        return a
                    }
                    ;
                    xa(this, a.getEventHash());
                    return a
                }
            };
            var Ra = function() {
                function e(t) {
                    if (this.constructor === e) {
                        throw new Error("Plugin must be sub-classed; not directly instantiated.")
                    }
                    this.player = t;
                    if (!this.log) {
                        this.log = this.player.log.createLogger(this.name)
                    }
                    vt(this);
                    delete this.trigger;
                    mt(this, this.constructor.defaultState);
                    Oa(t, this.name);
                    this.dispose = this.dispose.bind(this);
                    t.on("dispose", this.dispose)
                }
                var t = e.prototype;
                t.version = function e() {
                    return this.constructor.VERSION
                }
                ;
                t.getEventHash = function e(t) {
                    if (t === void 0) {
                        t = {}
                    }
                    t.name = this.name;
                    t.plugin = this.constructor;
                    t.instance = this;
                    return t
                }
                ;
                t.trigger = function e(t, n) {
                    if (n === void 0) {
                        n = {}
                    }
                    return Xe(this.eventBusEl_, t, this.getEventHash(n))
                }
                ;
                t.handleStateChanged = function e(t) {}
                ;
                t.dispose = function e() {
                    var t = this.name
                      , n = this.player;
                    this.trigger("dispose");
                    this.off();
                    n.off("dispose", this.dispose);
                    n[Ca][t] = false;
                    this.player = this.state = null;
                    n[t] = Na(t, wa[t])
                }
                ;
                e.isBasic = function t(n) {
                    var i = typeof n === "string" ? La(n) : n;
                    return typeof i === "function" && !e.prototype.isPrototypeOf(i.prototype)
                }
                ;
                e.registerPlugin = function t(n, i) {
                    if (typeof n !== "string") {
                        throw new Error('Illegal plugin name, "' + n + '", must be a string, was ' + typeof n + ".")
                    }
                    if (ja(n)) {
                        y.warn('A plugin named "' + n + '" already exists. You may want to avoid re-registering plugins!')
                    } else if (Sa.prototype.hasOwnProperty(n)) {
                        throw new Error('Illegal plugin name, "' + n + '", cannot share a name with an existing player method!')
                    }
                    if (typeof i !== "function") {
                        throw new Error('Illegal plugin for "' + n + '", must be a function, was ' + typeof i + ".")
                    }
                    wa[n] = i;
                    if (n !== Ia) {
                        if (e.isBasic(i)) {
                            Sa.prototype[n] = Da(n, i)
                        } else {
                            Sa.prototype[n] = Na(n, i)
                        }
                    }
                    return i
                }
                ;
                e.deregisterPlugin = function e(t) {
                    if (t === Ia) {
                        throw new Error("Cannot de-register base plugin.")
                    }
                    if (ja(t)) {
                        delete wa[t];
                        delete Sa.prototype[t]
                    }
                }
                ;
                e.getPlugins = function e(t) {
                    if (t === void 0) {
                        t = Object.keys(wa)
                    }
                    var n;
                    t.forEach(function(e) {
                        var t = La(e);
                        if (t) {
                            n = n || {};
                            n[e] = t
                        }
                    });
                    return n
                }
                ;
                e.getPluginVersion = function e(t) {
                    var n = La(t);
                    return n && n.VERSION || ""
                }
                ;
                return e
            }();
            Ra.getPlugin = La;
            Ra.BASE_PLUGIN_NAME = Ia;
            Ra.registerPlugin(Ia, Ra);
            Sa.prototype.usingPlugin = function(e) {
                return !!this[Ca] && this[Ca][e] === true
            }
            ;
            Sa.prototype.hasPlugin = function(e) {
                return !!ja(e)
            }
            ;
            function Ma(e, t) {
                if (typeof t !== "function" && t !== null) {
                    throw new TypeError("Super expression must either be null or a function")
                }
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        writable: true,
                        configurable: true
                    }
                });
                if (t)
                    Ta(e, t)
            }
            var Ua = Ma;
            var Ba = function e(t, n) {
                if (n === void 0) {
                    n = {}
                }
                var i = function e() {
                    t.apply(this, arguments)
                };
                var r = {};
                if (typeof n === "object") {
                    if (n.constructor !== Object.prototype.constructor) {
                        i = n.constructor
                    }
                    r = n
                } else if (typeof n === "function") {
                    i = n
                }
                Ua(i, t);
                if (t) {
                    i.super_ = t
                }
                for (var a in r) {
                    if (r.hasOwnProperty(a)) {
                        i.prototype[a] = r[a]
                    }
                }
                return i
            };
            var Fa = function e(t) {
                return t.indexOf("#") === 0 ? t.slice(1) : t
            };
            function Va(e, t, n) {
                var i = Va.getPlayer(e);
                if (i) {
                    if (t) {
                        y.warn('Player "' + e + '" is already initialised. Options will not be applied.')
                    }
                    if (n) {
                        i.ready(n)
                    }
                    return i
                }
                var r = typeof e === "string" ? Pe("#" + Fa(e)) : e;
                if (!ee(r)) {
                    throw new TypeError("The element or ID supplied is not valid. (videojs)")
                }
                if (!r.ownerDocument.defaultView || !r.ownerDocument.body.contains(r)) {
                    y.warn("The element supplied is not included in the DOM")
                }
                t = t || {};
                Va.hooks("beforesetup").forEach(function(e) {
                    var n = e(r, St(t));
                    if (!P(n) || Array.isArray(n)) {
                        y.error("please return an object in beforesetup hooks");
                        return
                    }
                    t = St(t, n)
                });
                var a = Pt.getComponent("Player");
                i = new a(r,t,n);
                Va.hooks("setup").forEach(function(e) {
                    return e(i)
                });
                return i
            }
            Va.hooks_ = {};
            Va.hooks = function(e, t) {
                Va.hooks_[e] = Va.hooks_[e] || [];
                if (t) {
                    Va.hooks_[e] = Va.hooks_[e].concat(t)
                }
                return Va.hooks_[e]
            }
            ;
            Va.hook = function(e, t) {
                Va.hooks(e, t)
            }
            ;
            Va.hookOnce = function(e, t) {
                Va.hooks(e, [].concat(t).map(function(t) {
                    var n = function n() {
                        Va.removeHook(e, n);
                        return t.apply(void 0, arguments)
                    };
                    return n
                }))
            }
            ;
            Va.removeHook = function(e, t) {
                var n = Va.hooks(e).indexOf(t);
                if (n <= -1) {
                    return false
                }
                Va.hooks_[e] = Va.hooks_[e].slice();
                Va.hooks_[e].splice(n, 1);
                return true
            }
            ;
            if (r.VIDEOJS_NO_DYNAMIC_STYLE !== true && $()) {
                var qa = Pe(".vjs-styles-defaults");
                if (!qa) {
                    qa = De("vjs-styles-defaults");
                    var Ha = Pe("head");
                    if (Ha) {
                        Ha.insertBefore(qa, Ha.firstChild)
                    }
                    Ne(qa, "\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    ")
                }
            }
            Oe(1, Va);
            Va.VERSION = e;
            Va.options = Sa.prototype.options_;
            Va.getPlayers = function() {
                return Sa.players
            }
            ;
            Va.getPlayer = function(e) {
                var t = Sa.players;
                var n;
                if (typeof e === "string") {
                    var i = Fa(e);
                    var r = t[i];
                    if (r) {
                        return r
                    }
                    n = Pe("#" + i)
                } else {
                    n = e
                }
                if (ee(n)) {
                    var a = n
                      , s = a.player
                      , o = a.playerId;
                    if (s || t[o]) {
                        return s || t[o]
                    }
                }
            }
            ;
            Va.getAllPlayers = function() {
                return Object.keys(Sa.players).map(function(e) {
                    return Sa.players[e]
                }).filter(Boolean)
            }
            ;
            Va.players = Sa.players;
            Va.getComponent = Pt.getComponent;
            Va.registerComponent = function(e, t) {
                if (Jn.isTech(t)) {
                    y.warn("The " + e + " tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)")
                }
                Pt.registerComponent.call(Pt, e, t)
            }
            ;
            Va.getTech = Jn.getTech;
            Va.registerTech = Jn.registerTech;
            Va.use = ni;
            Object.defineProperty(Va, "middleware", {
                value: {},
                writeable: false,
                enumerable: true
            });
            Object.defineProperty(Va.middleware, "TERMINATOR", {
                value: ti,
                writeable: false,
                enumerable: true
            });
            Va.browser = X;
            Va.TOUCH_ENABLED = G;
            Va.extend = Ba;
            Va.mergeOptions = St;
            Va.bind = et;
            Va.registerPlugin = Ra.registerPlugin;
            Va.deregisterPlugin = Ra.deregisterPlugin;
            Va.plugin = function(e, t) {
                y.warn("videojs.plugin() is deprecated; use videojs.registerPlugin() instead");
                return Ra.registerPlugin(e, t)
            }
            ;
            Va.getPlugins = Ra.getPlugins;
            Va.getPlugin = Ra.getPlugin;
            Va.getPluginVersion = Ra.getPluginVersion;
            Va.addLanguage = function(e, t) {
                var n;
                e = ("" + e).toLowerCase();
                Va.options.languages = St(Va.options.languages, (n = {},
                n[e] = t,
                n));
                return Va.options.languages[e]
            }
            ;
            Va.log = y;
            Va.createLogger = _;
            Va.createTimeRange = Va.createTimeRanges = Rt;
            Va.formatTime = Bi;
            Va.setFormatTime = Mi;
            Va.resetFormatTime = Ui;
            Va.parseUrl = mn;
            Va.isCrossOrigin = bn;
            Va.EventTarget = it;
            Va.on = ze;
            Va.one = Qe;
            Va.off = Ye;
            Va.trigger = Xe;
            Va.xhr = Cn;
            Va.TextTrack = Bn;
            Va.AudioTrack = Fn;
            Va.VideoTrack = Vn;
            ["isEl", "isTextNode", "createEl", "hasClass", "addClass", "removeClass", "toggleClass", "setAttributes", "getAttributes", "emptyEl", "appendContent", "insertContent"].forEach(function(e) {
                Va[e] = function() {
                    y.warn("videojs." + e + "() is deprecated; use videojs.dom." + e + "() instead");
                    return Ce[e].apply(null, arguments)
                }
            });
            Va.computedStyle = C;
            Va.dom = Ce;
            Va.url = Sn;
            Va.defineLazyProperty = pa;
            return Va
        });
        var videojs = BrightcovePlayerCore.dedupeVideojs(window.videojs, previousVideojs);
        var core = new BrightcovePlayerCore({
            accountId: "18140046001",
            adConfigId: "",
            autoplay: false,
            css: {
                controlBarColor: "rgba(0, 0, 0, 0.45)",
                controlColor: "#fff",
                progressColor: "rgb(36, 213, 204)"
            },
            embedId: "default",
            media: {
                poster: {}
            },
            plugins: [{
                name: "ima3",
                autoInit: true,
                options: {
                    adTechOrder: ["html5"],
                    hardTimeouts: true,
                    requestMode: "ondemand",
                    serverUrl: "",
                    showVpaidControls: true,
                    timeout: 8e3,
                    useMediaCuePoints: false,
                    vpaidMode: "INSECURE"
                }
            }, {
                name: "perSourceBehaviors",
                autoInit: true
            }, {
                name: "contextmenu",
                autoInit: true
            }, {
                name: "contextmenuUI",
                autoInit: true
            }, {
                name: "bcAnalytics",
                autoInit: true,
                options: {
                    accountId: "18140046001",
                    embedId: "default",
                    platformVersion: "6.52.1",
                    playerId: "LDNXZuIMO",
                    playerName: "Stream24 PROD Player v6.52.1 (05/2021 ) REACT VPAID INSECURE plugin fix"
                }
            }, {
                name: "errors",
                autoInit: true,
                options: {}
            }, {
                name: "catalog",
                autoInit: true,
                options: {
                    accountId: "18140046001",
                    policyKey: "BCpkADawqM1uyocbCIau6cwWmTg1isRaHk5ARGVg561v4XYCUL1ky1BdjH4HsEvHvz6naKGQyTIKVKHIf1PuH-cY69pQ1hhejMjdlJGsZY-eXoNj-p3RPzGf4so"
                }
            }, {
                name: "dock",
                autoInit: false
            }, {
                name: "playlist",
                autoInit: false
            }, {
                name: "errorscreen",
                autoInit: true
            }, {
                name: "overlay",
                autoInit: true
            }, {
                name: "popularVideosOverlay",
                autoInit: true
            }, {
                name: "customPip",
                autoInit: true
            }, {
                name: "comscore",
                autoInit: true,
                options: {
                    c2: 15206506,
                    labelmapping: 'c3="Il Sole 24 Ore",c4="*null",c6="*null",ns_st_st="Il Sole 24 Ore",ns_st_pu="Il Sole 24 Ore",ns_st_pr="Il Sole 24 Ore",ns_st_ep="*null",ns_st_sn="*null",ns_st_en="*null",ns_st_ge="News"'
                }
            }],
            contextMenu: {},
            playerId: "LDNXZuIMO",
            preload: "metadata",
            videoCloud: {
                policy_key: "BCpkADawqM1uyocbCIau6cwWmTg1isRaHk5ARGVg561v4XYCUL1ky1BdjH4HsEvHvz6naKGQyTIKVKHIf1PuH-cY69pQ1hhejMjdlJGsZY-eXoNj-p3RPzGf4so",
                video: null
            },
            skin: "luna",
            playersCDN: "//players.brightcove.net",
            responsive: true,
            liveui: true,
            controlBar: {},
            version: "6.52.1"
        },{});
        if (!videojs.getTech("flash")) {
            (function(e, t) {
                typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js")) : typeof define === "function" && define.amd ? define(["video.js"], t) : e.videojsFlash = t(e.videojs)
            }
            )(this, function(e) {
                "use strict";
                e = e && e.hasOwnProperty("default") ? e["default"] : e;
                var t = "5.4.1";
                var n = "2.1.0";
                function i(e) {
                    e.streamingFormats = {
                        "rtmp/mp4": "MP4",
                        "rtmp/flv": "FLV"
                    };
                    e.streamFromParts = function(e, t) {
                        return e + "&" + t
                    }
                    ;
                    e.streamToParts = function(e) {
                        var t = {
                            connection: "",
                            stream: ""
                        };
                        if (!e) {
                            return t
                        }
                        var n = e.search(/&(?!\w+=)/);
                        var i = void 0;
                        if (n !== -1) {
                            i = n + 1
                        } else {
                            n = i = e.lastIndexOf("/") + 1;
                            if (n === 0) {
                                n = i = e.length
                            }
                        }
                        t.connection = e.substring(0, n);
                        t.stream = e.substring(i, e.length);
                        return t
                    }
                    ;
                    e.isStreamingType = function(t) {
                        return t in e.streamingFormats
                    }
                    ;
                    e.RTMP_RE = /^rtmp[set]?:\/\//i;
                    e.isStreamingSrc = function(t) {
                        return e.RTMP_RE.test(t)
                    }
                    ;
                    e.rtmpSourceHandler = {};
                    e.rtmpSourceHandler.canPlayType = function(t) {
                        if (e.isStreamingType(t)) {
                            return "maybe"
                        }
                        return ""
                    }
                    ;
                    e.rtmpSourceHandler.canHandleSource = function(t, n) {
                        var i = e.rtmpSourceHandler.canPlayType(t.type);
                        if (i) {
                            return i
                        }
                        if (e.isStreamingSrc(t.src)) {
                            return "maybe"
                        }
                        return ""
                    }
                    ;
                    e.rtmpSourceHandler.handleSource = function(t, n, i) {
                        var r = e.streamToParts(t.src);
                        n.setRtmpConnection(r.connection);
                        n.setRtmpStream(r.stream)
                    }
                    ;
                    e.registerSourceHandler(e.rtmpSourceHandler);
                    return e
                }
                var r = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
                var a;
                if (typeof window !== "undefined") {
                    a = window
                } else if (typeof r !== "undefined") {
                    a = r
                } else if (typeof self !== "undefined") {
                    a = self
                } else {
                    a = {}
                }
                var s = a;
                var o = function(e, t) {
                    if (!(e instanceof t)) {
                        throw new TypeError("Cannot call a class as a function")
                    }
                };
                var u = function(e, t) {
                    if (typeof t !== "function" && t !== null) {
                        throw new TypeError("Super expression must either be null or a function, not " + typeof t)
                    }
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: false,
                            writable: true,
                            configurable: true
                        }
                    });
                    if (t)
                        Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                };
                var l = function(e, t) {
                    if (!e) {
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                    }
                    return t && (typeof t === "object" || typeof t === "function") ? t : e
                };
                var d = e.getComponent("Tech");
                var c = e.dom;
                var f = e.url;
                var p = e.createTimeRange;
                var h = e.mergeOptions;
                var v = s && s.navigator || {};
                var g = function(e) {
                    u(n, e);
                    function n(t, i) {
                        o(this, n);
                        var r = l(this, e.call(this, t, i));
                        if (t.source) {
                            r.ready(function() {
                                this.setSource(t.source)
                            }, true)
                        }
                        if (t.startTime) {
                            r.ready(function() {
                                this.load();
                                this.play();
                                this.currentTime(t.startTime)
                            }, true)
                        }
                        s.videojs = s.videojs || {};
                        s.videojs.Flash = s.videojs.Flash || {};
                        s.videojs.Flash.onReady = n.onReady;
                        s.videojs.Flash.onEvent = n.onEvent;
                        s.videojs.Flash.onError = n.onError;
                        r.on("seeked", function() {
                            this.lastSeekTarget_ = undefined
                        });
                        return r
                    }
                    n.prototype.createEl = function e() {
                        var i = this.options_;
                        if (!i.swf) {
                            i.swf = "https://vjs.zencdn.net/swf/" + t + "/video-js.swf"
                        }
                        var r = i.techId;
                        var a = h({
                            readyFunction: "videojs.Flash.onReady",
                            eventProxyFunction: "videojs.Flash.onEvent",
                            errorEventProxyFunction: "videojs.Flash.onError",
                            autoplay: i.autoplay,
                            preload: i.preload,
                            loop: i.loop,
                            muted: i.muted
                        }, i.flashVars);
                        var s = h({
                            wmode: "opaque",
                            bgcolor: "#000000"
                        }, i.params);
                        var o = h({
                            id: r,
                            name: r,
                            class: "vjs-tech"
                        }, i.attributes);
                        this.el_ = n.embed(i.swf, a, s, o);
                        this.el_.tech = this;
                        return this.el_
                    }
                    ;
                    n.prototype.play = function e() {
                        if (this.ended()) {
                            this.setCurrentTime(0)
                        }
                        this.el_.vjs_play()
                    }
                    ;
                    n.prototype.pause = function e() {
                        this.el_.vjs_pause()
                    }
                    ;
                    n.prototype.src = function e(t) {
                        if (t === undefined) {
                            return this.currentSrc()
                        }
                        return this.setSrc(t)
                    }
                    ;
                    n.prototype.setSrc = function e(t) {
                        var n = this;
                        t = f.getAbsoluteURL(t);
                        this.el_.vjs_src(t);
                        if (this.autoplay()) {
                            this.setTimeout(function() {
                                return n.play()
                            }, 0)
                        }
                    }
                    ;
                    n.prototype.seeking = function e() {
                        return this.lastSeekTarget_ !== undefined
                    }
                    ;
                    n.prototype.setCurrentTime = function t(n) {
                        var i = this.seekable();
                        if (i.length) {
                            n = n > i.start(0) ? n : i.start(0);
                            n = n < i.end(i.length - 1) ? n : i.end(i.length - 1);
                            this.lastSeekTarget_ = n;
                            this.trigger("seeking");
                            this.el_.vjs_setProperty("currentTime", n);
                            e.prototype.setCurrentTime.call(this)
                        }
                    }
                    ;
                    n.prototype.currentTime = function e() {
                        if (this.seeking()) {
                            return this.lastSeekTarget_ || 0
                        }
                        return this.el_.vjs_getProperty("currentTime")
                    }
                    ;
                    n.prototype.currentSrc = function e() {
                        if (this.currentSource_) {
                            return this.currentSource_.src
                        }
                        return this.el_.vjs_getProperty("currentSrc")
                    }
                    ;
                    n.prototype.duration = function e() {
                        if (this.readyState() === 0) {
                            return NaN
                        }
                        var e = this.el_.vjs_getProperty("duration");
                        return e >= 0 ? e : Infinity
                    }
                    ;
                    n.prototype.load = function e() {
                        this.el_.vjs_load()
                    }
                    ;
                    n.prototype.poster = function e() {
                        this.el_.vjs_getProperty("poster")
                    }
                    ;
                    n.prototype.setPoster = function e() {}
                    ;
                    n.prototype.seekable = function e() {
                        var t = this.duration();
                        if (t === 0) {
                            return p()
                        }
                        return p(0, t)
                    }
                    ;
                    n.prototype.buffered = function e() {
                        var t = this.el_.vjs_getProperty("buffered");
                        if (t.length === 0) {
                            return p()
                        }
                        return p(t[0][0], t[0][1])
                    }
                    ;
                    n.prototype.supportsFullScreen = function e() {
                        return false
                    }
                    ;
                    n.prototype.enterFullScreen = function e() {
                        return false
                    }
                    ;
                    n.prototype.getVideoPlaybackQuality = function e() {
                        var t = this.el_.vjs_getProperty("getVideoPlaybackQuality");
                        if (s.performance && typeof s.performance.now === "function") {
                            t.creationTime = s.performance.now()
                        } else if (s.performance && s.performance.timing && typeof s.performance.timing.navigationStart === "number") {
                            t.creationTime = s.Date.now() - s.performance.timing.navigationStart
                        }
                        return t
                    }
                    ;
                    return n
                }(d);
                var m = ["rtmpConnection", "rtmpStream", "preload", "defaultPlaybackRate", "playbackRate", "autoplay", "loop", "controls", "volume", "muted", "defaultMuted"];
                var y = ["networkState", "readyState", "initialTime", "startOffsetTime", "paused", "ended", "videoWidth", "videoHeight"];
                var _ = g.prototype;
                function b(e) {
                    var t = e.charAt(0).toUpperCase() + e.slice(1);
                    _["set" + t] = function(t) {
                        return this.el_.vjs_setProperty(e, t)
                    }
                }
                function S(e) {
                    _[e] = function() {
                        return this.el_.vjs_getProperty(e)
                    }
                }
                for (var A = 0; A < m.length; A++) {
                    S(m[A]);
                    b(m[A])
                }
                for (var T = 0; T < y.length; T++) {
                    S(y[T])
                }
                g.isSupported = function() {
                    if (e.browser.IS_CHROME && !e.browser.IS_ANDROID || e.browser.IS_SAFARI && !e.browser.IS_IOS) {
                        return true
                    }
                    return g.version()[0] >= 10
                }
                ;
                d.withSourceHandlers(g);
                g.nativeSourceHandler = {};
                g.nativeSourceHandler.canPlayType = function(e) {
                    if (e in g.formats) {
                        return "maybe"
                    }
                    return ""
                }
                ;
                g.nativeSourceHandler.canHandleSource = function(e, t) {
                    var n = void 0;
                    function i(e) {
                        var t = f.getFileExtension(e);
                        if (t) {
                            return "video/" + t
                        }
                        return ""
                    }
                    if (!e.type) {
                        n = i(e.src)
                    } else {
                        n = e.type.replace(/;.*/, "").toLowerCase()
                    }
                    return g.nativeSourceHandler.canPlayType(n)
                }
                ;
                g.nativeSourceHandler.handleSource = function(e, t, n) {
                    t.setSrc(e.src)
                }
                ;
                g.nativeSourceHandler.dispose = function() {}
                ;
                g.registerSourceHandler(g.nativeSourceHandler);
                g.formats = {
                    "video/flv": "FLV",
                    "video/x-flv": "FLV",
                    "video/mp4": "MP4",
                    "video/m4v": "MP4"
                };
                g.onReady = function(e) {
                    var t = c.$("#" + e);
                    var n = t && t.tech;
                    if (n && n.el()) {
                        g.checkReady(n)
                    }
                }
                ;
                g.checkReady = function(e) {
                    if (!e.el()) {
                        return
                    }
                    if (e.el().vjs_getProperty) {
                        e.triggerReady()
                    } else {
                        this.setTimeout(function() {
                            g.checkReady(e)
                        }, 50)
                    }
                }
                ;
                g.onEvent = function(e, t) {
                    var n = c.$("#" + e).tech;
                    var i = Array.prototype.slice.call(arguments, 2);
                    n.setTimeout(function() {
                        n.trigger(t, i)
                    }, 1)
                }
                ;
                g.onError = function(e, t) {
                    var n = c.$("#" + e).tech;
                    if (t === "srcnotfound") {
                        return n.error(4)
                    }
                    if (typeof t === "string") {
                        n.error("FLASH: " + t)
                    } else {
                        t.origin = "flash";
                        n.error(t)
                    }
                }
                ;
                g.version = function() {
                    var e = "0,0,0";
                    try {
                        e = new s.ActiveXObject("ShockwaveFlash.ShockwaveFlash").GetVariable("$version").replace(/\D+/g, ",").match(/^,?(.+),?$/)[1]
                    } catch (t) {
                        try {
                            if (v.mimeTypes["application/x-shockwave-flash"].enabledPlugin) {
                                e = (v.plugins["Shockwave Flash 2.0"] || v.plugins["Shockwave Flash"]).description.replace(/\D+/g, ",").match(/^,?(.+),?$/)[1]
                            }
                        } catch (e) {}
                    }
                    return e.split(",")
                }
                ;
                g.embed = function(e, t, n, i) {
                    var r = g.getEmbedCode(e, t, n, i);
                    var a = c.createEl("div", {
                        innerHTML: r
                    }).childNodes[0];
                    return a
                }
                ;
                g.getEmbedCode = function(e, t, n, i) {
                    var r = '<object type="application/x-shockwave-flash" ';
                    var a = "";
                    var s = "";
                    var o = "";
                    if (t) {
                        Object.getOwnPropertyNames(t).forEach(function(e) {
                            a += e + "=" + t[e] + "&amp;"
                        })
                    }
                    n = h({
                        movie: e,
                        flashvars: a,
                        allowScriptAccess: "always",
                        allowNetworking: "all"
                    }, n);
                    Object.getOwnPropertyNames(n).forEach(function(e) {
                        s += '<param name="' + e + '" value="' + n[e] + '" />'
                    });
                    i = h({
                        data: e,
                        width: "100%",
                        height: "100%"
                    }, i);
                    Object.getOwnPropertyNames(i).forEach(function(e) {
                        o += e + '="' + i[e] + '" '
                    });
                    return "" + r + o + ">" + s + "</object>"
                }
                ;
                i(g);
                if (d.getTech("Flash")) {
                    e.log.warn("Not using videojs-flash as it appears to already be registered");
                    e.log.warn("videojs-flash should only be used with video.js@6 and above")
                } else {
                    e.registerTech("Flash", g)
                }
                g.VERSION = n;
                return g
            })
        }
        (function(e, t) {
            typeof exports === "object" && typeof module !== "undefined" ? t(exports, require("global/window"), require("video.js")) : typeof define === "function" && define.amd ? define(["exports", "global/window", "video.js"], t) : t(e.videojsFlashlsSourceHandler = {}, e.window, e.videojs)
        }
        )(this, function(e, t, n) {
            "use strict";
            t = t && t.hasOwnProperty("default") ? t["default"] : t;
            n = n && n.hasOwnProperty("default") ? n["default"] : n;
            var i = function() {
                this.init = function() {
                    var e = {};
                    this.on = function(t, n) {
                        if (!e[t]) {
                            e[t] = []
                        }
                        e[t] = e[t].concat(n)
                    }
                    ;
                    this.off = function(t, n) {
                        var i;
                        if (!e[t]) {
                            return false
                        }
                        i = e[t].indexOf(n);
                        e[t] = e[t].slice();
                        e[t].splice(i, 1);
                        return i > -1
                    }
                    ;
                    this.trigger = function(t) {
                        var n, i, r, a;
                        n = e[t];
                        if (!n) {
                            return
                        }
                        if (arguments.length === 2) {
                            r = n.length;
                            for (i = 0; i < r; ++i) {
                                n[i].call(this, arguments[1])
                            }
                        } else {
                            a = [];
                            i = arguments.length;
                            for (i = 1; i < arguments.length; ++i) {
                                a.push(arguments[i])
                            }
                            r = n.length;
                            for (i = 0; i < r; ++i) {
                                n[i].apply(this, a)
                            }
                        }
                    }
                    ;
                    this.dispose = function() {
                        e = {}
                    }
                }
            };
            i.prototype.pipe = function(e) {
                this.on("data", function(t) {
                    e.push(t)
                });
                this.on("done", function(t) {
                    e.flush(t)
                });
                return e
            }
            ;
            i.prototype.push = function(e) {
                this.trigger("data", e)
            }
            ;
            i.prototype.flush = function(e) {
                this.trigger("done", e)
            }
            ;
            var r = i;
            var a = 4
              , s = 128;
            var o = function(e) {
                var t = 0
                  , n = {
                    payloadType: -1,
                    payloadSize: 0
                }
                  , i = 0
                  , r = 0;
                while (t < e.byteLength) {
                    if (e[t] === s) {
                        break
                    }
                    while (e[t] === 255) {
                        i += 255;
                        t++
                    }
                    i += e[t++];
                    while (e[t] === 255) {
                        r += 255;
                        t++
                    }
                    r += e[t++];
                    if (!n.payload && i === a) {
                        n.payloadType = i;
                        n.payloadSize = r;
                        n.payload = e.subarray(t, t + r);
                        break
                    }
                    t += r;
                    i = 0;
                    r = 0
                }
                return n
            };
            var u = function(e) {
                if (e.payload[0] !== 181) {
                    return null
                }
                if ((e.payload[1] << 8 | e.payload[2]) !== 49) {
                    return null
                }
                if (String.fromCharCode(e.payload[3], e.payload[4], e.payload[5], e.payload[6]) !== "GA94") {
                    return null
                }
                if (e.payload[7] !== 3) {
                    return null
                }
                return e.payload.subarray(8, e.payload.length - 1)
            };
            var l = function(e, t) {
                var n = [], i, r, a, s;
                if (!(t[0] & 64)) {
                    return n
                }
                r = t[0] & 31;
                for (i = 0; i < r; i++) {
                    a = i * 3;
                    s = {
                        type: t[a + 2] & 3,
                        pts: e
                    };
                    if (t[a + 2] & 4) {
                        s.ccData = t[a + 3] << 8 | t[a + 4];
                        n.push(s)
                    }
                }
                return n
            };
            var d = function(e) {
                var t = e.byteLength, n = [], i = 1, r, a;
                while (i < t - 2) {
                    if (e[i] === 0 && e[i + 1] === 0 && e[i + 2] === 3) {
                        n.push(i + 2);
                        i += 2
                    } else {
                        i++
                    }
                }
                if (n.length === 0) {
                    return e
                }
                r = t - n.length;
                a = new Uint8Array(r);
                var s = 0;
                for (i = 0; i < r; s++,
                i++) {
                    if (s === n[0]) {
                        s++;
                        n.shift()
                    }
                    a[i] = e[s]
                }
                return a
            };
            var c = {
                parseSei: o,
                parseUserData: u,
                parseCaptionPackets: l,
                discardEmulationPreventionBytes: d,
                USER_DATA_REGISTERED_ITU_T_T35: a
            };
            var f = function() {
                f.prototype.init.call(this);
                this.captionPackets_ = [];
                this.ccStreams_ = [new y(0,0), new y(0,1), new y(1,0), new y(1,1)];
                this.reset();
                this.ccStreams_.forEach(function(e) {
                    e.on("data", this.trigger.bind(this, "data"));
                    e.on("done", this.trigger.bind(this, "done"))
                }, this)
            };
            f.prototype = new r;
            f.prototype.push = function(e) {
                var t, n, i;
                if (e.nalUnitType !== "sei_rbsp") {
                    return
                }
                t = c.parseSei(e.escapedRBSP);
                if (t.payloadType !== c.USER_DATA_REGISTERED_ITU_T_T35) {
                    return
                }
                n = c.parseUserData(t);
                if (!n) {
                    return
                }
                if (e.dts < this.latestDts_) {
                    this.ignoreNextEqualDts_ = true;
                    return
                } else if (e.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
                    this.numSameDts_--;
                    if (!this.numSameDts_) {
                        this.ignoreNextEqualDts_ = false
                    }
                    return
                }
                i = c.parseCaptionPackets(e.pts, n);
                this.captionPackets_ = this.captionPackets_.concat(i);
                if (this.latestDts_ !== e.dts) {
                    this.numSameDts_ = 0
                }
                this.numSameDts_++;
                this.latestDts_ = e.dts
            }
            ;
            f.prototype.flush = function() {
                if (!this.captionPackets_.length) {
                    this.ccStreams_.forEach(function(e) {
                        e.flush()
                    }, this);
                    return
                }
                this.captionPackets_.forEach(function(e, t) {
                    e.presortIndex = t
                });
                this.captionPackets_.sort(function(e, t) {
                    if (e.pts === t.pts) {
                        return e.presortIndex - t.presortIndex
                    }
                    return e.pts - t.pts
                });
                this.captionPackets_.forEach(function(e) {
                    if (e.type < 2) {
                        this.dispatchCea608Packet(e)
                    }
                }, this);
                this.captionPackets_.length = 0;
                this.ccStreams_.forEach(function(e) {
                    e.flush()
                }, this);
                return
            }
            ;
            f.prototype.reset = function() {
                this.latestDts_ = null;
                this.ignoreNextEqualDts_ = false;
                this.numSameDts_ = 0;
                this.activeCea608Channel_ = [null, null];
                this.ccStreams_.forEach(function(e) {
                    e.reset()
                })
            }
            ;
            f.prototype.dispatchCea608Packet = function(e) {
                if (this.setsChannel1Active(e)) {
                    this.activeCea608Channel_[e.type] = 0
                } else if (this.setsChannel2Active(e)) {
                    this.activeCea608Channel_[e.type] = 1
                }
                if (this.activeCea608Channel_[e.type] === null) {
                    return
                }
                this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
            }
            ;
            f.prototype.setsChannel1Active = function(e) {
                return (e.ccData & 30720) === 4096
            }
            ;
            f.prototype.setsChannel2Active = function(e) {
                return (e.ccData & 30720) === 6144
            }
            ;
            var p = {
                42: 225,
                92: 233,
                94: 237,
                95: 243,
                96: 250,
                123: 231,
                124: 247,
                125: 209,
                126: 241,
                127: 9608,
                304: 174,
                305: 176,
                306: 189,
                307: 191,
                308: 8482,
                309: 162,
                310: 163,
                311: 9834,
                312: 224,
                313: 160,
                314: 232,
                315: 226,
                316: 234,
                317: 238,
                318: 244,
                319: 251,
                544: 193,
                545: 201,
                546: 211,
                547: 218,
                548: 220,
                549: 252,
                550: 8216,
                551: 161,
                552: 42,
                553: 39,
                554: 8212,
                555: 169,
                556: 8480,
                557: 8226,
                558: 8220,
                559: 8221,
                560: 192,
                561: 194,
                562: 199,
                563: 200,
                564: 202,
                565: 203,
                566: 235,
                567: 206,
                568: 207,
                569: 239,
                570: 212,
                571: 217,
                572: 249,
                573: 219,
                574: 171,
                575: 187,
                800: 195,
                801: 227,
                802: 205,
                803: 204,
                804: 236,
                805: 210,
                806: 242,
                807: 213,
                808: 245,
                809: 123,
                810: 125,
                811: 92,
                812: 94,
                813: 95,
                814: 124,
                815: 126,
                816: 196,
                817: 228,
                818: 214,
                819: 246,
                820: 223,
                821: 165,
                822: 164,
                823: 9474,
                824: 197,
                825: 229,
                826: 216,
                827: 248,
                828: 9484,
                829: 9488,
                830: 9492,
                831: 9496
            };
            var h = function(e) {
                if (e === null) {
                    return ""
                }
                e = p[e] || e;
                return String.fromCharCode(e)
            };
            var v = 14;
            var g = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152];
            var m = function() {
                var e = []
                  , t = v + 1;
                while (t--) {
                    e.push("")
                }
                return e
            };
            var y = function(e, t) {
                y.prototype.init.call(this);
                this.field_ = e || 0;
                this.dataChannel_ = t || 0;
                this.name_ = "CC" + ((this.field_ << 1 | this.dataChannel_) + 1);
                this.setConstants();
                this.reset();
                this.push = function(e) {
                    var t, n, i, r, a;
                    t = e.ccData & 32639;
                    if (t === this.lastControlCode_) {
                        this.lastControlCode_ = null;
                        return
                    }
                    if ((t & 61440) === 4096) {
                        this.lastControlCode_ = t
                    } else if (t !== this.PADDING_) {
                        this.lastControlCode_ = null
                    }
                    i = t >>> 8;
                    r = t & 255;
                    if (t === this.PADDING_) {
                        return
                    } else if (t === this.RESUME_CAPTION_LOADING_) {
                        this.mode_ = "popOn"
                    } else if (t === this.END_OF_CAPTION_) {
                        this.mode_ = "popOn";
                        this.clearFormatting(e.pts);
                        this.flushDisplayed(e.pts);
                        n = this.displayed_;
                        this.displayed_ = this.nonDisplayed_;
                        this.nonDisplayed_ = n;
                        this.startPts_ = e.pts
                    } else if (t === this.ROLL_UP_2_ROWS_) {
                        this.rollUpRows_ = 2;
                        this.setRollUp(e.pts)
                    } else if (t === this.ROLL_UP_3_ROWS_) {
                        this.rollUpRows_ = 3;
                        this.setRollUp(e.pts)
                    } else if (t === this.ROLL_UP_4_ROWS_) {
                        this.rollUpRows_ = 4;
                        this.setRollUp(e.pts)
                    } else if (t === this.CARRIAGE_RETURN_) {
                        this.clearFormatting(e.pts);
                        this.flushDisplayed(e.pts);
                        this.shiftRowsUp_();
                        this.startPts_ = e.pts
                    } else if (t === this.BACKSPACE_) {
                        if (this.mode_ === "popOn") {
                            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
                        } else {
                            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
                        }
                    } else if (t === this.ERASE_DISPLAYED_MEMORY_) {
                        this.flushDisplayed(e.pts);
                        this.displayed_ = m()
                    } else if (t === this.ERASE_NON_DISPLAYED_MEMORY_) {
                        this.nonDisplayed_ = m()
                    } else if (t === this.RESUME_DIRECT_CAPTIONING_) {
                        if (this.mode_ !== "paintOn") {
                            this.flushDisplayed(e.pts);
                            this.displayed_ = m()
                        }
                        this.mode_ = "paintOn";
                        this.startPts_ = e.pts
                    } else if (this.isSpecialCharacter(i, r)) {
                        i = (i & 3) << 8;
                        a = h(i | r);
                        this[this.mode_](e.pts, a);
                        this.column_++
                    } else if (this.isExtCharacter(i, r)) {
                        if (this.mode_ === "popOn") {
                            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
                        } else {
                            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
                        }
                        i = (i & 3) << 8;
                        a = h(i | r);
                        this[this.mode_](e.pts, a);
                        this.column_++
                    } else if (this.isMidRowCode(i, r)) {
                        this.clearFormatting(e.pts);
                        this[this.mode_](e.pts, " ");
                        this.column_++;
                        if ((r & 14) === 14) {
                            this.addFormatting(e.pts, ["i"])
                        }
                        if ((r & 1) === 1) {
                            this.addFormatting(e.pts, ["u"])
                        }
                    } else if (this.isOffsetControlCode(i, r)) {
                        this.column_ += r & 3
                    } else if (this.isPAC(i, r)) {
                        var s = g.indexOf(t & 7968);
                        if (this.mode_ === "rollUp") {
                            this.setRollUp(e.pts, s)
                        }
                        if (s !== this.row_) {
                            this.clearFormatting(e.pts);
                            this.row_ = s
                        }
                        if (r & 1 && this.formatting_.indexOf("u") === -1) {
                            this.addFormatting(e.pts, ["u"])
                        }
                        if ((t & 16) === 16) {
                            this.column_ = ((t & 14) >> 1) * 4
                        }
                        if (this.isColorPAC(r)) {
                            if ((r & 14) === 14) {
                                this.addFormatting(e.pts, ["i"])
                            }
                        }
                    } else if (this.isNormalChar(i)) {
                        if (r === 0) {
                            r = null
                        }
                        a = h(i);
                        a += h(r);
                        this[this.mode_](e.pts, a);
                        this.column_ += a.length
                    }
                }
            };
            y.prototype = new r;
            y.prototype.flushDisplayed = function(e) {
                var t = this.displayed_.map(function(e) {
                    return e.trim()
                }).join("\n").replace(/^\n+|\n+$/g, "");
                if (t.length) {
                    this.trigger("data", {
                        startPts: this.startPts_,
                        endPts: e,
                        text: t,
                        stream: this.name_
                    })
                }
            }
            ;
            y.prototype.reset = function() {
                this.mode_ = "popOn";
                this.topRow_ = 0;
                this.startPts_ = 0;
                this.displayed_ = m();
                this.nonDisplayed_ = m();
                this.lastControlCode_ = null;
                this.column_ = 0;
                this.row_ = v;
                this.rollUpRows_ = 2;
                this.formatting_ = []
            }
            ;
            y.prototype.setConstants = function() {
                if (this.dataChannel_ === 0) {
                    this.BASE_ = 16;
                    this.EXT_ = 17;
                    this.CONTROL_ = (20 | this.field_) << 8;
                    this.OFFSET_ = 23
                } else if (this.dataChannel_ === 1) {
                    this.BASE_ = 24;
                    this.EXT_ = 25;
                    this.CONTROL_ = (28 | this.field_) << 8;
                    this.OFFSET_ = 31
                }
                this.PADDING_ = 0;
                this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
                this.END_OF_CAPTION_ = this.CONTROL_ | 47;
                this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
                this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
                this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
                this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
                this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
                this.BACKSPACE_ = this.CONTROL_ | 33;
                this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
                this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
            }
            ;
            y.prototype.isSpecialCharacter = function(e, t) {
                return e === this.EXT_ && t >= 48 && t <= 63
            }
            ;
            y.prototype.isExtCharacter = function(e, t) {
                return (e === this.EXT_ + 1 || e === this.EXT_ + 2) && (t >= 32 && t <= 63)
            }
            ;
            y.prototype.isMidRowCode = function(e, t) {
                return e === this.EXT_ && (t >= 32 && t <= 47)
            }
            ;
            y.prototype.isOffsetControlCode = function(e, t) {
                return e === this.OFFSET_ && (t >= 33 && t <= 35)
            }
            ;
            y.prototype.isPAC = function(e, t) {
                return e >= this.BASE_ && e < this.BASE_ + 8 && (t >= 64 && t <= 127)
            }
            ;
            y.prototype.isColorPAC = function(e) {
                return e >= 64 && e <= 79 || e >= 96 && e <= 127
            }
            ;
            y.prototype.isNormalChar = function(e) {
                return e >= 32 && e <= 127
            }
            ;
            y.prototype.setRollUp = function(e, t) {
                if (this.mode_ !== "rollUp") {
                    this.row_ = v;
                    this.mode_ = "rollUp";
                    this.flushDisplayed(e);
                    this.nonDisplayed_ = m();
                    this.displayed_ = m()
                }
                if (t !== undefined && t !== this.row_) {
                    for (var n = 0; n < this.rollUpRows_; n++) {
                        this.displayed_[t - n] = this.displayed_[this.row_ - n];
                        this.displayed_[this.row_ - n] = ""
                    }
                }
                if (t === undefined) {
                    t = this.row_
                }
                this.topRow_ = t - this.rollUpRows_ + 1
            }
            ;
            y.prototype.addFormatting = function(e, t) {
                this.formatting_ = this.formatting_.concat(t);
                var n = t.reduce(function(e, t) {
                    return e + "<" + t + ">"
                }, "");
                this[this.mode_](e, n)
            }
            ;
            y.prototype.clearFormatting = function(e) {
                if (!this.formatting_.length) {
                    return
                }
                var t = this.formatting_.reverse().reduce(function(e, t) {
                    return e + "</" + t + ">"
                }, "");
                this.formatting_ = [];
                this[this.mode_](e, t)
            }
            ;
            y.prototype.popOn = function(e, t) {
                var n = this.nonDisplayed_[this.row_];
                n += t;
                this.nonDisplayed_[this.row_] = n
            }
            ;
            y.prototype.rollUp = function(e, t) {
                var n = this.displayed_[this.row_];
                n += t;
                this.displayed_[this.row_] = n
            }
            ;
            y.prototype.shiftRowsUp_ = function() {
                var e;
                for (e = 0; e < this.topRow_; e++) {
                    this.displayed_[e] = ""
                }
                for (e = this.row_ + 1; e < v + 1; e++) {
                    this.displayed_[e] = ""
                }
                for (e = this.topRow_; e < this.row_; e++) {
                    this.displayed_[e] = this.displayed_[e + 1]
                }
                this.displayed_[this.row_] = ""
            }
            ;
            y.prototype.paintOn = function(e, t) {
                var n = this.displayed_[this.row_];
                n += t;
                this.displayed_[this.row_] = n
            }
            ;
            var _ = {
                CaptionStream: f,
                Cea608Stream: y
            };
            var b = _.CaptionStream;
            var S = {
                H264_STREAM_TYPE: 27,
                ADTS_STREAM_TYPE: 15,
                METADATA_STREAM_TYPE: 21
            };
            var A = function(e, t, n) {
                var i, r = "";
                for (i = t; i < n; i++) {
                    r += "%" + ("00" + e[i].toString(16)).slice(-2)
                }
                return r
            }, T = function(e, t, n) {
                return decodeURIComponent(A(e, t, n))
            }, k = function(e, t, n) {
                return unescape(A(e, t, n))
            }, E = function(e) {
                return e[0] << 21 | e[1] << 14 | e[2] << 7 | e[3]
            }, P = {
                TXXX: function(e) {
                    var t;
                    if (e.data[0] !== 3) {
                        return
                    }
                    for (t = 1; t < e.data.length; t++) {
                        if (e.data[t] === 0) {
                            e.description = T(e.data, 1, t);
                            e.value = T(e.data, t + 1, e.data.length).replace(/\0*$/, "");
                            break
                        }
                    }
                    e.data = e.value
                },
                WXXX: function(e) {
                    var t;
                    if (e.data[0] !== 3) {
                        return
                    }
                    for (t = 1; t < e.data.length; t++) {
                        if (e.data[t] === 0) {
                            e.description = T(e.data, 1, t);
                            e.url = T(e.data, t + 1, e.data.length);
                            break
                        }
                    }
                },
                PRIV: function(e) {
                    var t;
                    for (t = 0; t < e.data.length; t++) {
                        if (e.data[t] === 0) {
                            e.owner = k(e.data, 0, t);
                            break
                        }
                    }
                    e.privateData = e.data.subarray(t + 1);
                    e.data = e.privateData
                }
            }, I;
            I = function(e) {
                var t = {
                    debug: !!(e && e.debug),
                    descriptor: e && e.descriptor
                }, n = 0, i = [], r = 0, a;
                I.prototype.init.call(this);
                this.dispatchType = S.METADATA_STREAM_TYPE.toString(16);
                if (t.descriptor) {
                    for (a = 0; a < t.descriptor.length; a++) {
                        this.dispatchType += ("00" + t.descriptor[a].toString(16)).slice(-2)
                    }
                }
                this.push = function(e) {
                    var a, s, o, u, l, d;
                    if (e.type !== "timed-metadata") {
                        return
                    }
                    if (e.dataAlignmentIndicator) {
                        r = 0;
                        i.length = 0
                    }
                    if (i.length === 0 && (e.data.length < 10 || e.data[0] !== "I".charCodeAt(0) || e.data[1] !== "D".charCodeAt(0) || e.data[2] !== "3".charCodeAt(0))) {
                        if (t.debug) {
                            console.log("Skipping unrecognized metadata packet")
                        }
                        return
                    }
                    i.push(e);
                    r += e.data.byteLength;
                    if (i.length === 1) {
                        n = E(e.data.subarray(6, 10));
                        n += 10
                    }
                    if (r < n) {
                        return
                    }
                    a = {
                        data: new Uint8Array(n),
                        frames: [],
                        pts: i[0].pts,
                        dts: i[0].dts
                    };
                    for (l = 0; l < n; ) {
                        a.data.set(i[0].data.subarray(0, n - l), l);
                        l += i[0].data.byteLength;
                        r -= i[0].data.byteLength;
                        i.shift()
                    }
                    s = 10;
                    if (a.data[5] & 64) {
                        s += 4;
                        s += E(a.data.subarray(10, 14));
                        n -= E(a.data.subarray(16, 20))
                    }
                    do {
                        o = E(a.data.subarray(s + 4, s + 8));
                        if (o < 1) {
                            return console.log("Malformed ID3 frame encountered. Skipping metadata parsing.")
                        }
                        d = String.fromCharCode(a.data[s], a.data[s + 1], a.data[s + 2], a.data[s + 3]);
                        u = {
                            id: d,
                            data: a.data.subarray(s + 10, s + o + 10)
                        };
                        u.key = u.id;
                        if (P[u.id]) {
                            P[u.id](u);
                            if (u.owner === "com.apple.streaming.transportStreamTimestamp") {
                                var c = u.data
                                  , f = (c[3] & 1) << 30 | c[4] << 22 | c[5] << 14 | c[6] << 6 | c[7] >>> 2;
                                f *= 4;
                                f += c[7] & 3;
                                u.timeStamp = f;
                                if (a.pts === undefined && a.dts === undefined) {
                                    a.pts = u.timeStamp;
                                    a.dts = u.timeStamp
                                }
                                this.trigger("timestamp", u)
                            }
                        }
                        a.frames.push(u);
                        s += 10;
                        s += o
                    } while (s < n);
                    this.trigger("data", a)
                }
            }
            ;
            I.prototype = new r;
            var C = I;
            var w = function e(t, n) {
                var i = {
                    id: n.index + "",
                    width: n.width,
                    height: n.height,
                    bandwidth: n.bitrate,
                    isEnabled_: true
                };
                i.enabled = function(e) {
                    if (typeof e === "undefined") {
                        return i.isEnabled_
                    }
                    if (e === i.isEnabled_) {
                        return
                    }
                    if (e === true || e === false) {
                        i.isEnabled_ = e;
                        t()
                    }
                }
                ;
                return i
            };
            var j = function e(t) {
                var n = null;
                var i = function e() {
                    var i = n.filter(function(e) {
                        return e.enabled()
                    });
                    if (i.length === n.length || i.length === 0) {
                        t.el_.vjs_setProperty("autoLevelCapping", -1);
                        t.el_.vjs_setProperty("level", -1);
                        return
                    }
                    if (i.length === 1) {
                        t.el_.vjs_setProperty("level", parseInt(i[0].id, 10));
                        t.el_.vjs_setProperty("autoLevelCapping", -1);
                        return
                    }
                    var r = i[i.length - 1].id;
                    t.el_.vjs_setProperty("autoLevelCapping", parseInt(r, 10));
                    t.el_.vjs_setProperty("level", -1)
                };
                return function() {
                    if (!n) {
                        var e = t.el_.vjs_getProperty("levels");
                        n = e.filter(function(e) {
                            return !e.audio
                        }).map(w.bind(null, i))
                    }
                    return n
                }
            };
            var L = function e(t) {
                var n = t.el_.vjs_getProperty("audioTracks");
                var i = t.audioTracks();
                var r = null;
                for (var a = 0; a < i.length; a++) {
                    if (i[a].enabled) {
                        r = i[a].id;
                        break
                    }
                }
                if (r === null) {
                    return
                }
                for (var s = 0; s < n.length; s++) {
                    if (r === n[s].title) {
                        t.el_.vjs_setProperty("audioTrack", s);
                        return
                    }
                }
            };
            var O = function e(t) {
                var i = t.el_.vjs_getProperty("altAudioTracks");
                var r = t.el_.vjs_getProperty("audioTracks");
                var a = t.el_.vjs_getProperty("audioTrack");
                r.forEach(function(e, r) {
                    var s = i[e.id];
                    t.audioTracks().addTrack(new n.AudioTrack({
                        id: s.name,
                        enabled: a === r,
                        language: s.lang,
                        default: s.default_track,
                        label: s.name
                    }))
                })
            };
            var x = "1.4.8";
            var D = function e(t) {
                Object.defineProperties(t.frame, {
                    id: {
                        get: function e() {
                            n.log.warn("cue.frame.id is deprecated. Use cue.value.key instead.");
                            return t.value.key
                        }
                    },
                    value: {
                        get: function e() {
                            n.log.warn("cue.frame.value is deprecated. Use cue.value.data instead.");
                            return t.value.data
                        }
                    },
                    privateData: {
                        get: function e() {
                            n.log.warn("cue.frame.privateData is deprecated. Use cue.value.data instead.");
                            return t.value.data
                        }
                    }
                })
            };
            var N = function e(t, n, i) {
                var r = t.remoteTextTracks() || [];
                for (var a = 0; a < r.length; a++) {
                    var s = r[a];
                    if (s.kind === n && s.label === i) {
                        t.removeRemoteTextTrack(s)
                    }
                }
            };
            var R = function e(t) {
                var n = new Uint8Array(t.length);
                for (var i = 0; i < t.length; i++) {
                    n[i] = t.charCodeAt(i)
                }
                return n
            };
            var M = function e(t, n, i) {
                var r;
                var a;
                if (!i) {
                    return
                }
                if (!i.cues) {
                    return
                }
                r = i.cues.length;
                while (r--) {
                    a = i.cues[r];
                    if (a.startTime <= n && a.endTime >= t) {
                        i.removeCue(a)
                    }
                }
            };
            var U = function e(t, n) {
                if (t.length) {
                    M(0, t.start(0), n)
                }
            };
            var B = function e(t, n) {
                var i = -1;
                for (var r = 0; r < t.length; r++) {
                    if (t[r].id === n) {
                        i = r;
                        break
                    }
                }
                t.selectedIndex_ = i;
                t.trigger({
                    selectedIndex: i,
                    type: "change"
                })
            };
            var F = 1 / 30;
            var V = function e(t, i) {
                var r = [];
                if (t && t.length) {
                    for (var a = 0; a < t.length; a++) {
                        if (i(t.start(a), t.end(a))) {
                            r.push([t.start(a), t.end(a)])
                        }
                    }
                }
                return n.createTimeRanges(r)
            };
            var q = function e(t, n) {
                return V(t, function(e, t) {
                    return e - F <= n && t + F >= n
                })
            };
            var H = function() {
                function e(e, t, i) {
                    var r = this;
                    if (t.options_ && t.options_.playerId) {
                        var a = n(t.options_.playerId);
                        if (!a.hasOwnProperty("hls")) {
                            Object.defineProperty(a, "hls", {
                                get: function e() {
                                    n.log.warn("player.hls is deprecated. Use player.tech_.hls instead.");
                                    t.trigger({
                                        type: "usage",
                                        name: "flashls-player-access"
                                    });
                                    return r
                                }
                            })
                        }
                    }
                    Object.defineProperties(this, {
                        stats: {
                            get: function e() {
                                return this.tech_.el_.vjs_getProperty("stats")
                            }
                        },
                        bandwidth: {
                            get: function e() {
                                return this.tech_.el_.vjs_getProperty("stats").bandwidth
                            }
                        }
                    });
                    this.tech_ = t;
                    this.metadataTrack_ = null;
                    this.inbandTextTracks_ = {};
                    this.metadataStream_ = new C;
                    this.captionStream_ = new b;
                    this.offsetPts = null;
                    this.offsetDts = null;
                    this.onLoadedmetadata_ = this.onLoadedmetadata_.bind(this);
                    this.onSeeking_ = this.onSeeking_.bind(this);
                    this.onId3updated_ = this.onId3updated_.bind(this);
                    this.onCaptionData_ = this.onCaptionData_.bind(this);
                    this.onMetadataStreamData_ = this.onMetadataStreamData_.bind(this);
                    this.onCaptionStreamData_ = this.onCaptionStreamData_.bind(this);
                    this.onLevelSwitch_ = this.onLevelSwitch_.bind(this);
                    this.onLevelLoaded_ = this.onLevelLoaded_.bind(this);
                    this.onFragmentLoaded_ = this.onFragmentLoaded_.bind(this);
                    this.onAudioTrackChanged = this.onAudioTrackChanged.bind(this);
                    this.onPlay_ = this.onPlay_.bind(this);
                    this.tech_.on("loadedmetadata", this.onLoadedmetadata_);
                    this.tech_.on("seeking", this.onSeeking_);
                    this.tech_.on("id3updated", this.onId3updated_);
                    this.tech_.on("captiondata", this.onCaptionData_);
                    this.tech_.on("levelswitch", this.onLevelSwitch_);
                    this.tech_.on("levelloaded", this.onLevelLoaded_);
                    this.tech_.on("fragmentloaded", this.onFragmentLoaded_);
                    this.tech_.on("play", this.onPlay_);
                    this.metadataStream_.on("data", this.onMetadataStreamData_);
                    this.captionStream_.on("data", this.onCaptionStreamData_);
                    this.playlists = new n.EventTarget;
                    this.playlists.media = function() {
                        return r.media_()
                    }
                }
                var i = e.prototype;
                i.src = function e(t) {
                    if (!t) {
                        return
                    }
                    this.tech_.setSrc(t.src)
                }
                ;
                i.onPlay_ = function e() {
                    if (this.tech_.duration() === Infinity) {
                        var t = this.seekable();
                        if (this.tech_.currentTime() < t.start(0)) {
                            return this.tech_.setCurrentTime(t.end(t.length - 1))
                        }
                    }
                }
                ;
                i.seekable = function e() {
                    var t = this.tech_.el_.vjs_getProperty("seekableStart");
                    var i = this.tech_.el_.vjs_getProperty("seekableEnd");
                    if (i === 0) {
                        return n.createTimeRange()
                    }
                    return n.createTimeRange(t, i)
                }
                ;
                i.media_ = function e() {
                    var t = this.tech_.el_.vjs_getProperty("levels");
                    var n = this.tech_.el_.vjs_getProperty("level");
                    var i;
                    if (t.length) {
                        i = {
                            resolvedUri: t[n].url,
                            attributes: {
                                BANDWIDTH: t[n].bitrate,
                                RESOLUTION: {
                                    width: t[n].width,
                                    height: t[n].height
                                }
                            }
                        }
                    }
                    return i
                }
                ;
                i.onLoadedmetadata_ = function e() {
                    var t = this;
                    this.representations = j(this.tech_);
                    var i = n.players[this.tech_.options_.playerId];
                    if (i && i.qualityLevels) {
                        this.qualityLevels_ = i.qualityLevels();
                        this.representations().forEach(function(e) {
                            t.qualityLevels_.addQualityLevel(e)
                        });
                        B(this.qualityLevels_, this.tech_.el_.vjs_getProperty("level") + "")
                    }
                    O(this.tech_);
                    this.tech_.audioTracks().on("change", this.onAudioTrackChanged)
                }
                ;
                i.onAudioTrackChanged = function e() {
                    L(this.tech_)
                }
                ;
                i.onLevelSwitch_ = function e(t, n) {
                    if (this.qualityLevels_) {
                        B(this.qualityLevels_, n[0].levelIndex + "")
                    }
                    this.playlists.trigger("mediachange");
                    this.tech_.trigger({
                        type: "mediachange",
                        bubbles: true
                    })
                }
                ;
                i.onLevelLoaded_ = function e() {
                    this.playlists.trigger("loadedplaylist")
                }
                ;
                i.onFragmentLoaded_ = function e() {
                    this.tech_.trigger("bandwidthupdate");
                    this.captionStream_.flush()
                }
                ;
                i.onSeeking_ = function e() {
                    var t = this;
                    M(0, Infinity, this.metadataTrack_);
                    var n = q(this.tech_.buffered(), this.tech_.currentTime());
                    if (!n.length) {
                        Object.keys(this.inbandTextTracks_).forEach(function(e) {
                            M(0, Infinity, t.inbandTextTracks_[e])
                        });
                        this.captionStream_.reset()
                    }
                }
                ;
                i.onId3updated_ = function e(n, i) {
                    var r = t.atob(i[0]);
                    var a = R(r);
                    var s = {
                        type: "timed-metadata",
                        dataAlignmentIndicator: true,
                        data: a
                    };
                    this.metadataStream_.push(s)
                }
                ;
                i.onMetadataStreamData_ = function e(n) {
                    var i = this;
                    if (!this.metadataTrack_) {
                        this.metadataTrack_ = this.tech_.addRemoteTextTrack({
                            kind: "metadata",
                            label: "Timed Metadata"
                        }, false).track;
                        this.metadataTrack_.inBandMetadataTrackDispatchType = "15"
                    }
                    U(this.tech_.buffered(), this.metadataTrack_);
                    var r = this.tech_.currentTime();
                    n.frames.forEach(function(e) {
                        var n = new t.VTTCue(r,r + .1,e.value || e.url || e.data || "");
                        n.frame = e;
                        n.value = e;
                        D(n);
                        i.metadataTrack_.addCue(n)
                    });
                    if (this.metadataTrack_.cues && this.metadataTrack_.cues.length) {
                        var a = this.metadataTrack_.cues;
                        var s = [];
                        var o = this.tech_.duration();
                        if (isNaN(o) || Math.abs(o) === Infinity) {
                            o = Number.MAX_VALUE
                        }
                        for (var u = 0; u < a.length; u++) {
                            s.push(a[u])
                        }
                        s.sort(function(e, t) {
                            return e.startTime - t.startTime
                        });
                        for (var l = 0; l < s.length - 1; l++) {
                            if (s[l].endTime !== s[l + 1].startTime) {
                                s[l].endTime = s[l + 1].startTime
                            }
                        }
                        s[s.length - 1].endTime = o
                    }
                }
                ;
                i.onCaptionData_ = function e(n, i) {
                    var r = this;
                    i[0].forEach(function(e) {
                        if (!r.offsetPts) {
                            r.offsetPts = e.pos
                        }
                        if (!r.offsetDts) {
                            r.offsetDts = e.dts
                        }
                        r.captionStream_.push({
                            pts: (e.pos - r.offsetPts) * 9e4,
                            dts: (e.dts - r.offsetDts) * 9e4,
                            escapedRBSP: R(t.atob(e.data)),
                            nalUnitType: "sei_rbsp"
                        })
                    })
                }
                ;
                i.onCaptionStreamData_ = function e(n) {
                    if (n) {
                        if (!this.inbandTextTracks_[n.stream]) {
                            N(this.tech_, "captions", n.stream);
                            this.inbandTextTracks_[n.stream] = this.tech_.addRemoteTextTrack({
                                kind: "captions",
                                label: n.stream,
                                id: n.stream
                            }, false).track
                        }
                        U(this.tech_.buffered(), this.inbandTextTracks_[n.stream]);
                        this.inbandTextTracks_[n.stream].addCue(new t.VTTCue(n.startPts / 9e4,n.endPts / 9e4,n.text))
                    }
                }
                ;
                i.dispose = function e() {
                    this.tech_.off("loadedmetadata", this.onLoadedmetadata_);
                    this.tech_.off("seeked", this.onSeeking_);
                    this.tech_.off("id3updated", this.onId3updated_);
                    this.tech_.off("captiondata", this.onCaptionData_);
                    this.tech_.audioTracks().off("change", this.onAudioTrackChanged);
                    this.tech_.off("levelswitch", this.onLevelSwitch_);
                    this.tech_.off("levelloaded", this.onLevelLoaded_);
                    this.tech_.off("fragmentloaded", this.onFragmentLoaded_);
                    this.tech_.off("play", this.onPlay_);
                    if (this.qualityLevels_) {
                        this.qualityLevels_.dispose()
                    }
                }
                ;
                return e
            }();
            var G = {};
            var W = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i;
            G.canPlayType = function(e) {
                return W.test(e) ? "maybe" : ""
            }
            ;
            G.canHandleSource = function(e, t) {
                return G.canPlayType(e.type) === "maybe"
            }
            ;
            G.handleSource = function(e, t, n) {
                t.hls = new H(e,t,n);
                t.hls.src(e);
                return t.hls
            }
            ;
            n.getTech("Flash").registerSourceHandler(G, 0);
            G.VERSION = x;
            e.FlashlsHandler = H;
            e.default = G;
            Object.defineProperty(e, "__esModule", {
                value: true
            })
        });
        (function(e, t) {
            typeof exports === "object" && typeof module !== "undefined" ? t(exports, require("global/document"), require("global/window"), require("video.js"), require("xmldom")) : typeof define === "function" && define.amd ? define(["exports", "global/document", "global/window", "video.js", "xmldom"], t) : (e = typeof globalThis !== "undefined" ? globalThis : e || self,
            t(e.httpStreaming = {}, e.document, e.window, e.videojs, e.window))
        }
        )(this, function(e, t, n, i, r) {
            "use strict";
            function a(e) {
                return e && typeof e === "object" && "default"in e ? e : {
                    default: e
                }
            }
            var s = a(t);
            var o = a(n);
            var u = a(i);
            function l(e, t, n) {
                return n = {
                    path: t,
                    exports: {},
                    require: function(e, t) {
                        return d(e, t === undefined || t === null ? n.path : t)
                    }
                },
                e(n, n.exports),
                n.exports
            }
            function d() {
                throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
            }
            var c = l(function(e) {
                function t(e) {
                    if (e === void 0) {
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                    }
                    return e
                }
                e.exports = t;
                e.exports["default"] = e.exports,
                e.exports.__esModule = true
            });
            var f = l(function(e) {
                function t(n, i) {
                    e.exports = t = Object.setPrototypeOf || function e(t, n) {
                        t.__proto__ = n;
                        return t
                    }
                    ;
                    e.exports["default"] = e.exports,
                    e.exports.__esModule = true;
                    return t(n, i)
                }
                e.exports = t;
                e.exports["default"] = e.exports,
                e.exports.__esModule = true
            });
            var p = l(function(e) {
                function t(e, t) {
                    e.prototype = Object.create(t.prototype);
                    e.prototype.constructor = e;
                    f(e, t)
                }
                e.exports = t;
                e.exports["default"] = e.exports,
                e.exports.__esModule = true
            });
            var h = l(function(e, t) {
                (function(t) {
                    var n = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/?#]*\/)*[^;?#]*)?(;[^?#]*)?(\?[^#]*)?(#.*)?$/;
                    var i = /^([^\/?#]*)(.*)$/;
                    var r = /(?:\/|^)\.(?=\/)/g;
                    var a = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g;
                    var s = {
                        buildAbsoluteURL: function e(t, n, r) {
                            r = r || {};
                            t = t.trim();
                            n = n.trim();
                            if (!n) {
                                if (!r.alwaysNormalize) {
                                    return t
                                }
                                var a = s.parseURL(t);
                                if (!a) {
                                    throw new Error("Error trying to parse base URL.")
                                }
                                a.path = s.normalizePath(a.path);
                                return s.buildURLFromParts(a)
                            }
                            var o = s.parseURL(n);
                            if (!o) {
                                throw new Error("Error trying to parse relative URL.")
                            }
                            if (o.scheme) {
                                if (!r.alwaysNormalize) {
                                    return n
                                }
                                o.path = s.normalizePath(o.path);
                                return s.buildURLFromParts(o)
                            }
                            var u = s.parseURL(t);
                            if (!u) {
                                throw new Error("Error trying to parse base URL.")
                            }
                            if (!u.netLoc && u.path && u.path[0] !== "/") {
                                var l = i.exec(u.path);
                                u.netLoc = l[1];
                                u.path = l[2]
                            }
                            if (u.netLoc && !u.path) {
                                u.path = "/"
                            }
                            var d = {
                                scheme: u.scheme,
                                netLoc: o.netLoc,
                                path: null,
                                params: o.params,
                                query: o.query,
                                fragment: o.fragment
                            };
                            if (!o.netLoc) {
                                d.netLoc = u.netLoc;
                                if (o.path[0] !== "/") {
                                    if (!o.path) {
                                        d.path = u.path;
                                        if (!o.params) {
                                            d.params = u.params;
                                            if (!o.query) {
                                                d.query = u.query
                                            }
                                        }
                                    } else {
                                        var c = u.path;
                                        var f = c.substring(0, c.lastIndexOf("/") + 1) + o.path;
                                        d.path = s.normalizePath(f)
                                    }
                                }
                            }
                            if (d.path === null) {
                                d.path = r.alwaysNormalize ? s.normalizePath(o.path) : o.path
                            }
                            return s.buildURLFromParts(d)
                        },
                        parseURL: function e(t) {
                            var i = n.exec(t);
                            if (!i) {
                                return null
                            }
                            return {
                                scheme: i[1] || "",
                                netLoc: i[2] || "",
                                path: i[3] || "",
                                params: i[4] || "",
                                query: i[5] || "",
                                fragment: i[6] || ""
                            }
                        },
                        normalizePath: function e(t) {
                            t = t.split("").reverse().join("").replace(r, "");
                            while (t.length !== (t = t.replace(a, "")).length) {}
                            return t.split("").reverse().join("")
                        },
                        buildURLFromParts: function e(t) {
                            return t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
                        }
                    };
                    e.exports = s
                }
                )()
            });
            var v = function e(t, n) {
                if (/^[a-z]+:/i.test(n)) {
                    return n
                }
                if (!/\/\//i.test(t)) {
                    t = h.buildAbsoluteURL(o["default"].location && o["default"].location.href || "", t)
                }
                return h.buildAbsoluteURL(t, n)
            };
            var g = v;
            var m = function e(t, n, i) {
                if (t && i && i.responseURL && n !== i.responseURL) {
                    return i.responseURL
                }
                return n
            };
            var y = function e(t) {
                if (u["default"].log.debug) {
                    return u["default"].log.debug.bind(u["default"], "VHS:", t + " >")
                }
                return function() {}
            };
            var _ = function() {
                function e() {
                    this.listeners = {}
                }
                var t = e.prototype;
                t.on = function e(t, n) {
                    if (!this.listeners[t]) {
                        this.listeners[t] = []
                    }
                    this.listeners[t].push(n)
                }
                ;
                t.off = function e(t, n) {
                    if (!this.listeners[t]) {
                        return false
                    }
                    var i = this.listeners[t].indexOf(n);
                    this.listeners[t] = this.listeners[t].slice(0);
                    this.listeners[t].splice(i, 1);
                    return i > -1
                }
                ;
                t.trigger = function e(t) {
                    var n = this.listeners[t];
                    if (!n) {
                        return
                    }
                    if (arguments.length === 2) {
                        var i = n.length;
                        for (var r = 0; r < i; ++r) {
                            n[r].call(this, arguments[1])
                        }
                    } else {
                        var a = Array.prototype.slice.call(arguments, 1);
                        var s = n.length;
                        for (var o = 0; o < s; ++o) {
                            n[o].apply(this, a)
                        }
                    }
                }
                ;
                t.dispose = function e() {
                    this.listeners = {}
                }
                ;
                t.pipe = function e(t) {
                    this.on("data", function(e) {
                        t.push(e)
                    })
                }
                ;
                return e
            }();
            var b = l(function(e) {
                function t() {
                    e.exports = t = Object.assign || function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = arguments[t];
                            for (var i in n) {
                                if (Object.prototype.hasOwnProperty.call(n, i)) {
                                    e[i] = n[i]
                                }
                            }
                        }
                        return e
                    }
                    ;
                    e.exports["default"] = e.exports,
                    e.exports.__esModule = true;
                    return t.apply(this, arguments)
                }
                e.exports = t;
                e.exports["default"] = e.exports,
                e.exports.__esModule = true
            });
            var S = function e(t) {
                return o["default"].atob ? o["default"].atob(t) : Buffer.from(t, "base64").toString("binary")
            };
            function A(e) {
                var t = S(e);
                var n = new Uint8Array(t.length);
                for (var i = 0; i < t.length; i++) {
                    n[i] = t.charCodeAt(i)
                }
                return n
            }
            var T = function(e) {
                p(t, e);
                function t() {
                    var t;
                    t = e.call(this) || this;
                    t.buffer = "";
                    return t
                }
                var n = t.prototype;
                n.push = function e(t) {
                    var n;
                    this.buffer += t;
                    n = this.buffer.indexOf("\n");
                    for (; n > -1; n = this.buffer.indexOf("\n")) {
                        this.trigger("data", this.buffer.substring(0, n));
                        this.buffer = this.buffer.substring(n + 1)
                    }
                }
                ;
                return t
            }(_);
            var k = String.fromCharCode(9);
            var E = function e(t) {
                var n = /([0-9.]*)?@?([0-9.]*)?/.exec(t || "");
                var i = {};
                if (n[1]) {
                    i.length = parseInt(n[1], 10)
                }
                if (n[2]) {
                    i.offset = parseInt(n[2], 10)
                }
                return i
            };
            var P = function e() {
                var t = "[^=]*";
                var n = '"[^"]*"|[^,]*';
                var i = "(?:" + t + ")=(?:" + n + ")";
                return new RegExp("(?:^|,)(" + i + ")")
            };
            var I = function e(t) {
                var n = t.split(P());
                var i = {};
                var r = n.length;
                var a;
                while (r--) {
                    if (n[r] === "") {
                        continue
                    }
                    a = /([^=]*)=(.*)/.exec(n[r]).slice(1);
                    a[0] = a[0].replace(/^\s+|\s+$/g, "");
                    a[1] = a[1].replace(/^\s+|\s+$/g, "");
                    a[1] = a[1].replace(/^['"](.*)['"]$/g, "$1");
                    i[a[0]] = a[1]
                }
                return i
            };
            var C = function(e) {
                p(t, e);
                function t() {
                    var t;
                    t = e.call(this) || this;
                    t.customParsers = [];
                    t.tagMappers = [];
                    return t
                }
                var n = t.prototype;
                n.push = function e(t) {
                    var n = this;
                    var i;
                    var r;
                    t = t.trim();
                    if (t.length === 0) {
                        return
                    }
                    if (t[0] !== "#") {
                        this.trigger("data", {
                            type: "uri",
                            uri: t
                        });
                        return
                    }
                    var a = this.tagMappers.reduce(function(e, n) {
                        var i = n(t);
                        if (i === t) {
                            return e
                        }
                        return e.concat([i])
                    }, [t]);
                    a.forEach(function(e) {
                        for (var t = 0; t < n.customParsers.length; t++) {
                            if (n.customParsers[t].call(n, e)) {
                                return
                            }
                        }
                        if (e.indexOf("#EXT") !== 0) {
                            n.trigger("data", {
                                type: "comment",
                                text: e.slice(1)
                            });
                            return
                        }
                        e = e.replace("\r", "");
                        i = /^#EXTM3U/.exec(e);
                        if (i) {
                            n.trigger("data", {
                                type: "tag",
                                tagType: "m3u"
                            });
                            return
                        }
                        i = /^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "inf"
                            };
                            if (i[1]) {
                                r.duration = parseFloat(i[1])
                            }
                            if (i[2]) {
                                r.title = i[2]
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "targetduration"
                            };
                            if (i[1]) {
                                r.duration = parseInt(i[1], 10)
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "version"
                            };
                            if (i[1]) {
                                r.version = parseInt(i[1], 10)
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "media-sequence"
                            };
                            if (i[1]) {
                                r.number = parseInt(i[1], 10)
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "discontinuity-sequence"
                            };
                            if (i[1]) {
                                r.number = parseInt(i[1], 10)
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "playlist-type"
                            };
                            if (i[1]) {
                                r.playlistType = i[1]
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(e);
                        if (i) {
                            r = b(E(i[1]), {
                                type: "tag",
                                tagType: "byterange"
                            });
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "allow-cache"
                            };
                            if (i[1]) {
                                r.allowed = !/NO/.test(i[1])
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-MAP:?(.*)$/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "map"
                            };
                            if (i[1]) {
                                var a = I(i[1]);
                                if (a.URI) {
                                    r.uri = a.URI
                                }
                                if (a.BYTERANGE) {
                                    r.byterange = E(a.BYTERANGE)
                                }
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-STREAM-INF:?(.*)$/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "stream-inf"
                            };
                            if (i[1]) {
                                r.attributes = I(i[1]);
                                if (r.attributes.RESOLUTION) {
                                    var s = r.attributes.RESOLUTION.split("x");
                                    var o = {};
                                    if (s[0]) {
                                        o.width = parseInt(s[0], 10)
                                    }
                                    if (s[1]) {
                                        o.height = parseInt(s[1], 10)
                                    }
                                    r.attributes.RESOLUTION = o
                                }
                                if (r.attributes.BANDWIDTH) {
                                    r.attributes.BANDWIDTH = parseInt(r.attributes.BANDWIDTH, 10)
                                }
                                if (r.attributes["PROGRAM-ID"]) {
                                    r.attributes["PROGRAM-ID"] = parseInt(r.attributes["PROGRAM-ID"], 10)
                                }
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-MEDIA:?(.*)$/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "media"
                            };
                            if (i[1]) {
                                r.attributes = I(i[1])
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-ENDLIST/.exec(e);
                        if (i) {
                            n.trigger("data", {
                                type: "tag",
                                tagType: "endlist"
                            });
                            return
                        }
                        i = /^#EXT-X-DISCONTINUITY/.exec(e);
                        if (i) {
                            n.trigger("data", {
                                type: "tag",
                                tagType: "discontinuity"
                            });
                            return
                        }
                        i = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "program-date-time"
                            };
                            if (i[1]) {
                                r.dateTimeString = i[1];
                                r.dateTimeObject = new Date(i[1])
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-KEY:?(.*)$/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "key"
                            };
                            if (i[1]) {
                                r.attributes = I(i[1]);
                                if (r.attributes.IV) {
                                    if (r.attributes.IV.substring(0, 2).toLowerCase() === "0x") {
                                        r.attributes.IV = r.attributes.IV.substring(2)
                                    }
                                    r.attributes.IV = r.attributes.IV.match(/.{8}/g);
                                    r.attributes.IV[0] = parseInt(r.attributes.IV[0], 16);
                                    r.attributes.IV[1] = parseInt(r.attributes.IV[1], 16);
                                    r.attributes.IV[2] = parseInt(r.attributes.IV[2], 16);
                                    r.attributes.IV[3] = parseInt(r.attributes.IV[3], 16);
                                    r.attributes.IV = new Uint32Array(r.attributes.IV)
                                }
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-START:?(.*)$/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "start"
                            };
                            if (i[1]) {
                                r.attributes = I(i[1]);
                                r.attributes["TIME-OFFSET"] = parseFloat(r.attributes["TIME-OFFSET"]);
                                r.attributes.PRECISE = /YES/.test(r.attributes.PRECISE)
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "cue-out-cont"
                            };
                            if (i[1]) {
                                r.data = i[1]
                            } else {
                                r.data = ""
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "cue-out"
                            };
                            if (i[1]) {
                                r.data = i[1]
                            } else {
                                r.data = ""
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-CUE-IN:?(.*)?$/.exec(e);
                        if (i) {
                            r = {
                                type: "tag",
                                tagType: "cue-in"
                            };
                            if (i[1]) {
                                r.data = i[1]
                            } else {
                                r.data = ""
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-SKIP:(.*)$/.exec(e);
                        if (i && i[1]) {
                            r = {
                                type: "tag",
                                tagType: "skip"
                            };
                            r.attributes = I(i[1]);
                            if (r.attributes.hasOwnProperty("SKIPPED-SEGMENTS")) {
                                r.attributes["SKIPPED-SEGMENTS"] = parseInt(r.attributes["SKIPPED-SEGMENTS"], 10)
                            }
                            if (r.attributes.hasOwnProperty("RECENTLY-REMOVED-DATERANGES")) {
                                r.attributes["RECENTLY-REMOVED-DATERANGES"] = r.attributes["RECENTLY-REMOVED-DATERANGES"].split(k)
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-PART:(.*)$/.exec(e);
                        if (i && i[1]) {
                            r = {
                                type: "tag",
                                tagType: "part"
                            };
                            r.attributes = I(i[1]);
                            ["DURATION"].forEach(function(e) {
                                if (r.attributes.hasOwnProperty(e)) {
                                    r.attributes[e] = parseFloat(r.attributes[e])
                                }
                            });
                            ["INDEPENDENT", "GAP"].forEach(function(e) {
                                if (r.attributes.hasOwnProperty(e)) {
                                    r.attributes[e] = /YES/.test(r.attributes[e])
                                }
                            });
                            if (r.attributes.hasOwnProperty("BYTERANGE")) {
                                r.attributes.byterange = E(r.attributes.BYTERANGE)
                            }
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(e);
                        if (i && i[1]) {
                            r = {
                                type: "tag",
                                tagType: "server-control"
                            };
                            r.attributes = I(i[1]);
                            ["CAN-SKIP-UNTIL", "PART-HOLD-BACK", "HOLD-BACK"].forEach(function(e) {
                                if (r.attributes.hasOwnProperty(e)) {
                                    r.attributes[e] = parseFloat(r.attributes[e])
                                }
                            });
                            ["CAN-SKIP-DATERANGES", "CAN-BLOCK-RELOAD"].forEach(function(e) {
                                if (r.attributes.hasOwnProperty(e)) {
                                    r.attributes[e] = /YES/.test(r.attributes[e])
                                }
                            });
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-PART-INF:(.*)$/.exec(e);
                        if (i && i[1]) {
                            r = {
                                type: "tag",
                                tagType: "part-inf"
                            };
                            r.attributes = I(i[1]);
                            ["PART-TARGET"].forEach(function(e) {
                                if (r.attributes.hasOwnProperty(e)) {
                                    r.attributes[e] = parseFloat(r.attributes[e])
                                }
                            });
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(e);
                        if (i && i[1]) {
                            r = {
                                type: "tag",
                                tagType: "preload-hint"
                            };
                            r.attributes = I(i[1]);
                            ["BYTERANGE-START", "BYTERANGE-LENGTH"].forEach(function(e) {
                                if (r.attributes.hasOwnProperty(e)) {
                                    r.attributes[e] = parseInt(r.attributes[e], 10);
                                    var t = e === "BYTERANGE-LENGTH" ? "length" : "offset";
                                    r.attributes.byterange = r.attributes.byterange || {};
                                    r.attributes.byterange[t] = r.attributes[e];
                                    delete r.attributes[e]
                                }
                            });
                            n.trigger("data", r);
                            return
                        }
                        i = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(e);
                        if (i && i[1]) {
                            r = {
                                type: "tag",
                                tagType: "rendition-report"
                            };
                            r.attributes = I(i[1]);
                            ["LAST-MSN", "LAST-PART"].forEach(function(e) {
                                if (r.attributes.hasOwnProperty(e)) {
                                    r.attributes[e] = parseInt(r.attributes[e], 10)
                                }
                            });
                            n.trigger("data", r);
                            return
                        }
                        n.trigger("data", {
                            type: "tag",
                            data: e.slice(4)
                        })
                    })
                }
                ;
                n.addParser = function e(t) {
                    var n = this;
                    var i = t.expression
                      , r = t.customType
                      , a = t.dataParser
                      , s = t.segment;
                    if (typeof a !== "function") {
                        a = function e(t) {
                            return t
                        }
                    }
                    this.customParsers.push(function(e) {
                        var t = i.exec(e);
                        if (t) {
                            n.trigger("data", {
                                type: "custom",
                                data: a(e),
                                customType: r,
                                segment: s
                            });
                            return true
                        }
                    })
                }
                ;
                n.addTagMapper = function e(t) {
                    var n = t.expression
                      , i = t.map;
                    var r = function e(t) {
                        if (n.test(t)) {
                            return i(t)
                        }
                        return t
                    };
                    this.tagMappers.push(r)
                }
                ;
                return t
            }(_);
            var w = function e(t) {
                return t.toLowerCase().replace(/-(\w)/g, function(e) {
                    return e[1].toUpperCase()
                })
            };
            var j = function e(t) {
                var n = {};
                Object.keys(t).forEach(function(e) {
                    n[w(e)] = t[e]
                });
                return n
            };
            var L = function e(t) {
                var n = t.serverControl
                  , i = t.targetDuration
                  , r = t.partTargetDuration;
                if (!n) {
                    return
                }
                var a = "#EXT-X-SERVER-CONTROL";
                var s = "holdBack";
                var o = "partHoldBack";
                var u = i && i * 3;
                var l = r && r * 2;
                if (i && !n.hasOwnProperty(s)) {
                    n[s] = u;
                    this.trigger("info", {
                        message: a + " defaulting HOLD-BACK to targetDuration * 3 (" + u + ")."
                    })
                }
                if (u && n[s] < u) {
                    this.trigger("warn", {
                        message: a + " clamping HOLD-BACK (" + n[s] + ") to targetDuration * 3 (" + u + ")"
                    });
                    n[s] = u
                }
                if (r && !n.hasOwnProperty(o)) {
                    n[o] = r * 3;
                    this.trigger("info", {
                        message: a + " defaulting PART-HOLD-BACK to partTargetDuration * 3 (" + n[o] + ")."
                    })
                }
                if (r && n[o] < l) {
                    this.trigger("warn", {
                        message: a + " clamping PART-HOLD-BACK (" + n[o] + ") to partTargetDuration * 2 (" + l + ")."
                    });
                    n[o] = l
                }
            };
            var O = function(e) {
                p(t, e);
                function t() {
                    var t;
                    t = e.call(this) || this;
                    t.lineStream = new T;
                    t.parseStream = new C;
                    t.lineStream.pipe(t.parseStream);
                    var n = c(t);
                    var i = [];
                    var r = {};
                    var a;
                    var s;
                    var o = false;
                    var u = function e() {};
                    var l = {
                        AUDIO: {},
                        VIDEO: {},
                        "CLOSED-CAPTIONS": {},
                        SUBTITLES: {}
                    };
                    var d = "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";
                    var f = 0;
                    t.manifest = {
                        allowCache: true,
                        discontinuityStarts: [],
                        segments: []
                    };
                    var p = 0;
                    var h = 0;
                    t.on("end", function() {
                        if (r.uri || !r.parts && !r.preloadHints) {
                            return
                        }
                        if (!r.map && a) {
                            r.map = a
                        }
                        if (!r.key && s) {
                            r.key = s
                        }
                        if (!r.timeline && typeof f === "number") {
                            r.timeline = f
                        }
                        t.manifest.preloadSegment = r
                    });
                    t.parseStream.on("data", function(e) {
                        var t;
                        var c;
                        ({
                            tag: function v() {
                                (({
                                    version: function t() {
                                        if (e.version) {
                                            this.manifest.version = e.version
                                        }
                                    },
                                    "allow-cache": function t() {
                                        this.manifest.allowCache = e.allowed;
                                        if (!("allowed"in e)) {
                                            this.trigger("info", {
                                                message: "defaulting allowCache to YES"
                                            });
                                            this.manifest.allowCache = true
                                        }
                                    },
                                    byterange: function t() {
                                        var t = {};
                                        if ("length"in e) {
                                            r.byterange = t;
                                            t.length = e.length;
                                            if (!("offset"in e)) {
                                                e.offset = p
                                            }
                                        }
                                        if ("offset"in e) {
                                            r.byterange = t;
                                            t.offset = e.offset
                                        }
                                        p = t.offset + t.length
                                    },
                                    endlist: function e() {
                                        this.manifest.endList = true
                                    },
                                    inf: function t() {
                                        if (!("mediaSequence"in this.manifest)) {
                                            this.manifest.mediaSequence = 0;
                                            this.trigger("info", {
                                                message: "defaulting media sequence to zero"
                                            })
                                        }
                                        if (!("discontinuitySequence"in this.manifest)) {
                                            this.manifest.discontinuitySequence = 0;
                                            this.trigger("info", {
                                                message: "defaulting discontinuity sequence to zero"
                                            })
                                        }
                                        if (e.duration > 0) {
                                            r.duration = e.duration
                                        }
                                        if (e.duration === 0) {
                                            r.duration = .01;
                                            this.trigger("info", {
                                                message: "updating zero segment duration to a small value"
                                            })
                                        }
                                        this.manifest.segments = i
                                    },
                                    key: function t() {
                                        if (!e.attributes) {
                                            this.trigger("warn", {
                                                message: "ignoring key declaration without attribute list"
                                            });
                                            return
                                        }
                                        if (e.attributes.METHOD === "NONE") {
                                            s = null;
                                            return
                                        }
                                        if (!e.attributes.URI) {
                                            this.trigger("warn", {
                                                message: "ignoring key declaration without URI"
                                            });
                                            return
                                        }
                                        if (e.attributes.KEYFORMAT === d) {
                                            var n = ["SAMPLE-AES", "SAMPLE-AES-CTR", "SAMPLE-AES-CENC"];
                                            if (n.indexOf(e.attributes.METHOD) === -1) {
                                                this.trigger("warn", {
                                                    message: "invalid key method provided for Widevine"
                                                });
                                                return
                                            }
                                            if (e.attributes.METHOD === "SAMPLE-AES-CENC") {
                                                this.trigger("warn", {
                                                    message: "SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead"
                                                })
                                            }
                                            if (e.attributes.URI.substring(0, 23) !== "data:text/plain;base64,") {
                                                this.trigger("warn", {
                                                    message: "invalid key URI provided for Widevine"
                                                });
                                                return
                                            }
                                            if (!(e.attributes.KEYID && e.attributes.KEYID.substring(0, 2) === "0x")) {
                                                this.trigger("warn", {
                                                    message: "invalid key ID provided for Widevine"
                                                });
                                                return
                                            }
                                            this.manifest.contentProtection = {
                                                "com.widevine.alpha": {
                                                    attributes: {
                                                        schemeIdUri: e.attributes.KEYFORMAT,
                                                        keyId: e.attributes.KEYID.substring(2)
                                                    },
                                                    pssh: A(e.attributes.URI.split(",")[1])
                                                }
                                            };
                                            return
                                        }
                                        if (!e.attributes.METHOD) {
                                            this.trigger("warn", {
                                                message: "defaulting key method to AES-128"
                                            })
                                        }
                                        s = {
                                            method: e.attributes.METHOD || "AES-128",
                                            uri: e.attributes.URI
                                        };
                                        if (typeof e.attributes.IV !== "undefined") {
                                            s.iv = e.attributes.IV
                                        }
                                    },
                                    "media-sequence": function t() {
                                        if (!isFinite(e.number)) {
                                            this.trigger("warn", {
                                                message: "ignoring invalid media sequence: " + e.number
                                            });
                                            return
                                        }
                                        this.manifest.mediaSequence = e.number
                                    },
                                    "discontinuity-sequence": function t() {
                                        if (!isFinite(e.number)) {
                                            this.trigger("warn", {
                                                message: "ignoring invalid discontinuity sequence: " + e.number
                                            });
                                            return
                                        }
                                        this.manifest.discontinuitySequence = e.number;
                                        f = e.number
                                    },
                                    "playlist-type": function t() {
                                        if (!/VOD|EVENT/.test(e.playlistType)) {
                                            this.trigger("warn", {
                                                message: "ignoring unknown playlist type: " + e.playlist
                                            });
                                            return
                                        }
                                        this.manifest.playlistType = e.playlistType
                                    },
                                    map: function t() {
                                        a = {};
                                        if (e.uri) {
                                            a.uri = e.uri
                                        }
                                        if (e.byterange) {
                                            a.byterange = e.byterange
                                        }
                                    },
                                    "stream-inf": function t() {
                                        this.manifest.playlists = i;
                                        this.manifest.mediaGroups = this.manifest.mediaGroups || l;
                                        if (!e.attributes) {
                                            this.trigger("warn", {
                                                message: "ignoring empty stream-inf attributes"
                                            });
                                            return
                                        }
                                        if (!r.attributes) {
                                            r.attributes = {}
                                        }
                                        b(r.attributes, e.attributes)
                                    },
                                    media: function n() {
                                        this.manifest.mediaGroups = this.manifest.mediaGroups || l;
                                        if (!(e.attributes && e.attributes.TYPE && e.attributes["GROUP-ID"] && e.attributes.NAME)) {
                                            this.trigger("warn", {
                                                message: "ignoring incomplete or missing media group"
                                            });
                                            return
                                        }
                                        var i = this.manifest.mediaGroups[e.attributes.TYPE];
                                        i[e.attributes["GROUP-ID"]] = i[e.attributes["GROUP-ID"]] || {};
                                        t = i[e.attributes["GROUP-ID"]];
                                        c = {
                                            default: /yes/i.test(e.attributes.DEFAULT)
                                        };
                                        if (c.default) {
                                            c.autoselect = true
                                        } else {
                                            c.autoselect = /yes/i.test(e.attributes.AUTOSELECT)
                                        }
                                        if (e.attributes.LANGUAGE) {
                                            c.language = e.attributes.LANGUAGE
                                        }
                                        if (e.attributes.URI) {
                                            c.uri = e.attributes.URI
                                        }
                                        if (e.attributes["INSTREAM-ID"]) {
                                            c.instreamId = e.attributes["INSTREAM-ID"]
                                        }
                                        if (e.attributes.CHARACTERISTICS) {
                                            c.characteristics = e.attributes.CHARACTERISTICS
                                        }
                                        if (e.attributes.FORCED) {
                                            c.forced = /yes/i.test(e.attributes.FORCED)
                                        }
                                        t[e.attributes.NAME] = c
                                    },
                                    discontinuity: function e() {
                                        f += 1;
                                        r.discontinuity = true;
                                        this.manifest.discontinuityStarts.push(i.length)
                                    },
                                    "program-date-time": function t() {
                                        if (typeof this.manifest.dateTimeString === "undefined") {
                                            this.manifest.dateTimeString = e.dateTimeString;
                                            this.manifest.dateTimeObject = e.dateTimeObject
                                        }
                                        r.dateTimeString = e.dateTimeString;
                                        r.dateTimeObject = e.dateTimeObject
                                    },
                                    targetduration: function t() {
                                        if (!isFinite(e.duration) || e.duration < 0) {
                                            this.trigger("warn", {
                                                message: "ignoring invalid target duration: " + e.duration
                                            });
                                            return
                                        }
                                        this.manifest.targetDuration = e.duration;
                                        L.call(this, this.manifest)
                                    },
                                    start: function t() {
                                        if (!e.attributes || isNaN(e.attributes["TIME-OFFSET"])) {
                                            this.trigger("warn", {
                                                message: "ignoring start declaration without appropriate attribute list"
                                            });
                                            return
                                        }
                                        this.manifest.start = {
                                            timeOffset: e.attributes["TIME-OFFSET"],
                                            precise: e.attributes.PRECISE
                                        }
                                    },
                                    "cue-out": function t() {
                                        r.cueOut = e.data
                                    },
                                    "cue-out-cont": function t() {
                                        r.cueOutCont = e.data
                                    },
                                    "cue-in": function t() {
                                        r.cueIn = e.data
                                    },
                                    skip: function t() {
                                        this.manifest.skip = j(e.attributes);
                                        this.warnOnMissingAttributes_("#EXT-X-SKIP", e.attributes, ["SKIPPED-SEGMENTS"])
                                    },
                                    part: function t() {
                                        var n = this;
                                        o = true;
                                        var i = this.manifest.segments.length;
                                        var t = j(e.attributes);
                                        r.parts = r.parts || [];
                                        r.parts.push(t);
                                        if (t.byterange) {
                                            if (!t.byterange.hasOwnProperty("offset")) {
                                                t.byterange.offset = h
                                            }
                                            h = t.byterange.offset + t.byterange.length
                                        }
                                        var a = r.parts.length - 1;
                                        this.warnOnMissingAttributes_("#EXT-X-PART #" + a + " for segment #" + i, e.attributes, ["URI", "DURATION"]);
                                        if (this.manifest.renditionReports) {
                                            this.manifest.renditionReports.forEach(function(e, t) {
                                                if (!e.hasOwnProperty("lastPart")) {
                                                    n.trigger("warn", {
                                                        message: "#EXT-X-RENDITION-REPORT #" + t + " lacks required attribute(s): LAST-PART"
                                                    })
                                                }
                                            })
                                        }
                                    },
                                    "server-control": function t() {
                                        var n = this.manifest.serverControl = j(e.attributes);
                                        if (!n.hasOwnProperty("canBlockReload")) {
                                            n.canBlockReload = false;
                                            this.trigger("info", {
                                                message: "#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false"
                                            })
                                        }
                                        L.call(this, this.manifest);
                                        if (n.canSkipDateranges && !n.hasOwnProperty("canSkipUntil")) {
                                            this.trigger("warn", {
                                                message: "#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set"
                                            })
                                        }
                                    },
                                    "preload-hint": function t() {
                                        var n = this.manifest.segments.length;
                                        var i = j(e.attributes);
                                        var a = i.type && i.type === "PART";
                                        r.preloadHints = r.preloadHints || [];
                                        r.preloadHints.push(i);
                                        if (i.byterange) {
                                            if (!i.byterange.hasOwnProperty("offset")) {
                                                i.byterange.offset = a ? h : 0;
                                                if (a) {
                                                    h = i.byterange.offset + i.byterange.length
                                                }
                                            }
                                        }
                                        var s = r.preloadHints.length - 1;
                                        this.warnOnMissingAttributes_("#EXT-X-PRELOAD-HINT #" + s + " for segment #" + n, e.attributes, ["TYPE", "URI"]);
                                        if (!i.type) {
                                            return
                                        }
                                        for (var o = 0; o < r.preloadHints.length - 1; o++) {
                                            var u = r.preloadHints[o];
                                            if (!u.type) {
                                                continue
                                            }
                                            if (u.type === i.type) {
                                                this.trigger("warn", {
                                                    message: "#EXT-X-PRELOAD-HINT #" + s + " for segment #" + n + " has the same TYPE " + i.type + " as preload hint #" + o
                                                })
                                            }
                                        }
                                    },
                                    "rendition-report": function t() {
                                        var n = j(e.attributes);
                                        this.manifest.renditionReports = this.manifest.renditionReports || [];
                                        this.manifest.renditionReports.push(n);
                                        var i = this.manifest.renditionReports.length - 1;
                                        var r = ["LAST-MSN", "URI"];
                                        if (o) {
                                            r.push("LAST-PART")
                                        }
                                        this.warnOnMissingAttributes_("#EXT-X-RENDITION-REPORT #" + i, e.attributes, r)
                                    },
                                    "part-inf": function t() {
                                        this.manifest.partInf = j(e.attributes);
                                        this.warnOnMissingAttributes_("#EXT-X-PART-INF", e.attributes, ["PART-TARGET"]);
                                        if (this.manifest.partInf.partTarget) {
                                            this.manifest.partTargetDuration = this.manifest.partInf.partTarget
                                        }
                                        L.call(this, this.manifest)
                                    }
                                })[e.tagType] || u).call(n)
                            },
                            uri: function t() {
                                r.uri = e.uri;
                                i.push(r);
                                if (this.manifest.targetDuration && !("duration"in r)) {
                                    this.trigger("warn", {
                                        message: "defaulting segment duration to the target duration"
                                    });
                                    r.duration = this.manifest.targetDuration
                                }
                                if (s) {
                                    r.key = s
                                }
                                r.timeline = f;
                                if (a) {
                                    r.map = a
                                }
                                h = 0;
                                r = {}
                            },
                            comment: function e() {},
                            custom: function t() {
                                if (e.segment) {
                                    r.custom = r.custom || {};
                                    r.custom[e.customType] = e.data
                                } else {
                                    this.manifest.custom = this.manifest.custom || {};
                                    this.manifest.custom[e.customType] = e.data
                                }
                            }
                        })[e.type].call(n)
                    });
                    return t
                }
                var n = t.prototype;
                n.warnOnMissingAttributes_ = function e(t, n, i) {
                    var r = [];
                    i.forEach(function(e) {
                        if (!n.hasOwnProperty(e)) {
                            r.push(e)
                        }
                    });
                    if (r.length) {
                        this.trigger("warn", {
                            message: t + " lacks required attribute(s): " + r.join(", ")
                        })
                    }
                }
                ;
                n.push = function e(t) {
                    this.lineStream.push(t)
                }
                ;
                n.end = function e() {
                    this.lineStream.push("\n");
                    this.trigger("end")
                }
                ;
                n.addParser = function e(t) {
                    this.parseStream.addParser(t)
                }
                ;
                n.addTagMapper = function e(t) {
                    this.parseStream.addTagMapper(t)
                }
                ;
                return t
            }(_);
            var x = u["default"].log;
            var D = function e(t, n) {
                return t + "-" + n
            };
            var N = function e(t) {
                var n = t.onwarn
                  , i = t.oninfo
                  , r = t.manifestString
                  , a = t.customTagParsers
                  , s = a === void 0 ? [] : a
                  , o = t.customTagMappers
                  , u = o === void 0 ? [] : o
                  , l = t.experimentalLLHLS;
                var d = new O;
                if (n) {
                    d.on("warn", n)
                }
                if (i) {
                    d.on("info", i)
                }
                s.forEach(function(e) {
                    return d.addParser(e)
                });
                u.forEach(function(e) {
                    return d.addTagMapper(e)
                });
                d.push(r);
                d.end();
                var c = d.manifest;
                if (!l) {
                    ["preloadSegment", "skip", "serverControl", "renditionReports", "partInf", "partTargetDuration"].forEach(function(e) {
                        if (c.hasOwnProperty(e)) {
                            delete c[e]
                        }
                    });
                    if (c.segments) {
                        c.segments.forEach(function(e) {
                            ["parts", "preloadHints"].forEach(function(t) {
                                if (e.hasOwnProperty(t)) {
                                    delete e[t]
                                }
                            })
                        })
                    }
                }
                if (!c.targetDuration) {
                    var f = 10;
                    if (c.segments && c.segments.length) {
                        f = c.segments.reduce(function(e, t) {
                            return Math.max(e, t.duration)
                        }, 0)
                    }
                    if (n) {
                        n("manifest has no targetDuration defaulting to " + f)
                    }
                    c.targetDuration = f
                }
                return c
            };
            var R = function e(t, n) {
                ["AUDIO", "SUBTITLES"].forEach(function(e) {
                    for (var i in t.mediaGroups[e]) {
                        for (var r in t.mediaGroups[e][i]) {
                            var a = t.mediaGroups[e][i][r];
                            n(a, e, i, r)
                        }
                    }
                })
            };
            var M = function e(t) {
                var n = t.playlist
                  , i = t.uri
                  , r = t.id;
                n.id = r;
                if (i) {
                    n.uri = i
                }
                n.attributes = n.attributes || {}
            };
            var U = function e(t) {
                var n = t.playlists.length;
                while (n--) {
                    var i = t.playlists[n];
                    M({
                        playlist: i,
                        id: D(n, i.uri)
                    });
                    i.resolvedUri = g(t.uri, i.uri);
                    t.playlists[i.id] = i;
                    t.playlists[i.uri] = i;
                    if (!i.attributes.BANDWIDTH) {
                        x.warn("Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.")
                    }
                }
            };
            var B = function e(t) {
                R(t, function(e) {
                    if (e.uri) {
                        e.resolvedUri = g(t.uri, e.uri)
                    }
                })
            };
            var F = function e(t, n) {
                var i = D(0, n);
                var r = {
                    mediaGroups: {
                        AUDIO: {},
                        VIDEO: {},
                        "CLOSED-CAPTIONS": {},
                        SUBTITLES: {}
                    },
                    uri: o["default"].location.href,
                    resolvedUri: o["default"].location.href,
                    playlists: [{
                        uri: n,
                        id: i,
                        resolvedUri: n,
                        attributes: {}
                    }]
                };
                r.playlists[i] = r.playlists[0];
                r.playlists[n] = r.playlists[0];
                return r
            };
            var V = function e(t, n) {
                t.uri = n;
                for (var i = 0; i < t.playlists.length; i++) {
                    if (!t.playlists[i].uri) {
                        var r = "placeholder-uri-" + i;
                        t.playlists[i].uri = r
                    }
                }
                R(t, function(e, n, i, r) {
                    if (!e.playlists || !e.playlists.length || e.playlists[0].uri) {
                        return
                    }
                    var a = "placeholder-uri-" + n + "-" + i + "-" + r;
                    var s = D(0, a);
                    e.playlists[0].uri = a;
                    e.playlists[0].id = s;
                    t.playlists[s] = e.playlists[0];
                    t.playlists[a] = e.playlists[0]
                });
                U(t);
                B(t)
            };
            var q = u["default"].mergeOptions
              , H = u["default"].EventTarget;
            var G = function e(t, n) {
                if (!t) {
                    return n
                }
                var i = q(t, n);
                if (t.parts && !n.parts) {
                    delete i.parts
                } else if (t.parts && n.parts) {
                    for (var r = 0; r < n.parts.length; r++) {
                        if (t.parts && t.parts[r]) {
                            i.parts[r] = q(t.parts[r], n.parts[r])
                        }
                    }
                }
                return i
            };
            var W = function e(t, n, i) {
                var r = t.slice();
                var a = n.slice();
                i = i || 0;
                var s = Math.min(t.length, n.length + i);
                for (var o = i; o < s; o++) {
                    var u = o - i;
                    a[u] = G(r[o], a[u])
                }
                return a
            };
            var K = function e(t, n) {
                if (!t.resolvedUri && t.uri) {
                    t.resolvedUri = g(n, t.uri)
                }
                if (t.key && !t.key.resolvedUri) {
                    t.key.resolvedUri = g(n, t.key.uri)
                }
                if (t.map && !t.map.resolvedUri) {
                    t.map.resolvedUri = g(n, t.map.uri)
                }
                if (t.parts && t.parts.length) {
                    t.parts.forEach(function(e) {
                        if (e.resolvedUri) {
                            return
                        }
                        e.resolvedUri = g(n, e.uri)
                    })
                }
                if (t.preloadHints && t.preloadHints.length) {
                    t.preloadHints.forEach(function(e) {
                        if (e.resolvedUri) {
                            return
                        }
                        e.resolvedUri = g(n, e.uri)
                    })
                }
            };
            var z = function e(t) {
                var n = t.segments || [];
                if (t.preloadSegment && t.preloadSegment.parts) {
                    n.push(t.preloadSegment)
                }
                return n
            };
            var Y = function e(t, n) {
                return t === n || t.segments && n.segments && t.segments.length === n.segments.length && t.endList === n.endList && t.mediaSequence === n.mediaSequence
            };
            var X = function e(t, n, i) {
                if (i === void 0) {
                    i = Y
                }
                var r = q(t, {});
                var a = r.playlists[n.id];
                if (!a) {
                    return null
                }
                if (i(a, n)) {
                    return null
                }
                var s = q(a, n);
                n.segments = z(n);
                if (a.segments) {
                    s.segments = W(a.segments, n.segments, n.mediaSequence - a.mediaSequence)
                }
                s.segments.forEach(function(e) {
                    K(e, s.resolvedUri)
                });
                for (var o = 0; o < r.playlists.length; o++) {
                    if (r.playlists[o].id === n.id) {
                        r.playlists[o] = s
                    }
                }
                r.playlists[n.id] = s;
                r.playlists[n.uri] = s;
                return r
            };
            var Q = function e(t, n) {
                var i = t.segments[t.segments.length - 1];
                var r = i && i.parts && i.parts[i.parts.length - 1];
                var a = r && r.duration || i && i.duration;
                if (n && a) {
                    return a * 1e3
                }
                return (t.partTargetDuration || t.targetDuration || 10) * 500
            };
            var Z = function(e) {
                p(t, e);
                function t(t, n, i) {
                    var r;
                    if (i === void 0) {
                        i = {}
                    }
                    r = e.call(this) || this;
                    if (!t) {
                        throw new Error("A non-empty playlist URL or object is required")
                    }
                    r.logger_ = y("PlaylistLoader");
                    var a = i
                      , s = a.withCredentials
                      , o = s === void 0 ? false : s
                      , u = a.handleManifestRedirects
                      , l = u === void 0 ? false : u;
                    r.src = t;
                    r.vhs_ = n;
                    r.withCredentials = o;
                    r.handleManifestRedirects = l;
                    var d = n.options_;
                    r.customTagParsers = d && d.customTagParsers || [];
                    r.customTagMappers = d && d.customTagMappers || [];
                    r.experimentalLLHLS = d && d.experimentalLLHLS || false;
                    r.state = "HAVE_NOTHING";
                    r.on("mediaupdatetimeout", function() {
                        if (r.state !== "HAVE_METADATA") {
                            return
                        }
                        r.state = "HAVE_CURRENT_METADATA";
                        r.request = r.vhs_.xhr({
                            uri: g(r.master.uri, r.media().uri),
                            withCredentials: r.withCredentials
                        }, function(e, t) {
                            if (!r.request) {
                                return
                            }
                            if (e) {
                                return r.playlistRequestError(r.request, r.media(), "HAVE_METADATA")
                            }
                            r.haveMetadata({
                                playlistString: r.request.responseText,
                                url: r.media().uri,
                                id: r.media().id
                            })
                        })
                    });
                    return r
                }
                var n = t.prototype;
                n.playlistRequestError = function e(t, n, i) {
                    var r = n.uri
                      , a = n.id;
                    this.request = null;
                    if (i) {
                        this.state = i
                    }
                    this.error = {
                        playlist: this.master.playlists[a],
                        status: t.status,
                        message: "HLS playlist request error at URL: " + r + ".",
                        responseText: t.responseText,
                        code: t.status >= 500 ? 4 : 2
                    };
                    this.trigger("error")
                }
                ;
                n.haveMetadata = function e(t) {
                    var n = this;
                    var i = t.playlistString
                      , r = t.playlistObject
                      , a = t.url
                      , s = t.id;
                    this.request = null;
                    this.state = "HAVE_METADATA";
                    var u = r || N({
                        onwarn: function e(t) {
                            var i = t.message;
                            return n.logger_("m3u8-parser warn for " + s + ": " + i)
                        },
                        oninfo: function e(t) {
                            var i = t.message;
                            return n.logger_("m3u8-parser info for " + s + ": " + i)
                        },
                        manifestString: i,
                        customTagParsers: this.customTagParsers,
                        customTagMappers: this.customTagMappers,
                        experimentalLLHLS: this.experimentalLLHLS
                    });
                    u.lastRequest = Date.now();
                    M({
                        playlist: u,
                        uri: a,
                        id: s
                    });
                    var l = X(this.master, u);
                    this.targetDuration = u.partTargetDuration || u.targetDuration;
                    if (l) {
                        this.master = l;
                        this.media_ = this.master.playlists[s]
                    } else {
                        this.trigger("playlistunchanged")
                    }
                    if (!this.media().endList) {
                        o["default"].clearTimeout(this.mediaUpdateTimeout);
                        this.mediaUpdateTimeout = o["default"].setTimeout(function() {
                            n.trigger("mediaupdatetimeout")
                        }, Q(this.media(), !!l))
                    }
                    this.trigger("loadedplaylist")
                }
                ;
                n.dispose = function e() {
                    this.trigger("dispose");
                    this.stopRequest();
                    o["default"].clearTimeout(this.mediaUpdateTimeout);
                    o["default"].clearTimeout(this.finalRenditionTimeout);
                    this.off()
                }
                ;
                n.stopRequest = function e() {
                    if (this.request) {
                        var t = this.request;
                        this.request = null;
                        t.onreadystatechange = null;
                        t.abort()
                    }
                }
                ;
                n.media = function e(t, n) {
                    var i = this;
                    if (!t) {
                        return this.media_
                    }
                    if (this.state === "HAVE_NOTHING") {
                        throw new Error("Cannot switch media playlist from " + this.state)
                    }
                    if (typeof t === "string") {
                        if (!this.master.playlists[t]) {
                            throw new Error("Unknown playlist URI: " + t)
                        }
                        t = this.master.playlists[t]
                    }
                    o["default"].clearTimeout(this.finalRenditionTimeout);
                    if (n) {
                        var r = (t.partTargetDuration || t.targetDuration) / 2 * 1e3 || 5 * 1e3;
                        this.finalRenditionTimeout = o["default"].setTimeout(this.media.bind(this, t, false), r);
                        return
                    }
                    var a = this.state;
                    var s = !this.media_ || t.id !== this.media_.id;
                    if (this.master.playlists[t.id].endList || t.endList && t.segments.length) {
                        if (this.request) {
                            this.request.onreadystatechange = null;
                            this.request.abort();
                            this.request = null
                        }
                        this.state = "HAVE_METADATA";
                        this.media_ = t;
                        if (s) {
                            this.trigger("mediachanging");
                            if (a === "HAVE_MASTER") {
                                this.trigger("loadedmetadata")
                            } else {
                                this.trigger("mediachange")
                            }
                        }
                        return
                    }
                    if (!s) {
                        return
                    }
                    this.state = "SWITCHING_MEDIA";
                    if (this.request) {
                        if (t.resolvedUri === this.request.url) {
                            return
                        }
                        this.request.onreadystatechange = null;
                        this.request.abort();
                        this.request = null
                    }
                    if (this.media_) {
                        this.trigger("mediachanging")
                    }
                    this.request = this.vhs_.xhr({
                        uri: t.resolvedUri,
                        withCredentials: this.withCredentials
                    }, function(e, n) {
                        if (!i.request) {
                            return
                        }
                        t.lastRequest = Date.now();
                        t.resolvedUri = m(i.handleManifestRedirects, t.resolvedUri, n);
                        if (e) {
                            return i.playlistRequestError(i.request, t, a)
                        }
                        i.haveMetadata({
                            playlistString: n.responseText,
                            url: t.uri,
                            id: t.id
                        });
                        if (a === "HAVE_MASTER") {
                            i.trigger("loadedmetadata")
                        } else {
                            i.trigger("mediachange")
                        }
                    })
                }
                ;
                n.pause = function e() {
                    this.stopRequest();
                    o["default"].clearTimeout(this.mediaUpdateTimeout);
                    if (this.state === "HAVE_NOTHING") {
                        this.started = false
                    }
                    if (this.state === "SWITCHING_MEDIA") {
                        if (this.media_) {
                            this.state = "HAVE_METADATA"
                        } else {
                            this.state = "HAVE_MASTER"
                        }
                    } else if (this.state === "HAVE_CURRENT_METADATA") {
                        this.state = "HAVE_METADATA"
                    }
                }
                ;
                n.load = function e(t) {
                    var n = this;
                    o["default"].clearTimeout(this.mediaUpdateTimeout);
                    var i = this.media();
                    if (t) {
                        var r = i ? (i.partTargetDuration || i.targetDuration) / 2 * 1e3 : 5 * 1e3;
                        this.mediaUpdateTimeout = o["default"].setTimeout(function() {
                            return n.load()
                        }, r);
                        return
                    }
                    if (!this.started) {
                        this.start();
                        return
                    }
                    if (i && !i.endList) {
                        this.trigger("mediaupdatetimeout")
                    } else {
                        this.trigger("loadedplaylist")
                    }
                }
                ;
                n.start = function e() {
                    var t = this;
                    this.started = true;
                    if (typeof this.src === "object") {
                        if (!this.src.uri) {
                            this.src.uri = o["default"].location.href
                        }
                        this.src.resolvedUri = this.src.uri;
                        setTimeout(function() {
                            t.setupInitialPlaylist(t.src)
                        }, 0);
                        return
                    }
                    this.request = this.vhs_.xhr({
                        uri: this.src,
                        withCredentials: this.withCredentials
                    }, function(e, n) {
                        if (!t.request) {
                            return
                        }
                        t.request = null;
                        if (e) {
                            t.error = {
                                status: n.status,
                                message: "HLS playlist request error at URL: " + t.src + ".",
                                responseText: n.responseText,
                                code: 2
                            };
                            if (t.state === "HAVE_NOTHING") {
                                t.started = false
                            }
                            return t.trigger("error")
                        }
                        t.src = m(t.handleManifestRedirects, t.src, n);
                        var i = N({
                            manifestString: n.responseText,
                            customTagParsers: t.customTagParsers,
                            customTagMappers: t.customTagMappers,
                            experimentalLLHLS: t.experimentalLLHLS
                        });
                        t.setupInitialPlaylist(i)
                    })
                }
                ;
                n.srcUri = function e() {
                    return typeof this.src === "string" ? this.src : this.src.uri
                }
                ;
                n.setupInitialPlaylist = function e(t) {
                    this.state = "HAVE_MASTER";
                    if (t.playlists) {
                        this.master = t;
                        V(this.master, this.srcUri());
                        t.playlists.forEach(function(e) {
                            e.segments = z(e);
                            e.segments.forEach(function(t) {
                                K(t, e.resolvedUri)
                            })
                        });
                        this.trigger("loadedplaylist");
                        if (!this.request) {
                            this.media(this.master.playlists[0])
                        }
                        return
                    }
                    var n = this.srcUri() || o["default"].location.href;
                    this.master = F(t, n);
                    this.haveMetadata({
                        playlistObject: t,
                        url: n,
                        id: this.master.playlists[0].id
                    });
                    this.trigger("loadedmetadata")
                }
                ;
                return t
            }(H);
            var J = 1 / 30;
            var $ = J * 3;
            var ee = function e(t, n) {
                var i = [];
                var r;
                if (t && t.length) {
                    for (r = 0; r < t.length; r++) {
                        if (n(t.start(r), t.end(r))) {
                            i.push([t.start(r), t.end(r)])
                        }
                    }
                }
                return u["default"].createTimeRanges(i)
            };
            var te = function e(t, n) {
                return ee(t, function(e, t) {
                    return e - $ <= n && t + $ >= n
                })
            };
            var ne = function e(t, n) {
                return ee(t, function(e) {
                    return e - J >= n
                })
            };
            var ie = function e(t) {
                if (t.length < 2) {
                    return u["default"].createTimeRanges()
                }
                var n = [];
                for (var i = 1; i < t.length; i++) {
                    var r = t.end(i - 1);
                    var a = t.start(i);
                    n.push([r, a])
                }
                return u["default"].createTimeRanges(n)
            };
            var re = function e(t, n) {
                var i = null;
                var r = null;
                var a = 0;
                var s = [];
                var o = [];
                if (!t || !t.length || !n || !n.length) {
                    return u["default"].createTimeRange()
                }
                var l = t.length;
                while (l--) {
                    s.push({
                        time: t.start(l),
                        type: "start"
                    });
                    s.push({
                        time: t.end(l),
                        type: "end"
                    })
                }
                l = n.length;
                while (l--) {
                    s.push({
                        time: n.start(l),
                        type: "start"
                    });
                    s.push({
                        time: n.end(l),
                        type: "end"
                    })
                }
                s.sort(function(e, t) {
                    return e.time - t.time
                });
                for (l = 0; l < s.length; l++) {
                    if (s[l].type === "start") {
                        a++;
                        if (a === 2) {
                            i = s[l].time
                        }
                    } else if (s[l].type === "end") {
                        a--;
                        if (a === 1) {
                            r = s[l].time
                        }
                    }
                    if (i !== null && r !== null) {
                        o.push([i, r]);
                        i = null;
                        r = null
                    }
                }
                return u["default"].createTimeRanges(o)
            };
            var ae = function e(t) {
                var n = [];
                if (!t || !t.length) {
                    return ""
                }
                for (var i = 0; i < t.length; i++) {
                    n.push(t.start(i) + " => " + t.end(i))
                }
                return n.join(", ")
            };
            var se = function e(t, n, i) {
                if (i === void 0) {
                    i = 1
                }
                var r = t.length ? t.end(t.length - 1) : 0;
                return (r - n) / i
            };
            var oe = function e(t) {
                var n = [];
                for (var i = 0; i < t.length; i++) {
                    n.push({
                        start: t.start(i),
                        end: t.end(i)
                    })
                }
                return n
            };
            var ue = function e(t, n) {
                if (t === n) {
                    return false
                }
                if (!t && n || !n && t) {
                    return true
                }
                if (t.length !== n.length) {
                    return true
                }
                for (var i = 0; i < t.length; i++) {
                    if (t.start(i) !== n.start(i) || t.end(i) !== n.end(i)) {
                        return true
                    }
                }
                return false
            };
            var le = {
                mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,
                webm: /^(vp0?[89]|av0?1|opus|vorbis)/,
                ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,
                video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,
                audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,
                text: /^(stpp.ttml.im1t)/,
                muxerVideo: /^(avc0?1)/,
                muxerAudio: /^(mp4a)/,
                muxerText: /a^/
            };
            var de = ["video", "audio", "text"];
            var ce = ["Video", "Audio", "Text"];
            var fe = function e(t) {
                if (!t) {
                    return t
                }
                return t.replace(/avc1\.(\d+)\.(\d+)/i, function(e, t, n) {
                    var i = ("00" + Number(t).toString(16)).slice(-2);
                    var r = ("00" + Number(n).toString(16)).slice(-2);
                    return "avc1." + i + "00" + r
                })
            };
            var pe = function e(t) {
                if (t === void 0) {
                    t = ""
                }
                var n = t.split(",");
                var i = [];
                n.forEach(function(e) {
                    e = e.trim();
                    var t;
                    de.forEach(function(n) {
                        var r = le[n].exec(e.toLowerCase());
                        if (!r || r.length <= 1) {
                            return
                        }
                        t = n;
                        var a = e.substring(0, r[1].length);
                        var s = e.replace(a, "");
                        i.push({
                            type: a,
                            details: s,
                            mediaType: n
                        })
                    });
                    if (!t) {
                        i.push({
                            type: e,
                            details: "",
                            mediaType: "unknown"
                        })
                    }
                });
                return i
            };
            var he = function e(t, n) {
                if (!t.mediaGroups.AUDIO || !n) {
                    return null
                }
                var i = t.mediaGroups.AUDIO[n];
                if (!i) {
                    return null
                }
                for (var r in i) {
                    var a = i[r];
                    if (a.default && a.playlists) {
                        return pe(a.playlists[0].attributes.CODECS)
                    }
                }
                return null
            };
            var ve = function e(t) {
                if (t === void 0) {
                    t = ""
                }
                return le.audio.test(t.trim().toLowerCase())
            };
            var ge = function e(t) {
                if (t === void 0) {
                    t = ""
                }
                return le.text.test(t.trim().toLowerCase())
            };
            var me = function e(t) {
                if (!t || typeof t !== "string") {
                    return
                }
                var n = t.toLowerCase().split(",").map(function(e) {
                    return fe(e.trim())
                });
                var i = "video";
                if (n.length === 1 && ve(n[0])) {
                    i = "audio"
                } else if (n.length === 1 && ge(n[0])) {
                    i = "application"
                }
                var r = "mp4";
                if (n.every(function(e) {
                    return le.mp4.test(e)
                })) {
                    r = "mp4"
                } else if (n.every(function(e) {
                    return le.webm.test(e)
                })) {
                    r = "webm"
                } else if (n.every(function(e) {
                    return le.ogg.test(e)
                })) {
                    r = "ogg"
                }
                return i + "/" + r + ';codecs="' + t + '"'
            };
            var ye = function e(t) {
                if (t === void 0) {
                    t = ""
                }
                return o["default"].MediaSource && o["default"].MediaSource.isTypeSupported && o["default"].MediaSource.isTypeSupported(me(t)) || false
            };
            var _e = function e(t) {
                if (t === void 0) {
                    t = ""
                }
                return t.toLowerCase().split(",").every(function(e) {
                    e = e.trim();
                    for (var t = 0; t < ce.length; t++) {
                        var n = ce[t];
                        if (le["muxer" + n].test(e)) {
                            return true
                        }
                    }
                    return false
                })
            };
            var be = "mp4a.40.2";
            var Se = "avc1.4d400d";
            var Ae = u["default"].createTimeRange;
            var Te = function e(t) {
                return (t.segments || []).reduce(function(e, t, n) {
                    if (t.parts) {
                        t.parts.forEach(function(t, i) {
                            e.push({
                                duration: t.duration,
                                segmentIndex: n,
                                partIndex: i
                            })
                        })
                    } else {
                        e.push({
                            duration: t.duration,
                            segmentIndex: n,
                            partIndex: null
                        })
                    }
                    return e
                }, [])
            };
            var ke = function e(t, n) {
                if (n.endList) {
                    return 0
                }
                if (t && t.suggestedPresentationDelay) {
                    return t.suggestedPresentationDelay
                }
                var i = n.segments && n.segments.length && n.segments[n.segments.length - 1];
                var r = i && i.parts && i.parts.length;
                if (r && n.serverControl && n.serverControl.partHoldBack) {
                    return n.serverControl.partHoldBack
                } else if (r && n.partTargetDuration) {
                    return n.partTargetDuration * 3
                } else if (n.serverControl && n.serverControl.holdBack) {
                    return n.serverControl.holdBack
                } else if (n.targetDuration) {
                    return n.targetDuration * 3
                }
                return 0
            };
            var Ee = function e(t, n) {
                var i = 0;
                var r = n - t.mediaSequence;
                var a = t.segments[r];
                if (a) {
                    if (typeof a.start !== "undefined") {
                        return {
                            result: a.start,
                            precise: true
                        }
                    }
                    if (typeof a.end !== "undefined") {
                        return {
                            result: a.end - a.duration,
                            precise: true
                        }
                    }
                }
                while (r--) {
                    a = t.segments[r];
                    if (typeof a.end !== "undefined") {
                        return {
                            result: i + a.end,
                            precise: true
                        }
                    }
                    i += a.duration;
                    if (typeof a.start !== "undefined") {
                        return {
                            result: i + a.start,
                            precise: true
                        }
                    }
                }
                return {
                    result: i,
                    precise: false
                }
            };
            var Pe = function e(t, n) {
                var i = 0;
                var r;
                var a = n - t.mediaSequence;
                for (; a < t.segments.length; a++) {
                    r = t.segments[a];
                    if (typeof r.start !== "undefined") {
                        return {
                            result: r.start - i,
                            precise: true
                        }
                    }
                    i += r.duration;
                    if (typeof r.end !== "undefined") {
                        return {
                            result: r.end - i,
                            precise: true
                        }
                    }
                }
                return {
                    result: -1,
                    precise: false
                }
            };
            var Ie = function e(t, n, i) {
                if (typeof n === "undefined") {
                    n = t.mediaSequence + t.segments.length
                }
                if (n < t.mediaSequence) {
                    return 0
                }
                var r = Ee(t, n);
                if (r.precise) {
                    return r.result
                }
                var a = Pe(t, n);
                if (a.precise) {
                    return a.result
                }
                return r.result + i
            };
            var Ce = function e(t, n, i) {
                if (!t) {
                    return 0
                }
                if (typeof i !== "number") {
                    i = 0
                }
                if (typeof n === "undefined") {
                    if (t.totalDuration) {
                        return t.totalDuration
                    }
                    if (!t.endList) {
                        return o["default"].Infinity
                    }
                }
                return Ie(t, n, i)
            };
            var we = function e(t, n, i) {
                var r = 0;
                if (n > i) {
                    var a = [i, n];
                    n = a[0];
                    i = a[1]
                }
                if (n < 0) {
                    for (var s = n; s < Math.min(0, i); s++) {
                        r += t.targetDuration
                    }
                    n = 0
                }
                for (var o = n; o < i; o++) {
                    r += t.segments[o].duration
                }
                return r
            };
            var je = function e(t, n, i, r) {
                if (!t || !t.segments) {
                    return null
                }
                if (t.endList) {
                    return Ce(t)
                }
                if (n === null) {
                    return null
                }
                n = n || 0;
                var a = Ie(t, t.mediaSequence + t.segments.length, n);
                if (i) {
                    r = typeof r === "number" ? r : ke(null, t);
                    a -= r
                }
                return Math.max(0, a)
            };
            var Le = function e(t, n, i) {
                var r = true;
                var a = n || 0;
                var s = je(t, n, r, i);
                if (s === null) {
                    return Ae()
                }
                return Ae(a, s)
            };
            var Oe = function e(t, n, i, r) {
                var a = Te(t);
                var s = n - r;
                if (s < 0) {
                    if (i > 0) {
                        for (var o = i - 1; o >= 0; o--) {
                            var u = a[o];
                            s += u.duration + J;
                            if (s > 0) {
                                return {
                                    mediaIndex: u.segmentIndex,
                                    startTime: r - we(t, i, u.segmentIndex),
                                    partIndex: u.partIndex
                                }
                            }
                        }
                    }
                    return {
                        mediaIndex: a[0] && a[0].segmentIndex || 0,
                        partIndex: a[0] && a[0].partIndex || null,
                        startTime: n
                    }
                }
                if (i < 0) {
                    for (var l = i; l < 0; l++) {
                        s -= t.targetDuration;
                        if (s < 0) {
                            return {
                                mediaIndex: a[0].segmentIndex,
                                startTime: n
                            }
                        }
                    }
                    i = 0
                }
                for (var d = i; d < a.length; d++) {
                    var c = a[d];
                    s -= c.duration + J;
                    if (s < 0) {
                        return {
                            mediaIndex: c.segmentIndex,
                            startTime: r + we(t, i, c.segmentIndex),
                            partIndex: c.partIndex
                        }
                    }
                }
                return {
                    mediaIndex: a[a.length - 1].segmentIndex,
                    partIndex: a[a.length - 1].partIndex,
                    startTime: n
                }
            };
            var xe = function e(t) {
                return t.excludeUntil && t.excludeUntil > Date.now()
            };
            var De = function e(t) {
                return t.excludeUntil && t.excludeUntil === Infinity
            };
            var Ne = function e(t) {
                var n = xe(t);
                return !t.disabled && !n
            };
            var Re = function e(t) {
                return t.disabled
            };
            var Me = function e(t) {
                for (var n = 0; n < t.segments.length; n++) {
                    if (t.segments[n].key) {
                        return true
                    }
                }
                return false
            };
            var Ue = function e(t, n) {
                return n.attributes && n.attributes[t]
            };
            var Be = function e(t, n, i, r) {
                if (r === void 0) {
                    r = 0
                }
                if (!Ue("BANDWIDTH", i)) {
                    return NaN
                }
                var a = t * i.attributes.BANDWIDTH;
                return (a - r * 8) / n
            };
            var Fe = function e(t, n) {
                if (t.playlists.length === 1) {
                    return true
                }
                var i = n.attributes.BANDWIDTH || Number.MAX_VALUE;
                return t.playlists.filter(function(e) {
                    if (!Ne(e)) {
                        return false
                    }
                    return (e.attributes.BANDWIDTH || 0) < i
                }).length === 0
            };
            var Ve = function e(t, n) {
                if (!t && !n || !t && n || t && !n) {
                    return false
                }
                if (t === n) {
                    return true
                }
                if (t.id && n.id && t.id === n.id) {
                    return true
                }
                if (t.resolvedUri && n.resolvedUri && t.resolvedUri === n.resolvedUri) {
                    return true
                }
                if (t.uri && n.uri && t.uri === n.uri) {
                    return true
                }
                return false
            };
            var qe = function e(t, n) {
                var i = t && t.mediaGroups && t.mediaGroups.AUDIO || {};
                var r = false;
                for (var a in i) {
                    for (var s in i[a]) {
                        r = n(i[a][s]);
                        if (r) {
                            break
                        }
                    }
                    if (r) {
                        break
                    }
                }
                return !!r
            };
            var He = function e(t) {
                if (!t || !t.playlists || !t.playlists.length) {
                    var n = qe(t, function(e) {
                        return e.playlists && e.playlists.length || e.uri
                    });
                    return n
                }
                var i = function e(n) {
                    var i = t.playlists[n];
                    var r = i.attributes && i.attributes.CODECS;
                    if (r && r.split(",").every(function(e) {
                        return ve(e)
                    })) {
                        return "continue"
                    }
                    var a = qe(t, function(e) {
                        return Ve(i, e)
                    });
                    if (a) {
                        return "continue"
                    }
                    return {
                        v: false
                    }
                };
                for (var r = 0; r < t.playlists.length; r++) {
                    var a = i(r);
                    if (a === "continue")
                        continue;
                    if (typeof a === "object")
                        return a.v
                }
                return true
            };
            var Ge = {
                liveEdgeDelay: ke,
                duration: Ce,
                seekable: Le,
                getMediaInfoForTime: Oe,
                isEnabled: Ne,
                isDisabled: Re,
                isBlacklisted: xe,
                isIncompatible: De,
                playlistEnd: je,
                isAes: Me,
                hasAttribute: Ue,
                estimateSegmentRequestTime: Be,
                isLowestEnabledRendition: Fe,
                isAudioOnly: He,
                playlistMatch: Ve
            };
            var We = u["default"].xhr
              , Ke = u["default"].mergeOptions;
            var ze = function e(t, n, i, r) {
                var a = t.responseType === "arraybuffer" ? t.response : t.responseText;
                if (!n && a) {
                    t.responseTime = Date.now();
                    t.roundTripTime = t.responseTime - t.requestTime;
                    t.bytesReceived = a.byteLength || a.length;
                    if (!t.bandwidth) {
                        t.bandwidth = Math.floor(t.bytesReceived / t.roundTripTime * 8 * 1e3)
                    }
                }
                if (i.headers) {
                    t.responseHeaders = i.headers
                }
                if (n && n.code === "ETIMEDOUT") {
                    t.timedout = true
                }
                if (!n && !t.aborted && i.statusCode !== 200 && i.statusCode !== 206 && i.statusCode !== 0) {
                    n = new Error("XHR Failed with a response of: " + (t && (a || t.responseText)))
                }
                r(n, t)
            };
            var Ye = function e() {
                var t = function e(t, n) {
                    t = Ke({
                        timeout: 45e3
                    }, t);
                    var i = e.beforeRequest || u["default"].Vhs.xhr.beforeRequest;
                    if (i && typeof i === "function") {
                        var r = i(t);
                        if (r) {
                            t = r
                        }
                    }
                    var a = u["default"].Vhs.xhr.original === true ? We : u["default"].Vhs.xhr;
                    var s = a(t, function(e, t) {
                        return ze(s, e, t, n)
                    });
                    var o = s.abort;
                    s.abort = function() {
                        s.aborted = true;
                        return o.apply(s, arguments)
                    }
                    ;
                    s.uri = t.uri;
                    s.requestTime = Date.now();
                    return s
                };
                t.original = true;
                return t
            };
            var Xe = function e(t) {
                var n = t.offset + t.length - 1;
                var i = t.offset;
                return "bytes=" + i + "-" + n
            };
            var Qe = function e(t) {
                var n = {};
                if (t.byterange) {
                    n.Range = Xe(t.byterange)
                }
                return n
            };
            var Ze = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i;
            var Je = /^application\/dash\+xml/i;
            var $e = function e(t) {
                if (Ze.test(t)) {
                    return "hls"
                }
                if (Je.test(t)) {
                    return "dash"
                }
                if (t === "application/vnd.videojs.vhs+json") {
                    return "vhs-json"
                }
                return null
            };
            var et = function e(t, n) {
                return t.start(n) + "-" + t.end(n)
            };
            var tt = function e(t, n) {
                var i = t.toString(16);
                return "00".substring(0, 2 - i.length) + i + (n % 2 ? " " : "")
            };
            var nt = function e(t) {
                if (t >= 32 && t < 126) {
                    return String.fromCharCode(t)
                }
                return "."
            };
            var it = function e(t) {
                var n = {};
                Object.keys(t).forEach(function(e) {
                    var i = t[e];
                    if (ArrayBuffer.isView(i)) {
                        n[e] = {
                            bytes: i.buffer,
                            byteOffset: i.byteOffset,
                            byteLength: i.byteLength
                        }
                    } else {
                        n[e] = i
                    }
                });
                return n
            };
            var rt = function e(t) {
                var n = t.byterange || {
                    length: Infinity,
                    offset: 0
                };
                return [n.length, n.offset, t.resolvedUri].join(",")
            };
            var at = function e(t) {
                return t.resolvedUri
            };
            var st = function e(t) {
                var n = Array.prototype.slice.call(t);
                var i = 16;
                var r = "";
                var a;
                var s;
                for (var o = 0; o < n.length / i; o++) {
                    a = n.slice(o * i, o * i + i).map(tt).join("");
                    s = n.slice(o * i, o * i + i).map(nt).join("");
                    r += a + " " + s + "\n"
                }
                return r
            };
            var ot = function e(t) {
                var n = t.bytes;
                return st(n)
            };
            var ut = function e(t) {
                var n = "";
                var i;
                for (i = 0; i < t.length; i++) {
                    n += et(t, i) + " "
                }
                return n
            };
            var lt = Object.freeze({
                __proto__: null,
                createTransferableMessage: it,
                initSegmentId: rt,
                segmentKeyId: at,
                hexDump: st,
                tagDump: ot,
                textRanges: ut
            });
            var dt = .25;
            var ct = function e(t, n) {
                if (!n.dateTimeObject) {
                    return null
                }
                var i = n.videoTimingInfo.transmuxerPrependedSeconds;
                var r = n.videoTimingInfo.transmuxedPresentationStart;
                var a = r + i;
                var s = t - a;
                return new Date(n.dateTimeObject.getTime() + s * 1e3)
            };
            var ft = function e(t) {
                return t.transmuxedPresentationEnd - t.transmuxedPresentationStart - t.transmuxerPrependedSeconds
            };
            var pt = function e(t, n) {
                var i;
                try {
                    i = new Date(t)
                } catch (e) {
                    return null
                }
                if (!n || !n.segments || n.segments.length === 0) {
                    return null
                }
                var r = n.segments[0];
                if (i < r.dateTimeObject) {
                    return null
                }
                for (var a = 0; a < n.segments.length - 1; a++) {
                    r = n.segments[a];
                    var s = n.segments[a + 1].dateTimeObject;
                    if (i < s) {
                        break
                    }
                }
                var o = n.segments[n.segments.length - 1];
                var u = o.dateTimeObject;
                var l = o.videoTimingInfo ? ft(o.videoTimingInfo) : o.duration + o.duration * dt;
                var d = new Date(u.getTime() + l * 1e3);
                if (i > d) {
                    return null
                }
                if (i > u) {
                    r = o
                }
                return {
                    segment: r,
                    estimatedStart: r.videoTimingInfo ? r.videoTimingInfo.transmuxedPresentationStart : Ge.duration(n, n.mediaSequence + n.segments.indexOf(r)),
                    type: r.videoTimingInfo ? "accurate" : "estimate"
                }
            };
            var ht = function e(t, n) {
                if (!n || !n.segments || n.segments.length === 0) {
                    return null
                }
                var i = 0;
                var r;
                for (var a = 0; a < n.segments.length; a++) {
                    r = n.segments[a];
                    i = r.videoTimingInfo ? r.videoTimingInfo.transmuxedPresentationEnd : i + r.duration;
                    if (t <= i) {
                        break
                    }
                }
                var s = n.segments[n.segments.length - 1];
                if (s.videoTimingInfo && s.videoTimingInfo.transmuxedPresentationEnd < t) {
                    return null
                }
                if (t > i) {
                    if (t > i + s.duration * dt) {
                        return null
                    }
                    r = s
                }
                return {
                    segment: r,
                    estimatedStart: r.videoTimingInfo ? r.videoTimingInfo.transmuxedPresentationStart : i - r.duration,
                    type: r.videoTimingInfo ? "accurate" : "estimate"
                }
            };
            var vt = function e(t, n) {
                var i;
                var r;
                try {
                    i = new Date(t);
                    r = new Date(n)
                } catch (e) {}
                var a = i.getTime();
                var s = r.getTime();
                return (s - a) / 1e3
            };
            var gt = function e(t) {
                if (!t.segments || t.segments.length === 0) {
                    return false
                }
                for (var n = 0; n < t.segments.length; n++) {
                    var i = t.segments[n];
                    if (!i.dateTimeObject) {
                        return false
                    }
                }
                return true
            };
            var mt = function e(t) {
                var n = t.playlist
                  , i = t.time
                  , r = i === void 0 ? undefined : i
                  , a = t.callback;
                if (!a) {
                    throw new Error("getProgramTime: callback must be provided")
                }
                if (!n || r === undefined) {
                    return a({
                        message: "getProgramTime: playlist and time must be provided"
                    })
                }
                var s = ht(r, n);
                if (!s) {
                    return a({
                        message: "valid programTime was not found"
                    })
                }
                if (s.type === "estimate") {
                    return a({
                        message: "Accurate programTime could not be determined." + " Please seek to e.seekTime and try again",
                        seekTime: s.estimatedStart
                    })
                }
                var o = {
                    mediaSeconds: r
                };
                var u = ct(r, s.segment);
                if (u) {
                    o.programDateTime = u.toISOString()
                }
                return a(null, o)
            };
            var yt = function e(t) {
                var n = t.programTime
                  , i = t.playlist
                  , r = t.retryCount
                  , a = r === void 0 ? 2 : r
                  , s = t.seekTo
                  , o = t.pauseAfterSeek
                  , u = o === void 0 ? true : o
                  , l = t.tech
                  , d = t.callback;
                if (!d) {
                    throw new Error("seekToProgramTime: callback must be provided")
                }
                if (typeof n === "undefined" || !i || !s) {
                    return d({
                        message: "seekToProgramTime: programTime, seekTo and playlist must be provided"
                    })
                }
                if (!i.endList && !l.hasStarted_) {
                    return d({
                        message: "player must be playing a live stream to start buffering"
                    })
                }
                if (!gt(i)) {
                    return d({
                        message: "programDateTime tags must be provided in the manifest " + i.resolvedUri
                    })
                }
                var c = pt(n, i);
                if (!c) {
                    return d({
                        message: n + " was not found in the stream"
                    })
                }
                var f = c.segment;
                var p = vt(f.dateTimeObject, n);
                if (c.type === "estimate") {
                    if (a === 0) {
                        return d({
                            message: n + " is not buffered yet. Try again"
                        })
                    }
                    s(c.estimatedStart + p);
                    l.one("seeked", function() {
                        e({
                            programTime: n,
                            playlist: i,
                            retryCount: a - 1,
                            seekTo: s,
                            pauseAfterSeek: u,
                            tech: l,
                            callback: d
                        })
                    });
                    return
                }
                var h = f.start + p;
                var v = function e() {
                    return d(null, l.currentTime())
                };
                l.one("seeked", v);
                if (u) {
                    l.pause()
                }
                s(h)
            };
            var _t = function e(t) {
                return !!t && typeof t === "object"
            };
            var bt = function e() {
                for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
                    n[i] = arguments[i]
                }
                return n.reduce(function(t, n) {
                    if (typeof n !== "object") {
                        return t
                    }
                    Object.keys(n).forEach(function(i) {
                        if (Array.isArray(t[i]) && Array.isArray(n[i])) {
                            t[i] = t[i].concat(n[i])
                        } else if (_t(t[i]) && _t(n[i])) {
                            t[i] = e(t[i], n[i])
                        } else {
                            t[i] = n[i]
                        }
                    });
                    return t
                }, {})
            };
            var St = function e(t) {
                return Object.keys(t).map(function(e) {
                    return t[e]
                })
            };
            var At = function e(t, n) {
                var i = [];
                for (var r = t; r < n; r++) {
                    i.push(r)
                }
                return i
            };
            var Tt = function e(t) {
                return t.reduce(function(e, t) {
                    return e.concat(t)
                }, [])
            };
            var kt = function e(t) {
                if (!t.length) {
                    return []
                }
                var n = [];
                for (var i = 0; i < t.length; i++) {
                    n.push(t[i])
                }
                return n
            };
            var Et = function e(t, n) {
                return t.reduce(function(e, t, i) {
                    if (t[n]) {
                        e.push(i)
                    }
                    return e
                }, [])
            };
            var Pt = {
                INVALID_NUMBER_OF_PERIOD: "INVALID_NUMBER_OF_PERIOD",
                DASH_EMPTY_MANIFEST: "DASH_EMPTY_MANIFEST",
                DASH_INVALID_XML: "DASH_INVALID_XML",
                NO_BASE_URL: "NO_BASE_URL",
                MISSING_SEGMENT_INFORMATION: "MISSING_SEGMENT_INFORMATION",
                SEGMENT_TIME_UNSPECIFIED: "SEGMENT_TIME_UNSPECIFIED",
                UNSUPPORTED_UTC_TIMING_SCHEME: "UNSUPPORTED_UTC_TIMING_SCHEME"
            };
            var It = function e(t) {
                var n = t.baseUrl
                  , i = n === void 0 ? "" : n
                  , r = t.source
                  , a = r === void 0 ? "" : r
                  , s = t.range
                  , o = s === void 0 ? "" : s
                  , u = t.indexRange
                  , l = u === void 0 ? "" : u;
                var d = {
                    uri: a,
                    resolvedUri: v(i || "", a)
                };
                if (o || l) {
                    var c = o ? o : l;
                    var f = c.split("-");
                    var p = parseInt(f[0], 10);
                    var h = parseInt(f[1], 10);
                    d.byterange = {
                        length: h - p + 1,
                        offset: p
                    }
                }
                return d
            };
            var Ct = function e(t) {
                var n = t.offset + t.length - 1;
                return t.offset + "-" + n
            };
            var wt = function e(t) {
                if (t && typeof t !== "number") {
                    t = parseInt(t, 10)
                }
                if (isNaN(t)) {
                    return null
                }
                return t
            };
            var jt = {
                static: function e(t) {
                    var n = t.duration
                      , i = t.timescale
                      , r = i === void 0 ? 1 : i
                      , a = t.sourceDuration;
                    var s = wt(t.endNumber);
                    return {
                        start: 0,
                        end: typeof s === "number" ? s : Math.ceil(a / (n / r))
                    }
                },
                dynamic: function e(t) {
                    var n = t.NOW
                      , i = t.clientOffset
                      , r = t.availabilityStartTime
                      , a = t.timescale
                      , s = a === void 0 ? 1 : a
                      , o = t.duration
                      , u = t.start
                      , l = u === void 0 ? 0 : u
                      , d = t.minimumUpdatePeriod
                      , c = d === void 0 ? 0 : d
                      , f = t.timeShiftBufferDepth
                      , p = f === void 0 ? Infinity : f;
                    var h = wt(t.endNumber);
                    var v = (n + i) / 1e3;
                    var g = r + l;
                    var m = v + c;
                    var y = m - g;
                    var _ = Math.ceil(y * s / o);
                    var b = Math.floor((v - g - p) * s / o);
                    var S = Math.floor((v - g) * s / o);
                    return {
                        start: Math.max(0, b),
                        end: typeof h === "number" ? h : Math.min(_, S)
                    }
                }
            };
            var Lt = function e(t) {
                return function(e, n) {
                    var i = t.duration
                      , r = t.timescale
                      , a = r === void 0 ? 1 : r
                      , s = t.periodIndex
                      , o = t.startNumber
                      , u = o === void 0 ? 1 : o;
                    return {
                        number: u + e,
                        duration: i / a,
                        timeline: s,
                        time: n * i
                    }
                }
            };
            var Ot = function e(t) {
                var n = t.type
                  , i = n === void 0 ? "static" : n
                  , r = t.duration
                  , a = t.timescale
                  , s = a === void 0 ? 1 : a
                  , o = t.sourceDuration;
                var u = jt[i](t)
                  , l = u.start
                  , d = u.end;
                var c = At(l, d).map(Lt(t));
                if (i === "static") {
                    var f = c.length - 1;
                    c[f].duration = o - r / s * f
                }
                return c
            };
            var xt = function e(t) {
                var n = t.baseUrl
                  , i = t.initialization
                  , r = i === void 0 ? {} : i
                  , a = t.sourceDuration
                  , s = t.indexRange
                  , o = s === void 0 ? "" : s
                  , u = t.duration;
                if (!n) {
                    throw new Error(Pt.NO_BASE_URL)
                }
                var l = It({
                    baseUrl: n,
                    source: r.sourceURL,
                    range: r.range
                });
                var d = It({
                    baseUrl: n,
                    source: n,
                    indexRange: o
                });
                d.map = l;
                if (u) {
                    var c = Ot(t);
                    if (c.length) {
                        d.duration = c[0].duration;
                        d.timeline = c[0].timeline
                    }
                } else if (a) {
                    d.duration = a;
                    d.timeline = 0
                }
                d.number = 0;
                return [d]
            };
            var Dt = function e(t, n, i) {
                var r = t.sidx.map ? t.sidx.map : null;
                var a = t.sidx.duration;
                var s = t.timeline || 0;
                var o = t.sidx.byterange;
                var u = o.offset + o.length;
                var l = n.timescale;
                var d = n.references.filter(function(e) {
                    return e.referenceType !== 1
                });
                var c = [];
                var f = u + n.firstOffset;
                for (var p = 0; p < d.length; p++) {
                    var h = n.references[p];
                    var v = h.referencedSize;
                    var g = h.subsegmentDuration;
                    var m = f + v - 1;
                    var y = f + "-" + m;
                    var _ = {
                        baseUrl: i,
                        timescale: l,
                        timeline: s,
                        periodIndex: s,
                        duration: g,
                        sourceDuration: a,
                        indexRange: y
                    };
                    var b = xt(_)[0];
                    if (r) {
                        b.map = r
                    }
                    c.push(b);
                    f += v
                }
                t.segments = c;
                return t
            };
            var Nt = function e(t) {
                return t && t.uri + "-" + Ct(t.byterange)
            };
            var Rt = function e(t) {
                var n = St(t.reduce(function(e, t) {
                    var n = t.attributes.id + (t.attributes.lang || "");
                    if (e[n]) {
                        var i;
                        if (t.segments[0]) {
                            t.segments[0].discontinuity = true
                        }
                        (i = e[n].segments).push.apply(i, t.segments);
                        if (t.attributes.contentProtection) {
                            e[n].attributes.contentProtection = t.attributes.contentProtection
                        }
                    } else {
                        e[n] = t
                    }
                    return e
                }, {}));
                return n.map(function(e) {
                    e.discontinuityStarts = Et(e.segments, "discontinuity");
                    return e
                })
            };
            var Mt = function e(t, n) {
                var i = Nt(t.sidx);
                var r = i && n[i] && n[i].sidx;
                if (r) {
                    Dt(t, r, t.sidx.resolvedUri)
                }
                return t
            };
            var Ut = function e(t, n) {
                if (n === void 0) {
                    n = {}
                }
                if (!Object.keys(n).length) {
                    return t
                }
                for (var i in t) {
                    t[i] = Mt(t[i], n)
                }
                return t
            };
            var Bt = function e(t, n) {
                var i;
                var r = t.attributes
                  , a = t.segments
                  , s = t.sidx;
                var o = {
                    attributes: (i = {
                        NAME: r.id,
                        BANDWIDTH: r.bandwidth,
                        CODECS: r.codecs
                    },
                    i["PROGRAM-ID"] = 1,
                    i),
                    uri: "",
                    endList: (r.type || "static") === "static",
                    timeline: r.periodIndex,
                    resolvedUri: "",
                    targetDuration: r.duration,
                    segments: a,
                    mediaSequence: a.length ? a[0].number : 1
                };
                if (r.contentProtection) {
                    o.contentProtection = r.contentProtection
                }
                if (s) {
                    o.sidx = s
                }
                if (n) {
                    o.attributes.AUDIO = "audio";
                    o.attributes.SUBTITLES = "subs"
                }
                return o
            };
            var Ft = function e(t) {
                var n;
                var i = t.attributes
                  , r = t.segments;
                if (typeof r === "undefined") {
                    r = [{
                        uri: i.baseUrl,
                        timeline: i.periodIndex,
                        resolvedUri: i.baseUrl || "",
                        duration: i.sourceDuration,
                        number: 0
                    }];
                    i.duration = i.sourceDuration
                }
                var a = (n = {
                    NAME: i.id,
                    BANDWIDTH: i.bandwidth
                },
                n["PROGRAM-ID"] = 1,
                n);
                if (i.codecs) {
                    a.CODECS = i.codecs
                }
                return {
                    attributes: a,
                    uri: "",
                    endList: (i.type || "static") === "static",
                    timeline: i.periodIndex,
                    resolvedUri: i.baseUrl || "",
                    targetDuration: i.duration,
                    segments: r,
                    mediaSequence: r.length ? r[0].number : 1
                }
            };
            var Vt = function e(t, n, i) {
                if (n === void 0) {
                    n = {}
                }
                if (i === void 0) {
                    i = false
                }
                var r;
                var a = t.reduce(function(e, t) {
                    var a = t.attributes.role && t.attributes.role.value || "";
                    var s = t.attributes.lang || "";
                    var o = t.attributes.label || "main";
                    if (s && !t.attributes.label) {
                        var u = a ? " (" + a + ")" : "";
                        o = "" + t.attributes.lang + u
                    }
                    if (!e[o]) {
                        e[o] = {
                            language: s,
                            autoselect: true,
                            default: a === "main",
                            playlists: [],
                            uri: ""
                        }
                    }
                    var l = Mt(Bt(t, i), n);
                    e[o].playlists.push(l);
                    if (typeof r === "undefined" && a === "main") {
                        r = t;
                        r.default = true
                    }
                    return e
                }, {});
                if (!r) {
                    var s = Object.keys(a)[0];
                    a[s].default = true
                }
                return a
            };
            var qt = function e(t, n) {
                if (n === void 0) {
                    n = {}
                }
                return t.reduce(function(e, t) {
                    var i = t.attributes.lang || "text";
                    if (!e[i]) {
                        e[i] = {
                            language: i,
                            default: false,
                            autoselect: false,
                            playlists: [],
                            uri: ""
                        }
                    }
                    e[i].playlists.push(Mt(Ft(t), n));
                    return e
                }, {})
            };
            var Ht = function e(t) {
                var n;
                var i = t.attributes
                  , r = t.segments
                  , a = t.sidx;
                var s = {
                    attributes: (n = {
                        NAME: i.id,
                        AUDIO: "audio",
                        SUBTITLES: "subs",
                        RESOLUTION: {
                            width: i.width,
                            height: i.height
                        },
                        CODECS: i.codecs,
                        BANDWIDTH: i.bandwidth
                    },
                    n["PROGRAM-ID"] = 1,
                    n),
                    uri: "",
                    endList: (i.type || "static") === "static",
                    timeline: i.periodIndex,
                    resolvedUri: "",
                    targetDuration: i.duration,
                    segments: r,
                    mediaSequence: r.length ? r[0].number : 1
                };
                if (i.contentProtection) {
                    s.contentProtection = i.contentProtection
                }
                if (a) {
                    s.sidx = a
                }
                return s
            };
            var Gt = function e(t) {
                var n = t.attributes;
                return n.mimeType === "video/mp4" || n.mimeType === "video/webm" || n.contentType === "video"
            };
            var Wt = function e(t) {
                var n = t.attributes;
                return n.mimeType === "audio/mp4" || n.mimeType === "audio/webm" || n.contentType === "audio"
            };
            var Kt = function e(t) {
                var n = t.attributes;
                return n.mimeType === "text/vtt" || n.contentType === "text"
            };
            var zt = function e(t, n, i) {
                var r;
                if (i === void 0) {
                    i = {}
                }
                if (!t.length) {
                    return {}
                }
                var a = t[0].attributes
                  , s = a.sourceDuration
                  , o = a.type
                  , u = o === void 0 ? "static" : o
                  , l = a.suggestedPresentationDelay
                  , d = a.minimumUpdatePeriod;
                var c = Rt(t.filter(Gt)).map(Ht);
                var f = Rt(t.filter(Wt));
                var p = t.filter(Kt);
                var h = {
                    allowCache: true,
                    discontinuityStarts: [],
                    segments: [],
                    endList: true,
                    mediaGroups: (r = {
                        AUDIO: {},
                        VIDEO: {}
                    },
                    r["CLOSED-CAPTIONS"] = {},
                    r.SUBTITLES = {},
                    r),
                    uri: "",
                    duration: s,
                    playlists: Ut(c, i)
                };
                if (d >= 0) {
                    h.minimumUpdatePeriod = d * 1e3
                }
                if (n) {
                    h.locations = n
                }
                if (u === "dynamic") {
                    h.suggestedPresentationDelay = l
                }
                var v = h.playlists.length === 0;
                if (f.length) {
                    h.mediaGroups.AUDIO.audio = Vt(f, i, v)
                }
                if (p.length) {
                    h.mediaGroups.SUBTITLES.subs = qt(p, i)
                }
                return h
            };
            var Yt = function e(t, n, i) {
                var r = t.NOW
                  , a = t.clientOffset
                  , s = t.availabilityStartTime
                  , o = t.timescale
                  , u = o === void 0 ? 1 : o
                  , l = t.start
                  , d = l === void 0 ? 0 : l
                  , c = t.minimumUpdatePeriod
                  , f = c === void 0 ? 0 : c;
                var p = (r + a) / 1e3;
                var h = s + d;
                var v = p + f;
                var g = v - h;
                return Math.ceil((g * u - n) / i)
            };
            var Xt = function e(t, n) {
                var i = t.type
                  , r = i === void 0 ? "static" : i
                  , a = t.minimumUpdatePeriod
                  , s = a === void 0 ? 0 : a
                  , o = t.media
                  , u = o === void 0 ? "" : o
                  , l = t.sourceDuration
                  , d = t.timescale
                  , c = d === void 0 ? 1 : d
                  , f = t.startNumber
                  , p = f === void 0 ? 1 : f
                  , h = t.periodIndex;
                var v = [];
                var g = -1;
                for (var m = 0; m < n.length; m++) {
                    var y = n[m];
                    var _ = y.d;
                    var b = y.r || 0;
                    var S = y.t || 0;
                    if (g < 0) {
                        g = S
                    }
                    if (S && S > g) {
                        g = S
                    }
                    var A = void 0;
                    if (b < 0) {
                        var T = m + 1;
                        if (T === n.length) {
                            if (r === "dynamic" && s > 0 && u.indexOf("$Number$") > 0) {
                                A = Yt(t, g, _)
                            } else {
                                A = (l * c - g) / _
                            }
                        } else {
                            A = (n[T].t - g) / _
                        }
                    } else {
                        A = b + 1
                    }
                    var k = p + v.length + A;
                    var E = p + v.length;
                    while (E < k) {
                        v.push({
                            number: E,
                            duration: _ / c,
                            time: g,
                            timeline: h
                        });
                        g += _;
                        E++
                    }
                }
                return v
            };
            var Qt = /\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g;
            var Zt = function e(t) {
                return function(e, n, i, r) {
                    if (e === "$$") {
                        return "$"
                    }
                    if (typeof t[n] === "undefined") {
                        return e
                    }
                    var a = "" + t[n];
                    if (n === "RepresentationID") {
                        return a
                    }
                    if (!i) {
                        r = 1
                    } else {
                        r = parseInt(r, 10)
                    }
                    if (a.length >= r) {
                        return a
                    }
                    return "" + new Array(r - a.length + 1).join("0") + a
                }
            };
            var Jt = function e(t, n) {
                return t.replace(Qt, Zt(n))
            };
            var $t = function e(t, n) {
                if (!t.duration && !n) {
                    return [{
                        number: t.startNumber || 1,
                        duration: t.sourceDuration,
                        time: 0,
                        timeline: t.periodIndex
                    }]
                }
                if (t.duration) {
                    return Ot(t)
                }
                return Xt(t, n)
            };
            var en = function e(t, n) {
                var i = {
                    RepresentationID: t.id,
                    Bandwidth: t.bandwidth || 0
                };
                var r = t.initialization
                  , a = r === void 0 ? {
                    sourceURL: "",
                    range: ""
                } : r;
                var s = It({
                    baseUrl: t.baseUrl,
                    source: Jt(a.sourceURL, i),
                    range: a.range
                });
                var o = $t(t, n);
                return o.map(function(e) {
                    i.Number = e.number;
                    i.Time = e.time;
                    var n = Jt(t.media || "", i);
                    var r = {
                        uri: n,
                        timeline: e.timeline,
                        duration: e.duration,
                        resolvedUri: v(t.baseUrl || "", n),
                        map: s,
                        number: e.number
                    };
                    if (t.presentationTimeOffset) {
                        r.presentationTimeOffset = t.presentationTimeOffset
                    }
                    return r
                })
            };
            var tn = function e(t, n) {
                var i = t.baseUrl
                  , r = t.initialization
                  , a = r === void 0 ? {} : r;
                var s = It({
                    baseUrl: i,
                    source: a.sourceURL,
                    range: a.range
                });
                var o = It({
                    baseUrl: i,
                    source: n.media,
                    range: n.mediaRange
                });
                o.map = s;
                return o
            };
            var nn = function e(t, n) {
                var i = t.duration
                  , r = t.segmentUrls
                  , a = r === void 0 ? [] : r;
                if (!i && !n || i && n) {
                    throw new Error(Pt.SEGMENT_TIME_UNSPECIFIED)
                }
                var s = a.map(function(e) {
                    return tn(t, e)
                });
                var o;
                if (i) {
                    o = Ot(t)
                }
                if (n) {
                    o = Xt(t, n)
                }
                var u = o.map(function(e, t) {
                    if (s[t]) {
                        var n = s[t];
                        n.timeline = e.timeline;
                        n.duration = e.duration;
                        n.number = e.number;
                        return n
                    }
                }).filter(function(e) {
                    return e
                });
                return u
            };
            var rn = function e(t) {
                var n = t.attributes
                  , i = t.segmentInfo;
                var r;
                var a;
                if (i.template) {
                    a = en;
                    r = bt(n, i.template);
                    if (i.template.presentationTimeOffset) {
                        r.presentationTimeOffset = i.template.presentationTimeOffset / i.template.timescale
                    }
                } else if (i.base) {
                    a = xt;
                    r = bt(n, i.base)
                } else if (i.list) {
                    a = nn;
                    r = bt(n, i.list)
                }
                var s = {
                    attributes: n
                };
                if (!a) {
                    return s
                }
                var o = a(r, i.timeline);
                if (r.duration) {
                    var u = r
                      , l = u.duration
                      , d = u.timescale
                      , c = d === void 0 ? 1 : d;
                    r.duration = l / c
                } else if (o.length) {
                    r.duration = o.reduce(function(e, t) {
                        return Math.max(e, Math.ceil(t.duration))
                    }, 0)
                } else {
                    r.duration = 0
                }
                s.attributes = r;
                s.segments = o;
                if (i.base && r.indexRange) {
                    s.sidx = o[0];
                    s.segments = []
                }
                return s
            };
            var an = function e(t) {
                return t.map(rn)
            };
            var sn = function e(t, n) {
                return kt(t.childNodes).filter(function(e) {
                    var t = e.tagName;
                    return t === n
                })
            };
            var on = function e(t) {
                return t.textContent.trim()
            };
            var un = function e(t) {
                var n = 365 * 24 * 60 * 60;
                var i = 30 * 24 * 60 * 60;
                var r = 24 * 60 * 60;
                var a = 60 * 60;
                var s = 60;
                var o = /P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/;
                var u = o.exec(t);
                if (!u) {
                    return 0
                }
                var l = u.slice(1)
                  , d = l[0]
                  , c = l[1]
                  , f = l[2]
                  , p = l[3]
                  , h = l[4]
                  , v = l[5];
                return parseFloat(d || 0) * n + parseFloat(c || 0) * i + parseFloat(f || 0) * r + parseFloat(p || 0) * a + parseFloat(h || 0) * s + parseFloat(v || 0)
            };
            var ln = function e(t) {
                var n = /^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/;
                if (n.test(t)) {
                    t += "Z"
                }
                return Date.parse(t)
            };
            var dn = {
                mediaPresentationDuration: function e(t) {
                    return un(t)
                },
                availabilityStartTime: function e(t) {
                    return ln(t) / 1e3
                },
                minimumUpdatePeriod: function e(t) {
                    return un(t)
                },
                suggestedPresentationDelay: function e(t) {
                    return un(t)
                },
                type: function e(t) {
                    return t
                },
                timeShiftBufferDepth: function e(t) {
                    return un(t)
                },
                start: function e(t) {
                    return un(t)
                },
                width: function e(t) {
                    return parseInt(t, 10)
                },
                height: function e(t) {
                    return parseInt(t, 10)
                },
                bandwidth: function e(t) {
                    return parseInt(t, 10)
                },
                startNumber: function e(t) {
                    return parseInt(t, 10)
                },
                timescale: function e(t) {
                    return parseInt(t, 10)
                },
                presentationTimeOffset: function e(t) {
                    return parseInt(t, 10)
                },
                duration: function e(t) {
                    var n = parseInt(t, 10);
                    if (isNaN(n)) {
                        return un(t)
                    }
                    return n
                },
                d: function e(t) {
                    return parseInt(t, 10)
                },
                t: function e(t) {
                    return parseInt(t, 10)
                },
                r: function e(t) {
                    return parseInt(t, 10)
                },
                DEFAULT: function e(t) {
                    return t
                }
            };
            var cn = function e(t) {
                if (!(t && t.attributes)) {
                    return {}
                }
                return kt(t.attributes).reduce(function(e, t) {
                    var n = dn[t.name] || dn.DEFAULT;
                    e[t.name] = n(t.value);
                    return e
                }, {})
            };
            var fn = {
                "urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b": "org.w3.clearkey",
                "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed": "com.widevine.alpha",
                "urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95": "com.microsoft.playready",
                "urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb": "com.adobe.primetime"
            };
            var pn = function e(t, n) {
                if (!n.length) {
                    return t
                }
                return Tt(t.map(function(e) {
                    return n.map(function(t) {
                        return v(e, on(t))
                    })
                }))
            };
            var hn = function e(t) {
                var n = sn(t, "SegmentTemplate")[0];
                var i = sn(t, "SegmentList")[0];
                var r = i && sn(i, "SegmentURL").map(function(e) {
                    return bt({
                        tag: "SegmentURL"
                    }, cn(e))
                });
                var a = sn(t, "SegmentBase")[0];
                var s = i || n;
                var o = s && sn(s, "SegmentTimeline")[0];
                var u = i || a || n;
                var l = u && sn(u, "Initialization")[0];
                var d = n && cn(n);
                if (d && l) {
                    d.initialization = l && cn(l)
                } else if (d && d.initialization) {
                    d.initialization = {
                        sourceURL: d.initialization
                    }
                }
                var c = {
                    template: d,
                    timeline: o && sn(o, "S").map(function(e) {
                        return cn(e)
                    }),
                    list: i && bt(cn(i), {
                        segmentUrls: r,
                        initialization: cn(l)
                    }),
                    base: a && bt(cn(a), {
                        initialization: cn(l)
                    })
                };
                Object.keys(c).forEach(function(e) {
                    if (!c[e]) {
                        delete c[e]
                    }
                });
                return c
            };
            var vn = function e(t, n, i) {
                return function(e) {
                    var r = sn(e, "BaseURL");
                    var a = pn(n, r);
                    var s = bt(t, cn(e));
                    var o = hn(e);
                    return a.map(function(e) {
                        return {
                            segmentInfo: bt(i, o),
                            attributes: bt(s, {
                                baseUrl: e
                            })
                        }
                    })
                }
            };
            var gn = function e(t) {
                return t.reduce(function(e, t) {
                    var n = cn(t);
                    var i = fn[n.schemeIdUri];
                    if (i) {
                        e[i] = {
                            attributes: n
                        };
                        var r = sn(t, "cenc:pssh")[0];
                        if (r) {
                            var a = on(r);
                            var s = a && A(a);
                            e[i].pssh = s
                        }
                    }
                    return e
                }, {})
            };
            var mn = function e(t, n, i) {
                return function(e) {
                    var r = cn(e);
                    var a = pn(n, sn(e, "BaseURL"));
                    var s = sn(e, "Role")[0];
                    var o = {
                        role: cn(s)
                    };
                    var u = bt(t, r, o);
                    var l = sn(e, "Label")[0];
                    if (l && l.childNodes.length) {
                        var d = l.childNodes[0].nodeValue.trim();
                        u = bt(u, {
                            label: d
                        })
                    }
                    var c = gn(sn(e, "ContentProtection"));
                    if (Object.keys(c).length) {
                        u = bt(u, {
                            contentProtection: c
                        })
                    }
                    var f = hn(e);
                    var p = sn(e, "Representation");
                    var h = bt(i, f);
                    return Tt(p.map(vn(u, a, h)))
                }
            };
            var yn = function e(t, n) {
                return function(e, i) {
                    var r = pn(n, sn(e, "BaseURL"));
                    var a = cn(e);
                    var s = parseInt(a.id, 10);
                    var u = o["default"].isNaN(s) ? i : s;
                    var l = bt(t, {
                        periodIndex: u
                    });
                    var d = sn(e, "AdaptationSet");
                    var c = hn(e);
                    return Tt(d.map(mn(l, r, c)))
                }
            };
            var _n = function e(t, n) {
                if (n === void 0) {
                    n = {}
                }
                var i = n
                  , r = i.manifestUri
                  , a = r === void 0 ? "" : r
                  , s = i.NOW
                  , o = s === void 0 ? Date.now() : s
                  , u = i.clientOffset
                  , l = u === void 0 ? 0 : u;
                var d = sn(t, "Period");
                if (!d.length) {
                    throw new Error(Pt.INVALID_NUMBER_OF_PERIOD)
                }
                var c = sn(t, "Location");
                var f = cn(t);
                var p = pn([a], sn(t, "BaseURL"));
                f.sourceDuration = f.mediaPresentationDuration || 0;
                f.NOW = o;
                f.clientOffset = l;
                if (c.length) {
                    f.locations = c.map(on)
                }
                return {
                    locations: f.locations,
                    representationInfo: Tt(d.map(yn(f, p)))
                }
            };
            var bn = function e(t) {
                if (t === "") {
                    throw new Error(Pt.DASH_EMPTY_MANIFEST)
                }
                var n = new r.DOMParser;
                var i;
                var a;
                try {
                    i = n.parseFromString(t, "application/xml");
                    a = i && i.documentElement.tagName === "MPD" ? i.documentElement : null
                } catch (e) {}
                if (!a || a && a.getElementsByTagName("parsererror").length > 0) {
                    throw new Error(Pt.DASH_INVALID_XML)
                }
                return a
            };
            var Sn = function e(t) {
                var n = sn(t, "UTCTiming")[0];
                if (!n) {
                    return null
                }
                var i = cn(n);
                switch (i.schemeIdUri) {
                case "urn:mpeg:dash:utc:http-head:2014":
                case "urn:mpeg:dash:utc:http-head:2012":
                    i.method = "HEAD";
                    break;
                case "urn:mpeg:dash:utc:http-xsdate:2014":
                case "urn:mpeg:dash:utc:http-iso:2014":
                case "urn:mpeg:dash:utc:http-xsdate:2012":
                case "urn:mpeg:dash:utc:http-iso:2012":
                    i.method = "GET";
                    break;
                case "urn:mpeg:dash:utc:direct:2014":
                case "urn:mpeg:dash:utc:direct:2012":
                    i.method = "DIRECT";
                    i.value = Date.parse(i.value);
                    break;
                case "urn:mpeg:dash:utc:http-ntp:2014":
                case "urn:mpeg:dash:utc:ntp:2014":
                case "urn:mpeg:dash:utc:sntp:2014":
                default:
                    throw new Error(Pt.UNSUPPORTED_UTC_TIMING_SCHEME)
                }
                return i
            };
            var An = function e(t, n) {
                if (n === void 0) {
                    n = {}
                }
                var i = _n(bn(t), n);
                var r = an(i.representationInfo);
                return zt(r, i.locations, n.sidxMapping)
            };
            var Tn = function e(t) {
                return Sn(bn(t))
            };
            var kn = Math.pow(2, 32);
            var En = function e(t) {
                var n = new DataView(t.buffer,t.byteOffset,t.byteLength)
                  , i = {
                    version: t[0],
                    flags: new Uint8Array(t.subarray(1, 4)),
                    references: [],
                    referenceId: n.getUint32(4),
                    timescale: n.getUint32(8)
                }
                  , r = 12;
                if (i.version === 0) {
                    i.earliestPresentationTime = n.getUint32(r);
                    i.firstOffset = n.getUint32(r + 4);
                    r += 8
                } else {
                    i.earliestPresentationTime = n.getUint32(r) * kn + n.getUint32(r + 4);
                    i.firstOffset = n.getUint32(r + 8) * kn + n.getUint32(r + 12);
                    r += 16
                }
                r += 2;
                var a = n.getUint16(r);
                r += 2;
                for (; a > 0; r += 12,
                a--) {
                    i.references.push({
                        referenceType: (t[r] & 128) >>> 7,
                        referencedSize: n.getUint32(r) & 2147483647,
                        subsegmentDuration: n.getUint32(r + 4),
                        startsWithSap: !!(t[r + 8] & 128),
                        sapType: (t[r + 8] & 112) >>> 4,
                        sapDeltaTime: n.getUint32(r + 8) & 268435455
                    })
                }
                return i
            };
            var Pn = En;
            var In = function e(t) {
                return t.toString(2).length
            };
            var Cn = function e(t) {
                return Math.ceil(In(t) / 8)
            };
            var wn = function e(t) {
                return ArrayBuffer.isView(t)
            };
            var jn = function e(t) {
                if (t instanceof Uint8Array) {
                    return t
                }
                if (!Array.isArray(t) && !wn(t) && !(t instanceof ArrayBuffer)) {
                    if (typeof t !== "number" || typeof t === "number" && t !== t) {
                        t = 0
                    } else {
                        t = [t]
                    }
                }
                return new Uint8Array(t && t.buffer || t,t && t.byteOffset || 0,t && t.byteLength || 0)
            };
            var Ln = o["default"].BigInt || Number;
            var On = [Ln("0x1"), Ln("0x100"), Ln("0x10000"), Ln("0x1000000"), Ln("0x100000000"), Ln("0x10000000000"), Ln("0x1000000000000"), Ln("0x100000000000000"), Ln("0x10000000000000000")];
            var xn = function e(t, n) {
                var i = n === void 0 ? {} : n
                  , r = i.signed
                  , a = r === void 0 ? false : r
                  , s = i.le
                  , o = s === void 0 ? false : s;
                t = jn(t);
                var u = o ? "reduce" : "reduceRight";
                var l = t[u] ? t[u] : Array.prototype[u];
                var d = l.call(t, function(e, n, i) {
                    var r = o ? i : Math.abs(i + 1 - t.length);
                    return e + Ln(n) * On[r]
                }, Ln(0));
                if (a) {
                    var c = On[t.length] / Ln(2) - Ln(1);
                    d = Ln(d);
                    if (d > c) {
                        d -= c;
                        d -= c;
                        d -= Ln(2)
                    }
                }
                return Number(d)
            };
            var Dn = function e(t, n) {
                var i = n === void 0 ? {} : n
                  , r = i.le
                  , a = r === void 0 ? false : r;
                if (typeof t !== "bigint" && typeof t !== "number" || typeof t === "number" && t !== t) {
                    t = 0
                }
                t = Ln(t);
                var s = Cn(t);
                var o = new Uint8Array(new ArrayBuffer(s));
                for (var u = 0; u < s; u++) {
                    var l = a ? u : Math.abs(u + 1 - o.length);
                    o[l] = Number(t / On[u] & Ln(255));
                    if (t < 0) {
                        o[l] = Math.abs(~o[l]);
                        o[l] -= u === 0 ? 1 : 2
                    }
                }
                return o
            };
            var Nn = function e(t, n) {
                if (typeof t !== "string" && t && typeof t.toString === "function") {
                    t = t.toString()
                }
                if (typeof t !== "string") {
                    return new Uint8Array
                }
                if (!n) {
                    t = unescape(encodeURIComponent(t))
                }
                var i = new Uint8Array(t.length);
                for (var r = 0; r < t.length; r++) {
                    i[r] = t.charCodeAt(r)
                }
                return i
            };
            var Rn = function e() {
                for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
                    n[i] = arguments[i]
                }
                n = n.filter(function(e) {
                    return e && (e.byteLength || e.length) && typeof e !== "string"
                });
                if (n.length <= 1) {
                    return jn(n[0])
                }
                var r = n.reduce(function(e, t, n) {
                    return e + (t.byteLength || t.length)
                }, 0);
                var a = new Uint8Array(r);
                var s = 0;
                n.forEach(function(e) {
                    e = jn(e);
                    a.set(e, s);
                    s += e.byteLength
                });
                return a
            };
            var Mn = function e(t, n, i) {
                var r = i === void 0 ? {} : i
                  , a = r.offset
                  , s = a === void 0 ? 0 : a
                  , o = r.mask
                  , u = o === void 0 ? [] : o;
                t = jn(t);
                n = jn(n);
                var l = n.every ? n.every : Array.prototype.every;
                return n.length && t.length - s >= n.length && l.call(n, function(e, n) {
                    var i = u[n] ? u[n] & t[s + n] : t[s + n];
                    return e === i
                })
            };
            var Un = jn([73, 68, 51]);
            var Bn = function e(t, n) {
                if (n === void 0) {
                    n = 0
                }
                t = jn(t);
                var i = t[n + 5];
                var r = t[n + 6] << 21 | t[n + 7] << 14 | t[n + 8] << 7 | t[n + 9];
                var a = (i & 16) >> 4;
                if (a) {
                    return r + 20
                }
                return r + 10
            };
            var Fn = function e(t, n) {
                if (n === void 0) {
                    n = 0
                }
                t = jn(t);
                if (t.length - n < 10 || !Mn(t, Un, {
                    offset: n
                })) {
                    return n
                }
                n += Bn(t, n);
                return e(t, n)
            };
            var Vn = function e(t) {
                if (typeof t === "string") {
                    return Nn(t)
                }
                if (typeof t === "number") {
                    return t
                }
                return t
            };
            var qn = function e(t) {
                if (!Array.isArray(t)) {
                    return [Vn(t)]
                }
                return t.map(function(e) {
                    return Vn(e)
                })
            };
            var Hn = function e(t, n, i) {
                if (i === void 0) {
                    i = false
                }
                n = qn(n);
                t = jn(t);
                var r = [];
                if (!n.length) {
                    return r
                }
                var a = 0;
                while (a < t.length) {
                    var s = (t[a] << 24 | t[a + 1] << 16 | t[a + 2] << 8 | t[a + 3]) >>> 0;
                    var o = t.subarray(a + 4, a + 8);
                    if (s === 0) {
                        break
                    }
                    var u = a + s;
                    if (u > t.length) {
                        if (i) {
                            break
                        }
                        u = t.length
                    }
                    var l = t.subarray(a + 8, u);
                    if (Mn(o, n[0])) {
                        if (n.length === 1) {
                            r.push(l)
                        } else {
                            r.push.apply(r, e(l, n.slice(1), i))
                        }
                    }
                    a = u
                }
                return r
            };
            var Gn = {
                EBML: jn([26, 69, 223, 163]),
                DocType: jn([66, 130]),
                Segment: jn([24, 83, 128, 103]),
                SegmentInfo: jn([21, 73, 169, 102]),
                Tracks: jn([22, 84, 174, 107]),
                Track: jn([174]),
                TrackNumber: jn([215]),
                DefaultDuration: jn([35, 227, 131]),
                TrackEntry: jn([174]),
                TrackType: jn([131]),
                FlagDefault: jn([136]),
                CodecID: jn([134]),
                CodecPrivate: jn([99, 162]),
                VideoTrack: jn([224]),
                AudioTrack: jn([225]),
                Cluster: jn([31, 67, 182, 117]),
                Timestamp: jn([231]),
                TimestampScale: jn([42, 215, 177]),
                BlockGroup: jn([160]),
                BlockDuration: jn([155]),
                Block: jn([161]),
                SimpleBlock: jn([163])
            };
            var Wn = [128, 64, 32, 16, 8, 4, 2, 1];
            var Kn = function e(t) {
                var n = 1;
                for (var i = 0; i < Wn.length; i++) {
                    if (t & Wn[i]) {
                        break
                    }
                    n++
                }
                return n
            };
            var zn = function e(t, n, i, r) {
                if (i === void 0) {
                    i = true
                }
                if (r === void 0) {
                    r = false
                }
                var a = Kn(t[n]);
                var s = t.subarray(n, n + a);
                if (i) {
                    s = Array.prototype.slice.call(t, n, n + a);
                    s[0] ^= Wn[a - 1]
                }
                return {
                    length: a,
                    value: xn(s, {
                        signed: r
                    }),
                    bytes: s
                }
            };
            var Yn = function e(t) {
                if (typeof t === "string") {
                    return t.match(/.{1,2}/g).map(function(t) {
                        return e(t)
                    })
                }
                if (typeof t === "number") {
                    return Dn(t)
                }
                return t
            };
            var Xn = function e(t) {
                if (!Array.isArray(t)) {
                    return [Yn(t)]
                }
                return t.map(function(e) {
                    return Yn(e)
                })
            };
            var Qn = function e(t, n, i) {
                if (i >= n.length) {
                    return n.length
                }
                var r = zn(n, i, false);
                if (Mn(t.bytes, r.bytes)) {
                    return i
                }
                var a = zn(n, i + r.length);
                return e(t, n, i + a.length + a.value + r.length)
            };
            var Zn = function e(t, n) {
                n = Xn(n);
                t = jn(t);
                var i = [];
                if (!n.length) {
                    return i
                }
                var r = 0;
                while (r < t.length) {
                    var a = zn(t, r, false);
                    var s = zn(t, r + a.length);
                    var o = r + a.length + s.length;
                    if (s.value === 127) {
                        s.value = Qn(a, t, o);
                        if (s.value !== t.length) {
                            s.value -= o
                        }
                    }
                    var u = o + s.value > t.length ? t.length : o + s.value;
                    var l = t.subarray(o, u);
                    if (Mn(n[0], a.bytes)) {
                        if (n.length === 1) {
                            i.push(l)
                        } else {
                            i = i.concat(e(l, n.slice(1)))
                        }
                    }
                    var d = a.length + s.length + l.length;
                    r += d
                }
                return i
            };
            var Jn = jn([0, 0, 0, 1]);
            var $n = jn([0, 0, 1]);
            var ei = jn([0, 0, 3]);
            var ti = function e(t) {
                var n = [];
                var i = 1;
                while (i < t.length - 2) {
                    if (Mn(t.subarray(i, i + 3), ei)) {
                        n.push(i + 2);
                        i++
                    }
                    i++
                }
                if (n.length === 0) {
                    return t
                }
                var r = t.length - n.length;
                var a = new Uint8Array(r);
                var s = 0;
                for (i = 0; i < r; s++,
                i++) {
                    if (s === n[0]) {
                        s++;
                        n.shift()
                    }
                    a[i] = t[s]
                }
                return a
            };
            var ni = function e(t, n, i, r) {
                if (r === void 0) {
                    r = Infinity
                }
                t = jn(t);
                i = [].concat(i);
                var a = 0;
                var s;
                var o = 0;
                while (a < t.length && (o < r || s)) {
                    var u = void 0;
                    if (Mn(t.subarray(a), Jn)) {
                        u = 4
                    } else if (Mn(t.subarray(a), $n)) {
                        u = 3
                    }
                    if (!u) {
                        a++;
                        continue
                    }
                    o++;
                    if (s) {
                        return ti(t.subarray(s, a))
                    }
                    var l = void 0;
                    if (n === "h264") {
                        l = t[a + u] & 31
                    } else if (n === "h265") {
                        l = t[a + u] >> 1 & 63
                    }
                    if (i.indexOf(l) !== -1) {
                        s = a + u
                    }
                    a += u + (n === "h264" ? 1 : 2)
                }
                return t.subarray(0, 0)
            };
            var ii = function e(t, n, i) {
                return ni(t, "h264", n, i)
            };
            var ri = function e(t, n, i) {
                return ni(t, "h265", n, i)
            };
            var ai = {
                webm: jn([119, 101, 98, 109]),
                matroska: jn([109, 97, 116, 114, 111, 115, 107, 97]),
                flac: jn([102, 76, 97, 67]),
                ogg: jn([79, 103, 103, 83]),
                ac3: jn([11, 119]),
                riff: jn([82, 73, 70, 70]),
                avi: jn([65, 86, 73]),
                wav: jn([87, 65, 86, 69]),
                "3gp": jn([102, 116, 121, 112, 51, 103]),
                mp4: jn([102, 116, 121, 112]),
                fmp4: jn([115, 116, 121, 112]),
                mov: jn([102, 116, 121, 112, 113, 116])
            };
            var si = {
                aac: function e(t) {
                    var n = Fn(t);
                    return Mn(t, [255, 16], {
                        offset: n,
                        mask: [255, 22]
                    })
                },
                mp3: function e(t) {
                    var n = Fn(t);
                    return Mn(t, [255, 2], {
                        offset: n,
                        mask: [255, 6]
                    })
                },
                webm: function e(t) {
                    var n = Zn(t, [Gn.EBML, Gn.DocType])[0];
                    return Mn(n, ai.webm)
                },
                mkv: function e(t) {
                    var n = Zn(t, [Gn.EBML, Gn.DocType])[0];
                    return Mn(n, ai.matroska)
                },
                mp4: function e(t) {
                    return !si["3gp"](t) && !si.mov(t) && (Mn(t, ai.mp4, {
                        offset: 4
                    }) || Mn(t, ai.fmp4, {
                        offset: 4
                    }))
                },
                mov: function e(t) {
                    return Mn(t, ai.mov, {
                        offset: 4
                    })
                },
                "3gp": function e(t) {
                    return Mn(t, ai["3gp"], {
                        offset: 4
                    })
                },
                ac3: function e(t) {
                    var n = Fn(t);
                    return Mn(t, ai.ac3, {
                        offset: n
                    })
                },
                ts: function e(t) {
                    if (t.length < 189 && t.length >= 1) {
                        return t[0] === 71
                    }
                    var n = 0;
                    while (n + 188 < t.length && n < 188) {
                        if (t[n] === 71 && t[n + 188] === 71) {
                            return true
                        }
                        n += 1
                    }
                    return false
                },
                flac: function e(t) {
                    var n = Fn(t);
                    return Mn(t, ai.flac, {
                        offset: n
                    })
                },
                ogg: function e(t) {
                    return Mn(t, ai.ogg)
                },
                avi: function e(t) {
                    return Mn(t, ai.riff) && Mn(t, ai.avi, {
                        offset: 8
                    })
                },
                wav: function e(t) {
                    return Mn(t, ai.riff) && Mn(t, ai.wav, {
                        offset: 8
                    })
                },
                h264: function e(t) {
                    return ii(t, 7, 3).length
                },
                h265: function e(t) {
                    return ri(t, [32, 33], 3).length
                }
            };
            var oi = Object.keys(si).filter(function(e) {
                return e !== "ts" && e !== "h264" && e !== "h265"
            }).concat(["ts", "h264", "h265"]);
            oi.forEach(function(e) {
                var t = si[e];
                si[e] = function(e) {
                    return t(jn(e))
                }
            });
            var ui = si;
            var li = function e(t) {
                t = jn(t);
                for (var n = 0; n < oi.length; n++) {
                    var i = oi[n];
                    if (ui[i](t)) {
                        return i
                    }
                }
                return ""
            };
            var di = function e(t) {
                return Hn(t, ["moof"]).length > 0
            };
            var ci = function e(t, n) {
                if (t.readyState === 4) {
                    return n()
                }
                return
            };
            var fi = function e(t, n, i) {
                var r = [];
                var a;
                var s = false;
                var o = function e(t, n, r, a) {
                    n.abort();
                    s = true;
                    return i(t, n, r, a)
                };
                var u = function e(t, n) {
                    if (s) {
                        return
                    }
                    if (t) {
                        return o(t, n, "", r)
                    }
                    var i = n.responseText.substring(r && r.byteLength || 0, n.responseText.length);
                    r = Rn(r, Nn(i, true));
                    a = a || Fn(r);
                    if (r.length < 10 || a && r.length < a + 2) {
                        return ci(n, function() {
                            return o(t, n, "", r)
                        })
                    }
                    var u = li(r);
                    if (u === "ts" && r.length < 188) {
                        return ci(n, function() {
                            return o(t, n, "", r)
                        })
                    }
                    if (!u && r.length < 376) {
                        return ci(n, function() {
                            return o(t, n, "", r)
                        })
                    }
                    return o(null, n, u, r)
                };
                var l = {
                    uri: t,
                    beforeSend: function e(t) {
                        t.overrideMimeType("text/plain; charset=x-user-defined");
                        t.addEventListener("progress", function(e) {
                            e.total;
                            e.loaded;
                            return ze(t, null, {
                                statusCode: t.status
                            }, u)
                        })
                    }
                };
                var d = n(l, function(e, t) {
                    return ze(d, e, t, u)
                });
                return d
            };
            var pi = u["default"].EventTarget
              , hi = u["default"].mergeOptions;
            var vi = function e(t, n) {
                if (!Y(t, n)) {
                    return false
                }
                if (t.sidx && n.sidx && (t.sidx.offset !== n.sidx.offset || t.sidx.length !== n.sidx.length)) {
                    return false
                } else if (!t.sidx && n.sidx || t.sidx && !n.sidx) {
                    return false
                }
                if (t.segments && !n.segments || !t.segments && n.segments) {
                    return false
                }
                if (!t.segments && !n.segments) {
                    return true
                }
                for (var i = 0; i < t.segments.length; i++) {
                    var r = t.segments[i];
                    var a = n.segments[i];
                    if (r.uri !== a.uri) {
                        return false
                    }
                    if (!r.byterange && !a.byterange) {
                        continue
                    }
                    var s = r.byterange;
                    var o = a.byterange;
                    if (s && !o || !s && o) {
                        return false
                    }
                    if (s.offset !== o.offset || s.length !== o.length) {
                        return false
                    }
                }
                return true
            };
            var gi = function e(t) {
                var n = t.masterXml
                  , i = t.srcUrl
                  , r = t.clientOffset
                  , a = t.sidxMapping;
                var s = An(n, {
                    manifestUri: i,
                    clientOffset: r,
                    sidxMapping: a
                });
                V(s, i);
                return s
            };
            var mi = function e(t, n, i) {
                var r = true;
                var a = hi(t, {
                    duration: n.duration,
                    minimumUpdatePeriod: n.minimumUpdatePeriod
                });
                for (var s = 0; s < n.playlists.length; s++) {
                    var o = n.playlists[s];
                    if (o.sidx) {
                        var u = Nt(o.sidx);
                        if (i && i[u]) {
                            Dt(o, i[u].sidx, o.sidx.resolvedUri)
                        }
                    }
                    var l = X(a, o, vi);
                    if (l) {
                        a = l;
                        r = false
                    }
                }
                R(n, function(e, t, n, i) {
                    if (e.playlists && e.playlists.length) {
                        var s = e.playlists[0].id;
                        var o = X(a, e.playlists[0], vi);
                        if (o) {
                            a = o;
                            a.mediaGroups[t][n][i].playlists[0] = a.playlists[s];
                            r = false
                        }
                    }
                });
                if (n.minimumUpdatePeriod !== t.minimumUpdatePeriod) {
                    r = false
                }
                if (r) {
                    return null
                }
                return a
            };
            var yi = function e(t, n) {
                var i = Boolean(!t.map && !n.map);
                var r = i || Boolean(t.map && n.map && t.map.byterange.offset === n.map.byterange.offset && t.map.byterange.length === n.map.byterange.length);
                return r && t.uri === n.uri && t.byterange.offset === n.byterange.offset && t.byterange.length === n.byterange.length
            };
            var _i = function e(t, n) {
                var i = {};
                for (var r in t) {
                    var a = t[r];
                    var s = a.sidx;
                    if (s) {
                        var o = Nt(s);
                        if (!n[o]) {
                            break
                        }
                        var u = n[o].sidxInfo;
                        if (yi(u, s)) {
                            i[o] = n[o]
                        }
                    }
                }
                return i
            };
            var bi = function e(t, n) {
                var i = _i(t.playlists, n);
                var r = i;
                R(t, function(e, t, i, a) {
                    if (e.playlists && e.playlists.length) {
                        var s = e.playlists;
                        r = hi(r, _i(s, n))
                    }
                });
                return r
            };
            var Si = function(e) {
                p(t, e);
                function t(t, n, i, r) {
                    var a;
                    if (i === void 0) {
                        i = {}
                    }
                    a = e.call(this) || this;
                    a.masterPlaylistLoader_ = r || c(a);
                    if (!r) {
                        a.isMaster_ = true
                    }
                    var s = i
                      , o = s.withCredentials
                      , u = o === void 0 ? false : o
                      , l = s.handleManifestRedirects
                      , d = l === void 0 ? false : l;
                    a.vhs_ = n;
                    a.withCredentials = u;
                    a.handleManifestRedirects = d;
                    if (!t) {
                        throw new Error("A non-empty playlist URL or object is required")
                    }
                    a.on("minimumUpdatePeriod", function() {
                        a.refreshXml_()
                    });
                    a.on("mediaupdatetimeout", function() {
                        a.refreshMedia_(a.media().id)
                    });
                    a.state = "HAVE_NOTHING";
                    a.loadedPlaylists_ = {};
                    a.logger_ = y("DashPlaylistLoader");
                    if (a.isMaster_) {
                        a.masterPlaylistLoader_.srcUrl = t;
                        a.masterPlaylistLoader_.sidxMapping_ = {}
                    } else {
                        a.childPlaylist_ = t
                    }
                    return a
                }
                var n = t.prototype;
                n.requestErrored_ = function e(t, n, i) {
                    if (!this.request) {
                        return true
                    }
                    this.request = null;
                    if (t) {
                        this.error = typeof t === "object" && !(t instanceof Error) ? t : {
                            status: n.status,
                            message: "DASH request error at URL: " + n.uri,
                            response: n.response,
                            code: 2
                        };
                        if (i) {
                            this.state = i
                        }
                        this.trigger("error");
                        return true
                    }
                }
                ;
                n.addSidxSegments_ = function e(t, n, i) {
                    var r = this;
                    var a = t.sidx && Nt(t.sidx);
                    if (!t.sidx || !a || this.masterPlaylistLoader_.sidxMapping_[a]) {
                        this.mediaRequest_ = o["default"].setTimeout(function() {
                            return i(false)
                        }, 0);
                        return
                    }
                    var s = m(this.handleManifestRedirects, t.sidx.resolvedUri);
                    var u = function e(s, o) {
                        if (r.requestErrored_(s, o, n)) {
                            return
                        }
                        var u = r.masterPlaylistLoader_.sidxMapping_;
                        var l;
                        try {
                            l = Pn(jn(o.response).subarray(8))
                        } catch (e) {
                            r.requestErrored_(e, o, n);
                            return
                        }
                        u[a] = {
                            sidxInfo: t.sidx,
                            sidx: l
                        };
                        Dt(t, l, t.sidx.resolvedUri);
                        return i(true)
                    };
                    this.request = fi(s, this.vhs_.xhr, function(e, n, i, a) {
                        if (e) {
                            return u(e, n)
                        }
                        if (!i || i !== "mp4") {
                            return u({
                                status: n.status,
                                message: "Unsupported " + (i || "unknown") + " container type for sidx segment at URL: " + s,
                                response: "",
                                playlist: t,
                                internal: true,
                                blacklistDuration: Infinity,
                                code: 2
                            }, n)
                        }
                        var o = t.sidx.byterange
                          , l = o.offset
                          , d = o.length;
                        if (a.length >= d + l) {
                            return u(e, {
                                response: a.subarray(l, l + d),
                                status: n.status,
                                uri: n.uri
                            })
                        }
                        r.request = r.vhs_.xhr({
                            uri: s,
                            responseType: "arraybuffer",
                            headers: Qe({
                                byterange: t.sidx.byterange
                            })
                        }, u)
                    })
                }
                ;
                n.dispose = function e() {
                    this.trigger("dispose");
                    this.stopRequest();
                    this.loadedPlaylists_ = {};
                    o["default"].clearTimeout(this.minimumUpdatePeriodTimeout_);
                    o["default"].clearTimeout(this.mediaRequest_);
                    o["default"].clearTimeout(this.mediaUpdateTimeout);
                    this.mediaUpdateTimeout = null;
                    this.mediaRequest_ = null;
                    this.minimumUpdatePeriodTimeout_ = null;
                    if (this.masterPlaylistLoader_.createMupOnMedia_) {
                        this.off("loadedmetadata", this.masterPlaylistLoader_.createMupOnMedia_);
                        this.masterPlaylistLoader_.createMupOnMedia_ = null
                    }
                    this.off()
                }
                ;
                n.hasPendingRequest = function e() {
                    return this.request || this.mediaRequest_
                }
                ;
                n.stopRequest = function e() {
                    if (this.request) {
                        var t = this.request;
                        this.request = null;
                        t.onreadystatechange = null;
                        t.abort()
                    }
                }
                ;
                n.media = function e(t) {
                    var n = this;
                    if (!t) {
                        return this.media_
                    }
                    if (this.state === "HAVE_NOTHING") {
                        throw new Error("Cannot switch media playlist from " + this.state)
                    }
                    var i = this.state;
                    if (typeof t === "string") {
                        if (!this.masterPlaylistLoader_.master.playlists[t]) {
                            throw new Error("Unknown playlist URI: " + t)
                        }
                        t = this.masterPlaylistLoader_.master.playlists[t]
                    }
                    var r = !this.media_ || t.id !== this.media_.id;
                    if (r && this.loadedPlaylists_[t.id] && this.loadedPlaylists_[t.id].endList) {
                        this.state = "HAVE_METADATA";
                        this.media_ = t;
                        if (r) {
                            this.trigger("mediachanging");
                            this.trigger("mediachange")
                        }
                        return
                    }
                    if (!r) {
                        return
                    }
                    if (this.media_) {
                        this.trigger("mediachanging")
                    }
                    this.addSidxSegments_(t, i, function(e) {
                        n.haveMetadata({
                            startingState: i,
                            playlist: t
                        })
                    })
                }
                ;
                n.haveMetadata = function e(t) {
                    var n = t.startingState
                      , i = t.playlist;
                    this.state = "HAVE_METADATA";
                    this.loadedPlaylists_[i.id] = i;
                    this.mediaRequest_ = null;
                    this.refreshMedia_(i.id);
                    if (n === "HAVE_MASTER") {
                        this.trigger("loadedmetadata")
                    } else {
                        this.trigger("mediachange")
                    }
                }
                ;
                n.pause = function e() {
                    if (this.masterPlaylistLoader_.createMupOnMedia_) {
                        this.off("loadedmetadata", this.masterPlaylistLoader_.createMupOnMedia_);
                        this.masterPlaylistLoader_.createMupOnMedia_ = null
                    }
                    this.stopRequest();
                    o["default"].clearTimeout(this.mediaUpdateTimeout);
                    o["default"].clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_);
                    this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;
                    this.mediaUpdateTimeout = null;
                    if (this.state === "HAVE_NOTHING") {
                        this.started = false
                    }
                }
                ;
                n.load = function e(t) {
                    var n = this;
                    o["default"].clearTimeout(this.mediaUpdateTimeout);
                    this.mediaUpdateTimeout = null;
                    var i = this.media();
                    if (t) {
                        var r = i ? i.targetDuration / 2 * 1e3 : 5 * 1e3;
                        this.mediaUpdateTimeout = o["default"].setTimeout(function() {
                            return n.load()
                        }, r);
                        return
                    }
                    if (!this.started) {
                        this.start();
                        return
                    }
                    if (i && !i.endList) {
                        this.trigger("mediaupdatetimeout")
                    } else {
                        this.trigger("loadedplaylist")
                    }
                }
                ;
                n.start = function e() {
                    var t = this;
                    this.started = true;
                    if (!this.isMaster_) {
                        this.mediaRequest_ = o["default"].setTimeout(function() {
                            return t.haveMaster_()
                        }, 0);
                        return
                    }
                    this.requestMaster_(function(e, n) {
                        t.haveMaster_();
                        if (!t.hasPendingRequest() && !t.media_) {
                            t.media(t.masterPlaylistLoader_.master.playlists[0])
                        }
                    })
                }
                ;
                n.requestMaster_ = function e(t) {
                    var n = this;
                    this.request = this.vhs_.xhr({
                        uri: this.masterPlaylistLoader_.srcUrl,
                        withCredentials: this.withCredentials
                    }, function(e, i) {
                        if (n.requestErrored_(e, i)) {
                            if (n.state === "HAVE_NOTHING") {
                                n.started = false
                            }
                            return
                        }
                        var r = i.responseText !== n.masterPlaylistLoader_.masterXml_;
                        n.masterPlaylistLoader_.masterXml_ = i.responseText;
                        if (i.responseHeaders && i.responseHeaders.date) {
                            n.masterLoaded_ = Date.parse(i.responseHeaders.date)
                        } else {
                            n.masterLoaded_ = Date.now()
                        }
                        n.masterPlaylistLoader_.srcUrl = m(n.handleManifestRedirects, n.masterPlaylistLoader_.srcUrl, i);
                        if (r) {
                            n.handleMaster_();
                            n.syncClientServerClock_(function() {
                                return t(i, r)
                            });
                            return
                        }
                        return t(i, r)
                    })
                }
                ;
                n.syncClientServerClock_ = function e(t) {
                    var n = this;
                    var i = Tn(this.masterPlaylistLoader_.masterXml_);
                    if (i === null) {
                        this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now();
                        return t()
                    }
                    if (i.method === "DIRECT") {
                        this.masterPlaylistLoader_.clientOffset_ = i.value - Date.now();
                        return t()
                    }
                    this.request = this.vhs_.xhr({
                        uri: g(this.masterPlaylistLoader_.srcUrl, i.value),
                        method: i.method,
                        withCredentials: this.withCredentials
                    }, function(e, r) {
                        if (!n.request) {
                            return
                        }
                        if (e) {
                            n.masterPlaylistLoader_.clientOffset_ = n.masterLoaded_ - Date.now();
                            return t()
                        }
                        var a;
                        if (i.method === "HEAD") {
                            if (!r.responseHeaders || !r.responseHeaders.date) {
                                a = n.masterLoaded_
                            } else {
                                a = Date.parse(r.responseHeaders.date)
                            }
                        } else {
                            a = Date.parse(r.responseText)
                        }
                        n.masterPlaylistLoader_.clientOffset_ = a - Date.now();
                        t()
                    })
                }
                ;
                n.haveMaster_ = function e() {
                    this.state = "HAVE_MASTER";
                    if (this.isMaster_) {
                        this.trigger("loadedplaylist")
                    } else if (!this.media_) {
                        this.media(this.childPlaylist_)
                    }
                }
                ;
                n.handleMaster_ = function e() {
                    this.mediaRequest_ = null;
                    var t = gi({
                        masterXml: this.masterPlaylistLoader_.masterXml_,
                        srcUrl: this.masterPlaylistLoader_.srcUrl,
                        clientOffset: this.masterPlaylistLoader_.clientOffset_,
                        sidxMapping: this.masterPlaylistLoader_.sidxMapping_
                    });
                    var n = this.masterPlaylistLoader_.master;
                    if (n) {
                        t = mi(n, t, this.masterPlaylistLoader_.sidxMapping_)
                    }
                    this.masterPlaylistLoader_.master = t ? t : n;
                    var i = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0];
                    if (i && i !== this.masterPlaylistLoader_.srcUrl) {
                        this.masterPlaylistLoader_.srcUrl = i
                    }
                    if (!n || t && t.minimumUpdatePeriod !== n.minimumUpdatePeriod) {
                        this.updateMinimumUpdatePeriodTimeout_()
                    }
                    return Boolean(t)
                }
                ;
                n.updateMinimumUpdatePeriodTimeout_ = function e() {
                    var t = this.masterPlaylistLoader_;
                    if (t.createMupOnMedia_) {
                        t.off("loadedmetadata", t.createMupOnMedia_);
                        t.createMupOnMedia_ = null
                    }
                    if (t.minimumUpdatePeriodTimeout_) {
                        o["default"].clearTimeout(t.minimumUpdatePeriodTimeout_);
                        t.minimumUpdatePeriodTimeout_ = null
                    }
                    var n = t.master && t.master.minimumUpdatePeriod;
                    if (n === 0) {
                        if (t.media()) {
                            n = t.media().targetDuration * 1e3
                        } else {
                            t.createMupOnMedia_ = t.updateMinimumUpdatePeriodTimeout_;
                            t.one("loadedmetadata", t.createMupOnMedia_)
                        }
                    }
                    if (typeof n !== "number" || n <= 0) {
                        if (n < 0) {
                            this.logger_("found invalid minimumUpdatePeriod of " + n + ", not setting a timeout")
                        }
                        return
                    }
                    this.createMUPTimeout_(n)
                }
                ;
                n.createMUPTimeout_ = function e(t) {
                    var n = this.masterPlaylistLoader_;
                    n.minimumUpdatePeriodTimeout_ = o["default"].setTimeout(function() {
                        n.minimumUpdatePeriodTimeout_ = null;
                        n.trigger("minimumUpdatePeriod");
                        n.createMUPTimeout_(t)
                    }, t)
                }
                ;
                n.refreshXml_ = function e() {
                    var t = this;
                    this.requestMaster_(function(e, n) {
                        if (!n) {
                            return
                        }
                        if (t.media_) {
                            t.media_ = t.masterPlaylistLoader_.master.playlists[t.media_.id]
                        }
                        t.masterPlaylistLoader_.sidxMapping_ = bi(t.masterPlaylistLoader_.master, t.masterPlaylistLoader_.sidxMapping_);
                        t.addSidxSegments_(t.media(), t.state, function(e) {
                            t.refreshMedia_(t.media().id)
                        })
                    })
                }
                ;
                n.refreshMedia_ = function e(t) {
                    var n = this;
                    if (!t) {
                        throw new Error("refreshMedia_ must take a media id")
                    }
                    if (this.media_ && this.isMaster_) {
                        this.handleMaster_()
                    }
                    var i = this.masterPlaylistLoader_.master.playlists;
                    var r = !this.media_ || this.media_ !== i[t];
                    if (r) {
                        this.media_ = i[t]
                    } else {
                        this.trigger("playlistunchanged")
                    }
                    if (!this.mediaUpdateTimeout) {
                        var a = function e() {
                            if (n.media().endList) {
                                return
                            }
                            n.mediaUpdateTimeout = o["default"].setTimeout(function() {
                                n.trigger("mediaupdatetimeout");
                                e()
                            }, Q(n.media(), Boolean(r)))
                        };
                        a()
                    }
                    this.trigger("loadedplaylist")
                }
                ;
                return t
            }(pi);
            var Ai = {
                GOAL_BUFFER_LENGTH: 30,
                MAX_GOAL_BUFFER_LENGTH: 60,
                BACK_BUFFER_LENGTH: 30,
                GOAL_BUFFER_LENGTH_RATE: 1,
                INITIAL_BANDWIDTH: 4194304,
                BANDWIDTH_VARIANCE: 1.2,
                BUFFER_LOW_WATER_LINE: 0,
                MAX_BUFFER_LOW_WATER_LINE: 30,
                EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,
                BUFFER_LOW_WATER_LINE_RATE: 1,
                BUFFER_HIGH_WATER_LINE: 30
            };
            var Ti = function e(t) {
                var n = new Uint8Array(new ArrayBuffer(t.length));
                for (var i = 0; i < t.length; i++) {
                    n[i] = t.charCodeAt(i)
                }
                return n.buffer
            };
            var ki = function e(t) {
                t.on = t.addEventListener;
                t.off = t.removeEventListener;
                return t
            };
            var Ei = function e(t) {
                try {
                    return URL.createObjectURL(new Blob([t],{
                        type: "application/javascript"
                    }))
                } catch (e) {
                    var n = new BlobBuilder;
                    n.append(t);
                    return URL.createObjectURL(n.getBlob())
                }
            };
            var Pi = function e(t) {
                return function() {
                    var e = Ei(t);
                    var n = ki(new Worker(e));
                    n.objURL = e;
                    var i = n.terminate;
                    n.on = n.addEventListener;
                    n.off = n.removeEventListener;
                    n.terminate = function() {
                        URL.revokeObjectURL(e);
                        return i.call(this)
                    }
                    ;
                    return n
                }
            };
            var Ii = function e(t) {
                return "var browserWorkerPolyFill = " + ki.toString() + ";\n" + "browserWorkerPolyFill(self);\n" + t
            };
            var Ci = function e(t) {
                return t.toString().replace(/^function.+?{/, "").slice(0, -1)
            };
            var wi = Ii(Ci(function() {
                var e = function e() {
                    this.init = function() {
                        var e = {};
                        this.on = function(t, n) {
                            if (!e[t]) {
                                e[t] = []
                            }
                            e[t] = e[t].concat(n)
                        }
                        ;
                        this.off = function(t, n) {
                            var i;
                            if (!e[t]) {
                                return false
                            }
                            i = e[t].indexOf(n);
                            e[t] = e[t].slice();
                            e[t].splice(i, 1);
                            return i > -1
                        }
                        ;
                        this.trigger = function(t) {
                            var n, i, r, a;
                            n = e[t];
                            if (!n) {
                                return
                            }
                            if (arguments.length === 2) {
                                r = n.length;
                                for (i = 0; i < r; ++i) {
                                    n[i].call(this, arguments[1])
                                }
                            } else {
                                a = [];
                                i = arguments.length;
                                for (i = 1; i < arguments.length; ++i) {
                                    a.push(arguments[i])
                                }
                                r = n.length;
                                for (i = 0; i < r; ++i) {
                                    n[i].apply(this, a)
                                }
                            }
                        }
                        ;
                        this.dispose = function() {
                            e = {}
                        }
                    }
                };
                e.prototype.pipe = function(e) {
                    this.on("data", function(t) {
                        e.push(t)
                    });
                    this.on("done", function(t) {
                        e.flush(t)
                    });
                    this.on("partialdone", function(t) {
                        e.partialFlush(t)
                    });
                    this.on("endedtimeline", function(t) {
                        e.endTimeline(t)
                    });
                    this.on("reset", function(t) {
                        e.reset(t)
                    });
                    return e
                }
                ;
                e.prototype.push = function(e) {
                    this.trigger("data", e)
                }
                ;
                e.prototype.flush = function(e) {
                    this.trigger("done", e)
                }
                ;
                e.prototype.partialFlush = function(e) {
                    this.trigger("partialdone", e)
                }
                ;
                e.prototype.endTimeline = function(e) {
                    this.trigger("endedtimeline", e)
                }
                ;
                e.prototype.reset = function(e) {
                    this.trigger("reset", e)
                }
                ;
                var t = e;
                var n = Math.pow(2, 32) - 1;
                var i, r, a, s, o, u, l, d, c, f, p, h, v, g, m, y, _, b, S, A, T, k, E, P, I, C, w, j, L, O, x, D, N, R, M, U;
                (function() {
                    var e;
                    E = {
                        avc1: [],
                        avcC: [],
                        btrt: [],
                        dinf: [],
                        dref: [],
                        esds: [],
                        ftyp: [],
                        hdlr: [],
                        mdat: [],
                        mdhd: [],
                        mdia: [],
                        mfhd: [],
                        minf: [],
                        moof: [],
                        moov: [],
                        mp4a: [],
                        mvex: [],
                        mvhd: [],
                        pasp: [],
                        sdtp: [],
                        smhd: [],
                        stbl: [],
                        stco: [],
                        stsc: [],
                        stsd: [],
                        stsz: [],
                        stts: [],
                        styp: [],
                        tfdt: [],
                        tfhd: [],
                        traf: [],
                        trak: [],
                        trun: [],
                        trex: [],
                        tkhd: [],
                        vmhd: []
                    };
                    if (typeof Uint8Array === "undefined") {
                        return
                    }
                    for (e in E) {
                        if (E.hasOwnProperty(e)) {
                            E[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]
                        }
                    }
                    P = new Uint8Array(["i".charCodeAt(0), "s".charCodeAt(0), "o".charCodeAt(0), "m".charCodeAt(0)]);
                    C = new Uint8Array(["a".charCodeAt(0), "v".charCodeAt(0), "c".charCodeAt(0), "1".charCodeAt(0)]);
                    I = new Uint8Array([0, 0, 0, 1]);
                    w = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]);
                    j = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                    L = {
                        video: w,
                        audio: j
                    };
                    D = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]);
                    x = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                    N = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                    R = N;
                    M = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
                    U = N;
                    O = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
                }
                )();
                i = function e(t) {
                    var n = [], i = 0, r, a, s;
                    for (r = 1; r < arguments.length; r++) {
                        n.push(arguments[r])
                    }
                    r = n.length;
                    while (r--) {
                        i += n[r].byteLength
                    }
                    a = new Uint8Array(i + 8);
                    s = new DataView(a.buffer,a.byteOffset,a.byteLength);
                    s.setUint32(0, a.byteLength);
                    a.set(t, 4);
                    for (r = 0,
                    i = 8; r < n.length; r++) {
                        a.set(n[r], i);
                        i += n[r].byteLength
                    }
                    return a
                }
                ;
                r = function e() {
                    return i(E.dinf, i(E.dref, D))
                }
                ;
                a = function e(t) {
                    return i(E.esds, new Uint8Array([0, 0, 0, 0, 3, 25, 0, 0, 0, 4, 17, 64, 21, 0, 6, 0, 0, 0, 218, 192, 0, 0, 218, 192, 5, 2, t.audioobjecttype << 3 | t.samplingfrequencyindex >>> 1, t.samplingfrequencyindex << 7 | t.channelcount << 3, 6, 1, 2]))
                }
                ;
                s = function e() {
                    return i(E.ftyp, P, I, P, C)
                }
                ;
                y = function e(t) {
                    return i(E.hdlr, L[t])
                }
                ;
                o = function e(t) {
                    return i(E.mdat, t)
                }
                ;
                m = function e(t) {
                    var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 1, 95, 144, t.duration >>> 24 & 255, t.duration >>> 16 & 255, t.duration >>> 8 & 255, t.duration & 255, 85, 196, 0, 0]);
                    if (t.samplerate) {
                        n[12] = t.samplerate >>> 24 & 255;
                        n[13] = t.samplerate >>> 16 & 255;
                        n[14] = t.samplerate >>> 8 & 255;
                        n[15] = t.samplerate & 255
                    }
                    return i(E.mdhd, n)
                }
                ;
                g = function e(t) {
                    return i(E.mdia, m(t), y(t.type), l(t))
                }
                ;
                u = function e(t) {
                    return i(E.mfhd, new Uint8Array([0, 0, 0, 0, (t & 4278190080) >> 24, (t & 16711680) >> 16, (t & 65280) >> 8, t & 255]))
                }
                ;
                l = function e(t) {
                    return i(E.minf, t.type === "video" ? i(E.vmhd, O) : i(E.smhd, x), r(), b(t))
                }
                ;
                d = function e(t, n) {
                    var r = []
                      , a = n.length;
                    while (a--) {
                        r[a] = A(n[a])
                    }
                    return i.apply(null, [E.moof, u(t)].concat(r))
                }
                ;
                c = function e(t) {
                    var n = t.length
                      , r = [];
                    while (n--) {
                        r[n] = h(t[n])
                    }
                    return i.apply(null, [E.moov, p(4294967295)].concat(r).concat(f(t)))
                }
                ;
                f = function e(t) {
                    var n = t.length
                      , r = [];
                    while (n--) {
                        r[n] = T(t[n])
                    }
                    return i.apply(null, [E.mvex].concat(r))
                }
                ;
                p = function e(t) {
                    var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 95, 144, (t & 4278190080) >> 24, (t & 16711680) >> 16, (t & 65280) >> 8, t & 255, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                    return i(E.mvhd, n)
                }
                ;
                _ = function e(t) {
                    var n = t.samples || [], r = new Uint8Array(4 + n.length), a, s;
                    for (s = 0; s < n.length; s++) {
                        a = n[s].flags;
                        r[s + 4] = a.dependsOn << 4 | a.isDependedOn << 2 | a.hasRedundancy
                    }
                    return i(E.sdtp, r)
                }
                ;
                b = function e(t) {
                    return i(E.stbl, S(t), i(E.stts, U), i(E.stsc, R), i(E.stsz, M), i(E.stco, N))
                }
                ;
                (function() {
                    var e, t;
                    S = function n(r) {
                        return i(E.stsd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]), r.type === "video" ? e(r) : t(r))
                    }
                    ;
                    e = function e(t) {
                        var n = t.sps || [], r = t.pps || [], a = [], s = [], o, u;
                        for (o = 0; o < n.length; o++) {
                            a.push((n[o].byteLength & 65280) >>> 8);
                            a.push(n[o].byteLength & 255);
                            a = a.concat(Array.prototype.slice.call(n[o]))
                        }
                        for (o = 0; o < r.length; o++) {
                            s.push((r[o].byteLength & 65280) >>> 8);
                            s.push(r[o].byteLength & 255);
                            s = s.concat(Array.prototype.slice.call(r[o]))
                        }
                        u = [E.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (t.width & 65280) >> 8, t.width & 255, (t.height & 65280) >> 8, t.height & 255, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 19, 118, 105, 100, 101, 111, 106, 115, 45, 99, 111, 110, 116, 114, 105, 98, 45, 104, 108, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), i(E.avcC, new Uint8Array([1, t.profileIdc, t.profileCompatibility, t.levelIdc, 255].concat([n.length], a, [r.length], s))), i(E.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192]))];
                        if (t.sarRatio) {
                            var l = t.sarRatio[0]
                              , d = t.sarRatio[1];
                            u.push(i(E.pasp, new Uint8Array([(l & 4278190080) >> 24, (l & 16711680) >> 16, (l & 65280) >> 8, l & 255, (d & 4278190080) >> 24, (d & 16711680) >> 16, (d & 65280) >> 8, d & 255])))
                        }
                        return i.apply(null, u)
                    }
                    ;
                    t = function e(t) {
                        return i(E.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, (t.channelcount & 65280) >> 8, t.channelcount & 255, (t.samplesize & 65280) >> 8, t.samplesize & 255, 0, 0, 0, 0, (t.samplerate & 65280) >> 8, t.samplerate & 255, 0, 0]), a(t))
                    }
                }
                )();
                v = function e(t) {
                    var n = new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, (t.id & 4278190080) >> 24, (t.id & 16711680) >> 16, (t.id & 65280) >> 8, t.id & 255, 0, 0, 0, 0, (t.duration & 4278190080) >> 24, (t.duration & 16711680) >> 16, (t.duration & 65280) >> 8, t.duration & 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, (t.width & 65280) >> 8, t.width & 255, 0, 0, (t.height & 65280) >> 8, t.height & 255, 0, 0]);
                    return i(E.tkhd, n)
                }
                ;
                A = function e(t) {
                    var r, a, s, o, u, l, d;
                    r = i(E.tfhd, new Uint8Array([0, 0, 0, 58, (t.id & 4278190080) >> 24, (t.id & 16711680) >> 16, (t.id & 65280) >> 8, t.id & 255, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));
                    l = Math.floor(t.baseMediaDecodeTime / (n + 1));
                    d = Math.floor(t.baseMediaDecodeTime % (n + 1));
                    a = i(E.tfdt, new Uint8Array([1, 0, 0, 0, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, l & 255, d >>> 24 & 255, d >>> 16 & 255, d >>> 8 & 255, d & 255]));
                    u = 32 + 20 + 8 + 16 + 8 + 8;
                    if (t.type === "audio") {
                        s = k(t, u);
                        return i(E.traf, r, a, s)
                    }
                    o = _(t);
                    s = k(t, o.length + u);
                    return i(E.traf, r, a, s, o)
                }
                ;
                h = function e(t) {
                    t.duration = t.duration || 4294967295;
                    return i(E.trak, v(t), g(t))
                }
                ;
                T = function e(t) {
                    var n = new Uint8Array([0, 0, 0, 0, (t.id & 4278190080) >> 24, (t.id & 16711680) >> 16, (t.id & 65280) >> 8, t.id & 255, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
                    if (t.type !== "video") {
                        n[n.length - 1] = 0
                    }
                    return i(E.trex, n)
                }
                ;
                (function() {
                    var e, t, n;
                    n = function e(t, n) {
                        var i = 0
                          , r = 0
                          , a = 0
                          , s = 0;
                        if (t.length) {
                            if (t[0].duration !== undefined) {
                                i = 1
                            }
                            if (t[0].size !== undefined) {
                                r = 2
                            }
                            if (t[0].flags !== undefined) {
                                a = 4
                            }
                            if (t[0].compositionTimeOffset !== undefined) {
                                s = 8
                            }
                        }
                        return [0, 0, i | r | a | s, 1, (t.length & 4278190080) >>> 24, (t.length & 16711680) >>> 16, (t.length & 65280) >>> 8, t.length & 255, (n & 4278190080) >>> 24, (n & 16711680) >>> 16, (n & 65280) >>> 8, n & 255]
                    }
                    ;
                    t = function e(t, r) {
                        var a, s, o, u, l, d;
                        u = t.samples || [];
                        r += 8 + 12 + 16 * u.length;
                        o = n(u, r);
                        s = new Uint8Array(o.length + u.length * 16);
                        s.set(o);
                        a = o.length;
                        for (d = 0; d < u.length; d++) {
                            l = u[d];
                            s[a++] = (l.duration & 4278190080) >>> 24;
                            s[a++] = (l.duration & 16711680) >>> 16;
                            s[a++] = (l.duration & 65280) >>> 8;
                            s[a++] = l.duration & 255;
                            s[a++] = (l.size & 4278190080) >>> 24;
                            s[a++] = (l.size & 16711680) >>> 16;
                            s[a++] = (l.size & 65280) >>> 8;
                            s[a++] = l.size & 255;
                            s[a++] = l.flags.isLeading << 2 | l.flags.dependsOn;
                            s[a++] = l.flags.isDependedOn << 6 | l.flags.hasRedundancy << 4 | l.flags.paddingValue << 1 | l.flags.isNonSyncSample;
                            s[a++] = l.flags.degradationPriority & 240 << 8;
                            s[a++] = l.flags.degradationPriority & 15;
                            s[a++] = (l.compositionTimeOffset & 4278190080) >>> 24;
                            s[a++] = (l.compositionTimeOffset & 16711680) >>> 16;
                            s[a++] = (l.compositionTimeOffset & 65280) >>> 8;
                            s[a++] = l.compositionTimeOffset & 255
                        }
                        return i(E.trun, s)
                    }
                    ;
                    e = function e(t, r) {
                        var a, s, o, u, l, d;
                        u = t.samples || [];
                        r += 8 + 12 + 8 * u.length;
                        o = n(u, r);
                        a = new Uint8Array(o.length + u.length * 8);
                        a.set(o);
                        s = o.length;
                        for (d = 0; d < u.length; d++) {
                            l = u[d];
                            a[s++] = (l.duration & 4278190080) >>> 24;
                            a[s++] = (l.duration & 16711680) >>> 16;
                            a[s++] = (l.duration & 65280) >>> 8;
                            a[s++] = l.duration & 255;
                            a[s++] = (l.size & 4278190080) >>> 24;
                            a[s++] = (l.size & 16711680) >>> 16;
                            a[s++] = (l.size & 65280) >>> 8;
                            a[s++] = l.size & 255
                        }
                        return i(E.trun, a)
                    }
                    ;
                    k = function n(i, r) {
                        if (i.type === "audio") {
                            return e(i, r)
                        }
                        return t(i, r)
                    }
                }
                )();
                var B = {
                    ftyp: s,
                    mdat: o,
                    moof: d,
                    moov: c,
                    initSegment: function e(t) {
                        var n = s(), i = c(t), r;
                        r = new Uint8Array(n.byteLength + i.byteLength);
                        r.set(n);
                        r.set(i, n.byteLength);
                        return r
                    }
                };
                var F = function e(t) {
                    var n, i, r = [], a = [];
                    a.byteLength = 0;
                    a.nalCount = 0;
                    a.duration = 0;
                    r.byteLength = 0;
                    for (n = 0; n < t.length; n++) {
                        i = t[n];
                        if (i.nalUnitType === "access_unit_delimiter_rbsp") {
                            if (r.length) {
                                r.duration = i.dts - r.dts;
                                a.byteLength += r.byteLength;
                                a.nalCount += r.length;
                                a.duration += r.duration;
                                a.push(r)
                            }
                            r = [i];
                            r.byteLength = i.data.byteLength;
                            r.pts = i.pts;
                            r.dts = i.dts
                        } else {
                            if (i.nalUnitType === "slice_layer_without_partitioning_rbsp_idr") {
                                r.keyFrame = true
                            }
                            r.duration = i.dts - r.dts;
                            r.byteLength += i.data.byteLength;
                            r.push(i)
                        }
                    }
                    if (a.length && (!r.duration || r.duration <= 0)) {
                        r.duration = a[a.length - 1].duration
                    }
                    a.byteLength += r.byteLength;
                    a.nalCount += r.length;
                    a.duration += r.duration;
                    a.push(r);
                    return a
                };
                var V = function e(t) {
                    var n, i, r = [], a = [];
                    r.byteLength = 0;
                    r.nalCount = 0;
                    r.duration = 0;
                    r.pts = t[0].pts;
                    r.dts = t[0].dts;
                    a.byteLength = 0;
                    a.nalCount = 0;
                    a.duration = 0;
                    a.pts = t[0].pts;
                    a.dts = t[0].dts;
                    for (n = 0; n < t.length; n++) {
                        i = t[n];
                        if (i.keyFrame) {
                            if (r.length) {
                                a.push(r);
                                a.byteLength += r.byteLength;
                                a.nalCount += r.nalCount;
                                a.duration += r.duration
                            }
                            r = [i];
                            r.nalCount = i.length;
                            r.byteLength = i.byteLength;
                            r.pts = i.pts;
                            r.dts = i.dts;
                            r.duration = i.duration
                        } else {
                            r.duration += i.duration;
                            r.nalCount += i.length;
                            r.byteLength += i.byteLength;
                            r.push(i)
                        }
                    }
                    if (a.length && r.duration <= 0) {
                        r.duration = a[a.length - 1].duration
                    }
                    a.byteLength += r.byteLength;
                    a.nalCount += r.nalCount;
                    a.duration += r.duration;
                    a.push(r);
                    return a
                };
                var q = function e(t) {
                    var n;
                    if (!t[0][0].keyFrame && t.length > 1) {
                        n = t.shift();
                        t.byteLength -= n.byteLength;
                        t.nalCount -= n.nalCount;
                        t[0][0].dts = n.dts;
                        t[0][0].pts = n.pts;
                        t[0][0].duration += n.duration
                    }
                    return t
                };
                var H = function e() {
                    return {
                        size: 0,
                        flags: {
                            isLeading: 0,
                            dependsOn: 1,
                            isDependedOn: 0,
                            hasRedundancy: 0,
                            degradationPriority: 0,
                            isNonSyncSample: 1
                        }
                    }
                };
                var G = function e(t, n) {
                    var i = H();
                    i.dataOffset = n;
                    i.compositionTimeOffset = t.pts - t.dts;
                    i.duration = t.duration;
                    i.size = 4 * t.length;
                    i.size += t.byteLength;
                    if (t.keyFrame) {
                        i.flags.dependsOn = 2;
                        i.flags.isNonSyncSample = 0
                    }
                    return i
                };
                var W = function e(t, n) {
                    var i, r, a, s, o, u = n || 0, l = [];
                    for (i = 0; i < t.length; i++) {
                        s = t[i];
                        for (r = 0; r < s.length; r++) {
                            o = s[r];
                            a = G(o, u);
                            u += a.size;
                            l.push(a)
                        }
                    }
                    return l
                };
                var K = function e(t) {
                    var n, i, r, a, s, o, u = 0, l = t.byteLength, d = t.nalCount, c = l + 4 * d, f = new Uint8Array(c), p = new DataView(f.buffer);
                    for (n = 0; n < t.length; n++) {
                        a = t[n];
                        for (i = 0; i < a.length; i++) {
                            s = a[i];
                            for (r = 0; r < s.length; r++) {
                                o = s[r];
                                p.setUint32(u, o.data.byteLength);
                                u += 4;
                                f.set(o.data, u);
                                u += o.data.byteLength
                            }
                        }
                    }
                    return f
                };
                var z = function e(t, n) {
                    var i, r = n || 0, a = [];
                    i = G(t, r);
                    a.push(i);
                    return a
                };
                var Y = function e(t) {
                    var n, i, r = 0, a = t.byteLength, s = t.length, o = a + 4 * s, u = new Uint8Array(o), l = new DataView(u.buffer);
                    for (n = 0; n < t.length; n++) {
                        i = t[n];
                        l.setUint32(r, i.data.byteLength);
                        r += 4;
                        u.set(i.data, r);
                        r += i.data.byteLength
                    }
                    return u
                };
                var X = {
                    groupNalsIntoFrames: F,
                    groupFramesIntoGops: V,
                    extendFirstKeyFrame: q,
                    generateSampleTable: W,
                    concatenateNalData: K,
                    generateSampleTableForFrame: z,
                    concatenateNalDataForFrame: Y
                };
                var Q = [33, 16, 5, 32, 164, 27];
                var Z = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];
                var J = function e(t) {
                    var n = [];
                    while (t--) {
                        n.push(0)
                    }
                    return n
                };
                var $ = function e(t) {
                    return Object.keys(t).reduce(function(e, n) {
                        e[n] = new Uint8Array(t[n].reduce(function(e, t) {
                            return e.concat(t)
                        }, []));
                        return e
                    }, {})
                };
                var ee;
                var te = function e() {
                    if (!ee) {
                        var t = {
                            96000: [Q, [227, 64], J(154), [56]],
                            88200: [Q, [231], J(170), [56]],
                            64000: [Q, [248, 192], J(240), [56]],
                            48000: [Q, [255, 192], J(268), [55, 148, 128], J(54), [112]],
                            44100: [Q, [255, 192], J(268), [55, 163, 128], J(84), [112]],
                            32000: [Q, [255, 192], J(268), [55, 234], J(226), [112]],
                            24000: [Q, [255, 192], J(268), [55, 255, 128], J(268), [111, 112], J(126), [224]],
                            16000: [Q, [255, 192], J(268), [55, 255, 128], J(268), [111, 255], J(269), [223, 108], J(195), [1, 192]],
                            12000: [Z, J(268), [3, 127, 248], J(268), [6, 255, 240], J(268), [13, 255, 224], J(268), [27, 253, 128], J(259), [56]],
                            11025: [Z, J(268), [3, 127, 248], J(268), [6, 255, 240], J(268), [13, 255, 224], J(268), [27, 255, 192], J(268), [55, 175, 128], J(108), [112]],
                            8000: [Z, J(268), [3, 121, 16], J(47), [7]]
                        };
                        ee = $(t)
                    }
                    return ee
                };
                var ne = 9e4, ie, re, ae, se, oe, ue, le;
                ie = function e(t) {
                    return t * ne
                }
                ;
                re = function e(t, n) {
                    return t * n
                }
                ;
                ae = function e(t) {
                    return t / ne
                }
                ;
                se = function e(t, n) {
                    return t / n
                }
                ;
                oe = function e(t, n) {
                    return ie(se(t, n))
                }
                ;
                ue = function e(t, n) {
                    return re(ae(t), n)
                }
                ;
                le = function e(t, n, i) {
                    return ae(i ? t : t - n)
                }
                ;
                var de = {
                    ONE_SECOND_IN_TS: ne,
                    secondsToVideoTs: ie,
                    secondsToAudioTs: re,
                    videoTsToSeconds: ae,
                    audioTsToSeconds: se,
                    audioTsToVideoTs: oe,
                    videoTsToAudioTs: ue,
                    metadataTsToSeconds: le
                };
                var ce = function e(t) {
                    var n, i, r = 0;
                    for (n = 0; n < t.length; n++) {
                        i = t[n];
                        r += i.data.byteLength
                    }
                    return r
                };
                var fe = function e(t, n, i, r) {
                    var a, s = 0, o = 0, u = 0, l = 0, d, c, f;
                    if (!n.length) {
                        return
                    }
                    a = de.audioTsToVideoTs(t.baseMediaDecodeTime, t.samplerate);
                    s = Math.ceil(de.ONE_SECOND_IN_TS / (t.samplerate / 1024));
                    if (i && r) {
                        o = a - Math.max(i, r);
                        u = Math.floor(o / s);
                        l = u * s
                    }
                    if (u < 1 || l > de.ONE_SECOND_IN_TS / 2) {
                        return
                    }
                    d = te()[t.samplerate];
                    if (!d) {
                        d = n[0].data
                    }
                    for (c = 0; c < u; c++) {
                        f = n[0];
                        n.splice(0, 0, {
                            data: d,
                            dts: f.dts - s,
                            pts: f.pts - s
                        })
                    }
                    t.baseMediaDecodeTime -= Math.floor(de.videoTsToAudioTs(l, t.samplerate));
                    return l
                };
                var pe = function e(t, n, i) {
                    if (n.minSegmentDts >= i) {
                        return t
                    }
                    n.minSegmentDts = Infinity;
                    return t.filter(function(e) {
                        if (e.dts >= i) {
                            n.minSegmentDts = Math.min(n.minSegmentDts, e.dts);
                            n.minSegmentPts = n.minSegmentDts;
                            return true
                        }
                        return false
                    })
                };
                var he = function e(t) {
                    var n, i, r = [];
                    for (n = 0; n < t.length; n++) {
                        i = t[n];
                        r.push({
                            size: i.data.byteLength,
                            duration: 1024
                        })
                    }
                    return r
                };
                var ve = function e(t) {
                    var n, i, r = 0, a = new Uint8Array(ce(t));
                    for (n = 0; n < t.length; n++) {
                        i = t[n];
                        a.set(i.data, r);
                        r += i.data.byteLength
                    }
                    return a
                };
                var ge = {
                    prefixWithSilence: fe,
                    trimAdtsFramesByEarliestDts: pe,
                    generateSampleTable: he,
                    concatenateFrameData: ve
                };
                var me = de.ONE_SECOND_IN_TS;
                var ye = function e(t, n) {
                    if (typeof n.pts === "number") {
                        if (t.timelineStartInfo.pts === undefined) {
                            t.timelineStartInfo.pts = n.pts
                        }
                        if (t.minSegmentPts === undefined) {
                            t.minSegmentPts = n.pts
                        } else {
                            t.minSegmentPts = Math.min(t.minSegmentPts, n.pts)
                        }
                        if (t.maxSegmentPts === undefined) {
                            t.maxSegmentPts = n.pts
                        } else {
                            t.maxSegmentPts = Math.max(t.maxSegmentPts, n.pts)
                        }
                    }
                    if (typeof n.dts === "number") {
                        if (t.timelineStartInfo.dts === undefined) {
                            t.timelineStartInfo.dts = n.dts
                        }
                        if (t.minSegmentDts === undefined) {
                            t.minSegmentDts = n.dts
                        } else {
                            t.minSegmentDts = Math.min(t.minSegmentDts, n.dts)
                        }
                        if (t.maxSegmentDts === undefined) {
                            t.maxSegmentDts = n.dts
                        } else {
                            t.maxSegmentDts = Math.max(t.maxSegmentDts, n.dts)
                        }
                    }
                };
                var _e = function e(t) {
                    delete t.minSegmentDts;
                    delete t.maxSegmentDts;
                    delete t.minSegmentPts;
                    delete t.maxSegmentPts
                };
                var be = function e(t, n) {
                    var i, r, a = t.minSegmentDts;
                    if (!n) {
                        a -= t.timelineStartInfo.dts
                    }
                    i = t.timelineStartInfo.baseMediaDecodeTime;
                    i += a;
                    i = Math.max(0, i);
                    if (t.type === "audio") {
                        r = t.samplerate / me;
                        i *= r;
                        i = Math.floor(i)
                    }
                    return i
                };
                var Se = {
                    clearDtsInfo: _e,
                    calculateTrackBaseMediaDecodeTime: be,
                    collectDtsInfo: ye
                };
                var Ae = 4
                  , Te = 128;
                var ke = function e(t) {
                    var n = 0
                      , i = {
                        payloadType: -1,
                        payloadSize: 0
                    }
                      , r = 0
                      , a = 0;
                    while (n < t.byteLength) {
                        if (t[n] === Te) {
                            break
                        }
                        while (t[n] === 255) {
                            r += 255;
                            n++
                        }
                        r += t[n++];
                        while (t[n] === 255) {
                            a += 255;
                            n++
                        }
                        a += t[n++];
                        if (!i.payload && r === Ae) {
                            var s = String.fromCharCode(t[n + 3], t[n + 4], t[n + 5], t[n + 6]);
                            if (s === "GA94") {
                                i.payloadType = r;
                                i.payloadSize = a;
                                i.payload = t.subarray(n, n + a);
                                break
                            } else {
                                i.payload = void 0
                            }
                        }
                        n += a;
                        r = 0;
                        a = 0
                    }
                    return i
                };
                var Ee = function e(t) {
                    if (t.payload[0] !== 181) {
                        return null
                    }
                    if ((t.payload[1] << 8 | t.payload[2]) !== 49) {
                        return null
                    }
                    if (String.fromCharCode(t.payload[3], t.payload[4], t.payload[5], t.payload[6]) !== "GA94") {
                        return null
                    }
                    if (t.payload[7] !== 3) {
                        return null
                    }
                    return t.payload.subarray(8, t.payload.length - 1)
                };
                var Pe = function e(t, n) {
                    var i = [], r, a, s, o;
                    if (!(n[0] & 64)) {
                        return i
                    }
                    a = n[0] & 31;
                    for (r = 0; r < a; r++) {
                        s = r * 3;
                        o = {
                            type: n[s + 2] & 3,
                            pts: t
                        };
                        if (n[s + 2] & 4) {
                            o.ccData = n[s + 3] << 8 | n[s + 4];
                            i.push(o)
                        }
                    }
                    return i
                };
                var Ie = function e(t) {
                    var n = t.byteLength, i = [], r = 1, a, s;
                    while (r < n - 2) {
                        if (t[r] === 0 && t[r + 1] === 0 && t[r + 2] === 3) {
                            i.push(r + 2);
                            r += 2
                        } else {
                            r++
                        }
                    }
                    if (i.length === 0) {
                        return t
                    }
                    a = n - i.length;
                    s = new Uint8Array(a);
                    var o = 0;
                    for (r = 0; r < a; o++,
                    r++) {
                        if (o === i[0]) {
                            o++;
                            i.shift()
                        }
                        s[r] = t[o]
                    }
                    return s
                };
                var Ce = {
                    parseSei: ke,
                    parseUserData: Ee,
                    parseCaptionPackets: Pe,
                    discardEmulationPreventionBytes: Ie,
                    USER_DATA_REGISTERED_ITU_T_T35: Ae
                };
                var we = function e(t) {
                    t = t || {};
                    e.prototype.init.call(this);
                    this.parse708captions_ = typeof t.parse708captions === "boolean" ? t.parse708captions : true;
                    this.captionPackets_ = [];
                    this.ccStreams_ = [new Ve(0,0), new Ve(0,1), new Ve(1,0), new Ve(1,1)];
                    if (this.parse708captions_) {
                        this.cc708Stream_ = new Ne
                    }
                    this.reset();
                    this.ccStreams_.forEach(function(e) {
                        e.on("data", this.trigger.bind(this, "data"));
                        e.on("partialdone", this.trigger.bind(this, "partialdone"));
                        e.on("done", this.trigger.bind(this, "done"))
                    }, this);
                    if (this.parse708captions_) {
                        this.cc708Stream_.on("data", this.trigger.bind(this, "data"));
                        this.cc708Stream_.on("partialdone", this.trigger.bind(this, "partialdone"));
                        this.cc708Stream_.on("done", this.trigger.bind(this, "done"))
                    }
                };
                we.prototype = new t;
                we.prototype.push = function(e) {
                    var t, n, i;
                    if (e.nalUnitType !== "sei_rbsp") {
                        return
                    }
                    t = Ce.parseSei(e.escapedRBSP);
                    if (!t.payload) {
                        return
                    }
                    if (t.payloadType !== Ce.USER_DATA_REGISTERED_ITU_T_T35) {
                        return
                    }
                    n = Ce.parseUserData(t);
                    if (!n) {
                        return
                    }
                    if (e.dts < this.latestDts_) {
                        this.ignoreNextEqualDts_ = true;
                        return
                    } else if (e.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
                        this.numSameDts_--;
                        if (!this.numSameDts_) {
                            this.ignoreNextEqualDts_ = false
                        }
                        return
                    }
                    i = Ce.parseCaptionPackets(e.pts, n);
                    this.captionPackets_ = this.captionPackets_.concat(i);
                    if (this.latestDts_ !== e.dts) {
                        this.numSameDts_ = 0
                    }
                    this.numSameDts_++;
                    this.latestDts_ = e.dts
                }
                ;
                we.prototype.flushCCStreams = function(e) {
                    this.ccStreams_.forEach(function(t) {
                        return e === "flush" ? t.flush() : t.partialFlush()
                    }, this)
                }
                ;
                we.prototype.flushStream = function(e) {
                    if (!this.captionPackets_.length) {
                        this.flushCCStreams(e);
                        return
                    }
                    this.captionPackets_.forEach(function(e, t) {
                        e.presortIndex = t
                    });
                    this.captionPackets_.sort(function(e, t) {
                        if (e.pts === t.pts) {
                            return e.presortIndex - t.presortIndex
                        }
                        return e.pts - t.pts
                    });
                    this.captionPackets_.forEach(function(e) {
                        if (e.type < 2) {
                            this.dispatchCea608Packet(e)
                        } else {
                            this.dispatchCea708Packet(e)
                        }
                    }, this);
                    this.captionPackets_.length = 0;
                    this.flushCCStreams(e)
                }
                ;
                we.prototype.flush = function() {
                    return this.flushStream("flush")
                }
                ;
                we.prototype.partialFlush = function() {
                    return this.flushStream("partialFlush")
                }
                ;
                we.prototype.reset = function() {
                    this.latestDts_ = null;
                    this.ignoreNextEqualDts_ = false;
                    this.numSameDts_ = 0;
                    this.activeCea608Channel_ = [null, null];
                    this.ccStreams_.forEach(function(e) {
                        e.reset()
                    })
                }
                ;
                we.prototype.dispatchCea608Packet = function(e) {
                    if (this.setsTextOrXDSActive(e)) {
                        this.activeCea608Channel_[e.type] = null
                    } else if (this.setsChannel1Active(e)) {
                        this.activeCea608Channel_[e.type] = 0
                    } else if (this.setsChannel2Active(e)) {
                        this.activeCea608Channel_[e.type] = 1
                    }
                    if (this.activeCea608Channel_[e.type] === null) {
                        return
                    }
                    this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
                }
                ;
                we.prototype.setsChannel1Active = function(e) {
                    return (e.ccData & 30720) === 4096
                }
                ;
                we.prototype.setsChannel2Active = function(e) {
                    return (e.ccData & 30720) === 6144
                }
                ;
                we.prototype.setsTextOrXDSActive = function(e) {
                    return (e.ccData & 28928) === 256 || (e.ccData & 30974) === 4138 || (e.ccData & 30974) === 6186
                }
                ;
                we.prototype.dispatchCea708Packet = function(e) {
                    if (this.parse708captions_) {
                        this.cc708Stream_.push(e)
                    }
                }
                ;
                var je = {
                    127: 9834,
                    4128: 32,
                    4129: 160,
                    4133: 8230,
                    4138: 352,
                    4140: 338,
                    4144: 9608,
                    4145: 8216,
                    4146: 8217,
                    4147: 8220,
                    4148: 8221,
                    4149: 8226,
                    4153: 8482,
                    4154: 353,
                    4156: 339,
                    4157: 8480,
                    4159: 376,
                    4214: 8539,
                    4215: 8540,
                    4216: 8541,
                    4217: 8542,
                    4218: 9168,
                    4219: 9124,
                    4220: 9123,
                    4221: 9135,
                    4222: 9126,
                    4223: 9121,
                    4256: 12600
                };
                var Le = function e(t) {
                    var n = je[t] || t;
                    if (t & 4096 && t === n) {
                        return ""
                    }
                    return String.fromCharCode(n)
                };
                var Oe = function e(t) {
                    return 32 <= t && t <= 127 || 160 <= t && t <= 255
                };
                var xe = function e(t) {
                    this.windowNum = t;
                    this.reset()
                };
                xe.prototype.reset = function() {
                    this.clearText();
                    this.pendingNewLine = false;
                    this.winAttr = {};
                    this.penAttr = {};
                    this.penLoc = {};
                    this.penColor = {};
                    this.visible = 0;
                    this.rowLock = 0;
                    this.columnLock = 0;
                    this.priority = 0;
                    this.relativePositioning = 0;
                    this.anchorVertical = 0;
                    this.anchorHorizontal = 0;
                    this.anchorPoint = 0;
                    this.rowCount = 1;
                    this.virtualRowCount = this.rowCount + 1;
                    this.columnCount = 41;
                    this.windowStyle = 0;
                    this.penStyle = 0
                }
                ;
                xe.prototype.getText = function() {
                    return this.rows.join("\n")
                }
                ;
                xe.prototype.clearText = function() {
                    this.rows = [""];
                    this.rowIdx = 0
                }
                ;
                xe.prototype.newLine = function(e) {
                    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === "function") {
                        this.beforeRowOverflow(e)
                    }
                    if (this.rows.length > 0) {
                        this.rows.push("");
                        this.rowIdx++
                    }
                    while (this.rows.length > this.virtualRowCount) {
                        this.rows.shift();
                        this.rowIdx--
                    }
                }
                ;
                xe.prototype.isEmpty = function() {
                    if (this.rows.length === 0) {
                        return true
                    } else if (this.rows.length === 1) {
                        return this.rows[0] === ""
                    }
                    return false
                }
                ;
                xe.prototype.addText = function(e) {
                    this.rows[this.rowIdx] += e
                }
                ;
                xe.prototype.backspace = function() {
                    if (!this.isEmpty()) {
                        var e = this.rows[this.rowIdx];
                        this.rows[this.rowIdx] = e.substr(0, e.length - 1)
                    }
                }
                ;
                var De = function e(t) {
                    this.serviceNum = t;
                    this.text = "";
                    this.currentWindow = new xe(-1);
                    this.windows = []
                };
                De.prototype.init = function(e, t) {
                    this.startPts = e;
                    for (var n = 0; n < 8; n++) {
                        this.windows[n] = new xe(n);
                        if (typeof t === "function") {
                            this.windows[n].beforeRowOverflow = t
                        }
                    }
                }
                ;
                De.prototype.setCurrentWindow = function(e) {
                    this.currentWindow = this.windows[e]
                }
                ;
                var Ne = function e() {
                    e.prototype.init.call(this);
                    var t = this;
                    this.current708Packet = null;
                    this.services = {};
                    this.push = function(e) {
                        if (e.type === 3) {
                            t.new708Packet();
                            t.add708Bytes(e)
                        } else {
                            if (t.current708Packet === null) {
                                t.new708Packet()
                            }
                            t.add708Bytes(e)
                        }
                    }
                };
                Ne.prototype = new t;
                Ne.prototype.new708Packet = function() {
                    if (this.current708Packet !== null) {
                        this.push708Packet()
                    }
                    this.current708Packet = {
                        data: [],
                        ptsVals: []
                    }
                }
                ;
                Ne.prototype.add708Bytes = function(e) {
                    var t = e.ccData;
                    var n = t >>> 8;
                    var i = t & 255;
                    this.current708Packet.ptsVals.push(e.pts);
                    this.current708Packet.data.push(n);
                    this.current708Packet.data.push(i)
                }
                ;
                Ne.prototype.push708Packet = function() {
                    var e = this.current708Packet;
                    var t = e.data;
                    var n = null;
                    var i = null;
                    var r = 0;
                    var a = t[r++];
                    e.seq = a >> 6;
                    e.sizeCode = a & 63;
                    for (; r < t.length; r++) {
                        a = t[r++];
                        n = a >> 5;
                        i = a & 31;
                        if (n === 7 && i > 0) {
                            a = t[r++];
                            n = a
                        }
                        this.pushServiceBlock(n, r, i);
                        if (i > 0) {
                            r += i - 1
                        }
                    }
                }
                ;
                Ne.prototype.pushServiceBlock = function(e, t, n) {
                    var i;
                    var r = t;
                    var a = this.current708Packet.data;
                    var s = this.services[e];
                    if (!s) {
                        s = this.initService(e, r)
                    }
                    for (; r < t + n && r < a.length; r++) {
                        i = a[r];
                        if (Oe(i)) {
                            r = this.handleText(r, s)
                        } else if (i === 16) {
                            r = this.extendedCommands(r, s)
                        } else if (128 <= i && i <= 135) {
                            r = this.setCurrentWindow(r, s)
                        } else if (152 <= i && i <= 159) {
                            r = this.defineWindow(r, s)
                        } else if (i === 136) {
                            r = this.clearWindows(r, s)
                        } else if (i === 140) {
                            r = this.deleteWindows(r, s)
                        } else if (i === 137) {
                            r = this.displayWindows(r, s)
                        } else if (i === 138) {
                            r = this.hideWindows(r, s)
                        } else if (i === 139) {
                            r = this.toggleWindows(r, s)
                        } else if (i === 151) {
                            r = this.setWindowAttributes(r, s)
                        } else if (i === 144) {
                            r = this.setPenAttributes(r, s)
                        } else if (i === 145) {
                            r = this.setPenColor(r, s)
                        } else if (i === 146) {
                            r = this.setPenLocation(r, s)
                        } else if (i === 143) {
                            s = this.reset(r, s)
                        } else if (i === 8) {
                            s.currentWindow.backspace()
                        } else if (i === 12) {
                            s.currentWindow.clearText()
                        } else if (i === 13) {
                            s.currentWindow.pendingNewLine = true
                        } else if (i === 14) {
                            s.currentWindow.clearText()
                        } else if (i === 141) {
                            r++
                        } else
                            ;
                    }
                }
                ;
                Ne.prototype.extendedCommands = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[++e];
                    if (Oe(i)) {
                        e = this.handleText(e, t, true)
                    }
                    return e
                }
                ;
                Ne.prototype.getPts = function(e) {
                    return this.current708Packet.ptsVals[Math.floor(e / 2)]
                }
                ;
                Ne.prototype.initService = function(e, t) {
                    var n = this;
                    this.services[e] = new De(e);
                    this.services[e].init(this.getPts(t), function(t) {
                        n.flushDisplayed(t, n.services[e])
                    });
                    return this.services[e]
                }
                ;
                Ne.prototype.handleText = function(e, t, n) {
                    var i = this.current708Packet.data;
                    var r = i[e];
                    var a = n ? 4096 : 0;
                    var s = Le(a | r);
                    var o = t.currentWindow;
                    if (o.pendingNewLine && !o.isEmpty()) {
                        o.newLine(this.getPts(e))
                    }
                    o.pendingNewLine = false;
                    o.addText(s);
                    return e
                }
                ;
                Ne.prototype.setCurrentWindow = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[e];
                    var r = i & 7;
                    t.setCurrentWindow(r);
                    return e
                }
                ;
                Ne.prototype.defineWindow = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[e];
                    var r = i & 7;
                    t.setCurrentWindow(r);
                    var a = t.currentWindow;
                    i = n[++e];
                    a.visible = (i & 32) >> 5;
                    a.rowLock = (i & 16) >> 4;
                    a.columnLock = (i & 8) >> 3;
                    a.priority = i & 7;
                    i = n[++e];
                    a.relativePositioning = (i & 128) >> 7;
                    a.anchorVertical = i & 127;
                    i = n[++e];
                    a.anchorHorizontal = i;
                    i = n[++e];
                    a.anchorPoint = (i & 240) >> 4;
                    a.rowCount = i & 15;
                    i = n[++e];
                    a.columnCount = i & 63;
                    i = n[++e];
                    a.windowStyle = (i & 56) >> 3;
                    a.penStyle = i & 7;
                    a.virtualRowCount = a.rowCount + 1;
                    return e
                }
                ;
                Ne.prototype.setWindowAttributes = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[e];
                    var r = t.currentWindow.winAttr;
                    i = n[++e];
                    r.fillOpacity = (i & 192) >> 6;
                    r.fillRed = (i & 48) >> 4;
                    r.fillGreen = (i & 12) >> 2;
                    r.fillBlue = i & 3;
                    i = n[++e];
                    r.borderType = (i & 192) >> 6;
                    r.borderRed = (i & 48) >> 4;
                    r.borderGreen = (i & 12) >> 2;
                    r.borderBlue = i & 3;
                    i = n[++e];
                    r.borderType += (i & 128) >> 5;
                    r.wordWrap = (i & 64) >> 6;
                    r.printDirection = (i & 48) >> 4;
                    r.scrollDirection = (i & 12) >> 2;
                    r.justify = i & 3;
                    i = n[++e];
                    r.effectSpeed = (i & 240) >> 4;
                    r.effectDirection = (i & 12) >> 2;
                    r.displayEffect = i & 3;
                    return e
                }
                ;
                Ne.prototype.flushDisplayed = function(e, t) {
                    var n = [];
                    for (var i = 0; i < 8; i++) {
                        if (t.windows[i].visible && !t.windows[i].isEmpty()) {
                            n.push(t.windows[i].getText())
                        }
                    }
                    t.endPts = e;
                    t.text = n.join("\n\n");
                    this.pushCaption(t);
                    t.startPts = e
                }
                ;
                Ne.prototype.pushCaption = function(e) {
                    if (e.text !== "") {
                        this.trigger("data", {
                            startPts: e.startPts,
                            endPts: e.endPts,
                            text: e.text,
                            stream: "cc708_" + e.serviceNum
                        });
                        e.text = "";
                        e.startPts = e.endPts
                    }
                }
                ;
                Ne.prototype.displayWindows = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[++e];
                    var r = this.getPts(e);
                    this.flushDisplayed(r, t);
                    for (var a = 0; a < 8; a++) {
                        if (i & 1 << a) {
                            t.windows[a].visible = 1
                        }
                    }
                    return e
                }
                ;
                Ne.prototype.hideWindows = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[++e];
                    var r = this.getPts(e);
                    this.flushDisplayed(r, t);
                    for (var a = 0; a < 8; a++) {
                        if (i & 1 << a) {
                            t.windows[a].visible = 0
                        }
                    }
                    return e
                }
                ;
                Ne.prototype.toggleWindows = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[++e];
                    var r = this.getPts(e);
                    this.flushDisplayed(r, t);
                    for (var a = 0; a < 8; a++) {
                        if (i & 1 << a) {
                            t.windows[a].visible ^= 1
                        }
                    }
                    return e
                }
                ;
                Ne.prototype.clearWindows = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[++e];
                    var r = this.getPts(e);
                    this.flushDisplayed(r, t);
                    for (var a = 0; a < 8; a++) {
                        if (i & 1 << a) {
                            t.windows[a].clearText()
                        }
                    }
                    return e
                }
                ;
                Ne.prototype.deleteWindows = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[++e];
                    var r = this.getPts(e);
                    this.flushDisplayed(r, t);
                    for (var a = 0; a < 8; a++) {
                        if (i & 1 << a) {
                            t.windows[a].reset()
                        }
                    }
                    return e
                }
                ;
                Ne.prototype.setPenAttributes = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[e];
                    var r = t.currentWindow.penAttr;
                    i = n[++e];
                    r.textTag = (i & 240) >> 4;
                    r.offset = (i & 12) >> 2;
                    r.penSize = i & 3;
                    i = n[++e];
                    r.italics = (i & 128) >> 7;
                    r.underline = (i & 64) >> 6;
                    r.edgeType = (i & 56) >> 3;
                    r.fontStyle = i & 7;
                    return e
                }
                ;
                Ne.prototype.setPenColor = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[e];
                    var r = t.currentWindow.penColor;
                    i = n[++e];
                    r.fgOpacity = (i & 192) >> 6;
                    r.fgRed = (i & 48) >> 4;
                    r.fgGreen = (i & 12) >> 2;
                    r.fgBlue = i & 3;
                    i = n[++e];
                    r.bgOpacity = (i & 192) >> 6;
                    r.bgRed = (i & 48) >> 4;
                    r.bgGreen = (i & 12) >> 2;
                    r.bgBlue = i & 3;
                    i = n[++e];
                    r.edgeRed = (i & 48) >> 4;
                    r.edgeGreen = (i & 12) >> 2;
                    r.edgeBlue = i & 3;
                    return e
                }
                ;
                Ne.prototype.setPenLocation = function(e, t) {
                    var n = this.current708Packet.data;
                    var i = n[e];
                    var r = t.currentWindow.penLoc;
                    t.currentWindow.pendingNewLine = true;
                    i = n[++e];
                    r.row = i & 15;
                    i = n[++e];
                    r.column = i & 63;
                    return e
                }
                ;
                Ne.prototype.reset = function(e, t) {
                    var n = this.getPts(e);
                    this.flushDisplayed(n, t);
                    return this.initService(t.serviceNum, e)
                }
                ;
                var Re = {
                    42: 225,
                    92: 233,
                    94: 237,
                    95: 243,
                    96: 250,
                    123: 231,
                    124: 247,
                    125: 209,
                    126: 241,
                    127: 9608,
                    304: 174,
                    305: 176,
                    306: 189,
                    307: 191,
                    308: 8482,
                    309: 162,
                    310: 163,
                    311: 9834,
                    312: 224,
                    313: 160,
                    314: 232,
                    315: 226,
                    316: 234,
                    317: 238,
                    318: 244,
                    319: 251,
                    544: 193,
                    545: 201,
                    546: 211,
                    547: 218,
                    548: 220,
                    549: 252,
                    550: 8216,
                    551: 161,
                    552: 42,
                    553: 39,
                    554: 8212,
                    555: 169,
                    556: 8480,
                    557: 8226,
                    558: 8220,
                    559: 8221,
                    560: 192,
                    561: 194,
                    562: 199,
                    563: 200,
                    564: 202,
                    565: 203,
                    566: 235,
                    567: 206,
                    568: 207,
                    569: 239,
                    570: 212,
                    571: 217,
                    572: 249,
                    573: 219,
                    574: 171,
                    575: 187,
                    800: 195,
                    801: 227,
                    802: 205,
                    803: 204,
                    804: 236,
                    805: 210,
                    806: 242,
                    807: 213,
                    808: 245,
                    809: 123,
                    810: 125,
                    811: 92,
                    812: 94,
                    813: 95,
                    814: 124,
                    815: 126,
                    816: 196,
                    817: 228,
                    818: 214,
                    819: 246,
                    820: 223,
                    821: 165,
                    822: 164,
                    823: 9474,
                    824: 197,
                    825: 229,
                    826: 216,
                    827: 248,
                    828: 9484,
                    829: 9488,
                    830: 9492,
                    831: 9496
                };
                var Me = function e(t) {
                    if (t === null) {
                        return ""
                    }
                    t = Re[t] || t;
                    return String.fromCharCode(t)
                };
                var Ue = 14;
                var Be = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152];
                var Fe = function e() {
                    var t = []
                      , n = Ue + 1;
                    while (n--) {
                        t.push("")
                    }
                    return t
                };
                var Ve = function e(t, n) {
                    e.prototype.init.call(this);
                    this.field_ = t || 0;
                    this.dataChannel_ = n || 0;
                    this.name_ = "CC" + ((this.field_ << 1 | this.dataChannel_) + 1);
                    this.setConstants();
                    this.reset();
                    this.push = function(e) {
                        var t, n, i, r, a;
                        t = e.ccData & 32639;
                        if (t === this.lastControlCode_) {
                            this.lastControlCode_ = null;
                            return
                        }
                        if ((t & 61440) === 4096) {
                            this.lastControlCode_ = t
                        } else if (t !== this.PADDING_) {
                            this.lastControlCode_ = null
                        }
                        i = t >>> 8;
                        r = t & 255;
                        if (t === this.PADDING_) {
                            return
                        } else if (t === this.RESUME_CAPTION_LOADING_) {
                            this.mode_ = "popOn"
                        } else if (t === this.END_OF_CAPTION_) {
                            this.mode_ = "popOn";
                            this.clearFormatting(e.pts);
                            this.flushDisplayed(e.pts);
                            n = this.displayed_;
                            this.displayed_ = this.nonDisplayed_;
                            this.nonDisplayed_ = n;
                            this.startPts_ = e.pts
                        } else if (t === this.ROLL_UP_2_ROWS_) {
                            this.rollUpRows_ = 2;
                            this.setRollUp(e.pts)
                        } else if (t === this.ROLL_UP_3_ROWS_) {
                            this.rollUpRows_ = 3;
                            this.setRollUp(e.pts)
                        } else if (t === this.ROLL_UP_4_ROWS_) {
                            this.rollUpRows_ = 4;
                            this.setRollUp(e.pts)
                        } else if (t === this.CARRIAGE_RETURN_) {
                            this.clearFormatting(e.pts);
                            this.flushDisplayed(e.pts);
                            this.shiftRowsUp_();
                            this.startPts_ = e.pts
                        } else if (t === this.BACKSPACE_) {
                            if (this.mode_ === "popOn") {
                                this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
                            } else {
                                this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
                            }
                        } else if (t === this.ERASE_DISPLAYED_MEMORY_) {
                            this.flushDisplayed(e.pts);
                            this.displayed_ = Fe()
                        } else if (t === this.ERASE_NON_DISPLAYED_MEMORY_) {
                            this.nonDisplayed_ = Fe()
                        } else if (t === this.RESUME_DIRECT_CAPTIONING_) {
                            if (this.mode_ !== "paintOn") {
                                this.flushDisplayed(e.pts);
                                this.displayed_ = Fe()
                            }
                            this.mode_ = "paintOn";
                            this.startPts_ = e.pts
                        } else if (this.isSpecialCharacter(i, r)) {
                            i = (i & 3) << 8;
                            a = Me(i | r);
                            this[this.mode_](e.pts, a);
                            this.column_++
                        } else if (this.isExtCharacter(i, r)) {
                            if (this.mode_ === "popOn") {
                                this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
                            } else {
                                this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
                            }
                            i = (i & 3) << 8;
                            a = Me(i | r);
                            this[this.mode_](e.pts, a);
                            this.column_++
                        } else if (this.isMidRowCode(i, r)) {
                            this.clearFormatting(e.pts);
                            this[this.mode_](e.pts, " ");
                            this.column_++;
                            if ((r & 14) === 14) {
                                this.addFormatting(e.pts, ["i"])
                            }
                            if ((r & 1) === 1) {
                                this.addFormatting(e.pts, ["u"])
                            }
                        } else if (this.isOffsetControlCode(i, r)) {
                            this.column_ += r & 3
                        } else if (this.isPAC(i, r)) {
                            var s = Be.indexOf(t & 7968);
                            if (this.mode_ === "rollUp") {
                                if (s - this.rollUpRows_ + 1 < 0) {
                                    s = this.rollUpRows_ - 1
                                }
                                this.setRollUp(e.pts, s)
                            }
                            if (s !== this.row_) {
                                this.clearFormatting(e.pts);
                                this.row_ = s
                            }
                            if (r & 1 && this.formatting_.indexOf("u") === -1) {
                                this.addFormatting(e.pts, ["u"])
                            }
                            if ((t & 16) === 16) {
                                this.column_ = ((t & 14) >> 1) * 4
                            }
                            if (this.isColorPAC(r)) {
                                if ((r & 14) === 14) {
                                    this.addFormatting(e.pts, ["i"])
                                }
                            }
                        } else if (this.isNormalChar(i)) {
                            if (r === 0) {
                                r = null
                            }
                            a = Me(i);
                            a += Me(r);
                            this[this.mode_](e.pts, a);
                            this.column_ += a.length
                        }
                    }
                };
                Ve.prototype = new t;
                Ve.prototype.flushDisplayed = function(e) {
                    var t = this.displayed_.map(function(e) {
                        try {
                            return e.trim()
                        } catch (e) {
                            console.error("Skipping malformed caption.");
                            return ""
                        }
                    }).join("\n").replace(/^\n+|\n+$/g, "");
                    if (t.length) {
                        this.trigger("data", {
                            startPts: this.startPts_,
                            endPts: e,
                            text: t,
                            stream: this.name_
                        })
                    }
                }
                ;
                Ve.prototype.reset = function() {
                    this.mode_ = "popOn";
                    this.topRow_ = 0;
                    this.startPts_ = 0;
                    this.displayed_ = Fe();
                    this.nonDisplayed_ = Fe();
                    this.lastControlCode_ = null;
                    this.column_ = 0;
                    this.row_ = Ue;
                    this.rollUpRows_ = 2;
                    this.formatting_ = []
                }
                ;
                Ve.prototype.setConstants = function() {
                    if (this.dataChannel_ === 0) {
                        this.BASE_ = 16;
                        this.EXT_ = 17;
                        this.CONTROL_ = (20 | this.field_) << 8;
                        this.OFFSET_ = 23
                    } else if (this.dataChannel_ === 1) {
                        this.BASE_ = 24;
                        this.EXT_ = 25;
                        this.CONTROL_ = (28 | this.field_) << 8;
                        this.OFFSET_ = 31
                    }
                    this.PADDING_ = 0;
                    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
                    this.END_OF_CAPTION_ = this.CONTROL_ | 47;
                    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
                    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
                    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
                    this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
                    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
                    this.BACKSPACE_ = this.CONTROL_ | 33;
                    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
                    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
                }
                ;
                Ve.prototype.isSpecialCharacter = function(e, t) {
                    return e === this.EXT_ && t >= 48 && t <= 63
                }
                ;
                Ve.prototype.isExtCharacter = function(e, t) {
                    return (e === this.EXT_ + 1 || e === this.EXT_ + 2) && t >= 32 && t <= 63
                }
                ;
                Ve.prototype.isMidRowCode = function(e, t) {
                    return e === this.EXT_ && t >= 32 && t <= 47
                }
                ;
                Ve.prototype.isOffsetControlCode = function(e, t) {
                    return e === this.OFFSET_ && t >= 33 && t <= 35
                }
                ;
                Ve.prototype.isPAC = function(e, t) {
                    return e >= this.BASE_ && e < this.BASE_ + 8 && t >= 64 && t <= 127
                }
                ;
                Ve.prototype.isColorPAC = function(e) {
                    return e >= 64 && e <= 79 || e >= 96 && e <= 127
                }
                ;
                Ve.prototype.isNormalChar = function(e) {
                    return e >= 32 && e <= 127
                }
                ;
                Ve.prototype.setRollUp = function(e, t) {
                    if (this.mode_ !== "rollUp") {
                        this.row_ = Ue;
                        this.mode_ = "rollUp";
                        this.flushDisplayed(e);
                        this.nonDisplayed_ = Fe();
                        this.displayed_ = Fe()
                    }
                    if (t !== undefined && t !== this.row_) {
                        for (var n = 0; n < this.rollUpRows_; n++) {
                            this.displayed_[t - n] = this.displayed_[this.row_ - n];
                            this.displayed_[this.row_ - n] = ""
                        }
                    }
                    if (t === undefined) {
                        t = this.row_
                    }
                    this.topRow_ = t - this.rollUpRows_ + 1
                }
                ;
                Ve.prototype.addFormatting = function(e, t) {
                    this.formatting_ = this.formatting_.concat(t);
                    var n = t.reduce(function(e, t) {
                        return e + "<" + t + ">"
                    }, "");
                    this[this.mode_](e, n)
                }
                ;
                Ve.prototype.clearFormatting = function(e) {
                    if (!this.formatting_.length) {
                        return
                    }
                    var t = this.formatting_.reverse().reduce(function(e, t) {
                        return e + "</" + t + ">"
                    }, "");
                    this.formatting_ = [];
                    this[this.mode_](e, t)
                }
                ;
                Ve.prototype.popOn = function(e, t) {
                    var n = this.nonDisplayed_[this.row_];
                    n += t;
                    this.nonDisplayed_[this.row_] = n
                }
                ;
                Ve.prototype.rollUp = function(e, t) {
                    var n = this.displayed_[this.row_];
                    n += t;
                    this.displayed_[this.row_] = n
                }
                ;
                Ve.prototype.shiftRowsUp_ = function() {
                    var e;
                    for (e = 0; e < this.topRow_; e++) {
                        this.displayed_[e] = ""
                    }
                    for (e = this.row_ + 1; e < Ue + 1; e++) {
                        this.displayed_[e] = ""
                    }
                    for (e = this.topRow_; e < this.row_; e++) {
                        this.displayed_[e] = this.displayed_[e + 1]
                    }
                    this.displayed_[this.row_] = ""
                }
                ;
                Ve.prototype.paintOn = function(e, t) {
                    var n = this.displayed_[this.row_];
                    n += t;
                    this.displayed_[this.row_] = n
                }
                ;
                var qe = {
                    CaptionStream: we,
                    Cea608Stream: Ve,
                    Cea708Stream: Ne
                };
                var He = {
                    H264_STREAM_TYPE: 27,
                    ADTS_STREAM_TYPE: 15,
                    METADATA_STREAM_TYPE: 21
                };
                var Ge = 8589934592;
                var We = 4294967296;
                var Ke = "shared";
                var ze = function e(t, n) {
                    var i = 1;
                    if (t > n) {
                        i = -1
                    }
                    while (Math.abs(n - t) > We) {
                        t += i * Ge
                    }
                    return t
                };
                var Ye = function e(t) {
                    var n, i;
                    e.prototype.init.call(this);
                    this.type_ = t || Ke;
                    this.push = function(e) {
                        if (this.type_ !== Ke && e.type !== this.type_) {
                            return
                        }
                        if (i === undefined) {
                            i = e.dts
                        }
                        e.dts = ze(e.dts, i);
                        e.pts = ze(e.pts, i);
                        n = e.dts;
                        this.trigger("data", e)
                    }
                    ;
                    this.flush = function() {
                        i = n;
                        this.trigger("done")
                    }
                    ;
                    this.endTimeline = function() {
                        this.flush();
                        this.trigger("endedtimeline")
                    }
                    ;
                    this.discontinuity = function() {
                        i = void 0;
                        n = void 0
                    }
                    ;
                    this.reset = function() {
                        this.discontinuity();
                        this.trigger("reset")
                    }
                };
                Ye.prototype = new t;
                var Xe = {
                    TimestampRolloverStream: Ye,
                    handleRollover: ze
                };
                var Qe = function e(t, n, i) {
                    var r, a = "";
                    for (r = n; r < i; r++) {
                        a += "%" + ("00" + t[r].toString(16)).slice(-2)
                    }
                    return a
                }, Ze = function e(t, n, i) {
                    return decodeURIComponent(Qe(t, n, i))
                }, Je = function e(t, n, i) {
                    return unescape(Qe(t, n, i))
                }, $e = function e(t) {
                    return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
                }, et = {
                    TXXX: function e(t) {
                        var n;
                        if (t.data[0] !== 3) {
                            return
                        }
                        for (n = 1; n < t.data.length; n++) {
                            if (t.data[n] === 0) {
                                t.description = Ze(t.data, 1, n);
                                t.value = Ze(t.data, n + 1, t.data.length).replace(/\0*$/, "");
                                break
                            }
                        }
                        t.data = t.value
                    },
                    WXXX: function e(t) {
                        var n;
                        if (t.data[0] !== 3) {
                            return
                        }
                        for (n = 1; n < t.data.length; n++) {
                            if (t.data[n] === 0) {
                                t.description = Ze(t.data, 1, n);
                                t.url = Ze(t.data, n + 1, t.data.length);
                                break
                            }
                        }
                    },
                    PRIV: function e(t) {
                        var n;
                        for (n = 0; n < t.data.length; n++) {
                            if (t.data[n] === 0) {
                                t.owner = Je(t.data, 0, n);
                                break
                            }
                        }
                        t.privateData = t.data.subarray(n + 1);
                        t.data = t.privateData
                    }
                }, tt;
                tt = function e(t) {
                    var n = {
                        debug: !!(t && t.debug),
                        descriptor: t && t.descriptor
                    }, i = 0, r = [], a = 0, s;
                    tt.prototype.init.call(this);
                    this.dispatchType = He.METADATA_STREAM_TYPE.toString(16);
                    if (n.descriptor) {
                        for (s = 0; s < n.descriptor.length; s++) {
                            this.dispatchType += ("00" + n.descriptor[s].toString(16)).slice(-2)
                        }
                    }
                    this.push = function(e) {
                        var t, s, o, u, l, d;
                        if (e.type !== "timed-metadata") {
                            return
                        }
                        if (e.dataAlignmentIndicator) {
                            a = 0;
                            r.length = 0
                        }
                        if (r.length === 0 && (e.data.length < 10 || e.data[0] !== "I".charCodeAt(0) || e.data[1] !== "D".charCodeAt(0) || e.data[2] !== "3".charCodeAt(0))) {
                            if (n.debug) {
                                console.log("Skipping unrecognized metadata packet")
                            }
                            return
                        }
                        r.push(e);
                        a += e.data.byteLength;
                        if (r.length === 1) {
                            i = $e(e.data.subarray(6, 10));
                            i += 10
                        }
                        if (a < i) {
                            return
                        }
                        t = {
                            data: new Uint8Array(i),
                            frames: [],
                            pts: r[0].pts,
                            dts: r[0].dts
                        };
                        for (l = 0; l < i; ) {
                            t.data.set(r[0].data.subarray(0, i - l), l);
                            l += r[0].data.byteLength;
                            a -= r[0].data.byteLength;
                            r.shift()
                        }
                        s = 10;
                        if (t.data[5] & 64) {
                            s += 4;
                            s += $e(t.data.subarray(10, 14));
                            i -= $e(t.data.subarray(16, 20))
                        }
                        do {
                            o = $e(t.data.subarray(s + 4, s + 8));
                            if (o < 1) {
                                return console.log("Malformed ID3 frame encountered. Skipping metadata parsing.")
                            }
                            d = String.fromCharCode(t.data[s], t.data[s + 1], t.data[s + 2], t.data[s + 3]);
                            u = {
                                id: d,
                                data: t.data.subarray(s + 10, s + o + 10)
                            };
                            u.key = u.id;
                            if (et[u.id]) {
                                et[u.id](u);
                                if (u.owner === "com.apple.streaming.transportStreamTimestamp") {
                                    var c = u.data
                                      , f = (c[3] & 1) << 30 | c[4] << 22 | c[5] << 14 | c[6] << 6 | c[7] >>> 2;
                                    f *= 4;
                                    f += c[7] & 3;
                                    u.timeStamp = f;
                                    if (t.pts === undefined && t.dts === undefined) {
                                        t.pts = u.timeStamp;
                                        t.dts = u.timeStamp
                                    }
                                    this.trigger("timestamp", u)
                                }
                            }
                            t.frames.push(u);
                            s += 10;
                            s += o
                        } while (s < i);
                        this.trigger("data", t)
                    }
                }
                ;
                tt.prototype = new t;
                var nt = tt;
                var it = Xe.TimestampRolloverStream;
                var rt, at, st;
                var ot = 188
                  , ut = 71;
                rt = function e() {
                    var t = new Uint8Array(ot)
                      , n = 0;
                    rt.prototype.init.call(this);
                    this.push = function(e) {
                        var i = 0, r = ot, a;
                        if (n) {
                            a = new Uint8Array(e.byteLength + n);
                            a.set(t.subarray(0, n));
                            a.set(e, n);
                            n = 0
                        } else {
                            a = e
                        }
                        while (r < a.byteLength) {
                            if (a[i] === ut && a[r] === ut) {
                                this.trigger("data", a.subarray(i, r));
                                i += ot;
                                r += ot;
                                continue
                            }
                            i++;
                            r++
                        }
                        if (i < a.byteLength) {
                            t.set(a.subarray(i), 0);
                            n = a.byteLength - i
                        }
                    }
                    ;
                    this.flush = function() {
                        if (n === ot && t[0] === ut) {
                            this.trigger("data", t);
                            n = 0
                        }
                        this.trigger("done")
                    }
                    ;
                    this.endTimeline = function() {
                        this.flush();
                        this.trigger("endedtimeline")
                    }
                    ;
                    this.reset = function() {
                        n = 0;
                        this.trigger("reset")
                    }
                }
                ;
                rt.prototype = new t;
                at = function e() {
                    var t, n, i, r;
                    at.prototype.init.call(this);
                    r = this;
                    this.packetsWaitingForPmt = [];
                    this.programMapTable = undefined;
                    t = function e(t, r) {
                        var a = 0;
                        if (r.payloadUnitStartIndicator) {
                            a += t[a] + 1
                        }
                        if (r.type === "pat") {
                            n(t.subarray(a), r)
                        } else {
                            i(t.subarray(a), r)
                        }
                    }
                    ;
                    n = function e(t, n) {
                        n.section_number = t[7];
                        n.last_section_number = t[8];
                        r.pmtPid = (t[10] & 31) << 8 | t[11];
                        n.pmtPid = r.pmtPid
                    }
                    ;
                    i = function e(t, n) {
                        var i, a, s, o;
                        if (!(t[5] & 1)) {
                            return
                        }
                        r.programMapTable = {
                            video: null,
                            audio: null,
                            "timed-metadata": {}
                        };
                        i = (t[1] & 15) << 8 | t[2];
                        a = 3 + i - 4;
                        s = (t[10] & 15) << 8 | t[11];
                        o = 12 + s;
                        while (o < a) {
                            var u = t[o];
                            var l = (t[o + 1] & 31) << 8 | t[o + 2];
                            if (u === He.H264_STREAM_TYPE && r.programMapTable.video === null) {
                                r.programMapTable.video = l
                            } else if (u === He.ADTS_STREAM_TYPE && r.programMapTable.audio === null) {
                                r.programMapTable.audio = l
                            } else if (u === He.METADATA_STREAM_TYPE) {
                                r.programMapTable["timed-metadata"][l] = u
                            }
                            o += ((t[o + 3] & 15) << 8 | t[o + 4]) + 5
                        }
                        n.programMapTable = r.programMapTable
                    }
                    ;
                    this.push = function(e) {
                        var n = {}
                          , i = 4;
                        n.payloadUnitStartIndicator = !!(e[1] & 64);
                        n.pid = e[1] & 31;
                        n.pid <<= 8;
                        n.pid |= e[2];
                        if ((e[3] & 48) >>> 4 > 1) {
                            i += e[i] + 1
                        }
                        if (n.pid === 0) {
                            n.type = "pat";
                            t(e.subarray(i), n);
                            this.trigger("data", n)
                        } else if (n.pid === this.pmtPid) {
                            n.type = "pmt";
                            t(e.subarray(i), n);
                            this.trigger("data", n);
                            while (this.packetsWaitingForPmt.length) {
                                this.processPes_.apply(this, this.packetsWaitingForPmt.shift())
                            }
                        } else if (this.programMapTable === undefined) {
                            this.packetsWaitingForPmt.push([e, i, n])
                        } else {
                            this.processPes_(e, i, n)
                        }
                    }
                    ;
                    this.processPes_ = function(e, t, n) {
                        if (n.pid === this.programMapTable.video) {
                            n.streamType = He.H264_STREAM_TYPE
                        } else if (n.pid === this.programMapTable.audio) {
                            n.streamType = He.ADTS_STREAM_TYPE
                        } else {
                            n.streamType = this.programMapTable["timed-metadata"][n.pid]
                        }
                        n.type = "pes";
                        n.data = e.subarray(t);
                        this.trigger("data", n)
                    }
                }
                ;
                at.prototype = new t;
                at.STREAM_TYPES = {
                    h264: 27,
                    adts: 15
                };
                st = function e() {
                    var t = this, n = {
                        data: [],
                        size: 0
                    }, i = {
                        data: [],
                        size: 0
                    }, r = {
                        data: [],
                        size: 0
                    }, a, s = function e(t, n) {
                        var i;
                        var r = t[0] << 16 | t[1] << 8 | t[2];
                        n.data = new Uint8Array;
                        if (r !== 1) {
                            return
                        }
                        n.packetLength = 6 + (t[4] << 8 | t[5]);
                        n.dataAlignmentIndicator = (t[6] & 4) !== 0;
                        i = t[7];
                        if (i & 192) {
                            n.pts = (t[9] & 14) << 27 | (t[10] & 255) << 20 | (t[11] & 254) << 12 | (t[12] & 255) << 5 | (t[13] & 254) >>> 3;
                            n.pts *= 4;
                            n.pts += (t[13] & 6) >>> 1;
                            n.dts = n.pts;
                            if (i & 64) {
                                n.dts = (t[14] & 14) << 27 | (t[15] & 255) << 20 | (t[16] & 254) << 12 | (t[17] & 255) << 5 | (t[18] & 254) >>> 3;
                                n.dts *= 4;
                                n.dts += (t[18] & 6) >>> 1
                            }
                        }
                        n.data = t.subarray(9 + t[8])
                    }, o = function e(n, i, r) {
                        var a = new Uint8Array(n.size), o = {
                            type: i
                        }, u = 0, l = 0, d = false, c;
                        if (!n.data.length || n.size < 9) {
                            return
                        }
                        o.trackId = n.data[0].pid;
                        for (u = 0; u < n.data.length; u++) {
                            c = n.data[u];
                            a.set(c.data, l);
                            l += c.data.byteLength
                        }
                        s(a, o);
                        d = i === "video" || o.packetLength <= n.size;
                        if (r || d) {
                            n.size = 0;
                            n.data.length = 0
                        }
                        if (d) {
                            t.trigger("data", o)
                        }
                    };
                    st.prototype.init.call(this);
                    this.push = function(e) {
                        ({
                            pat: function e() {},
                            pes: function t() {
                                var a, s;
                                switch (e.streamType) {
                                case He.H264_STREAM_TYPE:
                                    a = n;
                                    s = "video";
                                    break;
                                case He.ADTS_STREAM_TYPE:
                                    a = i;
                                    s = "audio";
                                    break;
                                case He.METADATA_STREAM_TYPE:
                                    a = r;
                                    s = "timed-metadata";
                                    break;
                                default:
                                    return
                                }
                                if (e.payloadUnitStartIndicator) {
                                    o(a, s, true)
                                }
                                a.data.push(e);
                                a.size += e.data.byteLength
                            },
                            pmt: function n() {
                                var i = {
                                    type: "metadata",
                                    tracks: []
                                };
                                a = e.programMapTable;
                                if (a.video !== null) {
                                    i.tracks.push({
                                        timelineStartInfo: {
                                            baseMediaDecodeTime: 0
                                        },
                                        id: +a.video,
                                        codec: "avc",
                                        type: "video"
                                    })
                                }
                                if (a.audio !== null) {
                                    i.tracks.push({
                                        timelineStartInfo: {
                                            baseMediaDecodeTime: 0
                                        },
                                        id: +a.audio,
                                        codec: "adts",
                                        type: "audio"
                                    })
                                }
                                t.trigger("data", i)
                            }
                        })[e.type]()
                    }
                    ;
                    this.reset = function() {
                        n.size = 0;
                        n.data.length = 0;
                        i.size = 0;
                        i.data.length = 0;
                        this.trigger("reset")
                    }
                    ;
                    this.flushStreams_ = function() {
                        o(n, "video");
                        o(i, "audio");
                        o(r, "timed-metadata")
                    }
                    ;
                    this.flush = function() {
                        this.flushStreams_();
                        this.trigger("done")
                    }
                }
                ;
                st.prototype = new t;
                var lt = {
                    PAT_PID: 0,
                    MP2T_PACKET_LENGTH: ot,
                    TransportPacketStream: rt,
                    TransportParseStream: at,
                    ElementaryStream: st,
                    TimestampRolloverStream: it,
                    CaptionStream: qe.CaptionStream,
                    Cea608Stream: qe.Cea608Stream,
                    Cea708Stream: qe.Cea708Stream,
                    MetadataStream: nt
                };
                for (var dt in He) {
                    if (He.hasOwnProperty(dt)) {
                        lt[dt] = He[dt]
                    }
                }
                var ct = lt;
                var ft = de.ONE_SECOND_IN_TS;
                var pt;
                var ht = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                pt = function e(t) {
                    var n, i = 0;
                    pt.prototype.init.call(this);
                    this.push = function(e) {
                        var r = 0, a, s, o, u, l, d;
                        if (!t) {
                            i = 0
                        }
                        if (e.type !== "audio") {
                            return
                        }
                        if (n) {
                            u = n;
                            n = new Uint8Array(u.byteLength + e.data.byteLength);
                            n.set(u);
                            n.set(e.data, u.byteLength)
                        } else {
                            n = e.data
                        }
                        while (r + 5 < n.length) {
                            if (n[r] !== 255 || (n[r + 1] & 246) !== 240) {
                                r++;
                                continue
                            }
                            s = (~n[r + 1] & 1) * 2;
                            a = (n[r + 3] & 3) << 11 | n[r + 4] << 3 | (n[r + 5] & 224) >> 5;
                            l = ((n[r + 6] & 3) + 1) * 1024;
                            d = l * ft / ht[(n[r + 2] & 60) >>> 2];
                            o = r + a;
                            if (n.byteLength < o) {
                                return
                            }
                            this.trigger("data", {
                                pts: e.pts + i * d,
                                dts: e.dts + i * d,
                                sampleCount: l,
                                audioobjecttype: (n[r + 2] >>> 6 & 3) + 1,
                                channelcount: (n[r + 2] & 1) << 2 | (n[r + 3] & 192) >>> 6,
                                samplerate: ht[(n[r + 2] & 60) >>> 2],
                                samplingfrequencyindex: (n[r + 2] & 60) >>> 2,
                                samplesize: 16,
                                data: n.subarray(r + 7 + s, o)
                            });
                            i++;
                            if (n.byteLength === o) {
                                n = undefined;
                                return
                            }
                            n = n.subarray(o)
                        }
                    }
                    ;
                    this.flush = function() {
                        i = 0;
                        this.trigger("done")
                    }
                    ;
                    this.reset = function() {
                        n = void 0;
                        this.trigger("reset")
                    }
                    ;
                    this.endTimeline = function() {
                        n = void 0;
                        this.trigger("endedtimeline")
                    }
                }
                ;
                pt.prototype = new t;
                var vt = pt;
                var gt;
                gt = function e(t) {
                    var n = t.byteLength
                      , i = 0
                      , r = 0;
                    this.length = function() {
                        return 8 * n
                    }
                    ;
                    this.bitsAvailable = function() {
                        return 8 * n + r
                    }
                    ;
                    this.loadWord = function() {
                        var e = t.byteLength - n
                          , a = new Uint8Array(4)
                          , s = Math.min(4, n);
                        if (s === 0) {
                            throw new Error("no bytes available")
                        }
                        a.set(t.subarray(e, e + s));
                        i = new DataView(a.buffer).getUint32(0);
                        r = s * 8;
                        n -= s
                    }
                    ;
                    this.skipBits = function(e) {
                        var t;
                        if (r > e) {
                            i <<= e;
                            r -= e
                        } else {
                            e -= r;
                            t = Math.floor(e / 8);
                            e -= t * 8;
                            n -= t;
                            this.loadWord();
                            i <<= e;
                            r -= e
                        }
                    }
                    ;
                    this.readBits = function(e) {
                        var t = Math.min(r, e)
                          , a = i >>> 32 - t;
                        r -= t;
                        if (r > 0) {
                            i <<= t
                        } else if (n > 0) {
                            this.loadWord()
                        }
                        t = e - t;
                        if (t > 0) {
                            return a << t | this.readBits(t)
                        }
                        return a
                    }
                    ;
                    this.skipLeadingZeros = function() {
                        var e;
                        for (e = 0; e < r; ++e) {
                            if ((i & 2147483648 >>> e) !== 0) {
                                i <<= e;
                                r -= e;
                                return e
                            }
                        }
                        this.loadWord();
                        return e + this.skipLeadingZeros()
                    }
                    ;
                    this.skipUnsignedExpGolomb = function() {
                        this.skipBits(1 + this.skipLeadingZeros())
                    }
                    ;
                    this.skipExpGolomb = function() {
                        this.skipBits(1 + this.skipLeadingZeros())
                    }
                    ;
                    this.readUnsignedExpGolomb = function() {
                        var e = this.skipLeadingZeros();
                        return this.readBits(e + 1) - 1
                    }
                    ;
                    this.readExpGolomb = function() {
                        var e = this.readUnsignedExpGolomb();
                        if (1 & e) {
                            return 1 + e >>> 1
                        }
                        return -1 * (e >>> 1)
                    }
                    ;
                    this.readBoolean = function() {
                        return this.readBits(1) === 1
                    }
                    ;
                    this.readUnsignedByte = function() {
                        return this.readBits(8)
                    }
                    ;
                    this.loadWord()
                }
                ;
                var mt = gt;
                var yt, _t;
                var bt;
                _t = function e() {
                    var t = 0, n, i;
                    _t.prototype.init.call(this);
                    this.push = function(e) {
                        var r;
                        if (!i) {
                            i = e.data
                        } else {
                            r = new Uint8Array(i.byteLength + e.data.byteLength);
                            r.set(i);
                            r.set(e.data, i.byteLength);
                            i = r
                        }
                        var a = i.byteLength;
                        for (; t < a - 3; t++) {
                            if (i[t + 2] === 1) {
                                n = t + 5;
                                break
                            }
                        }
                        while (n < a) {
                            switch (i[n]) {
                            case 0:
                                if (i[n - 1] !== 0) {
                                    n += 2;
                                    break
                                } else if (i[n - 2] !== 0) {
                                    n++;
                                    break
                                }
                                if (t + 3 !== n - 2) {
                                    this.trigger("data", i.subarray(t + 3, n - 2))
                                }
                                do {
                                    n++
                                } while (i[n] !== 1 && n < a);
                                t = n - 2;
                                n += 3;
                                break;
                            case 1:
                                if (i[n - 1] !== 0 || i[n - 2] !== 0) {
                                    n += 3;
                                    break
                                }
                                this.trigger("data", i.subarray(t + 3, n - 2));
                                t = n - 2;
                                n += 3;
                                break;
                            default:
                                n += 3;
                                break
                            }
                        }
                        i = i.subarray(t);
                        n -= t;
                        t = 0
                    }
                    ;
                    this.reset = function() {
                        i = null;
                        t = 0;
                        this.trigger("reset")
                    }
                    ;
                    this.flush = function() {
                        if (i && i.byteLength > 3) {
                            this.trigger("data", i.subarray(t + 3))
                        }
                        i = null;
                        t = 0;
                        this.trigger("done")
                    }
                    ;
                    this.endTimeline = function() {
                        this.flush();
                        this.trigger("endedtimeline")
                    }
                }
                ;
                _t.prototype = new t;
                bt = {
                    100: true,
                    110: true,
                    122: true,
                    244: true,
                    44: true,
                    83: true,
                    86: true,
                    118: true,
                    128: true,
                    138: true,
                    139: true,
                    134: true
                };
                yt = function e() {
                    var t = new _t, n, i, r, a, s, o, u;
                    yt.prototype.init.call(this);
                    n = this;
                    this.push = function(e) {
                        if (e.type !== "video") {
                            return
                        }
                        i = e.trackId;
                        r = e.pts;
                        a = e.dts;
                        t.push(e)
                    }
                    ;
                    t.on("data", function(e) {
                        var t = {
                            trackId: i,
                            pts: r,
                            dts: a,
                            data: e
                        };
                        switch (e[0] & 31) {
                        case 5:
                            t.nalUnitType = "slice_layer_without_partitioning_rbsp_idr";
                            break;
                        case 6:
                            t.nalUnitType = "sei_rbsp";
                            t.escapedRBSP = s(e.subarray(1));
                            break;
                        case 7:
                            t.nalUnitType = "seq_parameter_set_rbsp";
                            t.escapedRBSP = s(e.subarray(1));
                            t.config = o(t.escapedRBSP);
                            break;
                        case 8:
                            t.nalUnitType = "pic_parameter_set_rbsp";
                            break;
                        case 9:
                            t.nalUnitType = "access_unit_delimiter_rbsp";
                            break
                        }
                        n.trigger("data", t)
                    });
                    t.on("done", function() {
                        n.trigger("done")
                    });
                    t.on("partialdone", function() {
                        n.trigger("partialdone")
                    });
                    t.on("reset", function() {
                        n.trigger("reset")
                    });
                    t.on("endedtimeline", function() {
                        n.trigger("endedtimeline")
                    });
                    this.flush = function() {
                        t.flush()
                    }
                    ;
                    this.partialFlush = function() {
                        t.partialFlush()
                    }
                    ;
                    this.reset = function() {
                        t.reset()
                    }
                    ;
                    this.endTimeline = function() {
                        t.endTimeline()
                    }
                    ;
                    u = function e(t, n) {
                        var i = 8, r = 8, a, s;
                        for (a = 0; a < t; a++) {
                            if (r !== 0) {
                                s = n.readExpGolomb();
                                r = (i + s + 256) % 256
                            }
                            i = r === 0 ? i : r
                        }
                    }
                    ;
                    s = function e(t) {
                        var n = t.byteLength, i = [], r = 1, a, s;
                        while (r < n - 2) {
                            if (t[r] === 0 && t[r + 1] === 0 && t[r + 2] === 3) {
                                i.push(r + 2);
                                r += 2
                            } else {
                                r++
                            }
                        }
                        if (i.length === 0) {
                            return t
                        }
                        a = n - i.length;
                        s = new Uint8Array(a);
                        var o = 0;
                        for (r = 0; r < a; o++,
                        r++) {
                            if (o === i[0]) {
                                o++;
                                i.shift()
                            }
                            s[r] = t[o]
                        }
                        return s
                    }
                    ;
                    o = function e(t) {
                        var n = 0, i = 0, r = 0, a = 0, s = 1, o, l, d, c, f, p, h, v, g, m, y, _, b, S;
                        o = new mt(t);
                        l = o.readUnsignedByte();
                        c = o.readUnsignedByte();
                        d = o.readUnsignedByte();
                        o.skipUnsignedExpGolomb();
                        if (bt[l]) {
                            f = o.readUnsignedExpGolomb();
                            if (f === 3) {
                                o.skipBits(1)
                            }
                            o.skipUnsignedExpGolomb();
                            o.skipUnsignedExpGolomb();
                            o.skipBits(1);
                            if (o.readBoolean()) {
                                y = f !== 3 ? 8 : 12;
                                for (S = 0; S < y; S++) {
                                    if (o.readBoolean()) {
                                        if (S < 6) {
                                            u(16, o)
                                        } else {
                                            u(64, o)
                                        }
                                    }
                                }
                            }
                        }
                        o.skipUnsignedExpGolomb();
                        p = o.readUnsignedExpGolomb();
                        if (p === 0) {
                            o.readUnsignedExpGolomb()
                        } else if (p === 1) {
                            o.skipBits(1);
                            o.skipExpGolomb();
                            o.skipExpGolomb();
                            h = o.readUnsignedExpGolomb();
                            for (S = 0; S < h; S++) {
                                o.skipExpGolomb()
                            }
                        }
                        o.skipUnsignedExpGolomb();
                        o.skipBits(1);
                        v = o.readUnsignedExpGolomb();
                        g = o.readUnsignedExpGolomb();
                        m = o.readBits(1);
                        if (m === 0) {
                            o.skipBits(1)
                        }
                        o.skipBits(1);
                        if (o.readBoolean()) {
                            n = o.readUnsignedExpGolomb();
                            i = o.readUnsignedExpGolomb();
                            r = o.readUnsignedExpGolomb();
                            a = o.readUnsignedExpGolomb()
                        }
                        if (o.readBoolean()) {
                            if (o.readBoolean()) {
                                b = o.readUnsignedByte();
                                switch (b) {
                                case 1:
                                    _ = [1, 1];
                                    break;
                                case 2:
                                    _ = [12, 11];
                                    break;
                                case 3:
                                    _ = [10, 11];
                                    break;
                                case 4:
                                    _ = [16, 11];
                                    break;
                                case 5:
                                    _ = [40, 33];
                                    break;
                                case 6:
                                    _ = [24, 11];
                                    break;
                                case 7:
                                    _ = [20, 11];
                                    break;
                                case 8:
                                    _ = [32, 11];
                                    break;
                                case 9:
                                    _ = [80, 33];
                                    break;
                                case 10:
                                    _ = [18, 11];
                                    break;
                                case 11:
                                    _ = [15, 11];
                                    break;
                                case 12:
                                    _ = [64, 33];
                                    break;
                                case 13:
                                    _ = [160, 99];
                                    break;
                                case 14:
                                    _ = [4, 3];
                                    break;
                                case 15:
                                    _ = [3, 2];
                                    break;
                                case 16:
                                    _ = [2, 1];
                                    break;
                                case 255:
                                    {
                                        _ = [o.readUnsignedByte() << 8 | o.readUnsignedByte(), o.readUnsignedByte() << 8 | o.readUnsignedByte()];
                                        break
                                    }
                                }
                                if (_) {
                                    s = _[0] / _[1]
                                }
                            }
                        }
                        return {
                            profileIdc: l,
                            levelIdc: d,
                            profileCompatibility: c,
                            width: Math.ceil(((v + 1) * 16 - n * 2 - i * 2) * s),
                            height: (2 - m) * (g + 1) * 16 - r * 2 - a * 2,
                            sarRatio: _
                        }
                    }
                }
                ;
                yt.prototype = new t;
                var St = {
                    H264Stream: yt,
                    NalByteStream: _t
                };
                var At = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                var Tt = function e(t, n) {
                    var i = t[n + 6] << 21 | t[n + 7] << 14 | t[n + 8] << 7 | t[n + 9]
                      , r = t[n + 5]
                      , a = (r & 16) >> 4;
                    i = i >= 0 ? i : 0;
                    if (a) {
                        return i + 20
                    }
                    return i + 10
                };
                var kt = function e(t, n) {
                    if (t.length - n < 10 || t[n] !== "I".charCodeAt(0) || t[n + 1] !== "D".charCodeAt(0) || t[n + 2] !== "3".charCodeAt(0)) {
                        return n
                    }
                    n += Tt(t, n);
                    return e(t, n)
                };
                var Et = function e(t) {
                    var n = kt(t, 0);
                    return t.length >= n + 2 && (t[n] & 255) === 255 && (t[n + 1] & 240) === 240 && (t[n + 1] & 22) === 16
                };
                var Pt = function e(t) {
                    return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
                };
                var It = function e(t, n, i) {
                    var r, a = "";
                    for (r = n; r < i; r++) {
                        a += "%" + ("00" + t[r].toString(16)).slice(-2)
                    }
                    return a
                };
                var Ct = function e(t, n, i) {
                    return unescape(It(t, n, i))
                };
                var wt = function e(t, n) {
                    var i = (t[n + 5] & 224) >> 5
                      , r = t[n + 4] << 3
                      , a = t[n + 3] & 3 << 11;
                    return a | r | i
                };
                var jt = function e(t, n) {
                    if (t[n] === "I".charCodeAt(0) && t[n + 1] === "D".charCodeAt(0) && t[n + 2] === "3".charCodeAt(0)) {
                        return "timed-metadata"
                    } else if (t[n] & 255 === 255 && (t[n + 1] & 240) === 240) {
                        return "audio"
                    }
                    return null
                };
                var Lt = function e(t) {
                    var n = 0;
                    while (n + 5 < t.length) {
                        if (t[n] !== 255 || (t[n + 1] & 246) !== 240) {
                            n++;
                            continue
                        }
                        return At[(t[n + 2] & 60) >>> 2]
                    }
                    return null
                };
                var Ot = function e(t) {
                    var n, i, r, a;
                    n = 10;
                    if (t[5] & 64) {
                        n += 4;
                        n += Pt(t.subarray(10, 14))
                    }
                    do {
                        i = Pt(t.subarray(n + 4, n + 8));
                        if (i < 1) {
                            return null
                        }
                        a = String.fromCharCode(t[n], t[n + 1], t[n + 2], t[n + 3]);
                        if (a === "PRIV") {
                            r = t.subarray(n + 10, n + i + 10);
                            for (var s = 0; s < r.byteLength; s++) {
                                if (r[s] === 0) {
                                    var o = Ct(r, 0, s);
                                    if (o === "com.apple.streaming.transportStreamTimestamp") {
                                        var u = r.subarray(s + 1);
                                        var l = (u[3] & 1) << 30 | u[4] << 22 | u[5] << 14 | u[6] << 6 | u[7] >>> 2;
                                        l *= 4;
                                        l += u[7] & 3;
                                        return l
                                    }
                                    break
                                }
                            }
                        }
                        n += 10;
                        n += i
                    } while (n < t.byteLength);
                    return null
                };
                var xt = {
                    isLikelyAacData: Et,
                    parseId3TagSize: Tt,
                    parseAdtsSize: wt,
                    parseType: jt,
                    parseSampleRate: Lt,
                    parseAacTimestamp: Ot
                };
                var Dt;
                Dt = function e() {
                    var t = new Uint8Array
                      , n = 0;
                    Dt.prototype.init.call(this);
                    this.setTimestamp = function(e) {
                        n = e
                    }
                    ;
                    this.push = function(e) {
                        var i = 0, r = 0, a, s, o, u;
                        if (t.length) {
                            u = t.length;
                            t = new Uint8Array(e.byteLength + u);
                            t.set(t.subarray(0, u));
                            t.set(e, u)
                        } else {
                            t = e
                        }
                        while (t.length - r >= 3) {
                            if (t[r] === "I".charCodeAt(0) && t[r + 1] === "D".charCodeAt(0) && t[r + 2] === "3".charCodeAt(0)) {
                                if (t.length - r < 10) {
                                    break
                                }
                                i = xt.parseId3TagSize(t, r);
                                if (r + i > t.length) {
                                    break
                                }
                                s = {
                                    type: "timed-metadata",
                                    data: t.subarray(r, r + i)
                                };
                                this.trigger("data", s);
                                r += i;
                                continue
                            } else if ((t[r] & 255) === 255 && (t[r + 1] & 240) === 240) {
                                if (t.length - r < 7) {
                                    break
                                }
                                i = xt.parseAdtsSize(t, r);
                                if (r + i > t.length) {
                                    break
                                }
                                o = {
                                    type: "audio",
                                    data: t.subarray(r, r + i),
                                    pts: n,
                                    dts: n
                                };
                                this.trigger("data", o);
                                r += i;
                                continue
                            }
                            r++
                        }
                        a = t.length - r;
                        if (a > 0) {
                            t = t.subarray(r)
                        } else {
                            t = new Uint8Array
                        }
                    }
                    ;
                    this.reset = function() {
                        t = new Uint8Array;
                        this.trigger("reset")
                    }
                    ;
                    this.endTimeline = function() {
                        t = new Uint8Array;
                        this.trigger("endedtimeline")
                    }
                }
                ;
                Dt.prototype = new t;
                var Nt = Dt;
                var Rt = ["audioobjecttype", "channelcount", "samplerate", "samplingfrequencyindex", "samplesize"];
                var Mt = Rt;
                var Ut = ["width", "height", "profileIdc", "levelIdc", "profileCompatibility", "sarRatio"];
                var Bt = Ut;
                var Ft = St.H264Stream;
                var Vt = xt.isLikelyAacData;
                var qt = de.ONE_SECOND_IN_TS;
                var Ht, Gt, Wt, Kt;
                var zt = function e(t, n) {
                    var i;
                    if (t.length !== n.length) {
                        return false
                    }
                    for (i = 0; i < t.length; i++) {
                        if (t[i] !== n[i]) {
                            return false
                        }
                    }
                    return true
                };
                var Yt = function e(t, n, i, r, a, s) {
                    var o = i - n
                      , u = r - n
                      , l = a - i;
                    return {
                        start: {
                            dts: t,
                            pts: t + o
                        },
                        end: {
                            dts: t + u,
                            pts: t + l
                        },
                        prependedContentDuration: s,
                        baseMediaDecodeTime: t
                    }
                };
                Gt = function e(t, n) {
                    var i = []
                      , r = 0
                      , a = 0
                      , s = 0
                      , o = Infinity;
                    n = n || {};
                    Gt.prototype.init.call(this);
                    this.push = function(e) {
                        Se.collectDtsInfo(t, e);
                        if (t) {
                            Mt.forEach(function(n) {
                                t[n] = e[n]
                            })
                        }
                        i.push(e)
                    }
                    ;
                    this.setEarliestDts = function(e) {
                        a = e
                    }
                    ;
                    this.setVideoBaseMediaDecodeTime = function(e) {
                        o = e
                    }
                    ;
                    this.setAudioAppendStart = function(e) {
                        s = e
                    }
                    ;
                    this.flush = function() {
                        var e, u, l, d, c, f, p;
                        if (i.length === 0) {
                            this.trigger("done", "AudioSegmentStream");
                            return
                        }
                        e = ge.trimAdtsFramesByEarliestDts(i, t, a);
                        t.baseMediaDecodeTime = Se.calculateTrackBaseMediaDecodeTime(t, n.keepOriginalTimestamps);
                        p = ge.prefixWithSilence(t, e, s, o);
                        t.samples = ge.generateSampleTable(e);
                        l = B.mdat(ge.concatenateFrameData(e));
                        i = [];
                        u = B.moof(r, [t]);
                        d = new Uint8Array(u.byteLength + l.byteLength);
                        r++;
                        d.set(u);
                        d.set(l, u.byteLength);
                        Se.clearDtsInfo(t);
                        c = Math.ceil(qt * 1024 / t.samplerate);
                        if (e.length) {
                            f = e.length * c;
                            this.trigger("segmentTimingInfo", Yt(de.audioTsToVideoTs(t.baseMediaDecodeTime, t.samplerate), e[0].dts, e[0].pts, e[0].dts + f, e[0].pts + f, p || 0));
                            this.trigger("timingInfo", {
                                start: e[0].pts,
                                end: e[0].pts + f
                            })
                        }
                        this.trigger("data", {
                            track: t,
                            boxes: d
                        });
                        this.trigger("done", "AudioSegmentStream")
                    }
                    ;
                    this.reset = function() {
                        Se.clearDtsInfo(t);
                        i = [];
                        this.trigger("reset")
                    }
                }
                ;
                Gt.prototype = new t;
                Ht = function e(t, n) {
                    var i = 0, r = [], a = [], s, o;
                    n = n || {};
                    Ht.prototype.init.call(this);
                    delete t.minPTS;
                    this.gopCache_ = [];
                    this.push = function(e) {
                        Se.collectDtsInfo(t, e);
                        if (e.nalUnitType === "seq_parameter_set_rbsp" && !s) {
                            s = e.config;
                            t.sps = [e.data];
                            Bt.forEach(function(e) {
                                t[e] = s[e]
                            }, this)
                        }
                        if (e.nalUnitType === "pic_parameter_set_rbsp" && !o) {
                            o = e.data;
                            t.pps = [e.data]
                        }
                        r.push(e)
                    }
                    ;
                    this.flush = function() {
                        var e, s, o, u, l, d, c = 0, f, p;
                        while (r.length) {
                            if (r[0].nalUnitType === "access_unit_delimiter_rbsp") {
                                break
                            }
                            r.shift()
                        }
                        if (r.length === 0) {
                            this.resetStream_();
                            this.trigger("done", "VideoSegmentStream");
                            return
                        }
                        e = X.groupNalsIntoFrames(r);
                        o = X.groupFramesIntoGops(e);
                        if (!o[0][0].keyFrame) {
                            s = this.getGopForFusion_(r[0], t);
                            if (s) {
                                c = s.duration;
                                o.unshift(s);
                                o.byteLength += s.byteLength;
                                o.nalCount += s.nalCount;
                                o.pts = s.pts;
                                o.dts = s.dts;
                                o.duration += s.duration
                            } else {
                                o = X.extendFirstKeyFrame(o)
                            }
                        }
                        if (a.length) {
                            var h;
                            if (n.alignGopsAtEnd) {
                                h = this.alignGopsAtEnd_(o)
                            } else {
                                h = this.alignGopsAtStart_(o)
                            }
                            if (!h) {
                                this.gopCache_.unshift({
                                    gop: o.pop(),
                                    pps: t.pps,
                                    sps: t.sps
                                });
                                this.gopCache_.length = Math.min(6, this.gopCache_.length);
                                r = [];
                                this.resetStream_();
                                this.trigger("done", "VideoSegmentStream");
                                return
                            }
                            Se.clearDtsInfo(t);
                            o = h
                        }
                        Se.collectDtsInfo(t, o);
                        t.samples = X.generateSampleTable(o);
                        l = B.mdat(X.concatenateNalData(o));
                        t.baseMediaDecodeTime = Se.calculateTrackBaseMediaDecodeTime(t, n.keepOriginalTimestamps);
                        this.trigger("processedGopsInfo", o.map(function(e) {
                            return {
                                pts: e.pts,
                                dts: e.dts,
                                byteLength: e.byteLength
                            }
                        }));
                        f = o[0];
                        p = o[o.length - 1];
                        this.trigger("segmentTimingInfo", Yt(t.baseMediaDecodeTime, f.dts, f.pts, p.dts + p.duration, p.pts + p.duration, c));
                        this.trigger("timingInfo", {
                            start: o[0].pts,
                            end: o[o.length - 1].pts + o[o.length - 1].duration
                        });
                        this.gopCache_.unshift({
                            gop: o.pop(),
                            pps: t.pps,
                            sps: t.sps
                        });
                        this.gopCache_.length = Math.min(6, this.gopCache_.length);
                        r = [];
                        this.trigger("baseMediaDecodeTime", t.baseMediaDecodeTime);
                        this.trigger("timelineStartInfo", t.timelineStartInfo);
                        u = B.moof(i, [t]);
                        d = new Uint8Array(u.byteLength + l.byteLength);
                        i++;
                        d.set(u);
                        d.set(l, u.byteLength);
                        this.trigger("data", {
                            track: t,
                            boxes: d
                        });
                        this.resetStream_();
                        this.trigger("done", "VideoSegmentStream")
                    }
                    ;
                    this.reset = function() {
                        this.resetStream_();
                        r = [];
                        this.gopCache_.length = 0;
                        a.length = 0;
                        this.trigger("reset")
                    }
                    ;
                    this.resetStream_ = function() {
                        Se.clearDtsInfo(t);
                        s = undefined;
                        o = undefined
                    }
                    ;
                    this.getGopForFusion_ = function(e) {
                        var n = 45e3, i = 1e4, r = Infinity, a, s, o, u, l;
                        for (l = 0; l < this.gopCache_.length; l++) {
                            u = this.gopCache_[l];
                            o = u.gop;
                            if (!(t.pps && zt(t.pps[0], u.pps[0])) || !(t.sps && zt(t.sps[0], u.sps[0]))) {
                                continue
                            }
                            if (o.dts < t.timelineStartInfo.dts) {
                                continue
                            }
                            a = e.dts - o.dts - o.duration;
                            if (a >= -i && a <= n) {
                                if (!s || r > a) {
                                    s = u;
                                    r = a
                                }
                            }
                        }
                        if (s) {
                            return s.gop
                        }
                        return null
                    }
                    ;
                    this.alignGopsAtStart_ = function(e) {
                        var t, n, i, r, s, o, u, l;
                        s = e.byteLength;
                        o = e.nalCount;
                        u = e.duration;
                        t = n = 0;
                        while (t < a.length && n < e.length) {
                            i = a[t];
                            r = e[n];
                            if (i.pts === r.pts) {
                                break
                            }
                            if (r.pts > i.pts) {
                                t++;
                                continue
                            }
                            n++;
                            s -= r.byteLength;
                            o -= r.nalCount;
                            u -= r.duration
                        }
                        if (n === 0) {
                            return e
                        }
                        if (n === e.length) {
                            return null
                        }
                        l = e.slice(n);
                        l.byteLength = s;
                        l.duration = u;
                        l.nalCount = o;
                        l.pts = l[0].pts;
                        l.dts = l[0].dts;
                        return l
                    }
                    ;
                    this.alignGopsAtEnd_ = function(e) {
                        var t, n, i, r, s, o;
                        t = a.length - 1;
                        n = e.length - 1;
                        s = null;
                        o = false;
                        while (t >= 0 && n >= 0) {
                            i = a[t];
                            r = e[n];
                            if (i.pts === r.pts) {
                                o = true;
                                break
                            }
                            if (i.pts > r.pts) {
                                t--;
                                continue
                            }
                            if (t === a.length - 1) {
                                s = n
                            }
                            n--
                        }
                        if (!o && s === null) {
                            return null
                        }
                        var u;
                        if (o) {
                            u = n
                        } else {
                            u = s
                        }
                        if (u === 0) {
                            return e
                        }
                        var l = e.slice(u);
                        var d = l.reduce(function(e, t) {
                            e.byteLength += t.byteLength;
                            e.duration += t.duration;
                            e.nalCount += t.nalCount;
                            return e
                        }, {
                            byteLength: 0,
                            duration: 0,
                            nalCount: 0
                        });
                        l.byteLength = d.byteLength;
                        l.duration = d.duration;
                        l.nalCount = d.nalCount;
                        l.pts = l[0].pts;
                        l.dts = l[0].dts;
                        return l
                    }
                    ;
                    this.alignGopsWith = function(e) {
                        a = e
                    }
                }
                ;
                Ht.prototype = new t;
                Kt = function e(t, n) {
                    this.numberOfTracks = 0;
                    this.metadataStream = n;
                    t = t || {};
                    if (typeof t.remux !== "undefined") {
                        this.remuxTracks = !!t.remux
                    } else {
                        this.remuxTracks = true
                    }
                    if (typeof t.keepOriginalTimestamps === "boolean") {
                        this.keepOriginalTimestamps = t.keepOriginalTimestamps
                    } else {
                        this.keepOriginalTimestamps = false
                    }
                    this.pendingTracks = [];
                    this.videoTrack = null;
                    this.pendingBoxes = [];
                    this.pendingCaptions = [];
                    this.pendingMetadata = [];
                    this.pendingBytes = 0;
                    this.emittedTracks = 0;
                    Kt.prototype.init.call(this);
                    this.push = function(e) {
                        if (e.text) {
                            return this.pendingCaptions.push(e)
                        }
                        if (e.frames) {
                            return this.pendingMetadata.push(e)
                        }
                        this.pendingTracks.push(e.track);
                        this.pendingBytes += e.boxes.byteLength;
                        if (e.track.type === "video") {
                            this.videoTrack = e.track;
                            this.pendingBoxes.push(e.boxes)
                        }
                        if (e.track.type === "audio") {
                            this.audioTrack = e.track;
                            this.pendingBoxes.unshift(e.boxes)
                        }
                    }
                }
                ;
                Kt.prototype = new t;
                Kt.prototype.flush = function(e) {
                    var t = 0, n = {
                        captions: [],
                        captionStreams: {},
                        metadata: [],
                        info: {}
                    }, i, r, a, s = 0, o;
                    if (this.pendingTracks.length < this.numberOfTracks) {
                        if (e !== "VideoSegmentStream" && e !== "AudioSegmentStream") {
                            return
                        } else if (this.remuxTracks) {
                            return
                        } else if (this.pendingTracks.length === 0) {
                            this.emittedTracks++;
                            if (this.emittedTracks >= this.numberOfTracks) {
                                this.trigger("done");
                                this.emittedTracks = 0
                            }
                            return
                        }
                    }
                    if (this.videoTrack) {
                        s = this.videoTrack.timelineStartInfo.pts;
                        Bt.forEach(function(e) {
                            n.info[e] = this.videoTrack[e]
                        }, this)
                    } else if (this.audioTrack) {
                        s = this.audioTrack.timelineStartInfo.pts;
                        Mt.forEach(function(e) {
                            n.info[e] = this.audioTrack[e]
                        }, this)
                    }
                    if (this.videoTrack || this.audioTrack) {
                        if (this.pendingTracks.length === 1) {
                            n.type = this.pendingTracks[0].type
                        } else {
                            n.type = "combined"
                        }
                        this.emittedTracks += this.pendingTracks.length;
                        a = B.initSegment(this.pendingTracks);
                        n.initSegment = new Uint8Array(a.byteLength);
                        n.initSegment.set(a);
                        n.data = new Uint8Array(this.pendingBytes);
                        for (o = 0; o < this.pendingBoxes.length; o++) {
                            n.data.set(this.pendingBoxes[o], t);
                            t += this.pendingBoxes[o].byteLength
                        }
                        for (o = 0; o < this.pendingCaptions.length; o++) {
                            i = this.pendingCaptions[o];
                            i.startTime = de.metadataTsToSeconds(i.startPts, s, this.keepOriginalTimestamps);
                            i.endTime = de.metadataTsToSeconds(i.endPts, s, this.keepOriginalTimestamps);
                            n.captionStreams[i.stream] = true;
                            n.captions.push(i)
                        }
                        for (o = 0; o < this.pendingMetadata.length; o++) {
                            r = this.pendingMetadata[o];
                            r.cueTime = de.metadataTsToSeconds(r.pts, s, this.keepOriginalTimestamps);
                            n.metadata.push(r)
                        }
                        n.metadata.dispatchType = this.metadataStream.dispatchType;
                        this.pendingTracks.length = 0;
                        this.videoTrack = null;
                        this.pendingBoxes.length = 0;
                        this.pendingCaptions.length = 0;
                        this.pendingBytes = 0;
                        this.pendingMetadata.length = 0;
                        this.trigger("data", n);
                        for (o = 0; o < n.captions.length; o++) {
                            i = n.captions[o];
                            this.trigger("caption", i)
                        }
                        for (o = 0; o < n.metadata.length; o++) {
                            r = n.metadata[o];
                            this.trigger("id3Frame", r)
                        }
                    }
                    if (this.emittedTracks >= this.numberOfTracks) {
                        this.trigger("done");
                        this.emittedTracks = 0
                    }
                }
                ;
                Kt.prototype.setRemux = function(e) {
                    this.remuxTracks = e
                }
                ;
                Wt = function e(t) {
                    var n = this, i = true, r, a;
                    Wt.prototype.init.call(this);
                    t = t || {};
                    this.baseMediaDecodeTime = t.baseMediaDecodeTime || 0;
                    this.transmuxPipeline_ = {};
                    this.setupAacPipeline = function() {
                        var e = {};
                        this.transmuxPipeline_ = e;
                        e.type = "aac";
                        e.metadataStream = new ct.MetadataStream;
                        e.aacStream = new Nt;
                        e.audioTimestampRolloverStream = new ct.TimestampRolloverStream("audio");
                        e.timedMetadataTimestampRolloverStream = new ct.TimestampRolloverStream("timed-metadata");
                        e.adtsStream = new vt;
                        e.coalesceStream = new Kt(t,e.metadataStream);
                        e.headOfPipeline = e.aacStream;
                        e.aacStream.pipe(e.audioTimestampRolloverStream).pipe(e.adtsStream);
                        e.aacStream.pipe(e.timedMetadataTimestampRolloverStream).pipe(e.metadataStream).pipe(e.coalesceStream);
                        e.metadataStream.on("timestamp", function(t) {
                            e.aacStream.setTimestamp(t.timeStamp)
                        });
                        e.aacStream.on("data", function(i) {
                            if (i.type !== "timed-metadata" && i.type !== "audio" || e.audioSegmentStream) {
                                return
                            }
                            a = a || {
                                timelineStartInfo: {
                                    baseMediaDecodeTime: n.baseMediaDecodeTime
                                },
                                codec: "adts",
                                type: "audio"
                            };
                            e.coalesceStream.numberOfTracks++;
                            e.audioSegmentStream = new Gt(a,t);
                            e.audioSegmentStream.on("timingInfo", n.trigger.bind(n, "audioTimingInfo"));
                            e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream);
                            n.trigger("trackinfo", {
                                hasAudio: !!a,
                                hasVideo: !!r
                            })
                        });
                        e.coalesceStream.on("data", this.trigger.bind(this, "data"));
                        e.coalesceStream.on("done", this.trigger.bind(this, "done"))
                    }
                    ;
                    this.setupTsPipeline = function() {
                        var e = {};
                        this.transmuxPipeline_ = e;
                        e.type = "ts";
                        e.metadataStream = new ct.MetadataStream;
                        e.packetStream = new ct.TransportPacketStream;
                        e.parseStream = new ct.TransportParseStream;
                        e.elementaryStream = new ct.ElementaryStream;
                        e.timestampRolloverStream = new ct.TimestampRolloverStream;
                        e.adtsStream = new vt;
                        e.h264Stream = new Ft;
                        e.captionStream = new ct.CaptionStream(t);
                        e.coalesceStream = new Kt(t,e.metadataStream);
                        e.headOfPipeline = e.packetStream;
                        e.packetStream.pipe(e.parseStream).pipe(e.elementaryStream).pipe(e.timestampRolloverStream);
                        e.timestampRolloverStream.pipe(e.h264Stream);
                        e.timestampRolloverStream.pipe(e.adtsStream);
                        e.timestampRolloverStream.pipe(e.metadataStream).pipe(e.coalesceStream);
                        e.h264Stream.pipe(e.captionStream).pipe(e.coalesceStream);
                        e.elementaryStream.on("data", function(i) {
                            var s;
                            if (i.type === "metadata") {
                                s = i.tracks.length;
                                while (s--) {
                                    if (!r && i.tracks[s].type === "video") {
                                        r = i.tracks[s];
                                        r.timelineStartInfo.baseMediaDecodeTime = n.baseMediaDecodeTime
                                    } else if (!a && i.tracks[s].type === "audio") {
                                        a = i.tracks[s];
                                        a.timelineStartInfo.baseMediaDecodeTime = n.baseMediaDecodeTime
                                    }
                                }
                                if (r && !e.videoSegmentStream) {
                                    e.coalesceStream.numberOfTracks++;
                                    e.videoSegmentStream = new Ht(r,t);
                                    e.videoSegmentStream.on("timelineStartInfo", function(i) {
                                        if (a && !t.keepOriginalTimestamps) {
                                            a.timelineStartInfo = i;
                                            e.audioSegmentStream.setEarliestDts(i.dts - n.baseMediaDecodeTime)
                                        }
                                    });
                                    e.videoSegmentStream.on("processedGopsInfo", n.trigger.bind(n, "gopInfo"));
                                    e.videoSegmentStream.on("segmentTimingInfo", n.trigger.bind(n, "videoSegmentTimingInfo"));
                                    e.videoSegmentStream.on("baseMediaDecodeTime", function(t) {
                                        if (a) {
                                            e.audioSegmentStream.setVideoBaseMediaDecodeTime(t)
                                        }
                                    });
                                    e.videoSegmentStream.on("timingInfo", n.trigger.bind(n, "videoTimingInfo"));
                                    e.h264Stream.pipe(e.videoSegmentStream).pipe(e.coalesceStream)
                                }
                                if (a && !e.audioSegmentStream) {
                                    e.coalesceStream.numberOfTracks++;
                                    e.audioSegmentStream = new Gt(a,t);
                                    e.audioSegmentStream.on("timingInfo", n.trigger.bind(n, "audioTimingInfo"));
                                    e.audioSegmentStream.on("segmentTimingInfo", n.trigger.bind(n, "audioSegmentTimingInfo"));
                                    e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream)
                                }
                                n.trigger("trackinfo", {
                                    hasAudio: !!a,
                                    hasVideo: !!r
                                })
                            }
                        });
                        e.coalesceStream.on("data", this.trigger.bind(this, "data"));
                        e.coalesceStream.on("id3Frame", function(t) {
                            t.dispatchType = e.metadataStream.dispatchType;
                            n.trigger("id3Frame", t)
                        });
                        e.coalesceStream.on("caption", this.trigger.bind(this, "caption"));
                        e.coalesceStream.on("done", this.trigger.bind(this, "done"))
                    }
                    ;
                    this.setBaseMediaDecodeTime = function(e) {
                        var n = this.transmuxPipeline_;
                        if (!t.keepOriginalTimestamps) {
                            this.baseMediaDecodeTime = e
                        }
                        if (a) {
                            a.timelineStartInfo.dts = undefined;
                            a.timelineStartInfo.pts = undefined;
                            Se.clearDtsInfo(a);
                            if (n.audioTimestampRolloverStream) {
                                n.audioTimestampRolloverStream.discontinuity()
                            }
                        }
                        if (r) {
                            if (n.videoSegmentStream) {
                                n.videoSegmentStream.gopCache_ = []
                            }
                            r.timelineStartInfo.dts = undefined;
                            r.timelineStartInfo.pts = undefined;
                            Se.clearDtsInfo(r);
                            n.captionStream.reset()
                        }
                        if (n.timestampRolloverStream) {
                            n.timestampRolloverStream.discontinuity()
                        }
                    }
                    ;
                    this.setAudioAppendStart = function(e) {
                        if (a) {
                            this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(e)
                        }
                    }
                    ;
                    this.setRemux = function(e) {
                        var n = this.transmuxPipeline_;
                        t.remux = e;
                        if (n && n.coalesceStream) {
                            n.coalesceStream.setRemux(e)
                        }
                    }
                    ;
                    this.alignGopsWith = function(e) {
                        if (r && this.transmuxPipeline_.videoSegmentStream) {
                            this.transmuxPipeline_.videoSegmentStream.alignGopsWith(e)
                        }
                    }
                    ;
                    this.push = function(e) {
                        if (i) {
                            var t = Vt(e);
                            if (t && this.transmuxPipeline_.type !== "aac") {
                                this.setupAacPipeline()
                            } else if (!t && this.transmuxPipeline_.type !== "ts") {
                                this.setupTsPipeline()
                            }
                            i = false
                        }
                        this.transmuxPipeline_.headOfPipeline.push(e)
                    }
                    ;
                    this.flush = function() {
                        i = true;
                        this.transmuxPipeline_.headOfPipeline.flush()
                    }
                    ;
                    this.endTimeline = function() {
                        this.transmuxPipeline_.headOfPipeline.endTimeline()
                    }
                    ;
                    this.reset = function() {
                        if (this.transmuxPipeline_.headOfPipeline) {
                            this.transmuxPipeline_.headOfPipeline.reset()
                        }
                    }
                    ;
                    this.resetCaptions = function() {
                        if (this.transmuxPipeline_.captionStream) {
                            this.transmuxPipeline_.captionStream.reset()
                        }
                    }
                }
                ;
                Wt.prototype = new t;
                var Xt = {
                    Transmuxer: Wt,
                    VideoSegmentStream: Ht,
                    AudioSegmentStream: Gt,
                    AUDIO_PROPERTIES: Mt,
                    VIDEO_PROPERTIES: Bt,
                    generateSegmentTimingInfo: Yt
                };
                var Qt = {
                    Adts: vt,
                    h264: St
                };
                var Zt = de.ONE_SECOND_IN_TS;
                var Jt = function e(t, n) {
                    var i = []
                      , r = 0
                      , a = 0
                      , s = 0
                      , o = Infinity
                      , u = null
                      , l = null;
                    n = n || {};
                    e.prototype.init.call(this);
                    this.push = function(e) {
                        Se.collectDtsInfo(t, e);
                        if (t) {
                            Mt.forEach(function(n) {
                                t[n] = e[n]
                            })
                        }
                        i.push(e)
                    }
                    ;
                    this.setEarliestDts = function(e) {
                        a = e
                    }
                    ;
                    this.setVideoBaseMediaDecodeTime = function(e) {
                        o = e
                    }
                    ;
                    this.setAudioAppendStart = function(e) {
                        s = e
                    }
                    ;
                    this.processFrames_ = function() {
                        var e, d, c, f, p;
                        if (i.length === 0) {
                            return
                        }
                        e = ge.trimAdtsFramesByEarliestDts(i, t, a);
                        if (e.length === 0) {
                            return
                        }
                        t.baseMediaDecodeTime = Se.calculateTrackBaseMediaDecodeTime(t, n.keepOriginalTimestamps);
                        ge.prefixWithSilence(t, e, s, o);
                        t.samples = ge.generateSampleTable(e);
                        c = B.mdat(ge.concatenateFrameData(e));
                        i = [];
                        d = B.moof(r, [t]);
                        r++;
                        t.initSegment = B.initSegment([t]);
                        f = new Uint8Array(d.byteLength + c.byteLength);
                        f.set(d);
                        f.set(c, d.byteLength);
                        Se.clearDtsInfo(t);
                        if (u === null) {
                            l = u = e[0].pts
                        }
                        l += e.length * (Zt * 1024 / t.samplerate);
                        p = {
                            start: u
                        };
                        this.trigger("timingInfo", p);
                        this.trigger("data", {
                            track: t,
                            boxes: f
                        })
                    }
                    ;
                    this.flush = function() {
                        this.processFrames_();
                        this.trigger("timingInfo", {
                            start: u,
                            end: l
                        });
                        this.resetTiming_();
                        this.trigger("done", "AudioSegmentStream")
                    }
                    ;
                    this.partialFlush = function() {
                        this.processFrames_();
                        this.trigger("partialdone", "AudioSegmentStream")
                    }
                    ;
                    this.endTimeline = function() {
                        this.flush();
                        this.trigger("endedtimeline", "AudioSegmentStream")
                    }
                    ;
                    this.resetTiming_ = function() {
                        Se.clearDtsInfo(t);
                        u = null;
                        l = null
                    }
                    ;
                    this.reset = function() {
                        this.resetTiming_();
                        i = [];
                        this.trigger("reset")
                    }
                };
                Jt.prototype = new t;
                var $t = Jt;
                var en = function e(t, n) {
                    var i = 0, r = [], a = [], s, o, u = null, l = null, d, c = true;
                    n = n || {};
                    e.prototype.init.call(this);
                    this.push = function(e) {
                        Se.collectDtsInfo(t, e);
                        if (typeof t.timelineStartInfo.dts === "undefined") {
                            t.timelineStartInfo.dts = e.dts
                        }
                        if (e.nalUnitType === "seq_parameter_set_rbsp" && !s) {
                            s = e.config;
                            t.sps = [e.data];
                            Bt.forEach(function(e) {
                                t[e] = s[e]
                            }, this)
                        }
                        if (e.nalUnitType === "pic_parameter_set_rbsp" && !o) {
                            o = e.data;
                            t.pps = [e.data]
                        }
                        r.push(e)
                    }
                    ;
                    this.processNals_ = function(e) {
                        var s;
                        r = a.concat(r);
                        while (r.length) {
                            if (r[0].nalUnitType === "access_unit_delimiter_rbsp") {
                                break
                            }
                            r.shift()
                        }
                        if (r.length === 0) {
                            return
                        }
                        var o = X.groupNalsIntoFrames(r);
                        if (!o.length) {
                            return
                        }
                        a = o[o.length - 1];
                        if (e) {
                            o.pop();
                            o.duration -= a.duration;
                            o.nalCount -= a.length;
                            o.byteLength -= a.byteLength
                        }
                        if (!o.length) {
                            r = [];
                            return
                        }
                        this.trigger("timelineStartInfo", t.timelineStartInfo);
                        if (c) {
                            d = X.groupFramesIntoGops(o);
                            if (!d[0][0].keyFrame) {
                                d = X.extendFirstKeyFrame(d);
                                if (!d[0][0].keyFrame) {
                                    r = [].concat.apply([], o).concat(a);
                                    a = [];
                                    return
                                }
                                o = [].concat.apply([], d);
                                o.duration = d.duration
                            }
                            c = false
                        }
                        if (u === null) {
                            u = o[0].pts;
                            l = u
                        }
                        l += o.duration;
                        this.trigger("timingInfo", {
                            start: u,
                            end: l
                        });
                        for (s = 0; s < o.length; s++) {
                            var f = o[s];
                            t.samples = X.generateSampleTableForFrame(f);
                            var p = B.mdat(X.concatenateNalDataForFrame(f));
                            Se.clearDtsInfo(t);
                            Se.collectDtsInfo(t, f);
                            t.baseMediaDecodeTime = Se.calculateTrackBaseMediaDecodeTime(t, n.keepOriginalTimestamps);
                            var h = B.moof(i, [t]);
                            i++;
                            t.initSegment = B.initSegment([t]);
                            var v = new Uint8Array(h.byteLength + p.byteLength);
                            v.set(h);
                            v.set(p, h.byteLength);
                            this.trigger("data", {
                                track: t,
                                boxes: v,
                                sequence: i,
                                videoFrameDts: f.dts,
                                videoFramePts: f.pts
                            })
                        }
                        r = []
                    }
                    ;
                    this.resetTimingAndConfig_ = function() {
                        s = undefined;
                        o = undefined;
                        u = null;
                        l = null
                    }
                    ;
                    this.partialFlush = function() {
                        this.processNals_(true);
                        this.trigger("partialdone", "VideoSegmentStream")
                    }
                    ;
                    this.flush = function() {
                        this.processNals_(false);
                        this.resetTimingAndConfig_();
                        this.trigger("done", "VideoSegmentStream")
                    }
                    ;
                    this.endTimeline = function() {
                        this.flush();
                        this.trigger("endedtimeline", "VideoSegmentStream")
                    }
                    ;
                    this.reset = function() {
                        this.resetTimingAndConfig_();
                        a = [];
                        r = [];
                        c = true;
                        this.trigger("reset")
                    }
                };
                en.prototype = new t;
                var tn = en;
                var nn = xt.isLikelyAacData;
                var rn = function e(n) {
                    n.prototype = new t;
                    n.prototype.init.call(n);
                    return n
                };
                var an = function e(t) {
                    var n = {
                        type: "ts",
                        tracks: {
                            audio: null,
                            video: null
                        },
                        packet: new ct.TransportPacketStream,
                        parse: new ct.TransportParseStream,
                        elementary: new ct.ElementaryStream,
                        timestampRollover: new ct.TimestampRolloverStream,
                        adts: new Qt.Adts,
                        h264: new Qt.h264.H264Stream,
                        captionStream: new ct.CaptionStream(t),
                        metadataStream: new ct.MetadataStream
                    };
                    n.headOfPipeline = n.packet;
                    n.packet.pipe(n.parse).pipe(n.elementary).pipe(n.timestampRollover);
                    n.timestampRollover.pipe(n.h264);
                    n.h264.pipe(n.captionStream);
                    n.timestampRollover.pipe(n.metadataStream);
                    n.timestampRollover.pipe(n.adts);
                    n.elementary.on("data", function(e) {
                        if (e.type !== "metadata") {
                            return
                        }
                        for (var i = 0; i < e.tracks.length; i++) {
                            if (!n.tracks[e.tracks[i].type]) {
                                n.tracks[e.tracks[i].type] = e.tracks[i];
                                n.tracks[e.tracks[i].type].timelineStartInfo.baseMediaDecodeTime = t.baseMediaDecodeTime
                            }
                        }
                        if (n.tracks.video && !n.videoSegmentStream) {
                            n.videoSegmentStream = new tn(n.tracks.video,t);
                            n.videoSegmentStream.on("timelineStartInfo", function(e) {
                                if (n.tracks.audio && !t.keepOriginalTimestamps) {
                                    n.audioSegmentStream.setEarliestDts(e.dts - t.baseMediaDecodeTime)
                                }
                            });
                            n.videoSegmentStream.on("timingInfo", n.trigger.bind(n, "videoTimingInfo"));
                            n.videoSegmentStream.on("data", function(e) {
                                n.trigger("data", {
                                    type: "video",
                                    data: e
                                })
                            });
                            n.videoSegmentStream.on("done", n.trigger.bind(n, "done"));
                            n.videoSegmentStream.on("partialdone", n.trigger.bind(n, "partialdone"));
                            n.videoSegmentStream.on("endedtimeline", n.trigger.bind(n, "endedtimeline"));
                            n.h264.pipe(n.videoSegmentStream)
                        }
                        if (n.tracks.audio && !n.audioSegmentStream) {
                            n.audioSegmentStream = new $t(n.tracks.audio,t);
                            n.audioSegmentStream.on("data", function(e) {
                                n.trigger("data", {
                                    type: "audio",
                                    data: e
                                })
                            });
                            n.audioSegmentStream.on("done", n.trigger.bind(n, "done"));
                            n.audioSegmentStream.on("partialdone", n.trigger.bind(n, "partialdone"));
                            n.audioSegmentStream.on("endedtimeline", n.trigger.bind(n, "endedtimeline"));
                            n.audioSegmentStream.on("timingInfo", n.trigger.bind(n, "audioTimingInfo"));
                            n.adts.pipe(n.audioSegmentStream)
                        }
                        n.trigger("trackinfo", {
                            hasAudio: !!n.tracks.audio,
                            hasVideo: !!n.tracks.video
                        })
                    });
                    n.captionStream.on("data", function(e) {
                        var i;
                        if (n.tracks.video) {
                            i = n.tracks.video.timelineStartInfo.pts || 0
                        } else {
                            i = 0
                        }
                        e.startTime = de.metadataTsToSeconds(e.startPts, i, t.keepOriginalTimestamps);
                        e.endTime = de.metadataTsToSeconds(e.endPts, i, t.keepOriginalTimestamps);
                        n.trigger("caption", e)
                    });
                    n = rn(n);
                    n.metadataStream.on("data", n.trigger.bind(n, "id3Frame"));
                    return n
                };
                var sn = function e(t) {
                    var n = {
                        type: "aac",
                        tracks: {
                            audio: null
                        },
                        metadataStream: new ct.MetadataStream,
                        aacStream: new Nt,
                        audioRollover: new ct.TimestampRolloverStream("audio"),
                        timedMetadataRollover: new ct.TimestampRolloverStream("timed-metadata"),
                        adtsStream: new vt(true)
                    };
                    n.headOfPipeline = n.aacStream;
                    n.aacStream.pipe(n.audioRollover).pipe(n.adtsStream);
                    n.aacStream.pipe(n.timedMetadataRollover).pipe(n.metadataStream);
                    n.metadataStream.on("timestamp", function(e) {
                        n.aacStream.setTimestamp(e.timeStamp)
                    });
                    n.aacStream.on("data", function(e) {
                        if (e.type !== "timed-metadata" && e.type !== "audio" || n.audioSegmentStream) {
                            return
                        }
                        n.tracks.audio = n.tracks.audio || {
                            timelineStartInfo: {
                                baseMediaDecodeTime: t.baseMediaDecodeTime
                            },
                            codec: "adts",
                            type: "audio"
                        };
                        n.audioSegmentStream = new $t(n.tracks.audio,t);
                        n.audioSegmentStream.on("data", function(e) {
                            n.trigger("data", {
                                type: "audio",
                                data: e
                            })
                        });
                        n.audioSegmentStream.on("partialdone", n.trigger.bind(n, "partialdone"));
                        n.audioSegmentStream.on("done", n.trigger.bind(n, "done"));
                        n.audioSegmentStream.on("endedtimeline", n.trigger.bind(n, "endedtimeline"));
                        n.audioSegmentStream.on("timingInfo", n.trigger.bind(n, "audioTimingInfo"));
                        n.adtsStream.pipe(n.audioSegmentStream);
                        n.trigger("trackinfo", {
                            hasAudio: !!n.tracks.audio,
                            hasVideo: !!n.tracks.video
                        })
                    });
                    n = rn(n);
                    n.metadataStream.on("data", n.trigger.bind(n, "id3Frame"));
                    return n
                };
                var on = function e(t, n) {
                    t.on("data", n.trigger.bind(n, "data"));
                    t.on("done", n.trigger.bind(n, "done"));
                    t.on("partialdone", n.trigger.bind(n, "partialdone"));
                    t.on("endedtimeline", n.trigger.bind(n, "endedtimeline"));
                    t.on("audioTimingInfo", n.trigger.bind(n, "audioTimingInfo"));
                    t.on("videoTimingInfo", n.trigger.bind(n, "videoTimingInfo"));
                    t.on("trackinfo", n.trigger.bind(n, "trackinfo"));
                    t.on("id3Frame", function(e) {
                        e.dispatchType = t.metadataStream.dispatchType;
                        e.cueTime = de.videoTsToSeconds(e.pts);
                        n.trigger("id3Frame", e)
                    });
                    t.on("caption", function(e) {
                        n.trigger("caption", e)
                    })
                };
                var un = function e(t) {
                    var n = null
                      , i = true;
                    t = t || {};
                    e.prototype.init.call(this);
                    t.baseMediaDecodeTime = t.baseMediaDecodeTime || 0;
                    this.push = function(e) {
                        if (i) {
                            var r = nn(e);
                            if (r && (!n || n.type !== "aac")) {
                                n = sn(t);
                                on(n, this)
                            } else if (!r && (!n || n.type !== "ts")) {
                                n = an(t);
                                on(n, this)
                            }
                            i = false
                        }
                        n.headOfPipeline.push(e)
                    }
                    ;
                    this.flush = function() {
                        if (!n) {
                            return
                        }
                        i = true;
                        n.headOfPipeline.flush()
                    }
                    ;
                    this.partialFlush = function() {
                        if (!n) {
                            return
                        }
                        n.headOfPipeline.partialFlush()
                    }
                    ;
                    this.endTimeline = function() {
                        if (!n) {
                            return
                        }
                        n.headOfPipeline.endTimeline()
                    }
                    ;
                    this.reset = function() {
                        if (!n) {
                            return
                        }
                        n.headOfPipeline.reset()
                    }
                    ;
                    this.setBaseMediaDecodeTime = function(e) {
                        if (!t.keepOriginalTimestamps) {
                            t.baseMediaDecodeTime = e
                        }
                        if (!n) {
                            return
                        }
                        if (n.tracks.audio) {
                            n.tracks.audio.timelineStartInfo.dts = undefined;
                            n.tracks.audio.timelineStartInfo.pts = undefined;
                            Se.clearDtsInfo(n.tracks.audio);
                            if (n.audioRollover) {
                                n.audioRollover.discontinuity()
                            }
                        }
                        if (n.tracks.video) {
                            if (n.videoSegmentStream) {
                                n.videoSegmentStream.gopCache_ = []
                            }
                            n.tracks.video.timelineStartInfo.dts = undefined;
                            n.tracks.video.timelineStartInfo.pts = undefined;
                            Se.clearDtsInfo(n.tracks.video)
                        }
                        if (n.timestampRollover) {
                            n.timestampRollover.discontinuity()
                        }
                    }
                    ;
                    this.setRemux = function(e) {
                        t.remux = e;
                        if (n && n.coalesceStream) {
                            n.coalesceStream.setRemux(e)
                        }
                    }
                    ;
                    this.setAudioAppendStart = function(e) {
                        if (!n || !n.tracks.audio || !n.audioSegmentStream) {
                            return
                        }
                        n.audioSegmentStream.setAudioAppendStart(e)
                    }
                    ;
                    this.alignGopsWith = function(e) {
                        return
                    }
                };
                un.prototype = new t;
                var ln = un;
                var dn = function e(t) {
                    return t >>> 0
                };
                var cn = function e(t) {
                    return ("00" + t.toString(16)).slice(-2)
                };
                var fn = {
                    toUnsigned: dn,
                    toHexString: cn
                };
                var pn = function e(t) {
                    var n = "";
                    n += String.fromCharCode(t[0]);
                    n += String.fromCharCode(t[1]);
                    n += String.fromCharCode(t[2]);
                    n += String.fromCharCode(t[3]);
                    return n
                };
                var hn = pn;
                var vn = fn.toUnsigned;
                var gn = function e(t, n) {
                    var i = [], r, a, s, o, u;
                    if (!n.length) {
                        return null
                    }
                    for (r = 0; r < t.byteLength; ) {
                        a = vn(t[r] << 24 | t[r + 1] << 16 | t[r + 2] << 8 | t[r + 3]);
                        s = hn(t.subarray(r + 4, r + 8));
                        o = a > 1 ? r + a : t.byteLength;
                        if (s === n[0]) {
                            if (n.length === 1) {
                                i.push(t.subarray(r + 8, o))
                            } else {
                                u = e(t.subarray(r + 8, o), n.slice(1));
                                if (u.length) {
                                    i = i.concat(u)
                                }
                            }
                        }
                        r = o
                    }
                    return i
                };
                var mn = gn;
                var yn = fn.toUnsigned;
                var _n = function e(t) {
                    var n = {
                        version: t[0],
                        flags: new Uint8Array(t.subarray(1, 4)),
                        baseMediaDecodeTime: yn(t[4] << 24 | t[5] << 16 | t[6] << 8 | t[7])
                    };
                    if (n.version === 1) {
                        n.baseMediaDecodeTime *= Math.pow(2, 32);
                        n.baseMediaDecodeTime += yn(t[8] << 24 | t[9] << 16 | t[10] << 8 | t[11])
                    }
                    return n
                };
                var bn = _n;
                var Sn = function e(t) {
                    return {
                        isLeading: (t[0] & 12) >>> 2,
                        dependsOn: t[0] & 3,
                        isDependedOn: (t[1] & 192) >>> 6,
                        hasRedundancy: (t[1] & 48) >>> 4,
                        paddingValue: (t[1] & 14) >>> 1,
                        isNonSyncSample: t[1] & 1,
                        degradationPriority: t[2] << 8 | t[3]
                    }
                };
                var An = Sn;
                var Tn = function e(t) {
                    var n = {
                        version: t[0],
                        flags: new Uint8Array(t.subarray(1, 4)),
                        samples: []
                    }, i = new DataView(t.buffer,t.byteOffset,t.byteLength), r = n.flags[2] & 1, a = n.flags[2] & 4, s = n.flags[1] & 1, o = n.flags[1] & 2, u = n.flags[1] & 4, l = n.flags[1] & 8, d = i.getUint32(4), c = 8, f;
                    if (r) {
                        n.dataOffset = i.getInt32(c);
                        c += 4
                    }
                    if (a && d) {
                        f = {
                            flags: An(t.subarray(c, c + 4))
                        };
                        c += 4;
                        if (s) {
                            f.duration = i.getUint32(c);
                            c += 4
                        }
                        if (o) {
                            f.size = i.getUint32(c);
                            c += 4
                        }
                        if (l) {
                            if (n.version === 1) {
                                f.compositionTimeOffset = i.getInt32(c)
                            } else {
                                f.compositionTimeOffset = i.getUint32(c)
                            }
                            c += 4
                        }
                        n.samples.push(f);
                        d--
                    }
                    while (d--) {
                        f = {};
                        if (s) {
                            f.duration = i.getUint32(c);
                            c += 4
                        }
                        if (o) {
                            f.size = i.getUint32(c);
                            c += 4
                        }
                        if (u) {
                            f.flags = An(t.subarray(c, c + 4));
                            c += 4
                        }
                        if (l) {
                            if (n.version === 1) {
                                f.compositionTimeOffset = i.getInt32(c)
                            } else {
                                f.compositionTimeOffset = i.getUint32(c)
                            }
                            c += 4
                        }
                        n.samples.push(f)
                    }
                    return n
                };
                var kn = Tn;
                var En = function e(t) {
                    var n = new DataView(t.buffer,t.byteOffset,t.byteLength), i = {
                        version: t[0],
                        flags: new Uint8Array(t.subarray(1, 4)),
                        trackId: n.getUint32(4)
                    }, r = i.flags[2] & 1, a = i.flags[2] & 2, s = i.flags[2] & 8, o = i.flags[2] & 16, u = i.flags[2] & 32, l = i.flags[0] & 65536, d = i.flags[0] & 131072, c;
                    c = 8;
                    if (r) {
                        c += 4;
                        i.baseDataOffset = n.getUint32(12);
                        c += 4
                    }
                    if (a) {
                        i.sampleDescriptionIndex = n.getUint32(c);
                        c += 4
                    }
                    if (s) {
                        i.defaultSampleDuration = n.getUint32(c);
                        c += 4
                    }
                    if (o) {
                        i.defaultSampleSize = n.getUint32(c);
                        c += 4
                    }
                    if (u) {
                        i.defaultSampleFlags = n.getUint32(c)
                    }
                    if (l) {
                        i.durationIsEmpty = true
                    }
                    if (!r && d) {
                        i.baseDataOffsetIsMoof = true
                    }
                    return i
                };
                var Pn = En;
                var In = Ce.discardEmulationPreventionBytes;
                var Cn = qe.CaptionStream;
                var wn = function e(t, n) {
                    var i = t;
                    for (var r = 0; r < n.length; r++) {
                        var a = n[r];
                        if (i < a.size) {
                            return a
                        }
                        i -= a.size
                    }
                    return null
                };
                var jn = function e(t, n, i) {
                    var r = new DataView(t.buffer,t.byteOffset,t.byteLength), a = [], s, o, u, l;
                    for (o = 0; o + 4 < t.length; o += u) {
                        u = r.getUint32(o);
                        o += 4;
                        if (u <= 0) {
                            continue
                        }
                        switch (t[o] & 31) {
                        case 6:
                            var d = t.subarray(o + 1, o + 1 + u);
                            var c = wn(o, n);
                            s = {
                                nalUnitType: "sei_rbsp",
                                size: u,
                                data: d,
                                escapedRBSP: In(d),
                                trackId: i
                            };
                            if (c) {
                                s.pts = c.pts;
                                s.dts = c.dts;
                                l = c
                            } else if (l) {
                                s.pts = l.pts;
                                s.dts = l.dts
                            } else {
                                console.log("We've encountered a nal unit without data. See mux.js#233.");
                                break
                            }
                            a.push(s);
                            break
                        }
                    }
                    return a
                };
                var Ln = function e(t, n, i) {
                    var r = n;
                    var a = i.defaultSampleDuration || 0;
                    var s = i.defaultSampleSize || 0;
                    var o = i.trackId;
                    var u = [];
                    t.forEach(function(e) {
                        var t = kn(e);
                        var n = t.samples;
                        n.forEach(function(e) {
                            if (e.duration === undefined) {
                                e.duration = a
                            }
                            if (e.size === undefined) {
                                e.size = s
                            }
                            e.trackId = o;
                            e.dts = r;
                            if (e.compositionTimeOffset === undefined) {
                                e.compositionTimeOffset = 0
                            }
                            e.pts = r + e.compositionTimeOffset;
                            r += e.duration
                        });
                        u = u.concat(n)
                    });
                    return u
                };
                var On = function e(t, n) {
                    var i = mn(t, ["moof", "traf"]);
                    var r = mn(t, ["mdat"]);
                    var a = {};
                    var s = [];
                    r.forEach(function(e, t) {
                        var n = i[t];
                        s.push({
                            mdat: e,
                            traf: n
                        })
                    });
                    s.forEach(function(e) {
                        var t = e.mdat;
                        var i = e.traf;
                        var r = mn(i, ["tfhd"]);
                        var s = Pn(r[0]);
                        var o = s.trackId;
                        var u = mn(i, ["tfdt"]);
                        var l = u.length > 0 ? bn(u[0]).baseMediaDecodeTime : 0;
                        var d = mn(i, ["trun"]);
                        var c;
                        var f;
                        if (n === o && d.length > 0) {
                            c = Ln(d, l, s);
                            f = jn(t, c, o);
                            if (!a[o]) {
                                a[o] = []
                            }
                            a[o] = a[o].concat(f)
                        }
                    });
                    return a
                };
                var xn = function e(t, n, i) {
                    var r;
                    if (n === null) {
                        return null
                    }
                    r = On(t, n);
                    return {
                        seiNals: r[n],
                        timescale: i
                    }
                };
                var Dn = function e() {
                    var t = false;
                    var n;
                    var i;
                    var r;
                    var a;
                    var s;
                    var o;
                    this.isInitialized = function() {
                        return t
                    }
                    ;
                    this.init = function(e) {
                        n = new Cn;
                        t = true;
                        o = e ? e.isPartial : false;
                        n.on("data", function(e) {
                            e.startTime = e.startPts / a;
                            e.endTime = e.endPts / a;
                            s.captions.push(e);
                            s.captionStreams[e.stream] = true
                        })
                    }
                    ;
                    this.isNewInit = function(e, t) {
                        if (e && e.length === 0 || t && typeof t === "object" && Object.keys(t).length === 0) {
                            return false
                        }
                        return r !== e[0] || a !== t[r]
                    }
                    ;
                    this.parse = function(e, t, n) {
                        var o;
                        if (!this.isInitialized()) {
                            return null
                        } else if (!t || !n) {
                            return null
                        } else if (this.isNewInit(t, n)) {
                            r = t[0];
                            a = n[r]
                        } else if (r === null || !a) {
                            i.push(e);
                            return null
                        }
                        while (i.length > 0) {
                            var u = i.shift();
                            this.parse(u, t, n)
                        }
                        o = xn(e, r, a);
                        if (o === null || !o.seiNals) {
                            return null
                        }
                        this.pushNals(o.seiNals);
                        this.flushStream();
                        return s
                    }
                    ;
                    this.pushNals = function(e) {
                        if (!this.isInitialized() || !e || e.length === 0) {
                            return null
                        }
                        e.forEach(function(e) {
                            n.push(e)
                        })
                    }
                    ;
                    this.flushStream = function() {
                        if (!this.isInitialized()) {
                            return null
                        }
                        if (!o) {
                            n.flush()
                        } else {
                            n.partialFlush()
                        }
                    }
                    ;
                    this.clearParsedCaptions = function() {
                        s.captions = [];
                        s.captionStreams = {}
                    }
                    ;
                    this.resetCaptionStream = function() {
                        if (!this.isInitialized()) {
                            return null
                        }
                        n.reset()
                    }
                    ;
                    this.clearAllCaptions = function() {
                        this.clearParsedCaptions();
                        this.resetCaptionStream()
                    }
                    ;
                    this.reset = function() {
                        i = [];
                        r = null;
                        a = null;
                        if (!s) {
                            s = {
                                captions: [],
                                captionStreams: {}
                            }
                        } else {
                            this.clearParsedCaptions()
                        }
                        this.resetCaptionStream()
                    }
                    ;
                    this.reset()
                };
                var Nn = Dn;
                var Rn = function e(t) {
                    if (t === "AudioSegmentStream") {
                        return "audio"
                    }
                    return t === "VideoSegmentStream" ? "video" : ""
                };
                var Mn = function e(t, n) {
                    n.on("data", function(e) {
                        var n = e.initSegment;
                        e.initSegment = {
                            data: n.buffer,
                            byteOffset: n.byteOffset,
                            byteLength: n.byteLength
                        };
                        var i = e.data;
                        e.data = i.buffer;
                        t.postMessage({
                            action: "data",
                            segment: e,
                            byteOffset: i.byteOffset,
                            byteLength: i.byteLength
                        }, [e.data])
                    });
                    n.on("done", function(e) {
                        t.postMessage({
                            action: "done"
                        })
                    });
                    n.on("gopInfo", function(e) {
                        t.postMessage({
                            action: "gopInfo",
                            gopInfo: e
                        })
                    });
                    n.on("videoSegmentTimingInfo", function(e) {
                        var n = {
                            start: {
                                decode: de.videoTsToSeconds(e.start.dts),
                                presentation: de.videoTsToSeconds(e.start.pts)
                            },
                            end: {
                                decode: de.videoTsToSeconds(e.end.dts),
                                presentation: de.videoTsToSeconds(e.end.pts)
                            },
                            baseMediaDecodeTime: de.videoTsToSeconds(e.baseMediaDecodeTime)
                        };
                        if (e.prependedContentDuration) {
                            n.prependedContentDuration = de.videoTsToSeconds(e.prependedContentDuration)
                        }
                        t.postMessage({
                            action: "videoSegmentTimingInfo",
                            videoSegmentTimingInfo: n
                        })
                    });
                    n.on("audioSegmentTimingInfo", function(e) {
                        var n = {
                            start: {
                                decode: de.videoTsToSeconds(e.start.dts),
                                presentation: de.videoTsToSeconds(e.start.pts)
                            },
                            end: {
                                decode: de.videoTsToSeconds(e.end.dts),
                                presentation: de.videoTsToSeconds(e.end.pts)
                            },
                            baseMediaDecodeTime: de.videoTsToSeconds(e.baseMediaDecodeTime)
                        };
                        if (e.prependedContentDuration) {
                            n.prependedContentDuration = de.videoTsToSeconds(e.prependedContentDuration)
                        }
                        t.postMessage({
                            action: "audioSegmentTimingInfo",
                            audioSegmentTimingInfo: n
                        })
                    });
                    n.on("id3Frame", function(e) {
                        t.postMessage({
                            action: "id3Frame",
                            id3Frame: e
                        })
                    });
                    n.on("caption", function(e) {
                        t.postMessage({
                            action: "caption",
                            caption: e
                        })
                    });
                    n.on("trackinfo", function(e) {
                        t.postMessage({
                            action: "trackinfo",
                            trackInfo: e
                        })
                    });
                    n.on("audioTimingInfo", function(e) {
                        t.postMessage({
                            action: "audioTimingInfo",
                            audioTimingInfo: {
                                start: de.videoTsToSeconds(e.start),
                                end: de.videoTsToSeconds(e.end)
                            }
                        })
                    });
                    n.on("videoTimingInfo", function(e) {
                        t.postMessage({
                            action: "videoTimingInfo",
                            videoTimingInfo: {
                                start: de.videoTsToSeconds(e.start),
                                end: de.videoTsToSeconds(e.end)
                            }
                        })
                    })
                };
                var Un = function e(t, n) {
                    n.on("data", function(e) {
                        var n = {
                            data: e.data.track.initSegment.buffer,
                            byteOffset: e.data.track.initSegment.byteOffset,
                            byteLength: e.data.track.initSegment.byteLength
                        };
                        var i = {
                            data: e.data.boxes.buffer,
                            byteOffset: e.data.boxes.byteOffset,
                            byteLength: e.data.boxes.byteLength
                        };
                        var r = {
                            boxes: i,
                            initSegment: n,
                            type: e.type,
                            sequence: e.data.sequence
                        };
                        if (typeof e.data.videoFrameDts !== "undefined") {
                            r.videoFrameDtsTime = de.videoTsToSeconds(e.data.videoFrameDts)
                        }
                        if (typeof e.data.videoFramePts !== "undefined") {
                            r.videoFramePtsTime = de.videoTsToSeconds(e.data.videoFramePts)
                        }
                        t.postMessage({
                            action: "data",
                            segment: r
                        }, [r.boxes.data, r.initSegment.data])
                    });
                    n.on("id3Frame", function(e) {
                        t.postMessage({
                            action: "id3Frame",
                            id3Frame: e
                        })
                    });
                    n.on("caption", function(e) {
                        t.postMessage({
                            action: "caption",
                            caption: e
                        })
                    });
                    n.on("done", function(e) {
                        t.postMessage({
                            action: "done",
                            type: Rn(e)
                        })
                    });
                    n.on("partialdone", function(e) {
                        t.postMessage({
                            action: "partialdone",
                            type: Rn(e)
                        })
                    });
                    n.on("endedsegment", function(e) {
                        t.postMessage({
                            action: "endedSegment",
                            type: Rn(e)
                        })
                    });
                    n.on("trackinfo", function(e) {
                        t.postMessage({
                            action: "trackinfo",
                            trackInfo: e
                        })
                    });
                    n.on("audioTimingInfo", function(e) {
                        if (e.start === null) {
                            t.postMessage({
                                action: "audioTimingInfo",
                                audioTimingInfo: e
                            });
                            return
                        }
                        var n = {
                            start: de.videoTsToSeconds(e.start)
                        };
                        if (e.end) {
                            n.end = de.videoTsToSeconds(e.end)
                        }
                        t.postMessage({
                            action: "audioTimingInfo",
                            audioTimingInfo: n
                        })
                    });
                    n.on("videoTimingInfo", function(e) {
                        var n = {
                            start: de.videoTsToSeconds(e.start)
                        };
                        if (e.end) {
                            n.end = de.videoTsToSeconds(e.end)
                        }
                        t.postMessage({
                            action: "videoTimingInfo",
                            videoTimingInfo: n
                        })
                    })
                };
                var Bn = function() {
                    function e(e, t) {
                        this.options = t || {};
                        this.self = e;
                        this.init()
                    }
                    var t = e.prototype;
                    t.init = function e() {
                        if (this.transmuxer) {
                            this.transmuxer.dispose()
                        }
                        this.transmuxer = this.options.handlePartialData ? new ln(this.options) : new Xt.Transmuxer(this.options);
                        if (this.options.handlePartialData) {
                            Un(this.self, this.transmuxer)
                        } else {
                            Mn(this.self, this.transmuxer)
                        }
                    }
                    ;
                    t.pushMp4Captions = function e(t) {
                        if (!this.captionParser) {
                            this.captionParser = new Nn;
                            this.captionParser.init()
                        }
                        var n = new Uint8Array(t.data,t.byteOffset,t.byteLength);
                        var i = this.captionParser.parse(n, t.trackIds, t.timescales);
                        this.self.postMessage({
                            action: "mp4Captions",
                            captions: i && i.captions || [],
                            data: n.buffer
                        }, [n.buffer])
                    }
                    ;
                    t.clearAllMp4Captions = function e() {
                        if (this.captionParser) {
                            this.captionParser.clearAllCaptions()
                        }
                    }
                    ;
                    t.clearParsedMp4Captions = function e() {
                        if (this.captionParser) {
                            this.captionParser.clearParsedCaptions()
                        }
                    }
                    ;
                    t.push = function e(t) {
                        var n = new Uint8Array(t.data,t.byteOffset,t.byteLength);
                        this.transmuxer.push(n)
                    }
                    ;
                    t.reset = function e() {
                        this.transmuxer.reset()
                    }
                    ;
                    t.setTimestampOffset = function e(t) {
                        var n = t.timestampOffset || 0;
                        this.transmuxer.setBaseMediaDecodeTime(Math.round(de.secondsToVideoTs(n)))
                    }
                    ;
                    t.setAudioAppendStart = function e(t) {
                        this.transmuxer.setAudioAppendStart(Math.ceil(de.secondsToVideoTs(t.appendStart)))
                    }
                    ;
                    t.setRemux = function e(t) {
                        this.transmuxer.setRemux(t.remux)
                    }
                    ;
                    t.flush = function e(t) {
                        this.transmuxer.flush();
                        self.postMessage({
                            action: "done",
                            type: "transmuxed"
                        })
                    }
                    ;
                    t.partialFlush = function e(t) {
                        this.transmuxer.partialFlush();
                        self.postMessage({
                            action: "partialdone",
                            type: "transmuxed"
                        })
                    }
                    ;
                    t.endTimeline = function e() {
                        this.transmuxer.endTimeline();
                        self.postMessage({
                            action: "endedtimeline",
                            type: "transmuxed"
                        })
                    }
                    ;
                    t.alignGopsWith = function e(t) {
                        this.transmuxer.alignGopsWith(t.gopsToAlignWith.slice())
                    }
                    ;
                    return e
                }();
                self.onmessage = function(e) {
                    if (e.data.action === "init" && e.data.options) {
                        this.messageHandlers = new Bn(self,e.data.options);
                        return
                    }
                    if (!this.messageHandlers) {
                        this.messageHandlers = new Bn(self)
                    }
                    if (e.data && e.data.action && e.data.action !== "init") {
                        if (this.messageHandlers[e.data.action]) {
                            this.messageHandlers[e.data.action](e.data)
                        }
                    }
                }
            }));
            var ji = Pi(wi);
            var Li = function e(t, n, i) {
                var r = t.data.segment
                  , a = r.type
                  , s = r.initSegment
                  , o = r.captions
                  , u = r.captionStreams
                  , l = r.metadata
                  , d = r.videoFrameDtsTime
                  , c = r.videoFramePtsTime;
                n.buffer.push({
                    captions: o,
                    captionStreams: u,
                    metadata: l
                });
                var f = t.data.segment.boxes || {
                    data: t.data.segment.data
                };
                var p = {
                    type: a,
                    data: new Uint8Array(f.data,f.data.byteOffset,f.data.byteLength),
                    initSegment: new Uint8Array(s.data,s.byteOffset,s.byteLength)
                };
                if (typeof d !== "undefined") {
                    p.videoFrameDtsTime = d
                }
                if (typeof c !== "undefined") {
                    p.videoFramePtsTime = c
                }
                i(p)
            };
            var Oi = function e(t) {
                var n = t.transmuxedData
                  , i = t.callback;
                n.buffer = [];
                i(n)
            };
            var xi = function e(t, n) {
                n.gopInfo = t.data.gopInfo
            };
            var Di = function e(t) {
                var n = t.transmuxer
                  , i = t.bytes
                  , r = t.audioAppendStart
                  , a = t.gopsToAlignWith
                  , s = t.isPartial
                  , o = t.remux
                  , u = t.onData
                  , l = t.onTrackInfo
                  , d = t.onAudioTimingInfo
                  , c = t.onVideoTimingInfo
                  , f = t.onVideoSegmentTimingInfo
                  , p = t.onAudioSegmentTimingInfo
                  , h = t.onId3
                  , v = t.onCaptions
                  , g = t.onDone
                  , m = t.onEndedTimeline
                  , y = t.isEndOfTimeline;
                var _ = {
                    isPartial: s,
                    buffer: []
                };
                var b = y;
                var S = function e(i) {
                    if (n.currentTransmux !== t) {
                        return
                    }
                    if (i.data.action === "data") {
                        Li(i, _, u)
                    }
                    if (i.data.action === "trackinfo") {
                        l(i.data.trackInfo)
                    }
                    if (i.data.action === "gopInfo") {
                        xi(i, _)
                    }
                    if (i.data.action === "audioTimingInfo") {
                        d(i.data.audioTimingInfo)
                    }
                    if (i.data.action === "videoTimingInfo") {
                        c(i.data.videoTimingInfo)
                    }
                    if (i.data.action === "videoSegmentTimingInfo") {
                        f(i.data.videoSegmentTimingInfo)
                    }
                    if (i.data.action === "audioSegmentTimingInfo") {
                        p(i.data.audioSegmentTimingInfo)
                    }
                    if (i.data.action === "id3Frame") {
                        h([i.data.id3Frame], i.data.id3Frame.dispatchType)
                    }
                    if (i.data.action === "caption") {
                        v(i.data.caption)
                    }
                    if (i.data.action === "endedtimeline") {
                        b = false;
                        m()
                    }
                    if (i.data.type !== "transmuxed") {
                        return
                    }
                    if (b) {
                        return
                    }
                    n.onmessage = null;
                    Oi({
                        transmuxedData: _,
                        callback: g
                    });
                    Ni(n)
                };
                n.onmessage = S;
                if (r) {
                    n.postMessage({
                        action: "setAudioAppendStart",
                        appendStart: r
                    })
                }
                if (Array.isArray(a)) {
                    n.postMessage({
                        action: "alignGopsWith",
                        gopsToAlignWith: a
                    })
                }
                if (typeof o !== "undefined") {
                    n.postMessage({
                        action: "setRemux",
                        remux: o
                    })
                }
                if (i.byteLength) {
                    var A = i instanceof ArrayBuffer ? i : i.buffer;
                    var T = i instanceof ArrayBuffer ? 0 : i.byteOffset;
                    n.postMessage({
                        action: "push",
                        data: A,
                        byteOffset: T,
                        byteLength: i.byteLength
                    }, [A])
                }
                n.postMessage({
                    action: s ? "partialFlush" : "flush"
                });
                if (y) {
                    n.postMessage({
                        action: "endTimeline"
                    })
                }
            };
            var Ni = function e(t) {
                t.currentTransmux = null;
                if (t.transmuxQueue.length) {
                    t.currentTransmux = t.transmuxQueue.shift();
                    if (typeof t.currentTransmux === "function") {
                        t.currentTransmux()
                    } else {
                        Di(t.currentTransmux)
                    }
                }
            };
            var Ri = function e(t, n) {
                t.postMessage({
                    action: n
                });
                Ni(t)
            };
            var Mi = function e(t, n) {
                if (!n.currentTransmux) {
                    n.currentTransmux = t;
                    Ri(n, t);
                    return
                }
                n.transmuxQueue.push(Ri.bind(null, n, t))
            };
            var Ui = function e(t) {
                Mi("reset", t)
            };
            var Bi = function e(t) {
                Mi("endTimeline", t)
            };
            var Fi = function e(t) {
                if (!t.transmuxer.currentTransmux) {
                    t.transmuxer.currentTransmux = t;
                    Di(t);
                    return
                }
                t.transmuxer.transmuxQueue.push(t)
            };
            var Vi = function e(t) {
                var n = new ji;
                n.currentTransmux = null;
                n.transmuxQueue = [];
                var i = n.terminate;
                n.terminate = function() {
                    n.currentTransmux = null;
                    n.transmuxQueue.length = 0;
                    return i.call(n)
                }
                ;
                n.postMessage({
                    action: "init",
                    options: t
                });
                return n
            };
            var qi = {
                reset: Ui,
                endTimeline: Bi,
                transmux: Fi,
                createTransmuxer: Vi
            };
            var Hi = {
                H264_STREAM_TYPE: 27,
                ADTS_STREAM_TYPE: 15,
                METADATA_STREAM_TYPE: 21
            };
            var Gi = function e() {
                this.init = function() {
                    var e = {};
                    this.on = function(t, n) {
                        if (!e[t]) {
                            e[t] = []
                        }
                        e[t] = e[t].concat(n)
                    }
                    ;
                    this.off = function(t, n) {
                        var i;
                        if (!e[t]) {
                            return false
                        }
                        i = e[t].indexOf(n);
                        e[t] = e[t].slice();
                        e[t].splice(i, 1);
                        return i > -1
                    }
                    ;
                    this.trigger = function(t) {
                        var n, i, r, a;
                        n = e[t];
                        if (!n) {
                            return
                        }
                        if (arguments.length === 2) {
                            r = n.length;
                            for (i = 0; i < r; ++i) {
                                n[i].call(this, arguments[1])
                            }
                        } else {
                            a = [];
                            i = arguments.length;
                            for (i = 1; i < arguments.length; ++i) {
                                a.push(arguments[i])
                            }
                            r = n.length;
                            for (i = 0; i < r; ++i) {
                                n[i].apply(this, a)
                            }
                        }
                    }
                    ;
                    this.dispose = function() {
                        e = {}
                    }
                }
            };
            Gi.prototype.pipe = function(e) {
                this.on("data", function(t) {
                    e.push(t)
                });
                this.on("done", function(t) {
                    e.flush(t)
                });
                this.on("partialdone", function(t) {
                    e.partialFlush(t)
                });
                this.on("endedtimeline", function(t) {
                    e.endTimeline(t)
                });
                this.on("reset", function(t) {
                    e.reset(t)
                });
                return e
            }
            ;
            Gi.prototype.push = function(e) {
                this.trigger("data", e)
            }
            ;
            Gi.prototype.flush = function(e) {
                this.trigger("done", e)
            }
            ;
            Gi.prototype.partialFlush = function(e) {
                this.trigger("partialdone", e)
            }
            ;
            Gi.prototype.endTimeline = function(e) {
                this.trigger("endedtimeline", e)
            }
            ;
            Gi.prototype.reset = function(e) {
                this.trigger("reset", e)
            }
            ;
            var Wi = Gi;
            var Ki = 8589934592;
            var zi = 4294967296;
            var Yi = "shared";
            var Xi = function e(t, n) {
                var i = 1;
                if (t > n) {
                    i = -1
                }
                while (Math.abs(n - t) > zi) {
                    t += i * Ki
                }
                return t
            };
            var Qi = function e(t) {
                var n, i;
                e.prototype.init.call(this);
                this.type_ = t || Yi;
                this.push = function(e) {
                    if (this.type_ !== Yi && e.type !== this.type_) {
                        return
                    }
                    if (i === undefined) {
                        i = e.dts
                    }
                    e.dts = Xi(e.dts, i);
                    e.pts = Xi(e.pts, i);
                    n = e.dts;
                    this.trigger("data", e)
                }
                ;
                this.flush = function() {
                    i = n;
                    this.trigger("done")
                }
                ;
                this.endTimeline = function() {
                    this.flush();
                    this.trigger("endedtimeline")
                }
                ;
                this.discontinuity = function() {
                    i = void 0;
                    n = void 0
                }
                ;
                this.reset = function() {
                    this.discontinuity();
                    this.trigger("reset")
                }
            };
            Qi.prototype = new Wi;
            var Zi = {
                TimestampRolloverStream: Qi,
                handleRollover: Xi
            };
            var Ji = function e(t) {
                var n = t[1] & 31;
                n <<= 8;
                n |= t[2];
                return n
            };
            var $i = function e(t) {
                return !!(t[1] & 64)
            };
            var er = function e(t) {
                var n = 0;
                if ((t[3] & 48) >>> 4 > 1) {
                    n += t[4] + 1
                }
                return n
            };
            var tr = function e(t, n) {
                var i = Ji(t);
                if (i === 0) {
                    return "pat"
                } else if (i === n) {
                    return "pmt"
                } else if (n) {
                    return "pes"
                }
                return null
            };
            var nr = function e(t) {
                var n = $i(t);
                var i = 4 + er(t);
                if (n) {
                    i += t[i] + 1
                }
                return (t[i + 10] & 31) << 8 | t[i + 11]
            };
            var ir = function e(t) {
                var n = {};
                var i = $i(t);
                var r = 4 + er(t);
                if (i) {
                    r += t[r] + 1
                }
                if (!(t[r + 5] & 1)) {
                    return
                }
                var a, s, o;
                a = (t[r + 1] & 15) << 8 | t[r + 2];
                s = 3 + a - 4;
                o = (t[r + 10] & 15) << 8 | t[r + 11];
                var u = 12 + o;
                while (u < s) {
                    var l = r + u;
                    n[(t[l + 1] & 31) << 8 | t[l + 2]] = t[l];
                    u += ((t[l + 3] & 15) << 8 | t[l + 4]) + 5
                }
                return n
            };
            var rr = function e(t, n) {
                var i = Ji(t);
                var r = n[i];
                switch (r) {
                case Hi.H264_STREAM_TYPE:
                    return "video";
                case Hi.ADTS_STREAM_TYPE:
                    return "audio";
                case Hi.METADATA_STREAM_TYPE:
                    return "timed-metadata";
                default:
                    return null
                }
            };
            var ar = function e(t) {
                var n = $i(t);
                if (!n) {
                    return null
                }
                var i = 4 + er(t);
                if (i >= t.byteLength) {
                    return null
                }
                var r = null;
                var a;
                a = t[i + 7];
                if (a & 192) {
                    r = {};
                    r.pts = (t[i + 9] & 14) << 27 | (t[i + 10] & 255) << 20 | (t[i + 11] & 254) << 12 | (t[i + 12] & 255) << 5 | (t[i + 13] & 254) >>> 3;
                    r.pts *= 4;
                    r.pts += (t[i + 13] & 6) >>> 1;
                    r.dts = r.pts;
                    if (a & 64) {
                        r.dts = (t[i + 14] & 14) << 27 | (t[i + 15] & 255) << 20 | (t[i + 16] & 254) << 12 | (t[i + 17] & 255) << 5 | (t[i + 18] & 254) >>> 3;
                        r.dts *= 4;
                        r.dts += (t[i + 18] & 6) >>> 1
                    }
                }
                return r
            };
            var sr = function e(t) {
                switch (t) {
                case 5:
                    return "slice_layer_without_partitioning_rbsp_idr";
                case 6:
                    return "sei_rbsp";
                case 7:
                    return "seq_parameter_set_rbsp";
                case 8:
                    return "pic_parameter_set_rbsp";
                case 9:
                    return "access_unit_delimiter_rbsp";
                default:
                    return null
                }
            };
            var or = function e(t) {
                var n = 4 + er(t);
                var i = t.subarray(n);
                var r = 0;
                var a = 0;
                var s = false;
                var o;
                for (; a < i.byteLength - 3; a++) {
                    if (i[a + 2] === 1) {
                        r = a + 5;
                        break
                    }
                }
                while (r < i.byteLength) {
                    switch (i[r]) {
                    case 0:
                        if (i[r - 1] !== 0) {
                            r += 2;
                            break
                        } else if (i[r - 2] !== 0) {
                            r++;
                            break
                        }
                        if (a + 3 !== r - 2) {
                            o = sr(i[a + 3] & 31);
                            if (o === "slice_layer_without_partitioning_rbsp_idr") {
                                s = true
                            }
                        }
                        do {
                            r++
                        } while (i[r] !== 1 && r < i.length);
                        a = r - 2;
                        r += 3;
                        break;
                    case 1:
                        if (i[r - 1] !== 0 || i[r - 2] !== 0) {
                            r += 3;
                            break
                        }
                        o = sr(i[a + 3] & 31);
                        if (o === "slice_layer_without_partitioning_rbsp_idr") {
                            s = true
                        }
                        a = r - 2;
                        r += 3;
                        break;
                    default:
                        r += 3;
                        break
                    }
                }
                i = i.subarray(a);
                r -= a;
                a = 0;
                if (i && i.byteLength > 3) {
                    o = sr(i[a + 3] & 31);
                    if (o === "slice_layer_without_partitioning_rbsp_idr") {
                        s = true
                    }
                }
                return s
            };
            var ur = {
                parseType: tr,
                parsePat: nr,
                parsePmt: ir,
                parsePayloadUnitStartIndicator: $i,
                parsePesType: rr,
                parsePesTime: ar,
                videoPacketContainsKeyFrame: or
            };
            var lr = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
            var dr = function e(t, n) {
                var i = t[n + 6] << 21 | t[n + 7] << 14 | t[n + 8] << 7 | t[n + 9]
                  , r = t[n + 5]
                  , a = (r & 16) >> 4;
                i = i >= 0 ? i : 0;
                if (a) {
                    return i + 20
                }
                return i + 10
            };
            var cr = function e(t, n) {
                if (t.length - n < 10 || t[n] !== "I".charCodeAt(0) || t[n + 1] !== "D".charCodeAt(0) || t[n + 2] !== "3".charCodeAt(0)) {
                    return n
                }
                n += dr(t, n);
                return e(t, n)
            };
            var fr = function e(t) {
                var n = cr(t, 0);
                return t.length >= n + 2 && (t[n] & 255) === 255 && (t[n + 1] & 240) === 240 && (t[n + 1] & 22) === 16
            };
            var pr = function e(t) {
                return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
            };
            var hr = function e(t, n, i) {
                var r, a = "";
                for (r = n; r < i; r++) {
                    a += "%" + ("00" + t[r].toString(16)).slice(-2)
                }
                return a
            };
            var vr = function e(t, n, i) {
                return unescape(hr(t, n, i))
            };
            var gr = function e(t, n) {
                var i = (t[n + 5] & 224) >> 5
                  , r = t[n + 4] << 3
                  , a = t[n + 3] & 3 << 11;
                return a | r | i
            };
            var mr = function e(t, n) {
                if (t[n] === "I".charCodeAt(0) && t[n + 1] === "D".charCodeAt(0) && t[n + 2] === "3".charCodeAt(0)) {
                    return "timed-metadata"
                } else if (t[n] & 255 === 255 && (t[n + 1] & 240) === 240) {
                    return "audio"
                }
                return null
            };
            var yr = function e(t) {
                var n = 0;
                while (n + 5 < t.length) {
                    if (t[n] !== 255 || (t[n + 1] & 246) !== 240) {
                        n++;
                        continue
                    }
                    return lr[(t[n + 2] & 60) >>> 2]
                }
                return null
            };
            var _r = function e(t) {
                var n, i, r, a;
                n = 10;
                if (t[5] & 64) {
                    n += 4;
                    n += pr(t.subarray(10, 14))
                }
                do {
                    i = pr(t.subarray(n + 4, n + 8));
                    if (i < 1) {
                        return null
                    }
                    a = String.fromCharCode(t[n], t[n + 1], t[n + 2], t[n + 3]);
                    if (a === "PRIV") {
                        r = t.subarray(n + 10, n + i + 10);
                        for (var s = 0; s < r.byteLength; s++) {
                            if (r[s] === 0) {
                                var o = vr(r, 0, s);
                                if (o === "com.apple.streaming.transportStreamTimestamp") {
                                    var u = r.subarray(s + 1);
                                    var l = (u[3] & 1) << 30 | u[4] << 22 | u[5] << 14 | u[6] << 6 | u[7] >>> 2;
                                    l *= 4;
                                    l += u[7] & 3;
                                    return l
                                }
                                break
                            }
                        }
                    }
                    n += 10;
                    n += i
                } while (n < t.byteLength);
                return null
            };
            var br = {
                isLikelyAacData: fr,
                parseId3TagSize: dr,
                parseAdtsSize: gr,
                parseType: mr,
                parseSampleRate: yr,
                parseAacTimestamp: _r
            };
            var Sr = 9e4, Ar, Tr, kr, Er, Pr, Ir, Cr;
            Ar = function e(t) {
                return t * Sr
            }
            ;
            Tr = function e(t, n) {
                return t * n
            }
            ;
            kr = function e(t) {
                return t / Sr
            }
            ;
            Er = function e(t, n) {
                return t / n
            }
            ;
            Pr = function e(t, n) {
                return Ar(Er(t, n))
            }
            ;
            Ir = function e(t, n) {
                return Tr(kr(t), n)
            }
            ;
            Cr = function e(t, n, i) {
                return kr(i ? t : t - n)
            }
            ;
            var wr = {
                ONE_SECOND_IN_TS: Sr,
                secondsToVideoTs: Ar,
                secondsToAudioTs: Tr,
                videoTsToSeconds: kr,
                audioTsToSeconds: Er,
                audioTsToVideoTs: Pr,
                videoTsToAudioTs: Ir,
                metadataTsToSeconds: Cr
            };
            var jr = Zi.handleRollover;
            var Lr = {};
            Lr.ts = ur;
            Lr.aac = br;
            var Or = wr.ONE_SECOND_IN_TS;
            var xr = 188
              , Dr = 71;
            var Nr = function e(t, n) {
                var i = 0, r = xr, a, s;
                while (r < t.byteLength) {
                    if (t[i] === Dr && t[r] === Dr) {
                        a = t.subarray(i, r);
                        s = Lr.ts.parseType(a, n.pid);
                        switch (s) {
                        case "pat":
                            if (!n.pid) {
                                n.pid = Lr.ts.parsePat(a)
                            }
                            break;
                        case "pmt":
                            if (!n.table) {
                                n.table = Lr.ts.parsePmt(a)
                            }
                            break
                        }
                        if (n.pid && n.table) {
                            return
                        }
                        i += xr;
                        r += xr;
                        continue
                    }
                    i++;
                    r++
                }
            };
            var Rr = function e(t, n, i) {
                var r = 0, a = xr, s, o, u, l, d;
                var c = false;
                while (a <= t.byteLength) {
                    if (t[r] === Dr && (t[a] === Dr || a === t.byteLength)) {
                        s = t.subarray(r, a);
                        o = Lr.ts.parseType(s, n.pid);
                        switch (o) {
                        case "pes":
                            u = Lr.ts.parsePesType(s, n.table);
                            l = Lr.ts.parsePayloadUnitStartIndicator(s);
                            if (u === "audio" && l) {
                                d = Lr.ts.parsePesTime(s);
                                if (d) {
                                    d.type = "audio";
                                    i.audio.push(d);
                                    c = true
                                }
                            }
                            break
                        }
                        if (c) {
                            break
                        }
                        r += xr;
                        a += xr;
                        continue
                    }
                    r++;
                    a++
                }
                a = t.byteLength;
                r = a - xr;
                c = false;
                while (r >= 0) {
                    if (t[r] === Dr && (t[a] === Dr || a === t.byteLength)) {
                        s = t.subarray(r, a);
                        o = Lr.ts.parseType(s, n.pid);
                        switch (o) {
                        case "pes":
                            u = Lr.ts.parsePesType(s, n.table);
                            l = Lr.ts.parsePayloadUnitStartIndicator(s);
                            if (u === "audio" && l) {
                                d = Lr.ts.parsePesTime(s);
                                if (d) {
                                    d.type = "audio";
                                    i.audio.push(d);
                                    c = true
                                }
                            }
                            break
                        }
                        if (c) {
                            break
                        }
                        r -= xr;
                        a -= xr;
                        continue
                    }
                    r--;
                    a--
                }
            };
            var Mr = function e(t, n, i) {
                var r = 0, a = xr, s, o, u, l, d, c, f, p;
                var h = false;
                var v = {
                    data: [],
                    size: 0
                };
                while (a < t.byteLength) {
                    if (t[r] === Dr && t[a] === Dr) {
                        s = t.subarray(r, a);
                        o = Lr.ts.parseType(s, n.pid);
                        switch (o) {
                        case "pes":
                            u = Lr.ts.parsePesType(s, n.table);
                            l = Lr.ts.parsePayloadUnitStartIndicator(s);
                            if (u === "video") {
                                if (l && !h) {
                                    d = Lr.ts.parsePesTime(s);
                                    if (d) {
                                        d.type = "video";
                                        i.video.push(d);
                                        h = true
                                    }
                                }
                                if (!i.firstKeyFrame) {
                                    if (l) {
                                        if (v.size !== 0) {
                                            c = new Uint8Array(v.size);
                                            f = 0;
                                            while (v.data.length) {
                                                p = v.data.shift();
                                                c.set(p, f);
                                                f += p.byteLength
                                            }
                                            if (Lr.ts.videoPacketContainsKeyFrame(c)) {
                                                var g = Lr.ts.parsePesTime(c);
                                                if (g) {
                                                    i.firstKeyFrame = g;
                                                    i.firstKeyFrame.type = "video"
                                                } else {
                                                    console.warn("Failed to extract PTS/DTS from PES at first keyframe. " + "This could be an unusual TS segment, or else mux.js did not " + "parse your TS segment correctly. If you know your TS " + "segments do contain PTS/DTS on keyframes please file a bug " + "report! You can try ffprobe to double check for yourself.")
                                                }
                                            }
                                            v.size = 0
                                        }
                                    }
                                    v.data.push(s);
                                    v.size += s.byteLength
                                }
                            }
                            break
                        }
                        if (h && i.firstKeyFrame) {
                            break
                        }
                        r += xr;
                        a += xr;
                        continue
                    }
                    r++;
                    a++
                }
                a = t.byteLength;
                r = a - xr;
                h = false;
                while (r >= 0) {
                    if (t[r] === Dr && t[a] === Dr) {
                        s = t.subarray(r, a);
                        o = Lr.ts.parseType(s, n.pid);
                        switch (o) {
                        case "pes":
                            u = Lr.ts.parsePesType(s, n.table);
                            l = Lr.ts.parsePayloadUnitStartIndicator(s);
                            if (u === "video" && l) {
                                d = Lr.ts.parsePesTime(s);
                                if (d) {
                                    d.type = "video";
                                    i.video.push(d);
                                    h = true
                                }
                            }
                            break
                        }
                        if (h) {
                            break
                        }
                        r -= xr;
                        a -= xr;
                        continue
                    }
                    r--;
                    a--
                }
            };
            var Ur = function e(t, n) {
                if (t.audio && t.audio.length) {
                    var i = n;
                    if (typeof i === "undefined" || isNaN(i)) {
                        i = t.audio[0].dts
                    }
                    t.audio.forEach(function(e) {
                        e.dts = jr(e.dts, i);
                        e.pts = jr(e.pts, i);
                        e.dtsTime = e.dts / Or;
                        e.ptsTime = e.pts / Or
                    })
                }
                if (t.video && t.video.length) {
                    var r = n;
                    if (typeof r === "undefined" || isNaN(r)) {
                        r = t.video[0].dts
                    }
                    t.video.forEach(function(e) {
                        e.dts = jr(e.dts, r);
                        e.pts = jr(e.pts, r);
                        e.dtsTime = e.dts / Or;
                        e.ptsTime = e.pts / Or
                    });
                    if (t.firstKeyFrame) {
                        var a = t.firstKeyFrame;
                        a.dts = jr(a.dts, r);
                        a.pts = jr(a.pts, r);
                        a.dtsTime = a.dts / Or;
                        a.ptsTime = a.pts / Or
                    }
                }
            };
            var Br = function e(t) {
                var n = false, i = 0, r = null, a = null, s = 0, o = 0, u;
                while (t.length - o >= 3) {
                    var l = Lr.aac.parseType(t, o);
                    switch (l) {
                    case "timed-metadata":
                        if (t.length - o < 10) {
                            n = true;
                            break
                        }
                        s = Lr.aac.parseId3TagSize(t, o);
                        if (s > t.length) {
                            n = true;
                            break
                        }
                        if (a === null) {
                            u = t.subarray(o, o + s);
                            a = Lr.aac.parseAacTimestamp(u)
                        }
                        o += s;
                        break;
                    case "audio":
                        if (t.length - o < 7) {
                            n = true;
                            break
                        }
                        s = Lr.aac.parseAdtsSize(t, o);
                        if (s > t.length) {
                            n = true;
                            break
                        }
                        if (r === null) {
                            u = t.subarray(o, o + s);
                            r = Lr.aac.parseSampleRate(u)
                        }
                        i++;
                        o += s;
                        break;
                    default:
                        o++;
                        break
                    }
                    if (n) {
                        return null
                    }
                }
                if (r === null || a === null) {
                    return null
                }
                var d = Or / r;
                var c = {
                    audio: [{
                        type: "audio",
                        dts: a,
                        pts: a
                    }, {
                        type: "audio",
                        dts: a + i * 1024 * d,
                        pts: a + i * 1024 * d
                    }]
                };
                return c
            };
            var Fr = function e(t) {
                var n = {
                    pid: null,
                    table: null
                };
                var i = {};
                Nr(t, n);
                for (var r in n.table) {
                    if (n.table.hasOwnProperty(r)) {
                        var a = n.table[r];
                        switch (a) {
                        case Hi.H264_STREAM_TYPE:
                            i.video = [];
                            Mr(t, n, i);
                            if (i.video.length === 0) {
                                delete i.video
                            }
                            break;
                        case Hi.ADTS_STREAM_TYPE:
                            i.audio = [];
                            Rr(t, n, i);
                            if (i.audio.length === 0) {
                                delete i.audio
                            }
                            break
                        }
                    }
                }
                return i
            };
            var Vr = function e(t, n) {
                var i = Lr.aac.isLikelyAacData(t);
                var r;
                if (i) {
                    r = Br(t)
                } else {
                    r = Fr(t)
                }
                if (!r || !r.audio && !r.video) {
                    return null
                }
                Ur(r, n);
                return r
            };
            var qr = {
                inspect: Vr,
                parseAudioPes_: Rr
            };
            var Hr = function e(t, n) {
                var i = typeof n === "number" && !isNaN(n) ? n * wr.ONE_SECOND_IN_TS : void 0;
                var r = qr.inspect(t, i);
                if (!r) {
                    return null
                }
                var a = {
                    hasVideo: r.video && r.video.length === 2 || false,
                    hasAudio: r.audio && r.audio.length === 2 || false
                };
                if (a.hasVideo) {
                    a.videoStart = r.video[0].ptsTime
                }
                if (a.hasAudio) {
                    a.audioStart = r.audio[0].ptsTime
                }
                return a
            };
            var Gr = function e(t) {
                var n = 0;
                var i;
                if (t.bytes) {
                    i = new Uint8Array(t.bytes);
                    t.segments.forEach(function(e) {
                        i.set(e, n);
                        n += e.byteLength
                    })
                }
                return i
            };
            var Wr = function e(t) {
                return t >>> 0
            };
            var Kr = function e(t) {
                return ("00" + t.toString(16)).slice(-2)
            };
            var zr = {
                toUnsigned: Wr,
                toHexString: Kr
            };
            var Yr = function e(t) {
                var n = "";
                n += String.fromCharCode(t[0]);
                n += String.fromCharCode(t[1]);
                n += String.fromCharCode(t[2]);
                n += String.fromCharCode(t[3]);
                return n
            };
            var Xr = Yr;
            var Qr = zr.toUnsigned;
            var Zr = function e(t, n) {
                var i = [], r, a, s, o, u;
                if (!n.length) {
                    return null
                }
                for (r = 0; r < t.byteLength; ) {
                    a = Qr(t[r] << 24 | t[r + 1] << 16 | t[r + 2] << 8 | t[r + 3]);
                    s = Xr(t.subarray(r + 4, r + 8));
                    o = a > 1 ? r + a : t.byteLength;
                    if (s === n[0]) {
                        if (n.length === 1) {
                            i.push(t.subarray(r + 8, o))
                        } else {
                            u = e(t.subarray(r + 8, o), n.slice(1));
                            if (u.length) {
                                i = i.concat(u)
                            }
                        }
                    }
                    r = o
                }
                return i
            };
            var Jr = Zr;
            var $r = function e(t) {
                var n = new DataView(t.buffer,t.byteOffset,t.byteLength), i = {
                    version: t[0],
                    flags: new Uint8Array(t.subarray(1, 4)),
                    trackId: n.getUint32(4)
                }, r = i.flags[2] & 1, a = i.flags[2] & 2, s = i.flags[2] & 8, o = i.flags[2] & 16, u = i.flags[2] & 32, l = i.flags[0] & 65536, d = i.flags[0] & 131072, c;
                c = 8;
                if (r) {
                    c += 4;
                    i.baseDataOffset = n.getUint32(12);
                    c += 4
                }
                if (a) {
                    i.sampleDescriptionIndex = n.getUint32(c);
                    c += 4
                }
                if (s) {
                    i.defaultSampleDuration = n.getUint32(c);
                    c += 4
                }
                if (o) {
                    i.defaultSampleSize = n.getUint32(c);
                    c += 4
                }
                if (u) {
                    i.defaultSampleFlags = n.getUint32(c)
                }
                if (l) {
                    i.durationIsEmpty = true
                }
                if (!r && d) {
                    i.baseDataOffsetIsMoof = true
                }
                return i
            };
            var ea = $r;
            var ta = function e(t) {
                return {
                    isLeading: (t[0] & 12) >>> 2,
                    dependsOn: t[0] & 3,
                    isDependedOn: (t[1] & 192) >>> 6,
                    hasRedundancy: (t[1] & 48) >>> 4,
                    paddingValue: (t[1] & 14) >>> 1,
                    isNonSyncSample: t[1] & 1,
                    degradationPriority: t[2] << 8 | t[3]
                }
            };
            var na = ta;
            var ia = function e(t) {
                var n = {
                    version: t[0],
                    flags: new Uint8Array(t.subarray(1, 4)),
                    samples: []
                }, i = new DataView(t.buffer,t.byteOffset,t.byteLength), r = n.flags[2] & 1, a = n.flags[2] & 4, s = n.flags[1] & 1, o = n.flags[1] & 2, u = n.flags[1] & 4, l = n.flags[1] & 8, d = i.getUint32(4), c = 8, f;
                if (r) {
                    n.dataOffset = i.getInt32(c);
                    c += 4
                }
                if (a && d) {
                    f = {
                        flags: na(t.subarray(c, c + 4))
                    };
                    c += 4;
                    if (s) {
                        f.duration = i.getUint32(c);
                        c += 4
                    }
                    if (o) {
                        f.size = i.getUint32(c);
                        c += 4
                    }
                    if (l) {
                        if (n.version === 1) {
                            f.compositionTimeOffset = i.getInt32(c)
                        } else {
                            f.compositionTimeOffset = i.getUint32(c)
                        }
                        c += 4
                    }
                    n.samples.push(f);
                    d--
                }
                while (d--) {
                    f = {};
                    if (s) {
                        f.duration = i.getUint32(c);
                        c += 4
                    }
                    if (o) {
                        f.size = i.getUint32(c);
                        c += 4
                    }
                    if (u) {
                        f.flags = na(t.subarray(c, c + 4));
                        c += 4
                    }
                    if (l) {
                        if (n.version === 1) {
                            f.compositionTimeOffset = i.getInt32(c)
                        } else {
                            f.compositionTimeOffset = i.getUint32(c)
                        }
                        c += 4
                    }
                    n.samples.push(f)
                }
                return n
            };
            var ra = ia;
            var aa = zr.toUnsigned;
            var sa = function e(t) {
                var n = {
                    version: t[0],
                    flags: new Uint8Array(t.subarray(1, 4)),
                    baseMediaDecodeTime: aa(t[4] << 24 | t[5] << 16 | t[6] << 8 | t[7])
                };
                if (n.version === 1) {
                    n.baseMediaDecodeTime *= Math.pow(2, 32);
                    n.baseMediaDecodeTime += aa(t[8] << 24 | t[9] << 16 | t[10] << 8 | t[11])
                }
                return n
            };
            var oa = sa;
            var ua = zr.toUnsigned;
            var la = zr.toHexString;
            var da, ca, fa, pa, ha, va;
            da = function e(t) {
                var n = {}
                  , i = Jr(t, ["moov", "trak"]);
                return i.reduce(function(e, t) {
                    var n, i, r, a, s;
                    n = Jr(t, ["tkhd"])[0];
                    if (!n) {
                        return null
                    }
                    i = n[0];
                    r = i === 0 ? 12 : 20;
                    a = ua(n[r] << 24 | n[r + 1] << 16 | n[r + 2] << 8 | n[r + 3]);
                    s = Jr(t, ["mdia", "mdhd"])[0];
                    if (!s) {
                        return null
                    }
                    i = s[0];
                    r = i === 0 ? 12 : 20;
                    e[a] = ua(s[r] << 24 | s[r + 1] << 16 | s[r + 2] << 8 | s[r + 3]);
                    return e
                }, n)
            }
            ;
            ca = function e(t, n) {
                var i, r, a;
                i = Jr(n, ["moof", "traf"]);
                r = [].concat.apply([], i.map(function(e) {
                    return Jr(e, ["tfhd"]).map(function(n) {
                        var i, r, a;
                        i = ua(n[4] << 24 | n[5] << 16 | n[6] << 8 | n[7]);
                        r = t[i] || 9e4;
                        a = Jr(e, ["tfdt"]).map(function(e) {
                            var t, n;
                            t = e[0];
                            n = ua(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7]);
                            if (t === 1) {
                                n *= Math.pow(2, 32);
                                n += ua(e[8] << 24 | e[9] << 16 | e[10] << 8 | e[11])
                            }
                            return n
                        })[0];
                        a = typeof a === "number" && !isNaN(a) ? a : Infinity;
                        return a / r
                    })
                }));
                a = Math.min.apply(null, r);
                return isFinite(a) ? a : 0
            }
            ;
            fa = function e(t, n) {
                var i = Jr(n, ["moof", "traf"]);
                var r = 0;
                var a = 0;
                var s;
                if (i && i.length) {
                    var o = Jr(i[0], ["tfhd"])[0];
                    var u = Jr(i[0], ["trun"])[0];
                    var l = Jr(i[0], ["tfdt"])[0];
                    if (o) {
                        var d = ea(o);
                        s = d.trackId
                    }
                    if (l) {
                        var c = oa(l);
                        r = c.baseMediaDecodeTime
                    }
                    if (u) {
                        var f = ra(u);
                        if (f.samples && f.samples.length) {
                            a = f.samples[0].compositionTimeOffset || 0
                        }
                    }
                }
                var p = t[s] || 9e4;
                return (r + a) / p
            }
            ;
            pa = function e(t) {
                var n = Jr(t, ["moov", "trak"]);
                var i = [];
                n.forEach(function(e) {
                    var t = Jr(e, ["mdia", "hdlr"]);
                    var n = Jr(e, ["tkhd"]);
                    t.forEach(function(e, t) {
                        var r = Xr(e.subarray(8, 12));
                        var a = n[t];
                        var s;
                        var o;
                        var u;
                        if (r === "vide") {
                            s = new DataView(a.buffer,a.byteOffset,a.byteLength);
                            o = s.getUint8(0);
                            u = o === 0 ? s.getUint32(12) : s.getUint32(20);
                            i.push(u)
                        }
                    })
                });
                return i
            }
            ;
            va = function e(t) {
                var n = t[0];
                var i = n === 0 ? 12 : 20;
                return ua(t[i] << 24 | t[i + 1] << 16 | t[i + 2] << 8 | t[i + 3])
            }
            ;
            ha = function e(t) {
                var n = Jr(t, ["moov", "trak"]);
                var i = [];
                n.forEach(function(e) {
                    var t = {};
                    var n = Jr(e, ["tkhd"])[0];
                    var r, a;
                    if (n) {
                        r = new DataView(n.buffer,n.byteOffset,n.byteLength);
                        a = r.getUint8(0);
                        t.id = a === 0 ? r.getUint32(12) : r.getUint32(20)
                    }
                    var s = Jr(e, ["mdia", "hdlr"])[0];
                    if (s) {
                        var o = Xr(s.subarray(8, 12));
                        if (o === "vide") {
                            t.type = "video"
                        } else if (o === "soun") {
                            t.type = "audio"
                        } else {
                            t.type = o
                        }
                    }
                    var u = Jr(e, ["mdia", "minf", "stbl", "stsd"])[0];
                    if (u) {
                        var l = u.subarray(8);
                        t.codec = Xr(l.subarray(4, 8));
                        var d = Jr(l, [t.codec])[0];
                        var c, f;
                        if (d) {
                            if (/^[a-z]vc[1-9]$/i.test(t.codec)) {
                                c = d.subarray(78);
                                f = Xr(c.subarray(4, 8));
                                if (f === "avcC" && c.length > 11) {
                                    t.codec += ".";
                                    t.codec += la(c[9]);
                                    t.codec += la(c[10]);
                                    t.codec += la(c[11])
                                } else {
                                    t.codec = "avc1.4d400d"
                                }
                            } else if (/^mp4[a,v]$/i.test(t.codec)) {
                                c = d.subarray(28);
                                f = Xr(c.subarray(4, 8));
                                if (f === "esds" && c.length > 20 && c[19] !== 0) {
                                    t.codec += "." + la(c[19]);
                                    t.codec += "." + la(c[20] >>> 2 & 63).replace(/^0/, "")
                                } else {
                                    t.codec = "mp4a.40.2"
                                }
                            } else {
                                t.codec = t.codec.toLowerCase()
                            }
                        }
                    }
                    var p = Jr(e, ["mdia", "mdhd"])[0];
                    if (p) {
                        t.timescale = va(p)
                    }
                    i.push(t)
                });
                return i
            }
            ;
            var ga = {
                findBox: Jr,
                parseType: Xr,
                timescale: da,
                startTime: ca,
                compositionStartTime: fa,
                videoTrackIds: pa,
                tracks: ha,
                getTimescaleFromMediaHeader: va
            };
            var ma = {
                FAILURE: 2,
                TIMEOUT: -101,
                ABORTED: -102
            };
            var ya = function e(t) {
                t.forEach(function(e) {
                    e.abort()
                })
            };
            var _a = function e(t) {
                return {
                    bandwidth: t.bandwidth,
                    bytesReceived: t.bytesReceived || 0,
                    roundTripTime: t.roundTripTime || 0
                }
            };
            var ba = function e(t) {
                var n = t.target;
                var i = Date.now() - n.requestTime;
                var r = {
                    bandwidth: Infinity,
                    bytesReceived: 0,
                    roundTripTime: i || 0
                };
                r.bytesReceived = t.loaded;
                r.bandwidth = Math.floor(r.bytesReceived / r.roundTripTime * 8 * 1e3);
                return r
            };
            var Sa = function e(t, n) {
                if (n.timedout) {
                    return {
                        status: n.status,
                        message: "HLS request timed-out at URL: " + n.uri,
                        code: ma.TIMEOUT,
                        xhr: n
                    }
                }
                if (n.aborted) {
                    return {
                        status: n.status,
                        message: "HLS request aborted at URL: " + n.uri,
                        code: ma.ABORTED,
                        xhr: n
                    }
                }
                if (t) {
                    return {
                        status: n.status,
                        message: "HLS request errored at URL: " + n.uri,
                        code: ma.FAILURE,
                        xhr: n
                    }
                }
                return null
            };
            var Aa = function e(t, n) {
                return function(e, i) {
                    var r = i.response;
                    var a = Sa(e, i);
                    if (a) {
                        return n(a, t)
                    }
                    if (r.byteLength !== 16) {
                        return n({
                            status: i.status,
                            message: "Invalid HLS key at URL: " + i.uri,
                            code: ma.FAILURE,
                            xhr: i
                        }, t)
                    }
                    var s = new DataView(r);
                    t.key.bytes = new Uint32Array([s.getUint32(0), s.getUint32(4), s.getUint32(8), s.getUint32(12)]);
                    return n(null, t)
                }
            };
            var Ta = function e(t) {
                var n = t.segment
                  , i = t.finishProcessingFn;
                return function(e, t) {
                    var r = t.response;
                    var a = Sa(e, t);
                    if (a) {
                        return i(a, n)
                    }
                    if (r.byteLength === 0) {
                        return i({
                            status: t.status,
                            message: "Empty HLS segment content at URL: " + t.uri,
                            code: ma.FAILURE,
                            xhr: t
                        }, n)
                    }
                    n.map.bytes = new Uint8Array(t.response);
                    var s = li(n.map.bytes);
                    if (s !== "mp4") {
                        return i({
                            status: t.status,
                            message: "Found unsupported " + (s || "unknown") + " container for initialization segment at URL: " + t.uri,
                            code: ma.FAILURE,
                            internal: true,
                            xhr: t
                        }, n)
                    }
                    var o = ga.tracks(n.map.bytes);
                    o.forEach(function(e) {
                        n.map.tracks = n.map.tracks || {};
                        if (n.map.tracks[e.type]) {
                            return
                        }
                        n.map.tracks[e.type] = e;
                        if (typeof e.id === "number" && e.timescale) {
                            n.map.timescales = n.map.timescales || {};
                            n.map.timescales[e.id] = e.timescale
                        }
                    });
                    return i(null, n)
                }
            };
            var ka = function e(t) {
                var n = t.segment
                  , i = t.finishProcessingFn
                  , r = t.responseType;
                return function(e, t) {
                    var a = t.response;
                    var s = Sa(e, t);
                    if (s) {
                        return i(s, n)
                    }
                    var o = r === "arraybuffer" || !t.responseText ? t.response : Ti(t.responseText.substring(n.lastReachedChar || 0));
                    if (a.byteLength === 0) {
                        return i({
                            status: t.status,
                            message: "Empty HLS segment content at URL: " + t.uri,
                            code: ma.FAILURE,
                            xhr: t
                        }, n)
                    }
                    n.stats = _a(t);
                    if (n.key) {
                        n.encryptedBytes = new Uint8Array(o)
                    } else {
                        n.bytes = new Uint8Array(o)
                    }
                    return i(null, n)
                }
            };
            var Ea = function e(t) {
                var n = t.segment
                  , i = t.bytes
                  , r = t.isPartial
                  , a = t.trackInfoFn
                  , s = t.timingInfoFn
                  , o = t.videoSegmentTimingInfoFn
                  , u = t.audioSegmentTimingInfoFn
                  , l = t.id3Fn
                  , d = t.captionsFn
                  , c = t.isEndOfTimeline
                  , f = t.endedTimelineFn
                  , p = t.dataFn
                  , h = t.doneFn;
                var v = n.map && n.map.tracks || {};
                var g = Boolean(v.audio && v.video);
                var m = s.bind(null, n, "audio", "start");
                var y = s.bind(null, n, "audio", "end");
                var _ = s.bind(null, n, "video", "start");
                var b = s.bind(null, n, "video", "end");
                if (!r && !n.lastReachedChar) {
                    var S = Hr(i, n.baseStartTime);
                    if (S) {
                        a(n, {
                            hasAudio: S.hasAudio,
                            hasVideo: S.hasVideo,
                            isMuxed: g
                        });
                        a = null;
                        if (S.hasAudio && !g) {
                            m(S.audioStart)
                        }
                        if (S.hasVideo) {
                            _(S.videoStart)
                        }
                        m = null;
                        _ = null
                    }
                }
                Fi({
                    bytes: i,
                    transmuxer: n.transmuxer,
                    audioAppendStart: n.audioAppendStart,
                    gopsToAlignWith: n.gopsToAlignWith,
                    isPartial: r,
                    remux: g,
                    onData: function e(t) {
                        t.type = t.type === "combined" ? "video" : t.type;
                        p(n, t)
                    },
                    onTrackInfo: function e(t) {
                        if (a) {
                            if (g) {
                                t.isMuxed = true
                            }
                            a(n, t)
                        }
                    },
                    onAudioTimingInfo: function e(t) {
                        if (m && typeof t.start !== "undefined") {
                            m(t.start);
                            m = null
                        }
                        if (y && typeof t.end !== "undefined") {
                            y(t.end)
                        }
                    },
                    onVideoTimingInfo: function e(t) {
                        if (_ && typeof t.start !== "undefined") {
                            _(t.start);
                            _ = null
                        }
                        if (b && typeof t.end !== "undefined") {
                            b(t.end)
                        }
                    },
                    onVideoSegmentTimingInfo: function e(t) {
                        o(t)
                    },
                    onAudioSegmentTimingInfo: function e(t) {
                        u(t)
                    },
                    onId3: function e(t, i) {
                        l(n, t, i)
                    },
                    onCaptions: function e(t) {
                        d(n, [t])
                    },
                    isEndOfTimeline: c && !r,
                    onEndedTimeline: function e() {
                        f()
                    },
                    onDone: function e(t) {
                        if (!h || r) {
                            return
                        }
                        t.type = t.type === "combined" ? "video" : t.type;
                        h(null, n, t)
                    }
                })
            };
            var Pa = function e(t) {
                var n = t.segment
                  , i = t.bytes
                  , r = t.isPartial
                  , a = t.trackInfoFn
                  , s = t.timingInfoFn
                  , o = t.videoSegmentTimingInfoFn
                  , u = t.audioSegmentTimingInfoFn
                  , l = t.id3Fn
                  , d = t.captionsFn
                  , c = t.isEndOfTimeline
                  , f = t.endedTimelineFn
                  , p = t.dataFn
                  , h = t.doneFn;
                var v = new Uint8Array(i);
                if (di(v)) {
                    n.isFmp4 = true;
                    var g = n.map.tracks;
                    var m = {
                        isFmp4: true,
                        hasVideo: !!g.video,
                        hasAudio: !!g.audio
                    };
                    if (g.audio && g.audio.codec && g.audio.codec !== "enca") {
                        m.audioCodec = g.audio.codec
                    }
                    if (g.video && g.video.codec && g.video.codec !== "encv") {
                        m.videoCodec = g.video.codec
                    }
                    if (g.video && g.audio) {
                        m.isMuxed = true
                    }
                    a(n, m);
                    var y = ga.startTime(n.map.timescales, v);
                    if (m.hasAudio && !m.isMuxed) {
                        s(n, "audio", "start", y)
                    }
                    if (m.hasVideo) {
                        s(n, "video", "start", y)
                    }
                    var _ = function e(t) {
                        p(n, {
                            data: i,
                            type: m.hasAudio && !m.isMuxed ? "audio" : "video"
                        });
                        if (t && t.length) {
                            d(n, t)
                        }
                        h(null, n, {})
                    };
                    if (!g.video || !i.byteLength || !n.transmuxer) {
                        _();
                        return
                    }
                    var b = i instanceof ArrayBuffer ? i : i.buffer;
                    var S = i instanceof ArrayBuffer ? 0 : i.byteOffset;
                    var A = function e(t) {
                        if (t.data.action !== "mp4Captions") {
                            return
                        }
                        n.transmuxer.removeEventListener("message", e);
                        var r = t.data.data;
                        n.bytes = i = new Uint8Array(r,r.byteOffset || 0,r.byteLength);
                        _(t.data.captions)
                    };
                    n.transmuxer.addEventListener("message", A);
                    n.transmuxer.postMessage({
                        action: "pushMp4Captions",
                        timescales: n.map.timescales,
                        trackIds: [g.video.id],
                        data: b,
                        byteOffset: S,
                        byteLength: i.byteLength
                    }, [b]);
                    return
                }
                if (!n.transmuxer) {
                    h(null, n, {});
                    return
                }
                if (typeof n.container === "undefined") {
                    n.container = li(v)
                }
                if (n.container !== "ts" && n.container !== "aac") {
                    a(n, {
                        hasAudio: false,
                        hasVideo: false
                    });
                    h(null, n, {});
                    return
                }
                Ea({
                    segment: n,
                    bytes: i,
                    isPartial: r,
                    trackInfoFn: a,
                    timingInfoFn: s,
                    videoSegmentTimingInfoFn: o,
                    audioSegmentTimingInfoFn: u,
                    id3Fn: l,
                    captionsFn: d,
                    isEndOfTimeline: c,
                    endedTimelineFn: f,
                    dataFn: p,
                    doneFn: h
                })
            };
            var Ia = function e(t) {
                var n = t.decryptionWorker
                  , i = t.segment
                  , r = t.trackInfoFn
                  , a = t.timingInfoFn
                  , s = t.videoSegmentTimingInfoFn
                  , o = t.audioSegmentTimingInfoFn
                  , u = t.id3Fn
                  , l = t.captionsFn
                  , d = t.isEndOfTimeline
                  , c = t.endedTimelineFn
                  , f = t.dataFn
                  , p = t.doneFn;
                var h = function e(t) {
                    if (t.data.source === i.requestId) {
                        n.removeEventListener("message", e);
                        var h = t.data.decrypted;
                        i.bytes = new Uint8Array(h.bytes,h.byteOffset,h.byteLength);
                        Pa({
                            segment: i,
                            bytes: i.bytes,
                            isPartial: false,
                            trackInfoFn: r,
                            timingInfoFn: a,
                            videoSegmentTimingInfoFn: s,
                            audioSegmentTimingInfoFn: o,
                            id3Fn: u,
                            captionsFn: l,
                            isEndOfTimeline: d,
                            endedTimelineFn: c,
                            dataFn: f,
                            doneFn: p
                        })
                    }
                };
                n.addEventListener("message", h);
                var v;
                if (i.key.bytes.slice) {
                    v = i.key.bytes.slice()
                } else {
                    v = new Uint32Array(Array.prototype.slice.call(i.key.bytes))
                }
                n.postMessage(it({
                    source: i.requestId,
                    encrypted: i.encryptedBytes,
                    key: v,
                    iv: i.key.iv
                }), [i.encryptedBytes.buffer, v.buffer])
            };
            var Ca = function e(t) {
                var n = t.activeXhrs
                  , i = t.decryptionWorker
                  , r = t.trackInfoFn
                  , a = t.timingInfoFn
                  , s = t.videoSegmentTimingInfoFn
                  , o = t.audioSegmentTimingInfoFn
                  , u = t.id3Fn
                  , l = t.captionsFn
                  , d = t.isEndOfTimeline
                  , c = t.endedTimelineFn
                  , f = t.dataFn
                  , p = t.doneFn;
                var h = 0;
                var v = false;
                return function(e, t) {
                    if (v) {
                        return
                    }
                    if (e) {
                        v = true;
                        ya(n);
                        return p(e, t)
                    }
                    h += 1;
                    if (h === n.length) {
                        t.endOfAllRequests = Date.now();
                        if (t.encryptedBytes) {
                            return Ia({
                                decryptionWorker: i,
                                segment: t,
                                trackInfoFn: r,
                                timingInfoFn: a,
                                videoSegmentTimingInfoFn: s,
                                audioSegmentTimingInfoFn: o,
                                id3Fn: u,
                                captionsFn: l,
                                isEndOfTimeline: d,
                                endedTimelineFn: c,
                                dataFn: f,
                                doneFn: p
                            })
                        }
                        Pa({
                            segment: t,
                            bytes: t.bytes,
                            isPartial: false,
                            trackInfoFn: r,
                            timingInfoFn: a,
                            videoSegmentTimingInfoFn: s,
                            audioSegmentTimingInfoFn: o,
                            id3Fn: u,
                            captionsFn: l,
                            isEndOfTimeline: d,
                            endedTimelineFn: c,
                            dataFn: f,
                            doneFn: p
                        })
                    }
                }
            };
            var wa = function e(t) {
                var n = t.loadendState
                  , i = t.abortFn;
                return function(e) {
                    var t = e.target;
                    if (t.aborted && i && !n.calledAbortFn) {
                        i();
                        n.calledAbortFn = true
                    }
                }
            };
            var ja = function e(t) {
                var n = t.segment
                  , i = t.progressFn
                  , r = t.trackInfoFn
                  , a = t.timingInfoFn
                  , s = t.videoSegmentTimingInfoFn
                  , o = t.audioSegmentTimingInfoFn
                  , l = t.id3Fn
                  , d = t.captionsFn
                  , c = t.isEndOfTimeline
                  , f = t.endedTimelineFn
                  , p = t.dataFn
                  , h = t.handlePartialData;
                return function(e) {
                    var t = e.target;
                    if (t.aborted) {
                        return
                    }
                    if (h && !n.key && t.responseText && t.responseText.length >= 8) {
                        var v = Ti(t.responseText.substring(n.lastReachedChar || 0));
                        if (n.lastReachedChar || !di(new Uint8Array(v))) {
                            n.lastReachedChar = t.responseText.length;
                            Pa({
                                segment: n,
                                bytes: v,
                                isPartial: true,
                                trackInfoFn: r,
                                timingInfoFn: a,
                                videoSegmentTimingInfoFn: s,
                                audioSegmentTimingInfoFn: o,
                                id3Fn: l,
                                captionsFn: d,
                                isEndOfTimeline: c,
                                endedTimelineFn: f,
                                dataFn: p
                            })
                        }
                    }
                    n.stats = u["default"].mergeOptions(n.stats, ba(e));
                    if (!n.stats.firstBytesReceivedAt && n.stats.bytesReceived) {
                        n.stats.firstBytesReceivedAt = Date.now()
                    }
                    return i(e, n)
                }
            };
            var La = function e(t) {
                var n = t.xhr
                  , i = t.xhrOptions
                  , r = t.decryptionWorker
                  , a = t.segment
                  , s = t.abortFn
                  , o = t.progressFn
                  , l = t.trackInfoFn
                  , d = t.timingInfoFn
                  , c = t.videoSegmentTimingInfoFn
                  , f = t.audioSegmentTimingInfoFn
                  , p = t.id3Fn
                  , h = t.captionsFn
                  , v = t.isEndOfTimeline
                  , g = t.endedTimelineFn
                  , m = t.dataFn
                  , y = t.doneFn
                  , _ = t.handlePartialData;
                var b = [];
                var S = Ca({
                    activeXhrs: b,
                    decryptionWorker: r,
                    trackInfoFn: l,
                    timingInfoFn: d,
                    videoSegmentTimingInfoFn: c,
                    audioSegmentTimingInfoFn: f,
                    id3Fn: p,
                    captionsFn: h,
                    isEndOfTimeline: v,
                    endedTimelineFn: g,
                    dataFn: m,
                    doneFn: y
                });
                if (a.key && !a.key.bytes) {
                    var A = u["default"].mergeOptions(i, {
                        uri: a.key.resolvedUri,
                        responseType: "arraybuffer"
                    });
                    var T = Aa(a, S);
                    var k = n(A, T);
                    b.push(k)
                }
                if (a.map && !a.map.bytes) {
                    var E = u["default"].mergeOptions(i, {
                        uri: a.map.resolvedUri,
                        responseType: "arraybuffer",
                        headers: Qe(a.map)
                    });
                    var P = Ta({
                        segment: a,
                        finishProcessingFn: S
                    });
                    var I = n(E, P);
                    b.push(I)
                }
                var C = u["default"].mergeOptions(i, {
                    uri: a.part && a.part.resolvedUri || a.resolvedUri,
                    responseType: "arraybuffer",
                    headers: Qe(a)
                });
                if (_) {
                    C.responseType = "text";
                    C.beforeSend = function(e) {
                        e.overrideMimeType("text/plain; charset=x-user-defined")
                    }
                }
                var w = ka({
                    segment: a,
                    finishProcessingFn: S,
                    responseType: C.responseType
                });
                var j = n(C, w);
                j.addEventListener("progress", ja({
                    segment: a,
                    progressFn: o,
                    trackInfoFn: l,
                    timingInfoFn: d,
                    videoSegmentTimingInfoFn: c,
                    audioSegmentTimingInfoFn: f,
                    id3Fn: p,
                    captionsFn: h,
                    isEndOfTimeline: v,
                    endedTimelineFn: g,
                    dataFn: m,
                    handlePartialData: _
                }));
                b.push(j);
                var L = {};
                b.forEach(function(e) {
                    e.addEventListener("loadend", wa({
                        loadendState: L,
                        abortFn: s
                    }))
                });
                return function() {
                    return ya(b)
                }
            };
            var Oa = y("CodecUtils");
            var xa = function e(t) {
                var n = t.attributes || {};
                if (n.CODECS) {
                    return pe(n.CODECS)
                }
            };
            var Da = function e(t, n) {
                var i = n.attributes || {};
                return t && t.mediaGroups && t.mediaGroups.AUDIO && i.AUDIO && t.mediaGroups.AUDIO[i.AUDIO]
            };
            var Na = function e(t, n) {
                if (!Da(t, n)) {
                    return true
                }
                var i = n.attributes || {};
                var r = t.mediaGroups.AUDIO[i.AUDIO];
                for (var a in r) {
                    if (!r[a].uri && !r[a].playlists) {
                        return true
                    }
                }
                return false
            };
            var Ra = function e(t) {
                var n = {};
                t.forEach(function(e) {
                    var t = e.mediaType
                      , i = e.type
                      , r = e.details;
                    n[t] = n[t] || [];
                    n[t].push(fe("" + i + r))
                });
                Object.keys(n).forEach(function(e) {
                    if (n[e].length > 1) {
                        Oa("multiple " + e + " codecs found as attributes: " + n[e].join(", ") + ". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.");
                        n[e] = null;
                        return
                    }
                    n[e] = n[e][0]
                });
                return n
            };
            var Ma = function e(t) {
                var n = 0;
                if (t.audio) {
                    n++
                }
                if (t.video) {
                    n++
                }
                return n
            };
            var Ua = function e(t, n) {
                var i = n.attributes || {};
                var r = Ra(xa(n) || []);
                if (Da(t, n) && !r.audio) {
                    if (!Na(t, n)) {
                        var a = Ra(he(t, i.AUDIO) || []);
                        if (a.audio) {
                            r.audio = a.audio
                        }
                    }
                }
                return r
            };
            var Ba = y("PlaylistSelector");
            var Fa = function e(t) {
                if (!t || !t.playlist) {
                    return
                }
                var n = t.playlist;
                return JSON.stringify({
                    id: n.id,
                    bandwidth: t.bandwidth,
                    width: t.width,
                    height: t.height,
                    codecs: n.attributes && n.attributes.CODECS || ""
                })
            };
            var Va = function e(t, n) {
                if (!t) {
                    return ""
                }
                var i = o["default"].getComputedStyle(t);
                if (!i) {
                    return ""
                }
                return i[n]
            };
            var qa = function e(t, n) {
                var i = t.slice();
                t.sort(function(e, t) {
                    var r = n(e, t);
                    if (r === 0) {
                        return i.indexOf(e) - i.indexOf(t)
                    }
                    return r
                })
            };
            var Ha = function e(t, n) {
                var i;
                var r;
                if (t.attributes.BANDWIDTH) {
                    i = t.attributes.BANDWIDTH
                }
                i = i || o["default"].Number.MAX_VALUE;
                if (n.attributes.BANDWIDTH) {
                    r = n.attributes.BANDWIDTH
                }
                r = r || o["default"].Number.MAX_VALUE;
                return i - r
            };
            var Ga = function e(t, n) {
                var i;
                var r;
                if (t.attributes.RESOLUTION && t.attributes.RESOLUTION.width) {
                    i = t.attributes.RESOLUTION.width
                }
                i = i || o["default"].Number.MAX_VALUE;
                if (n.attributes.RESOLUTION && n.attributes.RESOLUTION.width) {
                    r = n.attributes.RESOLUTION.width
                }
                r = r || o["default"].Number.MAX_VALUE;
                if (i === r && t.attributes.BANDWIDTH && n.attributes.BANDWIDTH) {
                    return t.attributes.BANDWIDTH - n.attributes.BANDWIDTH
                }
                return i - r
            };
            var Wa = function e(t, n, i, r, a, s) {
                if (!t) {
                    return
                }
                var u = {
                    bandwidth: n,
                    width: i,
                    height: r,
                    limitRenditionByPlayerDimensions: a
                };
                var l = t.playlists;
                if (Ge.isAudioOnly(t)) {
                    l = s.getAudioTrackPlaylists_();
                    u.audioOnly = true
                }
                var d = l.map(function(e) {
                    var t;
                    var n = e.attributes && e.attributes.RESOLUTION && e.attributes.RESOLUTION.width;
                    var i = e.attributes && e.attributes.RESOLUTION && e.attributes.RESOLUTION.height;
                    t = e.attributes && e.attributes.BANDWIDTH;
                    t = t || o["default"].Number.MAX_VALUE;
                    return {
                        bandwidth: t,
                        width: n,
                        height: i,
                        playlist: e
                    }
                });
                qa(d, function(e, t) {
                    return e.bandwidth - t.bandwidth
                });
                d = d.filter(function(e) {
                    return !Ge.isIncompatible(e.playlist)
                });
                var c = d.filter(function(e) {
                    return Ge.isEnabled(e.playlist)
                });
                if (!c.length) {
                    c = d.filter(function(e) {
                        return !Ge.isDisabled(e.playlist)
                    })
                }
                var f = c.filter(function(e) {
                    return e.bandwidth * Ai.BANDWIDTH_VARIANCE < n
                });
                var p = f[f.length - 1];
                var h = f.filter(function(e) {
                    return e.bandwidth === p.bandwidth
                })[0];
                if (a === false) {
                    var v = h || c[0] || d[0];
                    if (v && v.playlist) {
                        var g = "sortedPlaylistReps";
                        if (h) {
                            g = "bandwidthBestRep"
                        }
                        if (c[0]) {
                            g = "enabledPlaylistReps"
                        }
                        Ba("choosing " + Fa(v) + " using " + g + " with options", u);
                        return v.playlist
                    }
                    Ba("could not choose a playlist with options", u);
                    return null
                }
                var m = f.filter(function(e) {
                    return e.width && e.height
                });
                qa(m, function(e, t) {
                    return e.width - t.width
                });
                var y = m.filter(function(e) {
                    return e.width === i && e.height === r
                });
                p = y[y.length - 1];
                var _ = y.filter(function(e) {
                    return e.bandwidth === p.bandwidth
                })[0];
                var b;
                var S;
                var A;
                if (!_) {
                    b = m.filter(function(e) {
                        return e.width > i || e.height > r
                    });
                    S = b.filter(function(e) {
                        return e.width === b[0].width && e.height === b[0].height
                    });
                    p = S[S.length - 1];
                    A = S.filter(function(e) {
                        return e.bandwidth === p.bandwidth
                    })[0]
                }
                var T = A || _ || h || c[0] || d[0];
                if (T && T.playlist) {
                    var k = "sortedPlaylistReps";
                    if (A) {
                        k = "resolutionPlusOneRep"
                    } else if (_) {
                        k = "resolutionBestRep"
                    } else if (h) {
                        k = "bandwidthBestRep"
                    } else if (c[0]) {
                        k = "enabledPlaylistReps"
                    }
                    Ba("choosing " + Fa(T) + " using " + k + " with options", u);
                    return T.playlist
                }
                Ba("could not choose a playlist with options", u);
                return null
            };
            var Ka = function e() {
                var t = this.useDevicePixelRatio ? o["default"].devicePixelRatio || 1 : 1;
                return Wa(this.playlists.master, this.systemBandwidth, parseInt(Va(this.tech_.el(), "width"), 10) * t, parseInt(Va(this.tech_.el(), "height"), 10) * t, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_)
            };
            var za = function e(t) {
                var n = -1;
                if (t < 0 || t > 1) {
                    throw new Error("Moving average bandwidth decay must be between 0 and 1.")
                }
                return function() {
                    var e = this.useDevicePixelRatio ? o["default"].devicePixelRatio || 1 : 1;
                    if (n < 0) {
                        n = this.systemBandwidth
                    }
                    n = t * this.systemBandwidth + (1 - t) * n;
                    return Wa(this.playlists.master, n, parseInt(Va(this.tech_.el(), "width"), 10) * e, parseInt(Va(this.tech_.el(), "height"), 10) * e, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_)
                }
            };
            var Ya = function e(t) {
                var n = t.master
                  , i = t.currentTime
                  , r = t.bandwidth
                  , a = t.duration
                  , s = t.segmentDuration
                  , o = t.timeUntilRebuffer
                  , u = t.currentTimeline
                  , l = t.syncController;
                var d = n.playlists.filter(function(e) {
                    return !Ge.isIncompatible(e)
                });
                var c = d.filter(Ge.isEnabled);
                if (!c.length) {
                    c = d.filter(function(e) {
                        return !Ge.isDisabled(e)
                    })
                }
                var f = c.filter(Ge.hasAttribute.bind(null, "BANDWIDTH"));
                var p = f.map(function(e) {
                    var t = l.getSyncPoint(e, a, u, i);
                    var n = t ? 1 : 2;
                    var d = Ge.estimateSegmentRequestTime(s, r, e);
                    var c = d * n - o;
                    return {
                        playlist: e,
                        rebufferingImpact: c
                    }
                });
                var h = p.filter(function(e) {
                    return e.rebufferingImpact <= 0
                });
                qa(h, function(e, t) {
                    return Ha(t.playlist, e.playlist)
                });
                if (h.length) {
                    return h[0]
                }
                qa(p, function(e, t) {
                    return e.rebufferingImpact - t.rebufferingImpact
                });
                return p[0] || null
            };
            var Xa = function e() {
                var t = this;
                var n = this.playlists.master.playlists.filter(Ge.isEnabled);
                qa(n, function(e, t) {
                    return Ha(e, t)
                });
                var i = n.filter(function(e) {
                    return !!Ua(t.playlists.master, e).video
                });
                return i[0] || null
            };
            var Qa = function e(t, n, i) {
                if (!t[i]) {
                    n.trigger({
                        type: "usage",
                        name: "vhs-608"
                    });
                    n.trigger({
                        type: "usage",
                        name: "hls-608"
                    });
                    var r = n.textTracks().getTrackById(i);
                    if (r) {
                        t[i] = r
                    } else {
                        t[i] = n.addRemoteTextTrack({
                            kind: "captions",
                            id: i,
                            label: i
                        }, false).track
                    }
                }
            };
            var Za = function e(t) {
                var n = t.inbandTextTracks
                  , i = t.captionArray
                  , r = t.timestampOffset;
                if (!i) {
                    return
                }
                var a = o["default"].WebKitDataCue || o["default"].VTTCue;
                i.forEach(function(e) {
                    var t = e.stream;
                    n[t].addCue(new a(e.startTime + r,e.endTime + r,e.text))
                })
            };
            var Ja = function e(t) {
                Object.defineProperties(t.frame, {
                    id: {
                        get: function e() {
                            u["default"].log.warn("cue.frame.id is deprecated. Use cue.value.key instead.");
                            return t.value.key
                        }
                    },
                    value: {
                        get: function e() {
                            u["default"].log.warn("cue.frame.value is deprecated. Use cue.value.data instead.");
                            return t.value.data
                        }
                    },
                    privateData: {
                        get: function e() {
                            u["default"].log.warn("cue.frame.privateData is deprecated. Use cue.value.data instead.");
                            return t.value.data
                        }
                    }
                })
            };
            var $a = function e(t) {
                var n = t.inbandTextTracks
                  , i = t.metadataArray
                  , r = t.timestampOffset
                  , a = t.videoDuration;
                if (!i) {
                    return
                }
                var s = o["default"].WebKitDataCue || o["default"].VTTCue;
                var u = n.metadataTrack_;
                if (!u) {
                    return
                }
                i.forEach(function(e) {
                    var t = e.cueTime + r;
                    if (typeof t !== "number" || o["default"].isNaN(t) || t < 0 || !(t < Infinity)) {
                        return
                    }
                    e.frames.forEach(function(e) {
                        var n = new s(t,t,e.value || e.url || e.data || "");
                        n.frame = e;
                        n.value = e;
                        Ja(n);
                        u.addCue(n)
                    })
                });
                if (!u.cues || !u.cues.length) {
                    return
                }
                var l = u.cues;
                var d = [];
                for (var c = 0; c < l.length; c++) {
                    if (l[c]) {
                        d.push(l[c])
                    }
                }
                var f = d.reduce(function(e, t) {
                    var n = e[t.startTime] || [];
                    n.push(t);
                    e[t.startTime] = n;
                    return e
                }, {});
                var p = Object.keys(f).sort(function(e, t) {
                    return Number(e) - Number(t)
                });
                p.forEach(function(e, t) {
                    var n = f[e];
                    var i = Number(p[t + 1]) || a;
                    n.forEach(function(e) {
                        e.endTime = i
                    })
                })
            };
            var es = function e(t, n, i) {
                if (t.metadataTrack_) {
                    return
                }
                t.metadataTrack_ = i.addRemoteTextTrack({
                    kind: "metadata",
                    label: "Timed Metadata"
                }, false).track;
                t.metadataTrack_.inBandMetadataTrackDispatchType = n
            };
            var ts = function e(t, n, i) {
                var r;
                var a;
                if (!i) {
                    return
                }
                if (!i.cues) {
                    return
                }
                r = i.cues.length;
                while (r--) {
                    a = i.cues[r];
                    if (a.startTime >= t && a.endTime <= n) {
                        i.removeCue(a)
                    }
                }
            };
            var ns = function e(t) {
                var n = t.cues;
                if (!n) {
                    return
                }
                for (var i = 0; i < n.length; i++) {
                    var r = [];
                    var a = 0;
                    for (var s = 0; s < n.length; s++) {
                        if (n[i].startTime === n[s].startTime && n[i].endTime === n[s].endTime && n[i].text === n[s].text) {
                            a++;
                            if (a > 1) {
                                r.push(n[s])
                            }
                        }
                    }
                    if (r.length) {
                        r.forEach(function(e) {
                            return t.removeCue(e)
                        })
                    }
                }
            };
            var is = function e(t, n, i) {
                if (typeof n === "undefined" || n === null || !t.length) {
                    return []
                }
                var r = Math.ceil((n - i + 3) * wr.ONE_SECOND_IN_TS);
                var a;
                for (a = 0; a < t.length; a++) {
                    if (t[a].pts > r) {
                        break
                    }
                }
                return t.slice(a)
            };
            var rs = function e(t, n, i) {
                if (!n.length) {
                    return t
                }
                if (i) {
                    return n.slice()
                }
                var r = n[0].pts;
                var a = 0;
                for (a; a < t.length; a++) {
                    if (t[a].pts >= r) {
                        break
                    }
                }
                return t.slice(0, a).concat(n)
            };
            var as = function e(t, n, i, r) {
                var a = Math.ceil((n - r) * wr.ONE_SECOND_IN_TS);
                var s = Math.ceil((i - r) * wr.ONE_SECOND_IN_TS);
                var o = t.slice();
                var u = t.length;
                while (u--) {
                    if (t[u].pts <= s) {
                        break
                    }
                }
                if (u === -1) {
                    return o
                }
                var l = u + 1;
                while (l--) {
                    if (t[l].pts <= a) {
                        break
                    }
                }
                l = Math.max(l, 0);
                o.splice(l, u - l + 1);
                return o
            };
            var ss = function e(t, n) {
                if (!t && !n || !t && n || t && !n) {
                    return false
                }
                if (t === n) {
                    return true
                }
                var i = Object.keys(t).sort();
                var r = Object.keys(n).sort();
                if (i.length !== r.length) {
                    return false
                }
                for (var a = 0; a < i.length; a++) {
                    var s = i[a];
                    if (s !== r[a]) {
                        return false
                    }
                    if (t[s] !== n[s]) {
                        return false
                    }
                }
                return true
            };
            var os = 22;
            var us = 1;
            var ls = 500;
            var ds = function e(t) {
                return typeof t === "number" && isFinite(t)
            };
            var cs = 1 / 60;
            var fs = function e(t, n, i) {
                if (t !== "main" || !n || !i) {
                    return null
                }
                if (!i.hasAudio && !i.hasVideo) {
                    return "Neither audio nor video found in segment."
                }
                if (n.hasVideo && !i.hasVideo) {
                    return "Only audio found in segment when we expected video." + " We can't switch to audio only from a stream that had video." + " To get rid of this message, please add codec information to the manifest."
                }
                if (!n.hasVideo && i.hasVideo) {
                    return "Video found in segment when we expected only audio." + " We can't switch to a stream with video from an audio only stream." + " To get rid of this message, please add codec information to the manifest."
                }
                return null
            };
            var ps = function e(t, n, i) {
                var r = n - Ai.BACK_BUFFER_LENGTH;
                if (t.length) {
                    r = Math.max(r, t.start(0))
                }
                var a = n - i;
                return Math.min(a, r)
            };
            var hs = function e(t) {
                var n = t.segment
                  , i = n.start
                  , r = n.end
                  , a = n.parts
                  , s = t.playlist
                  , o = s.mediaSequence
                  , u = s.id
                  , l = s.segments
                  , d = l === void 0 ? [] : l
                  , c = t.mediaIndex
                  , f = t.partIndex
                  , p = t.timeline;
                var h = t.segment.uri ? "segment" : "pre-segment";
                return [h + " [" + c + "/" + (d.length - 1) + "]", f ? "part [" + f + "/" + (a.length - 1) + "]" : "", "mediaSequenceNumber [" + o + "/" + (o + d.length - 1) + "]", "playlist [" + u + "]", "start/end [" + i + " => " + r + "]", "timeline [" + p + "]"].join(" ")
            };
            var vs = function e(t) {
                return t + "TimingInfo"
            };
            var gs = function e(t) {
                var n = t.segmentTimeline
                  , i = t.currentTimeline
                  , r = t.startOfSegment
                  , a = t.buffered
                  , s = t.overrideCheck;
                if (!s && n === i) {
                    return null
                }
                if (n < i) {
                    return r
                }
                return a.length ? a.end(a.length - 1) : r
            };
            var ms = function e(t) {
                var n = t.timelineChangeController
                  , i = t.currentTimeline
                  , r = t.segmentTimeline
                  , a = t.loaderType
                  , s = t.audioDisabled;
                if (i === r) {
                    return false
                }
                if (a === "audio") {
                    var o = n.lastTimelineChange({
                        type: "main"
                    });
                    return !o || o.to !== r
                }
                if (a === "main" && s) {
                    var u = n.pendingTimelineChange({
                        type: "audio"
                    });
                    if (u && u.to === r) {
                        return false
                    }
                    return true
                }
                return false
            };
            var ys = function e(t, n) {
                var i = t && typeof t.start === "number" && typeof t.end === "number" ? t.end - t.start : 0;
                var r = n && typeof n.start === "number" && typeof n.end === "number" ? n.end - n.start : 0;
                return Math.max(i, r)
            };
            var _s = function e(t) {
                var n = t.segmentDuration
                  , i = t.maxDuration;
                if (!n) {
                    return false
                }
                return Math.round(n) > i + J
            };
            var bs = function e(t, n) {
                if (n !== "hls") {
                    return null
                }
                var i = ys(t.audioTimingInfo, t.videoTimingInfo);
                if (!i) {
                    return null
                }
                var r = t.playlist.targetDuration;
                var a = _s({
                    segmentDuration: i,
                    maxDuration: r * 2
                });
                var s = _s({
                    segmentDuration: i,
                    maxDuration: r
                });
                var o = "Segment with index " + t.mediaIndex + " " + ("from playlist " + t.playlist.id + " ") + ("has a duration of " + i + " ") + ("when the reported duration is " + t.duration + " ") + ("and the target duration is " + r + ". ") + "For HLS content, a duration in excess of the target duration may result in " + "playback issues. See the HLS specification section on EXT-X-TARGETDURATION for " + "more details: " + "https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1";
                if (a || s) {
                    return {
                        severity: a ? "warn" : "info",
                        message: o
                    }
                }
                return null
            };
            var Ss = function(e) {
                p(t, e);
                function t(t, n) {
                    var i;
                    i = e.call(this) || this;
                    if (!t) {
                        throw new TypeError("Initialization settings are required")
                    }
                    if (typeof t.currentTime !== "function") {
                        throw new TypeError("No currentTime getter specified")
                    }
                    if (!t.mediaSource) {
                        throw new TypeError("No MediaSource specified")
                    }
                    i.bandwidth = t.bandwidth;
                    i.throughput = {
                        rate: 0,
                        count: 0
                    };
                    i.roundTrip = NaN;
                    i.resetStats_();
                    i.mediaIndex = null;
                    i.partIndex = null;
                    i.hasPlayed_ = t.hasPlayed;
                    i.currentTime_ = t.currentTime;
                    i.seekable_ = t.seekable;
                    i.seeking_ = t.seeking;
                    i.duration_ = t.duration;
                    i.mediaSource_ = t.mediaSource;
                    i.vhs_ = t.vhs;
                    i.loaderType_ = t.loaderType;
                    i.currentMediaInfo_ = void 0;
                    i.startingMediaInfo_ = void 0;
                    i.segmentMetadataTrack_ = t.segmentMetadataTrack;
                    i.goalBufferLength_ = t.goalBufferLength;
                    i.sourceType_ = t.sourceType;
                    i.sourceUpdater_ = t.sourceUpdater;
                    i.inbandTextTracks_ = t.inbandTextTracks;
                    i.state_ = "INIT";
                    i.handlePartialData_ = t.handlePartialData;
                    i.timelineChangeController_ = t.timelineChangeController;
                    i.shouldSaveSegmentTimingInfo_ = true;
                    i.parse708captions_ = t.parse708captions;
                    i.checkBufferTimeout_ = null;
                    i.error_ = void 0;
                    i.currentTimeline_ = -1;
                    i.pendingSegment_ = null;
                    i.xhrOptions_ = null;
                    i.pendingSegments_ = [];
                    i.audioDisabled_ = false;
                    i.isPendingTimestampOffset_ = false;
                    i.gopBuffer_ = [];
                    i.timeMapping_ = 0;
                    i.safeAppend_ = u["default"].browser.IE_VERSION >= 11;
                    i.appendInitSegment_ = {
                        audio: true,
                        video: true
                    };
                    i.playlistOfLastInitSegment_ = {
                        audio: null,
                        video: null
                    };
                    i.callQueue_ = [];
                    i.loadQueue_ = [];
                    i.metadataQueue_ = {
                        id3: [],
                        caption: []
                    };
                    i.waitingOnRemove_ = false;
                    i.quotaExceededErrorRetryTimeout_ = null;
                    i.activeInitSegmentId_ = null;
                    i.initSegments_ = {};
                    i.cacheEncryptionKeys_ = t.cacheEncryptionKeys;
                    i.keyCache_ = {};
                    i.decrypter_ = t.decrypter;
                    i.syncController_ = t.syncController;
                    i.syncPoint_ = {
                        segmentIndex: 0,
                        time: 0
                    };
                    i.transmuxer_ = i.createTransmuxer_();
                    i.triggerSyncInfoUpdate_ = function() {
                        return i.trigger("syncinfoupdate")
                    }
                    ;
                    i.syncController_.on("syncinfoupdate", i.triggerSyncInfoUpdate_);
                    i.mediaSource_.addEventListener("sourceopen", function() {
                        if (!i.isEndOfStream_()) {
                            i.ended_ = false
                        }
                    });
                    i.fetchAtBuffer_ = false;
                    i.logger_ = y("SegmentLoader[" + i.loaderType_ + "]");
                    Object.defineProperty(c(i), "state", {
                        get: function e() {
                            return this.state_
                        },
                        set: function e(t) {
                            if (t !== this.state_) {
                                this.logger_(this.state_ + " -> " + t);
                                this.state_ = t;
                                this.trigger("statechange")
                            }
                        }
                    });
                    i.sourceUpdater_.on("ready", function() {
                        if (i.hasEnoughInfoToAppend_()) {
                            i.processCallQueue_()
                        }
                    });
                    if (i.loaderType_ === "main") {
                        i.timelineChangeController_.on("pendingtimelinechange", function() {
                            if (i.hasEnoughInfoToAppend_()) {
                                i.processCallQueue_()
                            }
                        })
                    }
                    if (i.loaderType_ === "audio") {
                        i.timelineChangeController_.on("timelinechange", function() {
                            if (i.hasEnoughInfoToLoad_()) {
                                i.processLoadQueue_()
                            }
                            if (i.hasEnoughInfoToAppend_()) {
                                i.processCallQueue_()
                            }
                        })
                    }
                    return i
                }
                var n = t.prototype;
                n.createTransmuxer_ = function e() {
                    return qi.createTransmuxer({
                        remux: false,
                        alignGopsAtEnd: this.safeAppend_,
                        keepOriginalTimestamps: true,
                        handlePartialData: this.handlePartialData_,
                        parse708captions: this.parse708captions_
                    })
                }
                ;
                n.resetStats_ = function e() {
                    this.mediaBytesTransferred = 0;
                    this.mediaRequests = 0;
                    this.mediaRequestsAborted = 0;
                    this.mediaRequestsTimedout = 0;
                    this.mediaRequestsErrored = 0;
                    this.mediaTransferDuration = 0;
                    this.mediaSecondsLoaded = 0
                }
                ;
                n.dispose = function e() {
                    this.trigger("dispose");
                    this.state = "DISPOSED";
                    this.pause();
                    this.abort_();
                    if (this.transmuxer_) {
                        this.transmuxer_.terminate()
                    }
                    this.resetStats_();
                    if (this.checkBufferTimeout_) {
                        o["default"].clearTimeout(this.checkBufferTimeout_)
                    }
                    if (this.syncController_ && this.triggerSyncInfoUpdate_) {
                        this.syncController_.off("syncinfoupdate", this.triggerSyncInfoUpdate_)
                    }
                    this.off()
                }
                ;
                n.setAudio = function e(t) {
                    this.audioDisabled_ = !t;
                    if (t) {
                        this.appendInitSegment_.audio = true
                    } else {
                        this.sourceUpdater_.removeAudio(0, this.duration_())
                    }
                }
                ;
                n.abort = function e() {
                    if (this.state !== "WAITING") {
                        if (this.pendingSegment_) {
                            this.pendingSegment_ = null
                        }
                        return
                    }
                    this.abort_();
                    this.state = "READY";
                    if (!this.paused()) {
                        this.monitorBuffer_()
                    }
                }
                ;
                n.abort_ = function e() {
                    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {
                        this.pendingSegment_.abortRequests()
                    }
                    this.pendingSegment_ = null;
                    this.callQueue_ = [];
                    this.loadQueue_ = [];
                    this.metadataQueue_.id3 = [];
                    this.metadataQueue_.caption = [];
                    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);
                    this.waitingOnRemove_ = false;
                    o["default"].clearTimeout(this.quotaExceededErrorRetryTimeout_);
                    this.quotaExceededErrorRetryTimeout_ = null
                }
                ;
                n.checkForAbort_ = function e(t) {
                    if (this.state === "APPENDING" && !this.pendingSegment_) {
                        this.state = "READY";
                        return true
                    }
                    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== t) {
                        return true
                    }
                    return false
                }
                ;
                n.error = function e(t) {
                    if (typeof t !== "undefined") {
                        this.logger_("error occurred:", t);
                        this.error_ = t
                    }
                    this.pendingSegment_ = null;
                    return this.error_
                }
                ;
                n.endOfStream = function e() {
                    this.ended_ = true;
                    if (this.transmuxer_) {
                        qi.reset(this.transmuxer_)
                    }
                    this.gopBuffer_.length = 0;
                    this.pause();
                    this.trigger("ended")
                }
                ;
                n.buffered_ = function e() {
                    if (!this.sourceUpdater_ || !this.startingMediaInfo_) {
                        return u["default"].createTimeRanges()
                    }
                    if (this.loaderType_ === "main") {
                        var t = this.startingMediaInfo_
                          , n = t.hasAudio
                          , i = t.hasVideo
                          , r = t.isMuxed;
                        if (i && n && !this.audioDisabled_ && !r) {
                            return this.sourceUpdater_.buffered()
                        }
                        if (i) {
                            return this.sourceUpdater_.videoBuffered()
                        }
                    }
                    return this.sourceUpdater_.audioBuffered()
                }
                ;
                n.initSegmentForMap = function e(t, n) {
                    if (n === void 0) {
                        n = false
                    }
                    if (!t) {
                        return null
                    }
                    var i = rt(t);
                    var r = this.initSegments_[i];
                    if (n && !r && t.bytes) {
                        this.initSegments_[i] = r = {
                            resolvedUri: t.resolvedUri,
                            byterange: t.byterange,
                            bytes: t.bytes,
                            tracks: t.tracks,
                            timescales: t.timescales
                        }
                    }
                    return r || t
                }
                ;
                n.segmentKey = function e(t, n) {
                    if (n === void 0) {
                        n = false
                    }
                    if (!t) {
                        return null
                    }
                    var i = at(t);
                    var r = this.keyCache_[i];
                    if (this.cacheEncryptionKeys_ && n && !r && t.bytes) {
                        this.keyCache_[i] = r = {
                            resolvedUri: t.resolvedUri,
                            bytes: t.bytes
                        }
                    }
                    var a = {
                        resolvedUri: (r || t).resolvedUri
                    };
                    if (r) {
                        a.bytes = r.bytes
                    }
                    return a
                }
                ;
                n.couldBeginLoading_ = function e() {
                    return this.playlist_ && !this.paused()
                }
                ;
                n.load = function e() {
                    this.monitorBuffer_();
                    if (!this.playlist_) {
                        return
                    }
                    if (this.state === "INIT" && this.couldBeginLoading_()) {
                        return this.init_()
                    }
                    if (!this.couldBeginLoading_() || this.state !== "READY" && this.state !== "INIT") {
                        return
                    }
                    this.state = "READY"
                }
                ;
                n.init_ = function e() {
                    this.state = "READY";
                    this.resetEverything();
                    return this.monitorBuffer_()
                }
                ;
                n.playlist = function e(t, n) {
                    if (n === void 0) {
                        n = {}
                    }
                    if (!t) {
                        return
                    }
                    var i = this.playlist_;
                    var r = this.pendingSegment_;
                    this.playlist_ = t;
                    this.xhrOptions_ = n;
                    if (this.state === "INIT") {
                        t.syncInfo = {
                            mediaSequence: t.mediaSequence,
                            time: 0
                        };
                        if (this.loaderType_ === "main") {
                            this.syncController_.setDateTimeMappingForStart(t)
                        }
                    }
                    var a = null;
                    if (i) {
                        if (i.id) {
                            a = i.id
                        } else if (i.uri) {
                            a = i.uri
                        }
                    }
                    this.logger_("playlist update [" + a + " => " + (t.id || t.uri) + "]");
                    this.trigger("syncinfoupdate");
                    if (this.state === "INIT" && this.couldBeginLoading_()) {
                        return this.init_()
                    }
                    if (!i || i.uri !== t.uri) {
                        if (this.mediaIndex !== null || this.handlePartialData_) {
                            this.resyncLoader()
                        }
                        this.currentMediaInfo_ = void 0;
                        this.trigger("playlistupdate");
                        return
                    }
                    var s = t.mediaSequence - i.mediaSequence;
                    this.logger_("live window shift [" + s + "]");
                    if (this.mediaIndex !== null) {
                        this.mediaIndex -= s;
                        if (this.mediaIndex < 0) {
                            this.mediaIndex = null;
                            this.partIndex = null
                        } else {
                            var o = this.playlist_.segments[this.mediaIndex];
                            if (this.partIndex && (!o.parts || !o.parts.length || !o.parts[this.partIndex])) {
                                var u = this.mediaIndex;
                                this.logger_("currently processing part (index " + this.partIndex + ") no longer exists.");
                                this.resetLoader();
                                this.mediaIndex = u
                            }
                        }
                    }
                    if (r) {
                        r.mediaIndex -= s;
                        if (r.mediaIndex < 0) {
                            r.mediaIndex = null;
                            r.partIndex = null
                        } else {
                            if (r.mediaIndex >= 0) {
                                r.segment = t.segments[r.mediaIndex]
                            }
                            if (r.partIndex >= 0 && r.segment.parts) {
                                r.part = r.segment.parts[r.partIndex]
                            }
                        }
                    }
                    this.syncController_.saveExpiredSegmentInfo(i, t)
                }
                ;
                n.pause = function e() {
                    if (this.checkBufferTimeout_) {
                        o["default"].clearTimeout(this.checkBufferTimeout_);
                        this.checkBufferTimeout_ = null
                    }
                }
                ;
                n.paused = function e() {
                    return this.checkBufferTimeout_ === null
                }
                ;
                n.resetEverything = function e(t) {
                    this.ended_ = false;
                    this.appendInitSegment_ = {
                        audio: true,
                        video: true
                    };
                    this.resetLoader();
                    this.remove(0, Infinity, t);
                    if (this.transmuxer_) {
                        this.transmuxer_.postMessage({
                            action: "clearAllMp4Captions"
                        })
                    }
                }
                ;
                n.resetLoader = function e() {
                    this.fetchAtBuffer_ = false;
                    this.resyncLoader()
                }
                ;
                n.resyncLoader = function e() {
                    if (this.transmuxer_) {
                        qi.reset(this.transmuxer_)
                    }
                    this.mediaIndex = null;
                    this.partIndex = null;
                    this.syncPoint_ = null;
                    this.isPendingTimestampOffset_ = false;
                    this.callQueue_ = [];
                    this.loadQueue_ = [];
                    this.metadataQueue_.id3 = [];
                    this.metadataQueue_.caption = [];
                    this.abort();
                    if (this.transmuxer_) {
                        this.transmuxer_.postMessage({
                            action: "clearParsedMp4Captions"
                        })
                    }
                }
                ;
                n.remove = function e(t, n, i, r) {
                    if (i === void 0) {
                        i = function e() {}
                    }
                    if (r === void 0) {
                        r = false
                    }
                    if (n === Infinity) {
                        n = this.duration_()
                    }
                    if (!this.sourceUpdater_ || !this.startingMediaInfo_) {
                        this.logger_("skipping remove because no source updater or starting media info");
                        return
                    }
                    var a = 1;
                    var s = function e() {
                        a--;
                        if (a === 0) {
                            i()
                        }
                    };
                    if (r || !this.audioDisabled_) {
                        a++;
                        this.sourceUpdater_.removeAudio(t, n, s)
                    }
                    if (r || this.loaderType_ === "main") {
                        this.gopBuffer_ = as(this.gopBuffer_, t, n, this.timeMapping_);
                        a++;
                        this.sourceUpdater_.removeVideo(t, n, s)
                    }
                    for (var o in this.inbandTextTracks_) {
                        ts(t, n, this.inbandTextTracks_[o])
                    }
                    ts(t, n, this.segmentMetadataTrack_);
                    s()
                }
                ;
                n.monitorBuffer_ = function e() {
                    if (this.checkBufferTimeout_) {
                        o["default"].clearTimeout(this.checkBufferTimeout_)
                    }
                    this.checkBufferTimeout_ = o["default"].setTimeout(this.monitorBufferTick_.bind(this), 1)
                }
                ;
                n.monitorBufferTick_ = function e() {
                    if (this.state === "READY") {
                        this.fillBuffer_()
                    }
                    if (this.checkBufferTimeout_) {
                        o["default"].clearTimeout(this.checkBufferTimeout_)
                    }
                    this.checkBufferTimeout_ = o["default"].setTimeout(this.monitorBufferTick_.bind(this), ls)
                }
                ;
                n.fillBuffer_ = function e() {
                    if (this.sourceUpdater_.updating()) {
                        return
                    }
                    if (!this.syncPoint_) {
                        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_())
                    }
                    var t = this.buffered_();
                    var n = this.checkBuffer_(t, this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_, this.partIndex);
                    if (!n) {
                        return
                    }
                    n.timestampOffset = gs({
                        segmentTimeline: n.timeline,
                        currentTimeline: this.currentTimeline_,
                        startOfSegment: n.startOfSegment,
                        buffered: t,
                        overrideCheck: this.isPendingTimestampOffset_
                    });
                    this.isPendingTimestampOffset_ = false;
                    if (typeof n.timestampOffset === "number") {
                        this.timelineChangeController_.pendingTimelineChange({
                            type: this.loaderType_,
                            from: this.currentTimeline_,
                            to: n.timeline
                        })
                    }
                    this.loadSegment_(n)
                }
                ;
                n.isEndOfStream_ = function e(t, n, i) {
                    if (t === void 0) {
                        t = this.mediaIndex
                    }
                    if (n === void 0) {
                        n = this.playlist_
                    }
                    if (i === void 0) {
                        i = this.partIndex
                    }
                    if (!n || !this.mediaSource_) {
                        return false
                    }
                    var r = typeof t === "number" && n.segments[t];
                    var a = t + 1 === n.segments.length;
                    var s = !r || !r.parts || i + 1 === r.parts.length;
                    return n.endList && this.mediaSource_.readyState === "open" && a && s
                }
                ;
                n.checkBuffer_ = function e(t, n, i, r, a, s, o) {
                    var u = 0;
                    if (t.length) {
                        u = t.end(t.length - 1)
                    }
                    var l = Math.max(0, u - a);
                    if (!n.segments.length) {
                        return null
                    }
                    if (l >= this.goalBufferLength_()) {
                        return null
                    }
                    if (!r && l >= 1) {
                        return null
                    }
                    var d = null;
                    var c = null;
                    var f;
                    var p = false;
                    if (s === null) {
                        c = this.getSyncSegmentCandidate_(n);
                        p = true
                    } else if (i !== null) {
                        var h = n.segments[i];
                        var v = typeof o === "number" ? o : -1;
                        f = h.end ? h.end : u;
                        if (h.parts && h.parts[v + 1]) {
                            c = i;
                            d = v + 1
                        } else {
                            c = i + 1
                        }
                    } else {
                        var g = Ge.getMediaInfoForTime(n, this.fetchAtBuffer_ ? u : a, s.segmentIndex, s.time);
                        c = g.mediaIndex;
                        f = g.startTime;
                        d = g.partIndex
                    }
                    if (typeof d !== "number" && n.segments[c] && n.segments[c].parts) {
                        d = 0
                    }
                    var m = this.generateSegmentInfo_(n, c, f, p, d);
                    if (!m) {
                        return
                    }
                    if (this.mediaSource_ && this.playlist_ && m.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === "ended" && !this.seeking_()) {
                        return
                    }
                    this.logger_("checkBuffer_ returning " + m.uri, {
                        segmentInfo: m,
                        playlist: n,
                        currentMediaIndex: i,
                        currentPartIndex: o,
                        nextPartIndex: d,
                        nextMediaIndex: c,
                        startOfSegment: f,
                        isSyncRequest: p
                    });
                    return m
                }
                ;
                n.getSyncSegmentCandidate_ = function e(t) {
                    var n = this;
                    if (this.currentTimeline_ === -1) {
                        return 0
                    }
                    var i = t.segments.map(function(e, t) {
                        return {
                            timeline: e.timeline,
                            segmentIndex: t
                        }
                    }).filter(function(e) {
                        return e.timeline === n.currentTimeline_
                    });
                    if (i.length) {
                        return i[Math.min(i.length - 1, 1)].segmentIndex
                    }
                    return Math.max(t.segments.length - 1, 0)
                }
                ;
                n.generateSegmentInfo_ = function e(t, n, i, r, a) {
                    if (n < 0 || n >= t.segments.length) {
                        return null
                    }
                    var s = t.segments[n];
                    if (s.parts && s.parts.length && a >= s.parts.length) {
                        return null
                    }
                    var o = s.parts && s.parts.length && s.parts[a];
                    var u = this.sourceUpdater_.audioBuffered();
                    var l = this.sourceUpdater_.videoBuffered();
                    var d;
                    var c;
                    if (u.length) {
                        d = u.end(u.length - 1) - this.sourceUpdater_.audioTimestampOffset()
                    }
                    if (l.length) {
                        c = is(this.gopBuffer_, this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_)
                    }
                    return {
                        requestId: "segment-loader-" + Math.random(),
                        uri: o && o.resolvedUri || s.resolvedUri,
                        mediaIndex: n,
                        partIndex: o ? a : null,
                        isSyncRequest: r,
                        startOfSegment: i,
                        playlist: t,
                        bytes: null,
                        encryptedBytes: null,
                        timestampOffset: null,
                        timeline: s.timeline,
                        duration: s.duration,
                        segment: s,
                        part: o,
                        byteLength: 0,
                        transmuxer: this.transmuxer_,
                        audioAppendStart: d,
                        gopsToAlignWith: c
                    }
                }
                ;
                n.earlyAbortWhenNeeded_ = function e(t) {
                    if (this.vhs_.tech_.paused() || !this.xhrOptions_.timeout || !this.playlist_.attributes.BANDWIDTH) {
                        return
                    }
                    if (Date.now() - (t.firstBytesReceivedAt || Date.now()) < 1e3) {
                        return
                    }
                    var n = this.currentTime_();
                    var i = t.bandwidth;
                    var r = this.pendingSegment_.duration;
                    var a = Ge.estimateSegmentRequestTime(r, i, this.playlist_, t.bytesReceived);
                    var s = se(this.buffered_(), n, this.vhs_.tech_.playbackRate()) - 1;
                    if (a <= s) {
                        return
                    }
                    var o = Ya({
                        master: this.vhs_.playlists.master,
                        currentTime: n,
                        bandwidth: i,
                        duration: this.duration_(),
                        segmentDuration: r,
                        timeUntilRebuffer: s,
                        currentTimeline: this.currentTimeline_,
                        syncController: this.syncController_
                    });
                    if (!o) {
                        return
                    }
                    var u = a - s;
                    var l = u - o.rebufferingImpact;
                    var d = .5;
                    if (s <= J) {
                        d = 1
                    }
                    if (!o.playlist || o.playlist.uri === this.playlist_.uri || l < d) {
                        return
                    }
                    this.bandwidth = o.playlist.attributes.BANDWIDTH * Ai.BANDWIDTH_VARIANCE + 1;
                    this.trigger("earlyabort")
                }
                ;
                n.handleAbort_ = function e(t) {
                    this.logger_("Aborting " + hs(t));
                    this.mediaRequestsAborted += 1
                }
                ;
                n.handleProgress_ = function e(t, n) {
                    this.earlyAbortWhenNeeded_(n.stats);
                    if (this.checkForAbort_(n.requestId)) {
                        return
                    }
                    this.trigger("progress")
                }
                ;
                n.handleTrackInfo_ = function e(t, n) {
                    this.earlyAbortWhenNeeded_(t.stats);
                    if (this.checkForAbort_(t.requestId)) {
                        return
                    }
                    if (this.checkForIllegalMediaSwitch(n)) {
                        return
                    }
                    n = n || {};
                    if (!ss(this.currentMediaInfo_, n)) {
                        this.appendInitSegment_ = {
                            audio: true,
                            video: true
                        };
                        this.startingMediaInfo_ = n;
                        this.currentMediaInfo_ = n;
                        this.logger_("trackinfo update", n);
                        this.trigger("trackinfo")
                    }
                    if (this.checkForAbort_(t.requestId)) {
                        return
                    }
                    this.pendingSegment_.trackInfo = n;
                    if (this.hasEnoughInfoToAppend_()) {
                        this.processCallQueue_()
                    }
                }
                ;
                n.handleTimingInfo_ = function e(t, n, i, r) {
                    this.earlyAbortWhenNeeded_(t.stats);
                    if (this.checkForAbort_(t.requestId)) {
                        return
                    }
                    var a = this.pendingSegment_;
                    var s = vs(n);
                    a[s] = a[s] || {};
                    a[s][i] = r;
                    this.logger_("timinginfo: " + n + " - " + i + " - " + r);
                    if (this.hasEnoughInfoToAppend_()) {
                        this.processCallQueue_()
                    }
                }
                ;
                n.handleCaptions_ = function e(t, n) {
                    var i = this;
                    this.earlyAbortWhenNeeded_(t.stats);
                    if (this.checkForAbort_(t.requestId)) {
                        return
                    }
                    if (n.length === 0) {
                        this.logger_("SegmentLoader received no captions from a caption event");
                        return
                    }
                    var r = this.pendingSegment_;
                    if (!r.hasAppendedData_) {
                        this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, t, n));
                        return
                    }
                    var a = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();
                    var s = {};
                    n.forEach(function(e) {
                        s[e.stream] = s[e.stream] || {
                            startTime: Infinity,
                            captions: [],
                            endTime: 0
                        };
                        var t = s[e.stream];
                        t.startTime = Math.min(t.startTime, e.startTime + a);
                        t.endTime = Math.max(t.endTime, e.endTime + a);
                        t.captions.push(e)
                    });
                    Object.keys(s).forEach(function(e) {
                        var t = s[e]
                          , n = t.startTime
                          , r = t.endTime
                          , o = t.captions;
                        var u = i.inbandTextTracks_;
                        i.logger_("adding cues from " + n + " -> " + r + " for " + e);
                        Qa(u, i.vhs_.tech_, e);
                        ts(n, r, u[e]);
                        Za({
                            captionArray: o,
                            inbandTextTracks: u,
                            timestampOffset: a
                        })
                    });
                    if (this.transmuxer_) {
                        this.transmuxer_.postMessage({
                            action: "clearParsedMp4Captions"
                        })
                    }
                }
                ;
                n.handleId3_ = function e(t, n, i) {
                    this.earlyAbortWhenNeeded_(t.stats);
                    if (this.checkForAbort_(t.requestId)) {
                        return
                    }
                    var r = this.pendingSegment_;
                    if (!r.hasAppendedData_) {
                        this.metadataQueue_.id3.push(this.handleId3_.bind(this, t, n, i));
                        return
                    }
                    var a = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();
                    es(this.inbandTextTracks_, i, this.vhs_.tech_);
                    $a({
                        inbandTextTracks: this.inbandTextTracks_,
                        metadataArray: n,
                        timestampOffset: a,
                        videoDuration: this.duration_()
                    })
                }
                ;
                n.processMetadataQueue_ = function e() {
                    this.metadataQueue_.id3.forEach(function(e) {
                        return e()
                    });
                    this.metadataQueue_.caption.forEach(function(e) {
                        return e()
                    });
                    this.metadataQueue_.id3 = [];
                    this.metadataQueue_.caption = []
                }
                ;
                n.processCallQueue_ = function e() {
                    var t = this.callQueue_;
                    this.callQueue_ = [];
                    t.forEach(function(e) {
                        return e()
                    })
                }
                ;
                n.processLoadQueue_ = function e() {
                    var t = this.loadQueue_;
                    this.loadQueue_ = [];
                    t.forEach(function(e) {
                        return e()
                    })
                }
                ;
                n.hasEnoughInfoToLoad_ = function e() {
                    if (this.loaderType_ !== "audio") {
                        return true
                    }
                    var t = this.pendingSegment_;
                    if (!t) {
                        return false
                    }
                    if (!this.currentMediaInfo_) {
                        return true
                    }
                    if (ms({
                        timelineChangeController: this.timelineChangeController_,
                        currentTimeline: this.currentTimeline_,
                        segmentTimeline: t.timeline,
                        loaderType: this.loaderType_,
                        audioDisabled: this.audioDisabled_
                    })) {
                        return false
                    }
                    return true
                }
                ;
                n.hasEnoughInfoToAppend_ = function e() {
                    if (!this.sourceUpdater_.ready()) {
                        return false
                    }
                    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {
                        return false
                    }
                    var t = this.pendingSegment_;
                    if (!t || !t.trackInfo) {
                        return false
                    }
                    if (!this.handlePartialData_) {
                        var n = this.currentMediaInfo_
                          , i = n.hasAudio
                          , r = n.hasVideo
                          , a = n.isMuxed;
                        if (r && !t.videoTimingInfo) {
                            return false
                        }
                        if (i && !this.audioDisabled_ && !a && !t.audioTimingInfo) {
                            return false
                        }
                    }
                    if (ms({
                        timelineChangeController: this.timelineChangeController_,
                        currentTimeline: this.currentTimeline_,
                        segmentTimeline: t.timeline,
                        loaderType: this.loaderType_,
                        audioDisabled: this.audioDisabled_
                    })) {
                        return false
                    }
                    return true
                }
                ;
                n.handleData_ = function e(t, n) {
                    this.earlyAbortWhenNeeded_(t.stats);
                    if (this.checkForAbort_(t.requestId)) {
                        return
                    }
                    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {
                        this.callQueue_.push(this.handleData_.bind(this, t, n));
                        return
                    }
                    var i = this.pendingSegment_;
                    this.setTimeMapping_(i.timeline);
                    this.updateMediaSecondsLoaded_(i.segment);
                    if (this.mediaSource_.readyState === "closed") {
                        return
                    }
                    if (t.map) {
                        t.map = this.initSegmentForMap(t.map, true);
                        i.segment.map = t.map
                    }
                    if (t.key) {
                        this.segmentKey(t.key, true)
                    }
                    i.isFmp4 = t.isFmp4;
                    i.timingInfo = i.timingInfo || {};
                    if (i.isFmp4) {
                        this.trigger("fmp4");
                        i.timingInfo.start = i[vs(n.type)].start
                    } else {
                        var r = this.loaderType_ === "main" && this.currentMediaInfo_.hasVideo;
                        var a;
                        if (r) {
                            a = this.handlePartialData_ ? n.videoFramePtsTime : i.videoTimingInfo.start
                        }
                        i.timingInfo.start = this.trueSegmentStart_({
                            currentStart: i.timingInfo.start,
                            playlist: i.playlist,
                            mediaIndex: i.mediaIndex,
                            currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),
                            useVideoTimingInfo: r,
                            firstVideoFrameTimeForData: a,
                            videoTimingInfo: i.videoTimingInfo,
                            audioTimingInfo: i.audioTimingInfo
                        })
                    }
                    this.updateAppendInitSegmentStatus(i, n.type);
                    this.updateSourceBufferTimestampOffset_(i);
                    i.hasAppendedData_ = true;
                    this.processMetadataQueue_();
                    this.appendData_(i, n)
                }
                ;
                n.updateAppendInitSegmentStatus = function e(t, n) {
                    if (this.loaderType_ === "main" && typeof t.timestampOffset === "number" && !t.changedTimestampOffset) {
                        this.appendInitSegment_ = {
                            audio: true,
                            video: true
                        }
                    }
                    if (this.playlistOfLastInitSegment_[n] !== t.playlist) {
                        this.appendInitSegment_[n] = true
                    }
                }
                ;
                n.getInitSegmentAndUpdateState_ = function e(t) {
                    var n = t.type
                      , i = t.initSegment
                      , r = t.map
                      , a = t.playlist;
                    if (r) {
                        var s = rt(r);
                        if (this.activeInitSegmentId_ === s) {
                            return null
                        }
                        i = this.initSegmentForMap(r, true).bytes;
                        this.activeInitSegmentId_ = s
                    }
                    if (i && this.appendInitSegment_[n]) {
                        this.playlistOfLastInitSegment_[n] = a;
                        this.appendInitSegment_[n] = r ? true : false;
                        this.activeInitSegmentId_ = null;
                        return i
                    }
                    return null
                }
                ;
                n.handleQuotaExceededError_ = function e(t, n) {
                    var i = this;
                    var r = t.segmentInfo
                      , a = t.type
                      , s = t.bytes;
                    var u = this.sourceUpdater_.audioBuffered();
                    var l = this.sourceUpdater_.videoBuffered();
                    if (u.length > 1) {
                        this.logger_("On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: " + oe(u).join(", "))
                    }
                    if (l.length > 1) {
                        this.logger_("On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: " + oe(l).join(", "))
                    }
                    var d = u.length ? u.start(0) : 0;
                    var c = u.length ? u.end(u.length - 1) : 0;
                    var f = l.length ? l.start(0) : 0;
                    var p = l.length ? l.end(l.length - 1) : 0;
                    if (c - d <= us && p - f <= us) {
                        this.logger_("On QUOTA_EXCEEDED_ERR, single segment too large to append to " + "buffer, triggering an error. " + ("Appended byte length: " + s.byteLength + ", ") + ("audio buffer: " + oe(u).join(", ") + ", ") + ("video buffer: " + oe(l).join(", ") + ", "));
                        this.error({
                            message: "Quota exceeded error with append of a single segment of content",
                            blacklistDuration: Infinity
                        });
                        this.trigger("error");
                        return
                    }
                    this.waitingOnRemove_ = true;
                    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {
                        segmentInfo: r,
                        type: a,
                        bytes: s
                    }));
                    var h = this.currentTime_();
                    var v = h - us;
                    this.logger_("On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to " + v);
                    this.remove(0, v, function() {
                        i.logger_("On QUOTA_EXCEEDED_ERR, retrying append in " + us + "s");
                        i.waitingOnRemove_ = false;
                        i.quotaExceededErrorRetryTimeout_ = o["default"].setTimeout(function() {
                            i.logger_("On QUOTA_EXCEEDED_ERR, re-processing call queue");
                            i.quotaExceededErrorRetryTimeout_ = null;
                            i.processCallQueue_()
                        }, us * 1e3)
                    }, true)
                }
                ;
                n.handleAppendError_ = function e(t, n) {
                    var i = t.segmentInfo
                      , r = t.type
                      , a = t.bytes;
                    if (!n) {
                        return
                    }
                    if (n.code === os) {
                        this.handleQuotaExceededError_({
                            segmentInfo: i,
                            type: r,
                            bytes: a
                        });
                        return
                    }
                    this.logger_("Received non QUOTA_EXCEEDED_ERR on append", n);
                    this.error(r + " append of " + a.length + "b failed for segment " + ("#" + i.mediaIndex + " in playlist " + i.playlist.id));
                    this.trigger("appenderror")
                }
                ;
                n.appendToSourceBuffer_ = function e(t) {
                    var n = t.segmentInfo
                      , i = t.type
                      , r = t.initSegment
                      , a = t.data
                      , s = t.bytes;
                    if (!s) {
                        var o = [a];
                        var u = a.byteLength;
                        if (r) {
                            o.unshift(r);
                            u += r.byteLength
                        }
                        s = Gr({
                            bytes: u,
                            segments: o
                        })
                    }
                    this.sourceUpdater_.appendBuffer({
                        segmentInfo: n,
                        type: i,
                        bytes: s
                    }, this.handleAppendError_.bind(this, {
                        segmentInfo: n,
                        type: i,
                        bytes: s
                    }))
                }
                ;
                n.handleSegmentTimingInfo_ = function e(t, n, i) {
                    if (!this.pendingSegment_ || n !== this.pendingSegment_.requestId) {
                        return
                    }
                    var r = this.pendingSegment_.segment;
                    var a = t + "TimingInfo";
                    if (!r[a]) {
                        r[a] = {}
                    }
                    r[a].transmuxerPrependedSeconds = i.prependedContentDuration || 0;
                    r[a].transmuxedPresentationStart = i.start.presentation;
                    r[a].transmuxedDecodeStart = i.start.decode;
                    r[a].transmuxedPresentationEnd = i.end.presentation;
                    r[a].transmuxedDecodeEnd = i.end.decode;
                    r[a].baseMediaDecodeTime = i.baseMediaDecodeTime
                }
                ;
                n.appendData_ = function e(t, n) {
                    var i = n.type
                      , r = n.data;
                    if (!r || !r.byteLength) {
                        return
                    }
                    if (i === "audio" && this.audioDisabled_) {
                        return
                    }
                    var a = this.getInitSegmentAndUpdateState_({
                        type: i,
                        initSegment: n.initSegment,
                        playlist: t.playlist,
                        map: t.isFmp4 ? t.segment.map : null
                    });
                    this.appendToSourceBuffer_({
                        segmentInfo: t,
                        type: i,
                        initSegment: a,
                        data: r
                    })
                }
                ;
                n.loadSegment_ = function e(t) {
                    var n = this;
                    this.state = "WAITING";
                    this.pendingSegment_ = t;
                    this.trimBackBuffer_(t);
                    if (typeof t.timestampOffset === "number") {
                        if (this.transmuxer_) {
                            this.transmuxer_.postMessage({
                                action: "clearAllMp4Captions"
                            })
                        }
                    }
                    if (!this.hasEnoughInfoToLoad_()) {
                        this.loadQueue_.push(function() {
                            var e = n.buffered_();
                            if (typeof t.timestampOffset === "number") {
                                t.timestampOffset = gs({
                                    segmentTimeline: t.timeline,
                                    currentTimeline: n.currentTimeline_,
                                    startOfSegment: t.startOfSegment,
                                    buffered: e,
                                    overrideCheck: true
                                })
                            }
                            delete t.audioAppendStart;
                            var i = n.sourceUpdater_.audioBuffered();
                            if (i.length) {
                                t.audioAppendStart = i.end(i.length - 1) - n.sourceUpdater_.audioTimestampOffset()
                            }
                            n.updateTransmuxerAndRequestSegment_(t)
                        });
                        return
                    }
                    this.updateTransmuxerAndRequestSegment_(t)
                }
                ;
                n.updateTransmuxerAndRequestSegment_ = function e(t) {
                    var n = this;
                    if (this.shouldUpdateTransmuxerTimestampOffset_(t.timestampOffset)) {
                        this.gopBuffer_.length = 0;
                        t.gopsToAlignWith = [];
                        this.timeMapping_ = 0;
                        this.transmuxer_.postMessage({
                            action: "reset"
                        });
                        this.transmuxer_.postMessage({
                            action: "setTimestampOffset",
                            timestampOffset: t.timestampOffset
                        })
                    }
                    var i = this.createSimplifiedSegmentObj_(t);
                    var r = this.isEndOfStream_(t.mediaIndex, t.playlist, t.partIndex);
                    var a = this.mediaIndex !== null;
                    var s = t.timeline !== this.currentTimeline_ && t.timeline > 0;
                    var o = r || a && s;
                    this.logger_("Requesting " + hs(t));
                    t.abortRequests = La({
                        xhr: this.vhs_.xhr,
                        xhrOptions: this.xhrOptions_,
                        decryptionWorker: this.decrypter_,
                        segment: i,
                        handlePartialData: this.handlePartialData_,
                        abortFn: this.handleAbort_.bind(this, t),
                        progressFn: this.handleProgress_.bind(this),
                        trackInfoFn: this.handleTrackInfo_.bind(this),
                        timingInfoFn: this.handleTimingInfo_.bind(this),
                        videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, "video", t.requestId),
                        audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, "audio", t.requestId),
                        captionsFn: this.handleCaptions_.bind(this),
                        isEndOfTimeline: o,
                        endedTimelineFn: function e() {
                            n.logger_("received endedtimeline callback")
                        },
                        id3Fn: this.handleId3_.bind(this),
                        dataFn: this.handleData_.bind(this),
                        doneFn: this.segmentRequestFinished_.bind(this)
                    })
                }
                ;
                n.trimBackBuffer_ = function e(t) {
                    var n = ps(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);
                    if (n > 0) {
                        this.remove(0, n)
                    }
                }
                ;
                n.createSimplifiedSegmentObj_ = function e(t) {
                    var n = t.segment;
                    var i = t.part;
                    var r = {
                        resolvedUri: i ? i.resolvedUri : n.resolvedUri,
                        byterange: i ? i.byterange : n.byterange,
                        requestId: t.requestId,
                        transmuxer: t.transmuxer,
                        audioAppendStart: t.audioAppendStart,
                        gopsToAlignWith: t.gopsToAlignWith,
                        part: t.part
                    };
                    var a = t.playlist.segments[t.mediaIndex - 1];
                    if (a && a.timeline === n.timeline) {
                        if (a.videoTimingInfo) {
                            r.baseStartTime = a.videoTimingInfo.transmuxedDecodeEnd
                        } else if (a.audioTimingInfo) {
                            r.baseStartTime = a.audioTimingInfo.transmuxedDecodeEnd
                        }
                    }
                    if (n.key) {
                        var s = n.key.iv || new Uint32Array([0, 0, 0, t.mediaIndex + t.playlist.mediaSequence]);
                        r.key = this.segmentKey(n.key);
                        r.key.iv = s
                    }
                    if (n.map) {
                        r.map = this.initSegmentForMap(n.map)
                    }
                    return r
                }
                ;
                n.saveTransferStats_ = function e(t) {
                    this.mediaRequests += 1;
                    if (t) {
                        this.mediaBytesTransferred += t.bytesReceived;
                        this.mediaTransferDuration += t.roundTripTime
                    }
                }
                ;
                n.saveBandwidthRelatedStats_ = function e(t, n) {
                    this.pendingSegment_.byteLength = n.bytesReceived;
                    if (t < cs) {
                        this.logger_("Ignoring segment's bandwidth because its duration of " + t + (" is less than the min to record " + cs));
                        return
                    }
                    this.bandwidth = n.bandwidth;
                    this.roundTrip = n.roundTripTime
                }
                ;
                n.handleTimeout_ = function e() {
                    this.mediaRequestsTimedout += 1;
                    this.bandwidth = 1;
                    this.roundTrip = NaN;
                    this.trigger("bandwidthupdate")
                }
                ;
                n.segmentRequestFinished_ = function e(t, n, i) {
                    if (this.callQueue_.length) {
                        this.callQueue_.push(this.segmentRequestFinished_.bind(this, t, n, i));
                        return
                    }
                    this.saveTransferStats_(n.stats);
                    if (!this.pendingSegment_) {
                        return
                    }
                    if (n.requestId !== this.pendingSegment_.requestId) {
                        return
                    }
                    if (t) {
                        this.pendingSegment_ = null;
                        this.state = "READY";
                        if (t.code === ma.ABORTED) {
                            return
                        }
                        this.pause();
                        if (t.code === ma.TIMEOUT) {
                            this.handleTimeout_();
                            return
                        }
                        this.mediaRequestsErrored += 1;
                        this.error(t);
                        this.trigger("error");
                        return
                    }
                    var r = this.pendingSegment_;
                    this.saveBandwidthRelatedStats_(r.duration, n.stats);
                    r.endOfAllRequests = n.endOfAllRequests;
                    if (i.gopInfo) {
                        this.gopBuffer_ = rs(this.gopBuffer_, i.gopInfo, this.safeAppend_)
                    }
                    this.state = "APPENDING";
                    this.trigger("appending");
                    this.waitForAppendsToComplete_(r)
                }
                ;
                n.setTimeMapping_ = function e(t) {
                    var n = this.syncController_.mappingForTimeline(t);
                    if (n !== null) {
                        this.timeMapping_ = n
                    }
                }
                ;
                n.updateMediaSecondsLoaded_ = function e(t) {
                    if (typeof t.start === "number" && typeof t.end === "number") {
                        this.mediaSecondsLoaded += t.end - t.start
                    } else {
                        this.mediaSecondsLoaded += t.duration
                    }
                }
                ;
                n.shouldUpdateTransmuxerTimestampOffset_ = function e(t) {
                    if (t === null) {
                        return false
                    }
                    if (this.loaderType_ === "main" && t !== this.sourceUpdater_.videoTimestampOffset()) {
                        return true
                    }
                    if (!this.audioDisabled_ && t !== this.sourceUpdater_.audioTimestampOffset()) {
                        return true
                    }
                    return false
                }
                ;
                n.trueSegmentStart_ = function e(t) {
                    var n = t.currentStart
                      , i = t.playlist
                      , r = t.mediaIndex
                      , a = t.firstVideoFrameTimeForData
                      , s = t.currentVideoTimestampOffset
                      , o = t.useVideoTimingInfo
                      , u = t.videoTimingInfo
                      , l = t.audioTimingInfo;
                    if (typeof n !== "undefined") {
                        return n
                    }
                    if (!o) {
                        return l.start
                    }
                    var d = i.segments[r - 1];
                    if (r === 0 || !d || typeof d.start === "undefined" || d.end !== a + s) {
                        return a
                    }
                    return u.start
                }
                ;
                n.waitForAppendsToComplete_ = function e(t) {
                    if (!this.currentMediaInfo_) {
                        this.error({
                            message: "No starting media returned, likely due to an unsupported media format.",
                            blacklistDuration: Infinity
                        });
                        this.trigger("error");
                        return
                    }
                    var n = this.currentMediaInfo_
                      , i = n.hasAudio
                      , r = n.hasVideo
                      , a = n.isMuxed;
                    var s = this.loaderType_ === "main" && r;
                    var o = !this.audioDisabled_ && i && !a;
                    t.waitingOnAppends = 0;
                    if (!t.hasAppendedData_) {
                        if (!t.timingInfo && typeof t.timestampOffset === "number") {
                            this.isPendingTimestampOffset_ = true
                        }
                        t.timingInfo = {
                            start: 0
                        };
                        t.waitingOnAppends++;
                        if (!this.isPendingTimestampOffset_) {
                            this.updateSourceBufferTimestampOffset_(t);
                            this.processMetadataQueue_()
                        }
                        this.checkAppendsDone_(t);
                        return
                    }
                    if (s) {
                        t.waitingOnAppends++
                    }
                    if (o) {
                        t.waitingOnAppends++
                    }
                    if (s) {
                        this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, t))
                    }
                    if (o) {
                        this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, t))
                    }
                }
                ;
                n.checkAppendsDone_ = function e(t) {
                    if (this.checkForAbort_(t.requestId)) {
                        return
                    }
                    t.waitingOnAppends--;
                    if (t.waitingOnAppends === 0) {
                        this.handleAppendsDone_()
                    }
                }
                ;
                n.checkForIllegalMediaSwitch = function e(t) {
                    var n = fs(this.loaderType_, this.currentMediaInfo_, t);
                    if (n) {
                        this.error({
                            message: n,
                            blacklistDuration: Infinity
                        });
                        this.trigger("error");
                        return true
                    }
                    return false
                }
                ;
                n.updateSourceBufferTimestampOffset_ = function e(t) {
                    if (t.timestampOffset === null || typeof t.timingInfo.start !== "number" || t.changedTimestampOffset || this.loaderType_ !== "main") {
                        return
                    }
                    var n = false;
                    t.timestampOffset -= t.timingInfo.start;
                    t.changedTimestampOffset = true;
                    if (t.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {
                        this.sourceUpdater_.videoTimestampOffset(t.timestampOffset);
                        n = true
                    }
                    if (t.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {
                        this.sourceUpdater_.audioTimestampOffset(t.timestampOffset);
                        n = true
                    }
                    if (n) {
                        this.trigger("timestampoffset")
                    }
                }
                ;
                n.updateTimingInfoEnd_ = function e(t) {
                    t.timingInfo = t.timingInfo || {};
                    var n = this.loaderType_ === "main" && this.currentMediaInfo_.hasVideo;
                    var i = n && t.videoTimingInfo ? t.videoTimingInfo : t.audioTimingInfo;
                    if (!i) {
                        return
                    }
                    t.timingInfo.end = typeof i.end === "number" ? i.end : i.start + t.duration
                }
                ;
                n.handleAppendsDone_ = function e() {
                    if (this.pendingSegment_) {
                        this.trigger("appendsdone")
                    }
                    if (!this.pendingSegment_) {
                        this.state = "READY";
                        if (!this.paused()) {
                            this.monitorBuffer_()
                        }
                        return
                    }
                    var t = this.pendingSegment_;
                    this.updateTimingInfoEnd_(t);
                    if (this.shouldSaveSegmentTimingInfo_) {
                        this.syncController_.saveSegmentTimingInfo({
                            segmentInfo: t,
                            shouldSaveTimelineMapping: this.loaderType_ === "main"
                        })
                    }
                    this.logger_("Appended " + hs(t));
                    var n = bs(t, this.sourceType_);
                    if (n) {
                        if (n.severity === "warn") {
                            u["default"].log.warn(n.message)
                        } else {
                            this.logger_(n.message)
                        }
                    }
                    this.recordThroughput_(t);
                    this.pendingSegment_ = null;
                    this.state = "READY";
                    if (t.isSyncRequest) {
                        this.trigger("syncinfoupdate");
                        return
                    }
                    this.addSegmentMetadataCue_(t);
                    this.fetchAtBuffer_ = true;
                    if (this.currentTimeline_ !== t.timeline) {
                        this.timelineChangeController_.lastTimelineChange({
                            type: this.loaderType_,
                            from: this.currentTimeline_,
                            to: t.timeline
                        });
                        if (this.loaderType_ === "main" && !this.audioDisabled_) {
                            this.timelineChangeController_.lastTimelineChange({
                                type: "audio",
                                from: this.currentTimeline_,
                                to: t.timeline
                            })
                        }
                    }
                    this.currentTimeline_ = t.timeline;
                    this.trigger("syncinfoupdate");
                    var i = t.segment;
                    if (i.end && this.currentTime_() - i.end > t.playlist.targetDuration * 3) {
                        this.resetEverything();
                        return
                    }
                    var r = this.mediaIndex !== null;
                    if (r) {
                        this.trigger("bandwidthupdate")
                    }
                    this.trigger("progress");
                    this.mediaIndex = t.mediaIndex;
                    this.partIndex = t.partIndex;
                    if (this.isEndOfStream_(t.mediaIndex, t.playlist, t.partIndex)) {
                        this.endOfStream()
                    }
                    this.trigger("appended");
                    if (!this.paused()) {
                        this.monitorBuffer_()
                    }
                }
                ;
                n.recordThroughput_ = function e(t) {
                    if (t.duration < cs) {
                        this.logger_("Ignoring segment's throughput because its duration of " + t.duration + (" is less than the min to record " + cs));
                        return
                    }
                    var n = this.throughput.rate;
                    var i = Date.now() - t.endOfAllRequests + 1;
                    var r = Math.floor(t.byteLength / i * 8 * 1e3);
                    this.throughput.rate += (r - n) / ++this.throughput.count
                }
                ;
                n.addSegmentMetadataCue_ = function e(t) {
                    if (!this.segmentMetadataTrack_) {
                        return
                    }
                    var n = t.segment;
                    var i = n.start;
                    var r = n.end;
                    if (!ds(i) || !ds(r)) {
                        return
                    }
                    ts(i, r, this.segmentMetadataTrack_);
                    var a = o["default"].WebKitDataCue || o["default"].VTTCue;
                    var s = {
                        custom: n.custom,
                        dateTimeObject: n.dateTimeObject,
                        dateTimeString: n.dateTimeString,
                        bandwidth: t.playlist.attributes.BANDWIDTH,
                        resolution: t.playlist.attributes.RESOLUTION,
                        codecs: t.playlist.attributes.CODECS,
                        byteLength: t.byteLength,
                        uri: t.uri,
                        timeline: t.timeline,
                        playlist: t.playlist.id,
                        start: i,
                        end: r
                    };
                    var u = JSON.stringify(s);
                    var l = new a(i,r,u);
                    l.value = s;
                    this.segmentMetadataTrack_.addCue(l)
                }
                ;
                return t
            }(u["default"].EventTarget);
            function As() {}
            var Ts = function e(t) {
                if (typeof t !== "string") {
                    return t
                }
                return t.replace(/./, function(e) {
                    return e.toUpperCase()
                })
            };
            var ks = ["video", "audio"];
            var Es = function e(t, n) {
                var i = n[t + "Buffer"];
                return i && i.updating || n.queuePending[t]
            };
            var Ps = function e(t, n) {
                for (var i = 0; i < n.length; i++) {
                    var r = n[i];
                    if (r.type === "mediaSource") {
                        return null
                    }
                    if (r.type === t) {
                        return i
                    }
                }
                return null
            };
            var Is = function e(t, n) {
                if (n.queue.length === 0) {
                    return
                }
                var i = 0;
                var r = n.queue[i];
                if (r.type === "mediaSource") {
                    if (!n.updating() && n.mediaSource.readyState !== "closed") {
                        n.queue.shift();
                        r.action(n);
                        if (r.doneFn) {
                            r.doneFn()
                        }
                        e("audio", n);
                        e("video", n)
                    }
                    return
                }
                if (t === "mediaSource") {
                    return
                }
                if (!n.ready() || n.mediaSource.readyState === "closed" || Es(t, n)) {
                    return
                }
                if (r.type !== t) {
                    i = Ps(t, n.queue);
                    if (i === null) {
                        return
                    }
                    r = n.queue[i]
                }
                n.queue.splice(i, 1);
                n.queuePending[t] = r;
                r.action(t, n);
                if (!r.doneFn) {
                    n.queuePending[t] = null;
                    e(t, n);
                    return
                }
            };
            var Cs = function e(t, n) {
                var i = n[t + "Buffer"];
                var r = Ts(t);
                if (!i) {
                    return
                }
                i.removeEventListener("updateend", n["on" + r + "UpdateEnd_"]);
                i.removeEventListener("error", n["on" + r + "Error_"]);
                n.codecs[t] = null;
                n[t + "Buffer"] = null
            };
            var ws = function e(t, n) {
                return t && n && Array.prototype.indexOf.call(t.sourceBuffers, n) !== -1
            };
            var js = {
                appendBuffer: function e(t, n, i) {
                    return function(e, r) {
                        var a = r[e + "Buffer"];
                        if (!ws(r.mediaSource, a)) {
                            return
                        }
                        r.logger_("Appending segment " + n.mediaIndex + "'s " + t.length + " bytes to " + e + "Buffer");
                        try {
                            a.appendBuffer(t)
                        } catch (t) {
                            r.logger_("Error with code " + t.code + " " + (t.code === os ? "(QUOTA_EXCEEDED_ERR) " : "") + ("when appending segment " + n.mediaIndex + " to " + e + "Buffer"));
                            r.queuePending[e] = null;
                            i(t)
                        }
                    }
                },
                remove: function e(t, n) {
                    return function(e, i) {
                        var r = i[e + "Buffer"];
                        if (!ws(i.mediaSource, r)) {
                            return
                        }
                        i.logger_("Removing " + t + " to " + n + " from " + e + "Buffer");
                        try {
                            r.remove(t, n)
                        } catch (r) {
                            i.logger_("Remove " + t + " to " + n + " from " + e + "Buffer failed")
                        }
                    }
                },
                timestampOffset: function e(t) {
                    return function(e, n) {
                        var i = n[e + "Buffer"];
                        if (!ws(n.mediaSource, i)) {
                            return
                        }
                        n.logger_("Setting " + e + "timestampOffset to " + t);
                        i.timestampOffset = t
                    }
                },
                callback: function e(t) {
                    return function(e, n) {
                        t()
                    }
                },
                endOfStream: function e(t) {
                    return function(e) {
                        if (e.mediaSource.readyState !== "open") {
                            return
                        }
                        e.logger_("Calling mediaSource endOfStream(" + (t || "") + ")");
                        try {
                            e.mediaSource.endOfStream(t)
                        } catch (e) {
                            u["default"].log.warn("Failed to call media source endOfStream", e)
                        }
                    }
                },
                duration: function e(t) {
                    return function(e) {
                        e.logger_("Setting mediaSource duration to " + t);
                        try {
                            e.mediaSource.duration = t
                        } catch (e) {
                            u["default"].log.warn("Failed to set media source duration", e)
                        }
                    }
                },
                abort: function e() {
                    return function(e, t) {
                        if (t.mediaSource.readyState !== "open") {
                            return
                        }
                        var n = t[e + "Buffer"];
                        if (!ws(t.mediaSource, n)) {
                            return
                        }
                        t.logger_("calling abort on " + e + "Buffer");
                        try {
                            n.abort()
                        } catch (t) {
                            u["default"].log.warn("Failed to abort on " + e + "Buffer", t)
                        }
                    }
                },
                addSourceBuffer: function e(t, n) {
                    return function(e) {
                        var i = Ts(t);
                        var r = me(n);
                        e.logger_("Adding " + t + "Buffer with codec " + n + " to mediaSource");
                        var a = e.mediaSource.addSourceBuffer(r);
                        a.addEventListener("updateend", e["on" + i + "UpdateEnd_"]);
                        a.addEventListener("error", e["on" + i + "Error_"]);
                        e.codecs[t] = n;
                        e[t + "Buffer"] = a
                    }
                },
                removeSourceBuffer: function e(t) {
                    return function(e) {
                        var n = e[t + "Buffer"];
                        Cs(t, e);
                        if (!ws(e.mediaSource, n)) {
                            return
                        }
                        e.logger_("Removing " + t + "Buffer with codec " + e.codecs[t] + " from mediaSource");
                        try {
                            e.mediaSource.removeSourceBuffer(n)
                        } catch (e) {
                            u["default"].log.warn("Failed to removeSourceBuffer " + t + "Buffer", e)
                        }
                    }
                },
                changeType: function e(t) {
                    return function(e, n) {
                        var i = n[e + "Buffer"];
                        var r = me(t);
                        if (!ws(n.mediaSource, i)) {
                            return
                        }
                        if (n.codecs[e] === t) {
                            return
                        }
                        n.logger_("changing " + e + "Buffer codec from " + n.codecs[e] + " to " + t);
                        i.changeType(r);
                        n.codecs[e] = t
                    }
                }
            };
            var Ls = function e(t) {
                var n = t.type
                  , i = t.sourceUpdater
                  , r = t.action
                  , a = t.doneFn
                  , s = t.name;
                i.queue.push({
                    type: n,
                    action: r,
                    doneFn: a,
                    name: s
                });
                Is(n, i)
            };
            var Os = function e(t, n) {
                return function(e) {
                    if (n.queuePending[t]) {
                        var i = n.queuePending[t].doneFn;
                        n.queuePending[t] = null;
                        if (i) {
                            i(n[t + "Error_"])
                        }
                    }
                    Is(t, n)
                }
            };
            var xs = function(e) {
                p(t, e);
                function t(t) {
                    var n;
                    n = e.call(this) || this;
                    n.mediaSource = t;
                    n.sourceopenListener_ = function() {
                        return Is("mediaSource", c(n))
                    }
                    ;
                    n.mediaSource.addEventListener("sourceopen", n.sourceopenListener_);
                    n.logger_ = y("SourceUpdater");
                    n.audioTimestampOffset_ = 0;
                    n.videoTimestampOffset_ = 0;
                    n.queue = [];
                    n.queuePending = {
                        audio: null,
                        video: null
                    };
                    n.delayedAudioAppendQueue_ = [];
                    n.videoAppendQueued_ = false;
                    n.codecs = {};
                    n.onVideoUpdateEnd_ = Os("video", c(n));
                    n.onAudioUpdateEnd_ = Os("audio", c(n));
                    n.onVideoError_ = function(e) {
                        n.videoError_ = e
                    }
                    ;
                    n.onAudioError_ = function(e) {
                        n.audioError_ = e
                    }
                    ;
                    n.createdSourceBuffers_ = false;
                    n.initializedEme_ = false;
                    n.triggeredReady_ = false;
                    return n
                }
                var n = t.prototype;
                n.initializedEme = function e() {
                    this.initializedEme_ = true;
                    this.triggerReady()
                }
                ;
                n.hasCreatedSourceBuffers = function e() {
                    return this.createdSourceBuffers_
                }
                ;
                n.hasInitializedAnyEme = function e() {
                    return this.initializedEme_
                }
                ;
                n.ready = function e() {
                    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme()
                }
                ;
                n.createSourceBuffers = function e(t) {
                    if (this.hasCreatedSourceBuffers()) {
                        return
                    }
                    this.addOrChangeSourceBuffers(t);
                    this.createdSourceBuffers_ = true;
                    this.trigger("createdsourcebuffers");
                    this.triggerReady()
                }
                ;
                n.triggerReady = function e() {
                    if (this.ready() && !this.triggeredReady_) {
                        this.triggeredReady_ = true;
                        this.trigger("ready")
                    }
                }
                ;
                n.addSourceBuffer = function e(t, n) {
                    Ls({
                        type: "mediaSource",
                        sourceUpdater: this,
                        action: js.addSourceBuffer(t, n),
                        name: "addSourceBuffer"
                    })
                }
                ;
                n.abort = function e(t) {
                    Ls({
                        type: t,
                        sourceUpdater: this,
                        action: js.abort(t),
                        name: "abort"
                    })
                }
                ;
                n.removeSourceBuffer = function e(t) {
                    if (!this.canRemoveSourceBuffer()) {
                        u["default"].log.error("removeSourceBuffer is not supported!");
                        return
                    }
                    Ls({
                        type: "mediaSource",
                        sourceUpdater: this,
                        action: js.removeSourceBuffer(t),
                        name: "removeSourceBuffer"
                    })
                }
                ;
                n.canRemoveSourceBuffer = function e() {
                    return !u["default"].browser.IE_VERSION && !u["default"].browser.IS_FIREFOX && o["default"].MediaSource && o["default"].MediaSource.prototype && typeof o["default"].MediaSource.prototype.removeSourceBuffer === "function"
                }
                ;
                t.canChangeType = function e() {
                    return o["default"].SourceBuffer && o["default"].SourceBuffer.prototype && typeof o["default"].SourceBuffer.prototype.changeType === "function"
                }
                ;
                n.canChangeType = function e() {
                    return this.constructor.canChangeType()
                }
                ;
                n.changeType = function e(t, n) {
                    if (!this.canChangeType()) {
                        u["default"].log.error("changeType is not supported!");
                        return
                    }
                    Ls({
                        type: t,
                        sourceUpdater: this,
                        action: js.changeType(n),
                        name: "changeType"
                    })
                }
                ;
                n.addOrChangeSourceBuffers = function e(t) {
                    var n = this;
                    if (!t || typeof t !== "object" || Object.keys(t).length === 0) {
                        throw new Error("Cannot addOrChangeSourceBuffers to undefined codecs")
                    }
                    Object.keys(t).forEach(function(e) {
                        var i = t[e];
                        if (!n.hasCreatedSourceBuffers()) {
                            return n.addSourceBuffer(e, i)
                        }
                        if (n.canChangeType()) {
                            n.changeType(e, i)
                        }
                    })
                }
                ;
                n.appendBuffer = function e(t, n) {
                    var i = this;
                    var r = t.segmentInfo
                      , a = t.type
                      , s = t.bytes;
                    this.processedAppend_ = true;
                    if (a === "audio" && this.videoBuffer && !this.videoAppendQueued_) {
                        this.delayedAudioAppendQueue_.push([t, n]);
                        this.logger_("delayed audio append of " + s.length + " until video append");
                        return
                    }
                    var o = n;
                    Ls({
                        type: a,
                        sourceUpdater: this,
                        action: js.appendBuffer(s, r || {
                            mediaIndex: -1
                        }, o),
                        doneFn: n,
                        name: "appendBuffer"
                    });
                    if (a === "video") {
                        this.videoAppendQueued_ = true;
                        if (!this.delayedAudioAppendQueue_.length) {
                            return
                        }
                        var u = this.delayedAudioAppendQueue_.slice();
                        this.logger_("queuing delayed audio " + u.length + " appendBuffers");
                        this.delayedAudioAppendQueue_.length = 0;
                        u.forEach(function(e) {
                            i.appendBuffer.apply(i, e)
                        })
                    }
                }
                ;
                n.audioBuffered = function e() {
                    if (!ws(this.mediaSource, this.audioBuffer)) {
                        return u["default"].createTimeRange()
                    }
                    return this.audioBuffer.buffered ? this.audioBuffer.buffered : u["default"].createTimeRange()
                }
                ;
                n.videoBuffered = function e() {
                    if (!ws(this.mediaSource, this.videoBuffer)) {
                        return u["default"].createTimeRange()
                    }
                    return this.videoBuffer.buffered ? this.videoBuffer.buffered : u["default"].createTimeRange()
                }
                ;
                n.buffered = function e() {
                    var t = ws(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;
                    var n = ws(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;
                    if (n && !t) {
                        return this.audioBuffered()
                    }
                    if (t && !n) {
                        return this.videoBuffered()
                    }
                    return re(this.audioBuffered(), this.videoBuffered())
                }
                ;
                n.setDuration = function e(t, n) {
                    if (n === void 0) {
                        n = As
                    }
                    Ls({
                        type: "mediaSource",
                        sourceUpdater: this,
                        action: js.duration(t),
                        name: "duration",
                        doneFn: n
                    })
                }
                ;
                n.endOfStream = function e(t, n) {
                    if (t === void 0) {
                        t = null
                    }
                    if (n === void 0) {
                        n = As
                    }
                    if (typeof t !== "string") {
                        t = undefined
                    }
                    Ls({
                        type: "mediaSource",
                        sourceUpdater: this,
                        action: js.endOfStream(t),
                        name: "endOfStream",
                        doneFn: n
                    })
                }
                ;
                n.removeAudio = function e(t, n, i) {
                    if (i === void 0) {
                        i = As
                    }
                    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {
                        i();
                        return
                    }
                    Ls({
                        type: "audio",
                        sourceUpdater: this,
                        action: js.remove(t, n),
                        doneFn: i,
                        name: "remove"
                    })
                }
                ;
                n.removeVideo = function e(t, n, i) {
                    if (i === void 0) {
                        i = As
                    }
                    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {
                        i();
                        return
                    }
                    Ls({
                        type: "video",
                        sourceUpdater: this,
                        action: js.remove(t, n),
                        doneFn: i,
                        name: "remove"
                    })
                }
                ;
                n.updating = function e() {
                    if (Es("audio", this) || Es("video", this)) {
                        return true
                    }
                    return false
                }
                ;
                n.audioTimestampOffset = function e(t) {
                    if (typeof t !== "undefined" && this.audioBuffer && this.audioTimestampOffset_ !== t) {
                        Ls({
                            type: "audio",
                            sourceUpdater: this,
                            action: js.timestampOffset(t),
                            name: "timestampOffset"
                        });
                        this.audioTimestampOffset_ = t
                    }
                    return this.audioTimestampOffset_
                }
                ;
                n.videoTimestampOffset = function e(t) {
                    if (typeof t !== "undefined" && this.videoBuffer && this.videoTimestampOffset !== t) {
                        Ls({
                            type: "video",
                            sourceUpdater: this,
                            action: js.timestampOffset(t),
                            name: "timestampOffset"
                        });
                        this.videoTimestampOffset_ = t
                    }
                    return this.videoTimestampOffset_
                }
                ;
                n.audioQueueCallback = function e(t) {
                    if (!this.audioBuffer) {
                        return
                    }
                    Ls({
                        type: "audio",
                        sourceUpdater: this,
                        action: js.callback(t),
                        name: "callback"
                    })
                }
                ;
                n.videoQueueCallback = function e(t) {
                    if (!this.videoBuffer) {
                        return
                    }
                    Ls({
                        type: "video",
                        sourceUpdater: this,
                        action: js.callback(t),
                        name: "callback"
                    })
                }
                ;
                n.dispose = function e() {
                    var t = this;
                    this.trigger("dispose");
                    ks.forEach(function(e) {
                        t.abort(e);
                        if (t.canRemoveSourceBuffer()) {
                            t.removeSourceBuffer(e)
                        } else {
                            t[e + "QueueCallback"](function() {
                                return Cs(e, t)
                            })
                        }
                    });
                    this.videoAppendQueued_ = false;
                    this.delayedAudioAppendQueue_.length = 0;
                    if (this.sourceopenListener_) {
                        this.mediaSource.removeEventListener("sourceopen", this.sourceopenListener_)
                    }
                    this.off()
                }
                ;
                return t
            }(u["default"].EventTarget);
            var Ds = function e(t) {
                return decodeURIComponent(escape(String.fromCharCode.apply(null, t)))
            };
            var Ns = new Uint8Array("\n\n".split("").map(function(e) {
                return e.charCodeAt(0)
            }));
            var Rs = function(e) {
                p(t, e);
                function t(t, n) {
                    var i;
                    if (n === void 0) {
                        n = {}
                    }
                    i = e.call(this, t, n) || this;
                    i.handlePartialData_ = false;
                    i.mediaSource_ = null;
                    i.subtitlesTrack_ = null;
                    i.loaderType_ = "subtitle";
                    i.featuresNativeTextTracks_ = t.featuresNativeTextTracks;
                    i.shouldSaveSegmentTimingInfo_ = false;
                    return i
                }
                var n = t.prototype;
                n.createTransmuxer_ = function e() {
                    return null
                }
                ;
                n.buffered_ = function e() {
                    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {
                        return u["default"].createTimeRanges()
                    }
                    var t = this.subtitlesTrack_.cues;
                    var n = t[0].startTime;
                    var i = t[t.length - 1].startTime;
                    return u["default"].createTimeRanges([[n, i]])
                }
                ;
                n.initSegmentForMap = function e(t, n) {
                    if (n === void 0) {
                        n = false
                    }
                    if (!t) {
                        return null
                    }
                    var i = rt(t);
                    var r = this.initSegments_[i];
                    if (n && !r && t.bytes) {
                        var a = Ns.byteLength + t.bytes.byteLength;
                        var s = new Uint8Array(a);
                        s.set(t.bytes);
                        s.set(Ns, t.bytes.byteLength);
                        this.initSegments_[i] = r = {
                            resolvedUri: t.resolvedUri,
                            byterange: t.byterange,
                            bytes: s
                        }
                    }
                    return r || t
                }
                ;
                n.couldBeginLoading_ = function e() {
                    return this.playlist_ && this.subtitlesTrack_ && !this.paused()
                }
                ;
                n.init_ = function e() {
                    this.state = "READY";
                    this.resetEverything();
                    return this.monitorBuffer_()
                }
                ;
                n.track = function e(t) {
                    if (typeof t === "undefined") {
                        return this.subtitlesTrack_
                    }
                    this.subtitlesTrack_ = t;
                    if (this.state === "INIT" && this.couldBeginLoading_()) {
                        this.init_()
                    }
                    return this.subtitlesTrack_
                }
                ;
                n.remove = function e(t, n) {
                    ts(t, n, this.subtitlesTrack_)
                }
                ;
                n.fillBuffer_ = function e() {
                    var t = this;
                    if (!this.syncPoint_) {
                        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_())
                    }
                    var n = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
                    n = this.skipEmptySegments_(n);
                    if (!n) {
                        return
                    }
                    if (this.syncController_.timestampOffsetForTimeline(n.timeline) === null) {
                        var i = function e() {
                            t.state = "READY";
                            if (!t.paused()) {
                                t.monitorBuffer_()
                            }
                        };
                        this.syncController_.one("timestampoffset", i);
                        this.state = "WAITING_ON_TIMELINE";
                        return
                    }
                    this.loadSegment_(n)
                }
                ;
                n.skipEmptySegments_ = function e(t) {
                    while (t && t.segment.empty) {
                        t = this.generateSegmentInfo_(t.playlist, t.mediaIndex + 1, t.startOfSegment + t.duration, t.isSyncRequest)
                    }
                    return t
                }
                ;
                n.stopForError = function e(t) {
                    this.error(t);
                    this.state = "READY";
                    this.pause();
                    this.trigger("error")
                }
                ;
                n.segmentRequestFinished_ = function e(t, n, i) {
                    var r = this;
                    if (!this.subtitlesTrack_) {
                        this.state = "READY";
                        return
                    }
                    this.saveTransferStats_(n.stats);
                    if (!this.pendingSegment_) {
                        this.state = "READY";
                        this.mediaRequestsAborted += 1;
                        return
                    }
                    if (t) {
                        if (t.code === ma.TIMEOUT) {
                            this.handleTimeout_()
                        }
                        if (t.code === ma.ABORTED) {
                            this.mediaRequestsAborted += 1
                        } else {
                            this.mediaRequestsErrored += 1
                        }
                        this.stopForError(t);
                        return
                    }
                    var a = this.pendingSegment_;
                    this.saveBandwidthRelatedStats_(a.duration, n.stats);
                    this.state = "APPENDING";
                    this.trigger("appending");
                    var s = a.segment;
                    if (s.map) {
                        s.map.bytes = n.map.bytes
                    }
                    a.bytes = n.bytes;
                    if (typeof o["default"].WebVTT !== "function" && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {
                        var u;
                        var l = function e() {
                            r.subtitlesTrack_.tech_.off("vttjsloaded", u);
                            r.stopForError({
                                message: "Error loading vtt.js"
                            });
                            return
                        };
                        u = function e() {
                            r.subtitlesTrack_.tech_.off("vttjserror", l);
                            r.segmentRequestFinished_(t, n, i)
                        }
                        ;
                        this.state = "WAITING_ON_VTTJS";
                        this.subtitlesTrack_.tech_.one("vttjsloaded", u);
                        this.subtitlesTrack_.tech_.one("vttjserror", l);
                        return
                    }
                    s.requested = true;
                    try {
                        this.parseVTTCues_(a)
                    } catch (e) {
                        this.stopForError({
                            message: e.message
                        });
                        return
                    }
                    this.updateTimeMapping_(a, this.syncController_.timelines[a.timeline], this.playlist_);
                    if (a.cues.length) {
                        a.timingInfo = {
                            start: a.cues[0].startTime,
                            end: a.cues[a.cues.length - 1].endTime
                        }
                    } else {
                        a.timingInfo = {
                            start: a.startOfSegment,
                            end: a.startOfSegment + a.duration
                        }
                    }
                    if (a.isSyncRequest) {
                        this.trigger("syncinfoupdate");
                        this.pendingSegment_ = null;
                        this.state = "READY";
                        return
                    }
                    a.byteLength = a.bytes.byteLength;
                    this.mediaSecondsLoaded += s.duration;
                    a.cues.forEach(function(e) {
                        r.subtitlesTrack_.addCue(r.featuresNativeTextTracks_ ? new o["default"].VTTCue(e.startTime,e.endTime,e.text) : e)
                    });
                    ns(this.subtitlesTrack_);
                    this.handleAppendsDone_()
                }
                ;
                n.handleData_ = function e() {}
                ;
                n.updateTimingInfoEnd_ = function e() {}
                ;
                n.parseVTTCues_ = function e(t) {
                    var n;
                    var i = false;
                    if (typeof o["default"].TextDecoder === "function") {
                        n = new o["default"].TextDecoder("utf8")
                    } else {
                        n = o["default"].WebVTT.StringDecoder();
                        i = true
                    }
                    var r = new o["default"].WebVTT.Parser(o["default"],o["default"].vttjs,n);
                    t.cues = [];
                    t.timestampmap = {
                        MPEGTS: 0,
                        LOCAL: 0
                    };
                    r.oncue = t.cues.push.bind(t.cues);
                    r.ontimestampmap = function(e) {
                        t.timestampmap = e
                    }
                    ;
                    r.onparsingerror = function(e) {
                        u["default"].log.warn("Error encountered when parsing cues: " + e.message)
                    }
                    ;
                    if (t.segment.map) {
                        var a = t.segment.map.bytes;
                        if (i) {
                            a = Ds(a)
                        }
                        r.parse(a)
                    }
                    var s = t.bytes;
                    if (i) {
                        s = Ds(s)
                    }
                    r.parse(s);
                    r.flush()
                }
                ;
                n.updateTimeMapping_ = function e(t, n, i) {
                    var r = t.segment;
                    if (!n) {
                        return
                    }
                    if (!t.cues.length) {
                        r.empty = true;
                        return
                    }
                    var a = t.timestampmap;
                    var s = a.MPEGTS / wr.ONE_SECOND_IN_TS - a.LOCAL + n.mapping;
                    t.cues.forEach(function(e) {
                        e.startTime += s;
                        e.endTime += s
                    });
                    if (!i.syncInfo) {
                        var o = t.cues[0].startTime;
                        var u = t.cues[t.cues.length - 1].startTime;
                        i.syncInfo = {
                            mediaSequence: i.mediaSequence + t.mediaIndex,
                            time: Math.min(o, u - r.duration)
                        }
                    }
                }
                ;
                return t
            }(Ss);
            var Ms = function e(t, n) {
                var i = t.cues;
                for (var r = 0; r < i.length; r++) {
                    var a = i[r];
                    if (n >= a.adStartTime && n <= a.adEndTime) {
                        return a
                    }
                }
                return null
            };
            var Us = function e(t, n, i) {
                if (i === void 0) {
                    i = 0
                }
                if (!t.segments) {
                    return
                }
                var r = i;
                var a;
                for (var s = 0; s < t.segments.length; s++) {
                    var u = t.segments[s];
                    if (!a) {
                        a = Ms(n, r + u.duration / 2)
                    }
                    if (a) {
                        if ("cueIn"in u) {
                            a.endTime = r;
                            a.adEndTime = r;
                            r += u.duration;
                            a = null;
                            continue
                        }
                        if (r < a.endTime) {
                            r += u.duration;
                            continue
                        }
                        a.endTime += u.duration
                    } else {
                        if ("cueOut"in u) {
                            a = new o["default"].VTTCue(r,r + u.duration,u.cueOut);
                            a.adStartTime = r;
                            a.adEndTime = r + parseFloat(u.cueOut);
                            n.addCue(a)
                        }
                        if ("cueOutCont"in u) {
                            var l = u.cueOutCont.split("/").map(parseFloat)
                              , d = l[0]
                              , c = l[1];
                            a = new o["default"].VTTCue(r,r + u.duration,"");
                            a.adStartTime = r - d;
                            a.adEndTime = a.adStartTime + c;
                            n.addCue(a)
                        }
                    }
                    r += u.duration
                }
            };
            var Bs = function e(t, n, i) {
                if (i === void 0) {
                    i = 0
                }
                var r = n.segments;
                return n.endList || i === 0 ? t : r.length - (t + 1)
            };
            var Fs = [{
                name: "VOD",
                run: function e(t, n, i, r, a) {
                    if (i !== Infinity) {
                        var s = {
                            time: 0,
                            segmentIndex: 0
                        };
                        return s
                    }
                    return null
                }
            }, {
                name: "ProgramDateTime",
                run: function e(t, n, i, r, a) {
                    if (!Object.keys(t.timelineToDatetimeMappings).length) {
                        return null
                    }
                    var s = n.segments || [];
                    var o = null;
                    var u = null;
                    a = a || 0;
                    for (var l = 0; l < s.length; l++) {
                        var d = Bs(l, n, a);
                        var c = s[d];
                        var f = t.timelineToDatetimeMappings[c.timeline];
                        if (!f) {
                            continue
                        }
                        if (c.dateTimeObject) {
                            var p = c.dateTimeObject.getTime() / 1e3;
                            var h = p + f;
                            var v = Math.abs(a - h);
                            if (u !== null && (v === 0 || u < v)) {
                                break
                            }
                            u = v;
                            o = {
                                time: h,
                                segmentIndex: d
                            }
                        }
                    }
                    return o
                }
            }, {
                name: "Segment",
                run: function e(t, n, i, r, a) {
                    var s = n.segments || [];
                    var o = null;
                    var u = null;
                    a = a || 0;
                    for (var l = 0; l < s.length; l++) {
                        var d = Bs(l, n, a);
                        var c = s[d];
                        if (c.timeline === r && typeof c.start !== "undefined") {
                            var f = Math.abs(a - c.start);
                            if (u !== null && u < f) {
                                break
                            }
                            if (!o || u === null || u >= f) {
                                u = f;
                                o = {
                                    time: c.start,
                                    segmentIndex: d
                                }
                            }
                        }
                    }
                    return o
                }
            }, {
                name: "Discontinuity",
                run: function e(t, n, i, r, a) {
                    var s = null;
                    a = a || 0;
                    if (n.discontinuityStarts && n.discontinuityStarts.length) {
                        var o = null;
                        for (var u = 0; u < n.discontinuityStarts.length; u++) {
                            var l = n.discontinuityStarts[u];
                            var d = n.discontinuitySequence + u + 1;
                            var c = t.discontinuities[d];
                            if (c) {
                                var f = Math.abs(a - c.time);
                                if (o !== null && o < f) {
                                    break
                                }
                                if (!s || o === null || o >= f) {
                                    o = f;
                                    s = {
                                        time: c.time,
                                        segmentIndex: l
                                    }
                                }
                            }
                        }
                    }
                    return s
                }
            }, {
                name: "Playlist",
                run: function e(t, n, i, r, a) {
                    if (n.syncInfo) {
                        var s = {
                            time: n.syncInfo.time,
                            segmentIndex: n.syncInfo.mediaSequence - n.mediaSequence
                        };
                        return s
                    }
                    return null
                }
            }];
            var Vs = function(e) {
                p(t, e);
                function t(t) {
                    var n;
                    n = e.call(this) || this;
                    n.timelines = [];
                    n.discontinuities = [];
                    n.timelineToDatetimeMappings = {};
                    n.logger_ = y("SyncController");
                    return n
                }
                var n = t.prototype;
                n.getSyncPoint = function e(t, n, i, r) {
                    var a = this.runStrategies_(t, n, i, r);
                    if (!a.length) {
                        return null
                    }
                    return this.selectSyncPoint_(a, {
                        key: "time",
                        value: r
                    })
                }
                ;
                n.getExpiredTime = function e(t, n) {
                    if (!t || !t.segments) {
                        return null
                    }
                    var i = this.runStrategies_(t, n, t.discontinuitySequence, 0);
                    if (!i.length) {
                        return null
                    }
                    var r = this.selectSyncPoint_(i, {
                        key: "segmentIndex",
                        value: 0
                    });
                    if (r.segmentIndex > 0) {
                        r.time *= -1
                    }
                    return Math.abs(r.time + we(t, r.segmentIndex, 0))
                }
                ;
                n.runStrategies_ = function e(t, n, i, r) {
                    var a = [];
                    for (var s = 0; s < Fs.length; s++) {
                        var o = Fs[s];
                        var u = o.run(this, t, n, i, r);
                        if (u) {
                            u.strategy = o.name;
                            a.push({
                                strategy: o.name,
                                syncPoint: u
                            })
                        }
                    }
                    return a
                }
                ;
                n.selectSyncPoint_ = function e(t, n) {
                    var i = t[0].syncPoint;
                    var r = Math.abs(t[0].syncPoint[n.key] - n.value);
                    var a = t[0].strategy;
                    for (var s = 1; s < t.length; s++) {
                        var o = Math.abs(t[s].syncPoint[n.key] - n.value);
                        if (o < r) {
                            r = o;
                            i = t[s].syncPoint;
                            a = t[s].strategy
                        }
                    }
                    this.logger_("syncPoint for [" + n.key + ": " + n.value + "] chosen with strategy" + (" [" + a + "]: [time:" + i.time + ",") + (" segmentIndex:" + i.segmentIndex + "]"));
                    return i
                }
                ;
                n.saveExpiredSegmentInfo = function e(t, n) {
                    var i = n.mediaSequence - t.mediaSequence;
                    for (var r = i - 1; r >= 0; r--) {
                        var a = t.segments[r];
                        if (a && typeof a.start !== "undefined") {
                            n.syncInfo = {
                                mediaSequence: t.mediaSequence + r,
                                time: a.start
                            };
                            this.logger_("playlist refresh sync: [time:" + n.syncInfo.time + "," + (" mediaSequence: " + n.syncInfo.mediaSequence + "]"));
                            this.trigger("syncinfoupdate");
                            break
                        }
                    }
                }
                ;
                n.setDateTimeMappingForStart = function e(t) {
                    this.timelineToDatetimeMappings = {};
                    if (t.segments && t.segments.length && t.segments[0].dateTimeObject) {
                        var n = t.segments[0];
                        var i = n.dateTimeObject.getTime() / 1e3;
                        this.timelineToDatetimeMappings[n.timeline] = -i
                    }
                }
                ;
                n.saveSegmentTimingInfo = function e(t) {
                    var n = t.segmentInfo
                      , i = t.shouldSaveTimelineMapping;
                    var r = this.calculateSegmentTimeMapping_(n, n.timingInfo, i);
                    var a = n.segment;
                    if (r) {
                        this.saveDiscontinuitySyncInfo_(n);
                        if (!n.playlist.syncInfo) {
                            n.playlist.syncInfo = {
                                mediaSequence: n.playlist.mediaSequence + n.mediaIndex,
                                time: a.start
                            }
                        }
                    }
                    var s = a.dateTimeObject;
                    if (a.discontinuity && i && s) {
                        this.timelineToDatetimeMappings[a.timeline] = -(s.getTime() / 1e3)
                    }
                }
                ;
                n.timestampOffsetForTimeline = function e(t) {
                    if (typeof this.timelines[t] === "undefined") {
                        return null
                    }
                    return this.timelines[t].time
                }
                ;
                n.mappingForTimeline = function e(t) {
                    if (typeof this.timelines[t] === "undefined") {
                        return null
                    }
                    return this.timelines[t].mapping
                }
                ;
                n.calculateSegmentTimeMapping_ = function e(t, n, i) {
                    var r = t.segment;
                    var a = this.timelines[t.timeline];
                    if (typeof t.timestampOffset === "number") {
                        a = {
                            time: t.startOfSegment,
                            mapping: t.startOfSegment - n.start
                        };
                        if (i) {
                            this.timelines[t.timeline] = a;
                            this.trigger("timestampoffset");
                            this.logger_("time mapping for timeline " + t.timeline + ": " + ("[time: " + a.time + "] [mapping: " + a.mapping + "]"))
                        }
                        r.start = t.startOfSegment;
                        r.end = n.end + a.mapping
                    } else if (a) {
                        r.start = n.start + a.mapping;
                        r.end = n.end + a.mapping
                    } else {
                        return false
                    }
                    return true
                }
                ;
                n.saveDiscontinuitySyncInfo_ = function e(t) {
                    var n = t.playlist;
                    var i = t.segment;
                    if (i.discontinuity) {
                        this.discontinuities[i.timeline] = {
                            time: i.start,
                            accuracy: 0
                        }
                    } else if (n.discontinuityStarts && n.discontinuityStarts.length) {
                        for (var r = 0; r < n.discontinuityStarts.length; r++) {
                            var a = n.discontinuityStarts[r];
                            var s = n.discontinuitySequence + r + 1;
                            var o = a - t.mediaIndex;
                            var u = Math.abs(o);
                            if (!this.discontinuities[s] || this.discontinuities[s].accuracy > u) {
                                var l = void 0;
                                if (o < 0) {
                                    l = i.start - we(n, t.mediaIndex, a)
                                } else {
                                    l = i.end + we(n, t.mediaIndex + 1, a)
                                }
                                this.discontinuities[s] = {
                                    time: l,
                                    accuracy: u
                                }
                            }
                        }
                    }
                }
                ;
                n.dispose = function e() {
                    this.trigger("dispose");
                    this.off()
                }
                ;
                return t
            }(u["default"].EventTarget);
            var qs = function(e) {
                p(t, e);
                function t() {
                    var t;
                    t = e.call(this) || this;
                    t.pendingTimelineChanges_ = {};
                    t.lastTimelineChanges_ = {};
                    return t
                }
                var n = t.prototype;
                n.clearPendingTimelineChange = function e(t) {
                    this.pendingTimelineChanges_[t] = null;
                    this.trigger("pendingtimelinechange")
                }
                ;
                n.pendingTimelineChange = function e(t) {
                    var n = t.type
                      , i = t.from
                      , r = t.to;
                    if (typeof i === "number" && typeof r === "number") {
                        this.pendingTimelineChanges_[n] = {
                            type: n,
                            from: i,
                            to: r
                        };
                        this.trigger("pendingtimelinechange")
                    }
                    return this.pendingTimelineChanges_[n]
                }
                ;
                n.lastTimelineChange = function e(t) {
                    var n = t.type
                      , i = t.from
                      , r = t.to;
                    if (typeof i === "number" && typeof r === "number") {
                        this.lastTimelineChanges_[n] = {
                            type: n,
                            from: i,
                            to: r
                        };
                        delete this.pendingTimelineChanges_[n];
                        this.trigger("timelinechange")
                    }
                    return this.lastTimelineChanges_[n]
                }
                ;
                n.dispose = function e() {
                    this.trigger("dispose");
                    this.pendingTimelineChanges_ = {};
                    this.lastTimelineChanges_ = {};
                    this.off()
                }
                ;
                return t
            }(u["default"].EventTarget);
            var Hs = Ii(Ci(function() {
                function e(e, n, i) {
                    return i = {
                        path: n,
                        exports: {},
                        require: function e(n, r) {
                            return t(n, r === undefined || r === null ? i.path : r)
                        }
                    },
                    e(i, i.exports),
                    i.exports
                }
                function t() {
                    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                }
                var n = e(function(e) {
                    function t(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var i = t[n];
                            i.enumerable = i.enumerable || false;
                            i.configurable = true;
                            if ("value"in i)
                                i.writable = true;
                            Object.defineProperty(e, i.key, i)
                        }
                    }
                    function n(e, n, i) {
                        if (n)
                            t(e.prototype, n);
                        if (i)
                            t(e, i);
                        return e
                    }
                    e.exports = n;
                    e.exports["default"] = e.exports,
                    e.exports.__esModule = true
                });
                var i = e(function(e) {
                    function t(n, i) {
                        e.exports = t = Object.setPrototypeOf || function e(t, n) {
                            t.__proto__ = n;
                            return t
                        }
                        ;
                        e.exports["default"] = e.exports,
                        e.exports.__esModule = true;
                        return t(n, i)
                    }
                    e.exports = t;
                    e.exports["default"] = e.exports,
                    e.exports.__esModule = true
                });
                var r = e(function(e) {
                    function t(e, t) {
                        e.prototype = Object.create(t.prototype);
                        e.prototype.constructor = e;
                        i(e, t)
                    }
                    e.exports = t;
                    e.exports["default"] = e.exports,
                    e.exports.__esModule = true
                });
                var a = function() {
                    function e() {
                        this.listeners = {}
                    }
                    var t = e.prototype;
                    t.on = function e(t, n) {
                        if (!this.listeners[t]) {
                            this.listeners[t] = []
                        }
                        this.listeners[t].push(n)
                    }
                    ;
                    t.off = function e(t, n) {
                        if (!this.listeners[t]) {
                            return false
                        }
                        var i = this.listeners[t].indexOf(n);
                        this.listeners[t] = this.listeners[t].slice(0);
                        this.listeners[t].splice(i, 1);
                        return i > -1
                    }
                    ;
                    t.trigger = function e(t) {
                        var n = this.listeners[t];
                        if (!n) {
                            return
                        }
                        if (arguments.length === 2) {
                            var i = n.length;
                            for (var r = 0; r < i; ++r) {
                                n[r].call(this, arguments[1])
                            }
                        } else {
                            var a = Array.prototype.slice.call(arguments, 1);
                            var s = n.length;
                            for (var o = 0; o < s; ++o) {
                                n[o].apply(this, a)
                            }
                        }
                    }
                    ;
                    t.dispose = function e() {
                        this.listeners = {}
                    }
                    ;
                    t.pipe = function e(t) {
                        this.on("data", function(e) {
                            t.push(e)
                        })
                    }
                    ;
                    return e
                }();
                function s(e) {
                    return e.subarray(0, e.byteLength - e[e.byteLength - 1])
                }
                var o = function e() {
                    var t = [[[], [], [], [], []], [[], [], [], [], []]];
                    var n = t[0];
                    var i = t[1];
                    var r = n[4];
                    var a = i[4];
                    var s;
                    var o;
                    var u;
                    var l = [];
                    var d = [];
                    var c;
                    var f;
                    var p;
                    var h;
                    var v;
                    var g;
                    for (s = 0; s < 256; s++) {
                        d[(l[s] = s << 1 ^ (s >> 7) * 283) ^ s] = s
                    }
                    for (o = u = 0; !r[o]; o ^= c || 1,
                    u = d[u] || 1) {
                        h = u ^ u << 1 ^ u << 2 ^ u << 3 ^ u << 4;
                        h = h >> 8 ^ h & 255 ^ 99;
                        r[o] = h;
                        a[h] = o;
                        p = l[f = l[c = l[o]]];
                        g = p * 16843009 ^ f * 65537 ^ c * 257 ^ o * 16843008;
                        v = l[h] * 257 ^ h * 16843008;
                        for (s = 0; s < 4; s++) {
                            n[s][o] = v = v << 24 ^ v >>> 8;
                            i[s][h] = g = g << 24 ^ g >>> 8
                        }
                    }
                    for (s = 0; s < 5; s++) {
                        n[s] = n[s].slice(0);
                        i[s] = i[s].slice(0)
                    }
                    return t
                };
                var u = null;
                var l = function() {
                    function e(e) {
                        if (!u) {
                            u = o()
                        }
                        this._tables = [[u[0][0].slice(), u[0][1].slice(), u[0][2].slice(), u[0][3].slice(), u[0][4].slice()], [u[1][0].slice(), u[1][1].slice(), u[1][2].slice(), u[1][3].slice(), u[1][4].slice()]];
                        var t;
                        var n;
                        var i;
                        var r = this._tables[0][4];
                        var a = this._tables[1];
                        var s = e.length;
                        var l = 1;
                        if (s !== 4 && s !== 6 && s !== 8) {
                            throw new Error("Invalid aes key size")
                        }
                        var d = e.slice(0);
                        var c = [];
                        this._key = [d, c];
                        for (t = s; t < 4 * s + 28; t++) {
                            i = d[t - 1];
                            if (t % s === 0 || s === 8 && t % s === 4) {
                                i = r[i >>> 24] << 24 ^ r[i >> 16 & 255] << 16 ^ r[i >> 8 & 255] << 8 ^ r[i & 255];
                                if (t % s === 0) {
                                    i = i << 8 ^ i >>> 24 ^ l << 24;
                                    l = l << 1 ^ (l >> 7) * 283
                                }
                            }
                            d[t] = d[t - s] ^ i
                        }
                        for (n = 0; t; n++,
                        t--) {
                            i = d[n & 3 ? t : t - 4];
                            if (t <= 4 || n < 4) {
                                c[n] = i
                            } else {
                                c[n] = a[0][r[i >>> 24]] ^ a[1][r[i >> 16 & 255]] ^ a[2][r[i >> 8 & 255]] ^ a[3][r[i & 255]]
                            }
                        }
                    }
                    var t = e.prototype;
                    t.decrypt = function e(t, n, i, r, a, s) {
                        var o = this._key[1];
                        var u = t ^ o[0];
                        var l = r ^ o[1];
                        var d = i ^ o[2];
                        var c = n ^ o[3];
                        var f;
                        var p;
                        var h;
                        var v = o.length / 4 - 2;
                        var g;
                        var m = 4;
                        var y = this._tables[1];
                        var _ = y[0];
                        var b = y[1];
                        var S = y[2];
                        var A = y[3];
                        var T = y[4];
                        for (g = 0; g < v; g++) {
                            f = _[u >>> 24] ^ b[l >> 16 & 255] ^ S[d >> 8 & 255] ^ A[c & 255] ^ o[m];
                            p = _[l >>> 24] ^ b[d >> 16 & 255] ^ S[c >> 8 & 255] ^ A[u & 255] ^ o[m + 1];
                            h = _[d >>> 24] ^ b[c >> 16 & 255] ^ S[u >> 8 & 255] ^ A[l & 255] ^ o[m + 2];
                            c = _[c >>> 24] ^ b[u >> 16 & 255] ^ S[l >> 8 & 255] ^ A[d & 255] ^ o[m + 3];
                            m += 4;
                            u = f;
                            l = p;
                            d = h
                        }
                        for (g = 0; g < 4; g++) {
                            a[(3 & -g) + s] = T[u >>> 24] << 24 ^ T[l >> 16 & 255] << 16 ^ T[d >> 8 & 255] << 8 ^ T[c & 255] ^ o[m++];
                            f = u;
                            u = l;
                            l = d;
                            d = c;
                            c = f
                        }
                    }
                    ;
                    return e
                }();
                var d = function(e) {
                    r(t, e);
                    function t() {
                        var t;
                        t = e.call(this, a) || this;
                        t.jobs = [];
                        t.delay = 1;
                        t.timeout_ = null;
                        return t
                    }
                    var n = t.prototype;
                    n.processJob_ = function e() {
                        this.jobs.shift()();
                        if (this.jobs.length) {
                            this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
                        } else {
                            this.timeout_ = null
                        }
                    }
                    ;
                    n.push = function e(t) {
                        this.jobs.push(t);
                        if (!this.timeout_) {
                            this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
                        }
                    }
                    ;
                    return t
                }(a);
                var c = function e(t) {
                    return t << 24 | (t & 65280) << 8 | (t & 16711680) >> 8 | t >>> 24
                };
                var f = function e(t, n, i) {
                    var r = new Int32Array(t.buffer,t.byteOffset,t.byteLength >> 2);
                    var a = new l(Array.prototype.slice.call(n));
                    var s = new Uint8Array(t.byteLength);
                    var o = new Int32Array(s.buffer);
                    var u;
                    var d;
                    var f;
                    var p;
                    var h;
                    var v;
                    var g;
                    var m;
                    var y;
                    u = i[0];
                    d = i[1];
                    f = i[2];
                    p = i[3];
                    for (y = 0; y < r.length; y += 4) {
                        h = c(r[y]);
                        v = c(r[y + 1]);
                        g = c(r[y + 2]);
                        m = c(r[y + 3]);
                        a.decrypt(h, v, g, m, o, y);
                        o[y] = c(o[y] ^ u);
                        o[y + 1] = c(o[y + 1] ^ d);
                        o[y + 2] = c(o[y + 2] ^ f);
                        o[y + 3] = c(o[y + 3] ^ p);
                        u = h;
                        d = v;
                        f = g;
                        p = m
                    }
                    return s
                };
                var p = function() {
                    function e(t, n, i, r) {
                        var a = e.STEP;
                        var o = new Int32Array(t.buffer);
                        var u = new Uint8Array(t.byteLength);
                        var l = 0;
                        this.asyncStream_ = new d;
                        this.asyncStream_.push(this.decryptChunk_(o.subarray(l, l + a), n, i, u));
                        for (l = a; l < o.length; l += a) {
                            i = new Uint32Array([c(o[l - 4]), c(o[l - 3]), c(o[l - 2]), c(o[l - 1])]);
                            this.asyncStream_.push(this.decryptChunk_(o.subarray(l, l + a), n, i, u))
                        }
                        this.asyncStream_.push(function() {
                            r(null, s(u))
                        })
                    }
                    var t = e.prototype;
                    t.decryptChunk_ = function e(t, n, i, r) {
                        return function() {
                            var e = f(t, n, i);
                            r.set(e, t.byteOffset)
                        }
                    }
                    ;
                    n(e, null, [{
                        key: "STEP",
                        get: function e() {
                            return 32e3
                        }
                    }]);
                    return e
                }();
                var h = function e(t) {
                    var n = {};
                    Object.keys(t).forEach(function(e) {
                        var i = t[e];
                        if (ArrayBuffer.isView(i)) {
                            n[e] = {
                                bytes: i.buffer,
                                byteOffset: i.byteOffset,
                                byteLength: i.byteLength
                            }
                        } else {
                            n[e] = i
                        }
                    });
                    return n
                };
                self.onmessage = function(e) {
                    var t = e.data;
                    var n = new Uint8Array(t.encrypted.bytes,t.encrypted.byteOffset,t.encrypted.byteLength);
                    var i = new Uint32Array(t.key.bytes,t.key.byteOffset,t.key.byteLength / 4);
                    var r = new Uint32Array(t.iv.bytes,t.iv.byteOffset,t.iv.byteLength / 4);
                    new p(n,i,r,function(e, n) {
                        self.postMessage(h({
                            source: t.source,
                            decrypted: n
                        }), [n.buffer])
                    }
                    )
                }
            }));
            var Gs = Pi(Hs);
            var Ws = function e(t) {
                var n = t.default ? "main" : "alternative";
                if (t.characteristics && t.characteristics.indexOf("public.accessibility.describes-video") >= 0) {
                    n = "main-desc"
                }
                return n
            };
            var Ks = function e(t, n) {
                t.abort();
                t.pause();
                if (n && n.activePlaylistLoader) {
                    n.activePlaylistLoader.pause();
                    n.activePlaylistLoader = null
                }
            };
            var zs = function e(t, n) {
                n.activePlaylistLoader = t;
                t.load()
            };
            var Ys = function e(t, n) {
                return function() {
                    var e = n.segmentLoaders
                      , i = e[t]
                      , r = e.main
                      , a = n.mediaTypes[t];
                    var s = a.activeTrack();
                    var o = a.getActiveGroup();
                    var u = a.activePlaylistLoader;
                    var l = a.lastGroup_;
                    if (o && l && o.id === l.id) {
                        return
                    }
                    a.lastGroup_ = o;
                    a.lastTrack_ = s;
                    Ks(i, a);
                    if (!o || o.isMasterPlaylist) {
                        return
                    }
                    if (!o.playlistLoader) {
                        if (u) {
                            r.resetEverything()
                        }
                        return
                    }
                    i.resyncLoader();
                    zs(o.playlistLoader, a)
                }
            };
            var Xs = function e(t, n) {
                return function() {
                    var e = n.segmentLoaders[t]
                      , i = n.mediaTypes[t];
                    i.lastGroup_ = null;
                    e.abort();
                    e.pause()
                }
            };
            var Qs = function e(t, n) {
                return function() {
                    var e = n.masterPlaylistLoader
                      , i = n.segmentLoaders
                      , r = i[t]
                      , a = i.main
                      , s = n.mediaTypes[t];
                    var o = s.activeTrack();
                    var u = s.getActiveGroup();
                    var l = s.activePlaylistLoader;
                    var d = s.lastTrack_;
                    if (d && o && d.id === o.id) {
                        return
                    }
                    s.lastGroup_ = u;
                    s.lastTrack_ = o;
                    Ks(r, s);
                    if (!u) {
                        return
                    }
                    if (u.isMasterPlaylist) {
                        if (!o || !d || o.id === d.id) {
                            return
                        }
                        var c = n.vhs.masterPlaylistController_;
                        var f = c.selectPlaylist();
                        if (c.media() === f) {
                            return
                        }
                        s.logger_("track change. Switching master audio from " + d.id + " to " + o.id);
                        e.pause();
                        a.resetEverything();
                        c.fastQualityChange_(f);
                        return
                    }
                    if (t === "AUDIO") {
                        if (!u.playlistLoader) {
                            a.setAudio(true);
                            a.resetEverything();
                            return
                        }
                        r.setAudio(true);
                        a.setAudio(false)
                    }
                    if (l === u.playlistLoader) {
                        zs(u.playlistLoader, s);
                        return
                    }
                    if (r.track) {
                        r.track(o)
                    }
                    r.resetEverything();
                    zs(u.playlistLoader, s)
                }
            };
            var Zs = {
                AUDIO: function e(t, n) {
                    return function() {
                        var e = n.segmentLoaders[t]
                          , i = n.mediaTypes[t]
                          , r = n.blacklistCurrentPlaylist;
                        Ks(e, i);
                        var a = i.activeTrack();
                        var s = i.activeGroup();
                        var o = (s.filter(function(e) {
                            return e.default
                        })[0] || s[0]).id;
                        var l = i.tracks[o];
                        if (a === l) {
                            r({
                                message: "Problem encountered loading the default audio track."
                            });
                            return
                        }
                        u["default"].log.warn("Problem encountered loading the alternate audio track." + "Switching back to default.");
                        for (var d in i.tracks) {
                            i.tracks[d].enabled = i.tracks[d] === l
                        }
                        i.onTrackChanged()
                    }
                },
                SUBTITLES: function e(t, n) {
                    return function() {
                        var e = n.segmentLoaders[t]
                          , i = n.mediaTypes[t];
                        u["default"].log.warn("Problem encountered loading the subtitle track." + "Disabling subtitle track.");
                        Ks(e, i);
                        var r = i.activeTrack();
                        if (r) {
                            r.mode = "disabled"
                        }
                        i.onTrackChanged()
                    }
                }
            };
            var Js = {
                AUDIO: function e(t, n, i) {
                    if (!n) {
                        return
                    }
                    var r = i.tech
                      , a = i.requestOptions
                      , s = i.segmentLoaders[t];
                    n.on("loadedmetadata", function() {
                        var e = n.media();
                        s.playlist(e, a);
                        if (!r.paused() || e.endList && r.preload() !== "none") {
                            s.load()
                        }
                    });
                    n.on("loadedplaylist", function() {
                        s.playlist(n.media(), a);
                        if (!r.paused()) {
                            s.load()
                        }
                    });
                    n.on("error", Zs[t](t, i))
                },
                SUBTITLES: function e(t, n, i) {
                    var r = i.tech
                      , a = i.requestOptions
                      , s = i.segmentLoaders[t]
                      , o = i.mediaTypes[t];
                    n.on("loadedmetadata", function() {
                        var e = n.media();
                        s.playlist(e, a);
                        s.track(o.activeTrack());
                        if (!r.paused() || e.endList && r.preload() !== "none") {
                            s.load()
                        }
                    });
                    n.on("loadedplaylist", function() {
                        s.playlist(n.media(), a);
                        if (!r.paused()) {
                            s.load()
                        }
                    });
                    n.on("error", Zs[t](t, i))
                }
            };
            var $s = {
                AUDIO: function e(t, n) {
                    var i = n.vhs
                      , r = n.sourceType
                      , a = n.segmentLoaders[t]
                      , s = n.requestOptions
                      , o = n.master.mediaGroups
                      , l = n.mediaTypes[t]
                      , d = l.groups
                      , c = l.tracks
                      , f = l.logger_
                      , p = n.masterPlaylistLoader;
                    var h = He(p.master);
                    if (!o[t] || Object.keys(o[t]).length === 0) {
                        o[t] = {
                            main: {
                                default: {
                                    default: true
                                }
                            }
                        }
                    }
                    for (var v in o[t]) {
                        if (!d[v]) {
                            d[v] = []
                        }
                        for (var g in o[t][v]) {
                            var m = o[t][v][g];
                            var y = void 0;
                            if (h) {
                                f("AUDIO group '" + v + "' label '" + g + "' is a master playlist");
                                m.isMasterPlaylist = true;
                                y = null
                            } else if (r === "vhs-json" && m.playlists) {
                                y = new Z(m.playlists[0],i,s)
                            } else if (m.resolvedUri) {
                                y = new Z(m.resolvedUri,i,s)
                            } else if (m.playlists && r === "dash") {
                                y = new Si(m.playlists[0],i,s,p)
                            } else {
                                y = null
                            }
                            m = u["default"].mergeOptions({
                                id: g,
                                playlistLoader: y
                            }, m);
                            Js[t](t, m.playlistLoader, n);
                            d[v].push(m);
                            if (typeof c[g] === "undefined") {
                                var _ = new u["default"].AudioTrack({
                                    id: g,
                                    kind: Ws(m),
                                    enabled: false,
                                    language: m.language,
                                    default: m.default,
                                    label: g
                                });
                                c[g] = _
                            }
                        }
                    }
                    a.on("error", Zs[t](t, n))
                },
                SUBTITLES: function e(t, n) {
                    var i = n.tech
                      , r = n.vhs
                      , a = n.sourceType
                      , s = n.segmentLoaders[t]
                      , o = n.requestOptions
                      , l = n.master.mediaGroups
                      , d = n.mediaTypes[t]
                      , c = d.groups
                      , f = d.tracks
                      , p = n.masterPlaylistLoader;
                    for (var h in l[t]) {
                        if (!c[h]) {
                            c[h] = []
                        }
                        for (var v in l[t][h]) {
                            if (l[t][h][v].forced) {
                                continue
                            }
                            var g = l[t][h][v];
                            var m = void 0;
                            if (a === "hls") {
                                m = new Z(g.resolvedUri,r,o)
                            } else if (a === "dash") {
                                var y = g.playlists.filter(function(e) {
                                    return e.excludeUntil !== Infinity
                                });
                                if (!y.length) {
                                    return
                                }
                                m = new Si(g.playlists[0],r,o,p)
                            } else if (a === "vhs-json") {
                                m = new Z(g.playlists ? g.playlists[0] : g.resolvedUri,r,o)
                            }
                            g = u["default"].mergeOptions({
                                id: v,
                                playlistLoader: m
                            }, g);
                            Js[t](t, g.playlistLoader, n);
                            c[h].push(g);
                            if (typeof f[v] === "undefined") {
                                var _ = i.addRemoteTextTrack({
                                    id: v,
                                    kind: "subtitles",
                                    default: g.default && g.autoselect,
                                    language: g.language,
                                    label: v
                                }, false).track;
                                f[v] = _
                            }
                        }
                    }
                    s.on("error", Zs[t](t, n))
                },
                "CLOSED-CAPTIONS": function e(t, n) {
                    var i = n.tech
                      , r = n.master.mediaGroups
                      , a = n.mediaTypes[t]
                      , s = a.groups
                      , o = a.tracks;
                    for (var l in r[t]) {
                        if (!s[l]) {
                            s[l] = []
                        }
                        for (var d in r[t][l]) {
                            var c = r[t][l][d];
                            if (!c.instreamId.match(/CC\d/)) {
                                continue
                            }
                            s[l].push(u["default"].mergeOptions({
                                id: d
                            }, c));
                            if (typeof o[d] === "undefined") {
                                var f = i.addRemoteTextTrack({
                                    id: c.instreamId,
                                    kind: "captions",
                                    default: c.default && c.autoselect,
                                    language: c.language,
                                    label: d
                                }, false).track;
                                o[d] = f
                            }
                        }
                    }
                }
            };
            var eo = function e(t, n) {
                return function(e) {
                    var i = n.masterPlaylistLoader
                      , r = n.mediaTypes[t].groups;
                    var a = i.media();
                    if (!a) {
                        return null
                    }
                    var s = null;
                    if (a.attributes[t]) {
                        s = r[a.attributes[t]]
                    }
                    var o = Object.keys(r);
                    if (!s) {
                        if (r.main) {
                            s = r.main
                        } else if (o.length === 1) {
                            s = r[o[0]]
                        }
                    }
                    if (typeof e === "undefined") {
                        return s
                    }
                    if (e === null || !s) {
                        return null
                    }
                    return s.filter(function(t) {
                        return t.id === e.id
                    })[0] || null
                }
            };
            var to = {
                AUDIO: function e(t, n) {
                    return function() {
                        var e = n.mediaTypes[t].tracks;
                        for (var i in e) {
                            if (e[i].enabled) {
                                return e[i]
                            }
                        }
                        return null
                    }
                },
                SUBTITLES: function e(t, n) {
                    return function() {
                        var e = n.mediaTypes[t].tracks;
                        for (var i in e) {
                            if (e[i].mode === "showing" || e[i].mode === "hidden") {
                                return e[i]
                            }
                        }
                        return null
                    }
                }
            };
            var no = function e(t, n) {
                var i = n.mediaTypes;
                return function() {
                    var e = i[t].activeTrack();
                    if (!e) {
                        return null
                    }
                    return i[t].activeGroup(e)
                }
            };
            var io = function e(t) {
                ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function(e) {
                    $s[e](e, t)
                });
                var n = t.mediaTypes
                  , i = t.masterPlaylistLoader
                  , r = t.tech
                  , a = t.vhs;
                ["AUDIO", "SUBTITLES"].forEach(function(e) {
                    n[e].activeGroup = eo(e, t);
                    n[e].activeTrack = to[e](e, t);
                    n[e].onGroupChanged = Ys(e, t);
                    n[e].onGroupChanging = Xs(e, t);
                    n[e].onTrackChanged = Qs(e, t);
                    n[e].getActiveGroup = no(e, t)
                });
                var s = n.AUDIO.activeGroup();
                if (s) {
                    var o = (s.filter(function(e) {
                        return e.default
                    })[0] || s[0]).id;
                    n.AUDIO.tracks[o].enabled = true;
                    n.AUDIO.onGroupChanged();
                    n.AUDIO.onTrackChanged()
                }
                i.on("mediachange", function() {
                    ["AUDIO", "SUBTITLES"].forEach(function(e) {
                        return n[e].onGroupChanged()
                    })
                });
                i.on("mediachanging", function() {
                    ["AUDIO", "SUBTITLES"].forEach(function(e) {
                        return n[e].onGroupChanging()
                    })
                });
                var u = function e() {
                    n.AUDIO.onTrackChanged();
                    r.trigger({
                        type: "usage",
                        name: "vhs-audio-change"
                    });
                    r.trigger({
                        type: "usage",
                        name: "hls-audio-change"
                    })
                };
                r.audioTracks().addEventListener("change", u);
                r.remoteTextTracks().addEventListener("change", n.SUBTITLES.onTrackChanged);
                a.on("dispose", function() {
                    r.audioTracks().removeEventListener("change", u);
                    r.remoteTextTracks().removeEventListener("change", n.SUBTITLES.onTrackChanged)
                });
                r.clearTracks("audio");
                for (var l in n.AUDIO.tracks) {
                    r.audioTracks().addTrack(n.AUDIO.tracks[l])
                }
            };
            var ro = function e() {
                var t = {};
                ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function(e) {
                    t[e] = {
                        groups: {},
                        tracks: {},
                        activePlaylistLoader: null,
                        activeGroup: As,
                        activeTrack: As,
                        getActiveGroup: As,
                        onGroupChanged: As,
                        onTrackChanged: As,
                        lastTrack_: null,
                        logger_: y("MediaGroups[" + e + "]")
                    }
                });
                return t
            };
            var ao = 60 * 2;
            var so;
            var oo = ["mediaRequests", "mediaRequestsAborted", "mediaRequestsTimedout", "mediaRequestsErrored", "mediaTransferDuration", "mediaBytesTransferred"];
            var uo = function e(t) {
                return this.audioSegmentLoader_[t] + this.mainSegmentLoader_[t]
            };
            var lo = function e(t) {
                var n = t.currentPlaylist
                  , i = t.nextPlaylist
                  , r = t.forwardBuffer
                  , a = t.bufferLowWaterLine
                  , s = t.bufferHighWaterLine
                  , o = t.duration
                  , l = t.experimentalBufferBasedABR
                  , d = t.log;
                if (!i) {
                    u["default"].log.warn("We received no playlist to switch to. Please check your stream.");
                    return false
                }
                var c = "allowing switch " + (n && n.id || "null") + " -> " + i.id;
                if (!n || !n.endList) {
                    d(c + " as current playlist " + (!n ? "is not set" : "is live"));
                    return true
                }
                if (i.id === n.id) {
                    return false
                }
                var f = l ? Ai.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Ai.MAX_BUFFER_LOW_WATER_LINE;
                if (o < f) {
                    d(c + " as duration < max low water line (" + o + " < " + f + ")");
                    return true
                }
                var p = i.attributes.BANDWIDTH;
                var h = n.attributes.BANDWIDTH;
                if (p < h && (!l || r < s)) {
                    var v = c + " as next bandwidth < current bandwidth (" + p + " < " + h + ")";
                    if (l) {
                        v += " and forwardBuffer < bufferHighWaterLine (" + r + " < " + s + ")"
                    }
                    d(v);
                    return true
                }
                if ((!l || p > h) && r >= a) {
                    var g = c + " as forwardBuffer >= bufferLowWaterLine (" + r + " >= " + a + ")";
                    if (l) {
                        g += " and next bandwidth > current bandwidth (" + p + " > " + h + ")"
                    }
                    d(g);
                    return true
                }
                d("not " + c + " as no switching criteria met");
                return false
            };
            var co = function(e) {
                p(t, e);
                function t(t) {
                    var n;
                    n = e.call(this) || this;
                    var i = t.src
                      , r = t.handleManifestRedirects
                      , a = t.withCredentials
                      , s = t.tech
                      , l = t.bandwidth
                      , d = t.externVhs
                      , f = t.useCueTags
                      , p = t.blacklistDuration
                      , h = t.enableLowInitialPlaylist
                      , v = t.sourceType
                      , g = t.cacheEncryptionKeys
                      , m = t.handlePartialData
                      , _ = t.experimentalBufferBasedABR;
                    if (!i) {
                        throw new Error("A non-empty playlist URL or JSON manifest string is required")
                    }
                    so = d;
                    n.experimentalBufferBasedABR = Boolean(_);
                    n.withCredentials = a;
                    n.tech_ = s;
                    n.vhs_ = s.vhs;
                    n.sourceType_ = v;
                    n.useCueTags_ = f;
                    n.blacklistDuration = p;
                    n.enableLowInitialPlaylist = h;
                    if (n.useCueTags_) {
                        n.cueTagsTrack_ = n.tech_.addTextTrack("metadata", "ad-cues");
                        n.cueTagsTrack_.inBandMetadataTrackDispatchType = ""
                    }
                    n.requestOptions_ = {
                        withCredentials: a,
                        handleManifestRedirects: r,
                        timeout: null
                    };
                    n.on("error", n.pauseLoading);
                    n.mediaTypes_ = ro();
                    n.mediaSource = new o["default"].MediaSource;
                    n.handleDurationChange_ = n.handleDurationChange_.bind(c(n));
                    n.handleSourceOpen_ = n.handleSourceOpen_.bind(c(n));
                    n.handleSourceEnded_ = n.handleSourceEnded_.bind(c(n));
                    n.mediaSource.addEventListener("durationchange", n.handleDurationChange_);
                    n.mediaSource.addEventListener("sourceopen", n.handleSourceOpen_);
                    n.mediaSource.addEventListener("sourceended", n.handleSourceEnded_);
                    n.seekable_ = u["default"].createTimeRanges();
                    n.hasPlayed_ = false;
                    n.syncController_ = new Vs(t);
                    n.segmentMetadataTrack_ = s.addRemoteTextTrack({
                        kind: "metadata",
                        label: "segment-metadata"
                    }, false).track;
                    n.decrypter_ = new Gs;
                    n.sourceUpdater_ = new xs(n.mediaSource);
                    n.inbandTextTracks_ = {};
                    n.timelineChangeController_ = new qs;
                    var b = {
                        vhs: n.vhs_,
                        parse708captions: t.parse708captions,
                        mediaSource: n.mediaSource,
                        currentTime: n.tech_.currentTime.bind(n.tech_),
                        seekable: function e() {
                            return n.seekable()
                        },
                        seeking: function e() {
                            return n.tech_.seeking()
                        },
                        duration: function e() {
                            return n.duration()
                        },
                        hasPlayed: function e() {
                            return n.hasPlayed_
                        },
                        goalBufferLength: function e() {
                            return n.goalBufferLength()
                        },
                        bandwidth: l,
                        syncController: n.syncController_,
                        decrypter: n.decrypter_,
                        sourceType: n.sourceType_,
                        inbandTextTracks: n.inbandTextTracks_,
                        cacheEncryptionKeys: g,
                        handlePartialData: m,
                        sourceUpdater: n.sourceUpdater_,
                        timelineChangeController: n.timelineChangeController_
                    };
                    n.masterPlaylistLoader_ = n.sourceType_ === "dash" ? new Si(i,n.vhs_,n.requestOptions_) : new Z(i,n.vhs_,n.requestOptions_);
                    n.setupMasterPlaylistLoaderListeners_();
                    n.mainSegmentLoader_ = new Ss(u["default"].mergeOptions(b, {
                        segmentMetadataTrack: n.segmentMetadataTrack_,
                        loaderType: "main"
                    }),t);
                    n.audioSegmentLoader_ = new Ss(u["default"].mergeOptions(b, {
                        loaderType: "audio"
                    }),t);
                    n.subtitleSegmentLoader_ = new Rs(u["default"].mergeOptions(b, {
                        loaderType: "vtt",
                        featuresNativeTextTracks: n.tech_.featuresNativeTextTracks
                    }),t);
                    n.setupSegmentLoaderListeners_();
                    if (n.experimentalBufferBasedABR) {
                        n.masterPlaylistLoader_.one("loadedplaylist", function() {
                            return n.startABRTimer_()
                        });
                        n.tech_.on("pause", function() {
                            return n.stopABRTimer_()
                        });
                        n.tech_.on("play", function() {
                            return n.startABRTimer_()
                        })
                    }
                    oo.forEach(function(e) {
                        n[e + "_"] = uo.bind(c(n), e)
                    });
                    n.logger_ = y("MPC");
                    n.triggeredFmp4Usage = false;
                    if (n.tech_.preload() === "none") {
                        n.loadOnPlay_ = function() {
                            n.loadOnPlay_ = null;
                            n.masterPlaylistLoader_.load()
                        }
                        ;
                        n.tech_.one("play", n.loadOnPlay_)
                    } else {
                        n.masterPlaylistLoader_.load()
                    }
                    return n
                }
                var n = t.prototype;
                n.checkABR_ = function e() {
                    var t = this.selectPlaylist();
                    if (this.shouldSwitchToMedia_(t)) {
                        this.switchMedia_(t, "abr")
                    }
                }
                ;
                n.switchMedia_ = function e(t, n, i) {
                    var r = this.media();
                    var a = r && (r.id || r.uri);
                    var s = t.id || t.uri;
                    if (a && a !== s) {
                        this.logger_("switch media " + a + " -> " + s + " from " + n);
                        this.tech_.trigger({
                            type: "usage",
                            name: "vhs-rendition-change-" + n
                        })
                    }
                    this.masterPlaylistLoader_.media(t, i)
                }
                ;
                n.startABRTimer_ = function e() {
                    var t = this;
                    this.stopABRTimer_();
                    this.abrTimer_ = o["default"].setInterval(function() {
                        return t.checkABR_()
                    }, 250)
                }
                ;
                n.stopABRTimer_ = function e() {
                    if (this.tech_.scrubbing && this.tech_.scrubbing()) {
                        return
                    }
                    o["default"].clearInterval(this.abrTimer_);
                    this.abrTimer_ = null
                }
                ;
                n.getAudioTrackPlaylists_ = function e() {
                    var t = this.master();
                    if (!t || !t.mediaGroups || !t.mediaGroups.AUDIO) {
                        return t && t.playlists || []
                    }
                    var n = t.mediaGroups.AUDIO;
                    var i = Object.keys(n);
                    var r;
                    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {
                        r = this.mediaTypes_.AUDIO.activeTrack()
                    } else {
                        var a = n.main || i.length && n[i[0]];
                        for (var s in a) {
                            if (a[s].default) {
                                r = {
                                    label: s
                                };
                                break
                            }
                        }
                    }
                    if (!r) {
                        return []
                    }
                    var o = [];
                    for (var u in n) {
                        if (n[u][r.label]) {
                            var l = n[u][r.label];
                            if (l.playlists) {
                                o.push.apply(o, l.playlists)
                            } else {
                                o.push(l)
                            }
                        }
                    }
                    return o
                }
                ;
                n.setupMasterPlaylistLoaderListeners_ = function e() {
                    var t = this;
                    this.masterPlaylistLoader_.on("loadedmetadata", function() {
                        var e = t.masterPlaylistLoader_.media();
                        var n = e.targetDuration * 1.5 * 1e3;
                        if (Fe(t.masterPlaylistLoader_.master, t.masterPlaylistLoader_.media())) {
                            t.requestOptions_.timeout = 0
                        } else {
                            t.requestOptions_.timeout = n
                        }
                        if (e.endList && t.tech_.preload() !== "none") {
                            t.mainSegmentLoader_.playlist(e, t.requestOptions_);
                            t.mainSegmentLoader_.load()
                        }
                        io({
                            sourceType: t.sourceType_,
                            segmentLoaders: {
                                AUDIO: t.audioSegmentLoader_,
                                SUBTITLES: t.subtitleSegmentLoader_,
                                main: t.mainSegmentLoader_
                            },
                            tech: t.tech_,
                            requestOptions: t.requestOptions_,
                            masterPlaylistLoader: t.masterPlaylistLoader_,
                            vhs: t.vhs_,
                            master: t.master(),
                            mediaTypes: t.mediaTypes_,
                            blacklistCurrentPlaylist: t.blacklistCurrentPlaylist.bind(t)
                        });
                        t.triggerPresenceUsage_(t.master(), e);
                        t.setupFirstPlay();
                        if (!t.mediaTypes_.AUDIO.activePlaylistLoader || t.mediaTypes_.AUDIO.activePlaylistLoader.media()) {
                            t.trigger("selectedinitialmedia")
                        } else {
                            t.mediaTypes_.AUDIO.activePlaylistLoader.one("loadedmetadata", function() {
                                t.trigger("selectedinitialmedia")
                            })
                        }
                    });
                    this.masterPlaylistLoader_.on("loadedplaylist", function() {
                        if (t.loadOnPlay_) {
                            t.tech_.off("play", t.loadOnPlay_)
                        }
                        var e = t.masterPlaylistLoader_.media();
                        if (!e) {
                            t.excludeUnsupportedVariants_();
                            var n;
                            if (t.enableLowInitialPlaylist) {
                                n = t.selectInitialPlaylist()
                            }
                            if (!n) {
                                n = t.selectPlaylist()
                            }
                            if (!n || !t.shouldSwitchToMedia_(n)) {
                                return
                            }
                            t.initialMedia_ = n;
                            t.switchMedia_(t.initialMedia_, "initial");
                            var i = t.sourceType_ === "vhs-json" && t.initialMedia_.segments;
                            if (!i) {
                                return
                            }
                            e = t.initialMedia_
                        }
                        t.handleUpdatedMediaPlaylist(e)
                    });
                    this.masterPlaylistLoader_.on("error", function() {
                        t.blacklistCurrentPlaylist(t.masterPlaylistLoader_.error)
                    });
                    this.masterPlaylistLoader_.on("mediachanging", function() {
                        t.mainSegmentLoader_.abort();
                        t.mainSegmentLoader_.pause()
                    });
                    this.masterPlaylistLoader_.on("mediachange", function() {
                        var e = t.masterPlaylistLoader_.media();
                        var n = e.targetDuration * 1.5 * 1e3;
                        if (Fe(t.masterPlaylistLoader_.master, t.masterPlaylistLoader_.media())) {
                            t.requestOptions_.timeout = 0
                        } else {
                            t.requestOptions_.timeout = n
                        }
                        t.mainSegmentLoader_.playlist(e, t.requestOptions_);
                        t.mainSegmentLoader_.load();
                        t.tech_.trigger({
                            type: "mediachange",
                            bubbles: true
                        })
                    });
                    this.masterPlaylistLoader_.on("playlistunchanged", function() {
                        var e = t.masterPlaylistLoader_.media();
                        if (e.lastExcludeReason_ === "playlist-unchanged") {
                            return
                        }
                        var n = t.stuckAtPlaylistEnd_(e);
                        if (n) {
                            t.blacklistCurrentPlaylist({
                                message: "Playlist no longer updating.",
                                reason: "playlist-unchanged"
                            });
                            t.tech_.trigger("playliststuck")
                        }
                    });
                    this.masterPlaylistLoader_.on("renditiondisabled", function() {
                        t.tech_.trigger({
                            type: "usage",
                            name: "vhs-rendition-disabled"
                        });
                        t.tech_.trigger({
                            type: "usage",
                            name: "hls-rendition-disabled"
                        })
                    });
                    this.masterPlaylistLoader_.on("renditionenabled", function() {
                        t.tech_.trigger({
                            type: "usage",
                            name: "vhs-rendition-enabled"
                        });
                        t.tech_.trigger({
                            type: "usage",
                            name: "hls-rendition-enabled"
                        })
                    })
                }
                ;
                n.handleUpdatedMediaPlaylist = function e(t) {
                    if (this.useCueTags_) {
                        this.updateAdCues_(t)
                    }
                    this.mainSegmentLoader_.playlist(t, this.requestOptions_);
                    this.updateDuration(!t.endList);
                    if (!this.tech_.paused()) {
                        this.mainSegmentLoader_.load();
                        if (this.audioSegmentLoader_) {
                            this.audioSegmentLoader_.load()
                        }
                    }
                }
                ;
                n.triggerPresenceUsage_ = function e(t, n) {
                    var i = t.mediaGroups || {};
                    var r = true;
                    var a = Object.keys(i.AUDIO);
                    for (var s in i.AUDIO) {
                        for (var o in i.AUDIO[s]) {
                            var u = i.AUDIO[s][o];
                            if (!u.uri) {
                                r = false
                            }
                        }
                    }
                    if (r) {
                        this.tech_.trigger({
                            type: "usage",
                            name: "vhs-demuxed"
                        });
                        this.tech_.trigger({
                            type: "usage",
                            name: "hls-demuxed"
                        })
                    }
                    if (Object.keys(i.SUBTITLES).length) {
                        this.tech_.trigger({
                            type: "usage",
                            name: "vhs-webvtt"
                        });
                        this.tech_.trigger({
                            type: "usage",
                            name: "hls-webvtt"
                        })
                    }
                    if (so.Playlist.isAes(n)) {
                        this.tech_.trigger({
                            type: "usage",
                            name: "vhs-aes"
                        });
                        this.tech_.trigger({
                            type: "usage",
                            name: "hls-aes"
                        })
                    }
                    if (a.length && Object.keys(i.AUDIO[a[0]]).length > 1) {
                        this.tech_.trigger({
                            type: "usage",
                            name: "vhs-alternate-audio"
                        });
                        this.tech_.trigger({
                            type: "usage",
                            name: "hls-alternate-audio"
                        })
                    }
                    if (this.useCueTags_) {
                        this.tech_.trigger({
                            type: "usage",
                            name: "vhs-playlist-cue-tags"
                        });
                        this.tech_.trigger({
                            type: "usage",
                            name: "hls-playlist-cue-tags"
                        })
                    }
                }
                ;
                n.shouldSwitchToMedia_ = function e(t) {
                    var n = this.masterPlaylistLoader_.media();
                    var i = this.tech_.buffered();
                    var r = i.length ? i.end(i.length - 1) - this.tech_.currentTime() : 0;
                    var a = this.bufferLowWaterLine();
                    var s = this.bufferHighWaterLine();
                    return lo({
                        currentPlaylist: n,
                        nextPlaylist: t,
                        forwardBuffer: r,
                        bufferLowWaterLine: a,
                        bufferHighWaterLine: s,
                        duration: this.duration(),
                        experimentalBufferBasedABR: this.experimentalBufferBasedABR,
                        log: this.logger_
                    })
                }
                ;
                n.setupSegmentLoaderListeners_ = function e() {
                    var t = this;
                    if (!this.experimentalBufferBasedABR) {
                        this.mainSegmentLoader_.on("bandwidthupdate", function() {
                            var e = t.selectPlaylist();
                            if (t.shouldSwitchToMedia_(e)) {
                                t.switchMedia_(e, "bandwidthupdate")
                            }
                            t.tech_.trigger("bandwidthupdate")
                        });
                        this.mainSegmentLoader_.on("progress", function() {
                            t.trigger("progress")
                        })
                    }
                    this.mainSegmentLoader_.on("error", function() {
                        t.blacklistCurrentPlaylist(t.mainSegmentLoader_.error())
                    });
                    this.mainSegmentLoader_.on("appenderror", function() {
                        t.error = t.mainSegmentLoader_.error_;
                        t.trigger("error")
                    });
                    this.mainSegmentLoader_.on("syncinfoupdate", function() {
                        t.onSyncInfoUpdate_()
                    });
                    this.mainSegmentLoader_.on("timestampoffset", function() {
                        t.tech_.trigger({
                            type: "usage",
                            name: "vhs-timestamp-offset"
                        });
                        t.tech_.trigger({
                            type: "usage",
                            name: "hls-timestamp-offset"
                        })
                    });
                    this.audioSegmentLoader_.on("syncinfoupdate", function() {
                        t.onSyncInfoUpdate_()
                    });
                    this.audioSegmentLoader_.on("appenderror", function() {
                        t.error = t.audioSegmentLoader_.error_;
                        t.trigger("error")
                    });
                    this.mainSegmentLoader_.on("ended", function() {
                        t.logger_("main segment loader ended");
                        t.onEndOfStream()
                    });
                    this.mainSegmentLoader_.on("earlyabort", function(e) {
                        if (t.experimentalBufferBasedABR) {
                            return
                        }
                        t.delegateLoaders_("all", ["abort"]);
                        t.blacklistCurrentPlaylist({
                            message: "Aborted early because there isn't enough bandwidth to complete the " + "request without rebuffering."
                        }, ao)
                    });
                    var n = function e() {
                        if (!t.sourceUpdater_.hasCreatedSourceBuffers()) {
                            return t.tryToCreateSourceBuffers_()
                        }
                        var n = t.getCodecsOrExclude_();
                        if (!n) {
                            return
                        }
                        t.sourceUpdater_.addOrChangeSourceBuffers(n)
                    };
                    this.mainSegmentLoader_.on("trackinfo", n);
                    this.audioSegmentLoader_.on("trackinfo", n);
                    this.mainSegmentLoader_.on("fmp4", function() {
                        if (!t.triggeredFmp4Usage) {
                            t.tech_.trigger({
                                type: "usage",
                                name: "vhs-fmp4"
                            });
                            t.tech_.trigger({
                                type: "usage",
                                name: "hls-fmp4"
                            });
                            t.triggeredFmp4Usage = true
                        }
                    });
                    this.audioSegmentLoader_.on("fmp4", function() {
                        if (!t.triggeredFmp4Usage) {
                            t.tech_.trigger({
                                type: "usage",
                                name: "vhs-fmp4"
                            });
                            t.tech_.trigger({
                                type: "usage",
                                name: "hls-fmp4"
                            });
                            t.triggeredFmp4Usage = true
                        }
                    });
                    this.audioSegmentLoader_.on("ended", function() {
                        t.logger_("audioSegmentLoader ended");
                        t.onEndOfStream()
                    })
                }
                ;
                n.mediaSecondsLoaded_ = function e() {
                    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded)
                }
                ;
                n.load = function e() {
                    this.mainSegmentLoader_.load();
                    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                        this.audioSegmentLoader_.load()
                    }
                    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
                        this.subtitleSegmentLoader_.load()
                    }
                }
                ;
                n.smoothQualityChange_ = function e(t) {
                    if (t === void 0) {
                        t = this.selectPlaylist()
                    }
                    if (t === this.masterPlaylistLoader_.media()) {
                        return
                    }
                    this.switchMedia_(t, "smooth-quality");
                    this.mainSegmentLoader_.resetLoader()
                }
                ;
                n.fastQualityChange_ = function e(t) {
                    var n = this;
                    if (t === void 0) {
                        t = this.selectPlaylist()
                    }
                    if (t === this.masterPlaylistLoader_.media()) {
                        this.logger_("skipping fastQualityChange because new media is same as old");
                        return
                    }
                    this.switchMedia_(t, "fast-quality");
                    this.mainSegmentLoader_.resetEverything(function() {
                        if (u["default"].browser.IE_VERSION || u["default"].browser.IS_EDGE) {
                            n.tech_.setCurrentTime(n.tech_.currentTime() + .04)
                        } else {
                            n.tech_.setCurrentTime(n.tech_.currentTime())
                        }
                    })
                }
                ;
                n.play = function e() {
                    if (this.setupFirstPlay()) {
                        return
                    }
                    if (this.tech_.ended()) {
                        this.tech_.setCurrentTime(0)
                    }
                    if (this.hasPlayed_) {
                        this.load()
                    }
                    var t = this.tech_.seekable();
                    if (this.tech_.duration() === Infinity) {
                        if (this.tech_.currentTime() < t.start(0)) {
                            return this.tech_.setCurrentTime(t.end(t.length - 1))
                        }
                    }
                }
                ;
                n.setupFirstPlay = function e() {
                    var t = this;
                    var n = this.masterPlaylistLoader_.media();
                    if (!n || this.tech_.paused() || this.hasPlayed_) {
                        return false
                    }
                    if (!n.endList) {
                        var i = this.seekable();
                        if (!i.length) {
                            return false
                        }
                        if (u["default"].browser.IE_VERSION && this.tech_.readyState() === 0) {
                            this.tech_.one("loadedmetadata", function() {
                                t.trigger("firstplay");
                                t.tech_.setCurrentTime(i.end(0));
                                t.hasPlayed_ = true
                            });
                            return false
                        }
                        this.trigger("firstplay");
                        this.tech_.setCurrentTime(i.end(0))
                    }
                    this.hasPlayed_ = true;
                    this.load();
                    return true
                }
                ;
                n.handleSourceOpen_ = function e() {
                    this.tryToCreateSourceBuffers_();
                    if (this.tech_.autoplay()) {
                        var t = this.tech_.play();
                        if (typeof t !== "undefined" && typeof t.then === "function") {
                            t.then(null, function(e) {})
                        }
                    }
                    this.trigger("sourceopen")
                }
                ;
                n.handleSourceEnded_ = function e() {
                    if (!this.inbandTextTracks_.metadataTrack_) {
                        return
                    }
                    var t = this.inbandTextTracks_.metadataTrack_.cues;
                    if (!t || !t.length) {
                        return
                    }
                    var n = this.duration();
                    t[t.length - 1].endTime = isNaN(n) || Math.abs(n) === Infinity ? Number.MAX_VALUE : n
                }
                ;
                n.handleDurationChange_ = function e() {
                    this.tech_.trigger("durationchange")
                }
                ;
                n.onEndOfStream = function e() {
                    var t = this.mainSegmentLoader_.ended_;
                    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                        if (!this.mainSegmentLoader_.currentMediaInfo_ || this.mainSegmentLoader_.currentMediaInfo_.hasVideo) {
                            t = t && this.audioSegmentLoader_.ended_
                        } else {
                            t = this.audioSegmentLoader_.ended_
                        }
                    }
                    if (!t) {
                        return
                    }
                    this.stopABRTimer_();
                    this.sourceUpdater_.endOfStream()
                }
                ;
                n.stuckAtPlaylistEnd_ = function e(t) {
                    var n = this.seekable();
                    if (!n.length) {
                        return false
                    }
                    var i = this.syncController_.getExpiredTime(t, this.duration());
                    if (i === null) {
                        return false
                    }
                    var r = so.Playlist.playlistEnd(t, i);
                    var a = this.tech_.currentTime();
                    var s = this.tech_.buffered();
                    if (!s.length) {
                        return r - a <= $
                    }
                    var o = s.end(s.length - 1);
                    return o - a <= $ && r - o <= $
                }
                ;
                n.blacklistCurrentPlaylist = function e(t, n) {
                    if (t === void 0) {
                        t = {}
                    }
                    var i = t.playlist || this.masterPlaylistLoader_.media();
                    n = n || t.blacklistDuration || this.blacklistDuration;
                    if (!i) {
                        this.error = t;
                        if (this.mediaSource.readyState !== "open") {
                            this.trigger("error")
                        } else {
                            this.sourceUpdater_.endOfStream("network")
                        }
                        return
                    }
                    var r = this.masterPlaylistLoader_.master.playlists;
                    var a = r.filter(Ne);
                    var s = a.length === 1 && a[0] === i;
                    if (r.length === 1 && n !== Infinity) {
                        u["default"].log.warn("Problem encountered with playlist " + i.id + ". " + "Trying again since it is the only playlist.");
                        this.tech_.trigger("retryplaylist");
                        return this.masterPlaylistLoader_.load(s)
                    }
                    if (s) {
                        var o = false;
                        r.forEach(function(e) {
                            if (e === i) {
                                return
                            }
                            var t = e.excludeUntil;
                            if (typeof t !== "undefined" && t !== Infinity) {
                                o = true;
                                delete e.excludeUntil
                            }
                        });
                        if (o) {
                            u["default"].log.warn("Removing other playlists from the exclusion list because the last " + "rendition is about to be excluded.");
                            this.tech_.trigger("retryplaylist")
                        }
                    }
                    i.excludeUntil = Date.now() + n * 1e3;
                    if (t.reason) {
                        i.lastExcludeReason_ = t.reason
                    }
                    this.tech_.trigger("blacklistplaylist");
                    this.tech_.trigger({
                        type: "usage",
                        name: "vhs-rendition-blacklisted"
                    });
                    this.tech_.trigger({
                        type: "usage",
                        name: "hls-rendition-blacklisted"
                    });
                    var l = this.selectPlaylist();
                    if (!l) {
                        this.error = "Playback cannot continue. No available working or supported playlists.";
                        this.trigger("error");
                        return
                    }
                    var d = t.internal ? this.logger_ : u["default"].log.warn;
                    var c = t.message ? " " + t.message : "";
                    d((t.internal ? "Internal problem" : "Problem") + " encountered with playlist " + i.id + "." + (c + " Switching to playlist " + l.id + "."));
                    if (l.attributes.AUDIO !== i.attributes.AUDIO) {
                        this.delegateLoaders_("audio", ["abort", "pause"])
                    }
                    if (l.attributes.SUBTITLES !== i.attributes.SUBTITLES) {
                        this.delegateLoaders_("subtitle", ["abort", "pause"])
                    }
                    this.delegateLoaders_("main", ["abort", "pause"]);
                    var f = l.targetDuration / 2 * 1e3 || 5 * 1e3;
                    var p = typeof l.lastRequest === "number" && Date.now() - l.lastRequest <= f;
                    return this.switchMedia_(l, "exclude", s || p)
                }
                ;
                n.pauseLoading = function e() {
                    this.delegateLoaders_("all", ["abort", "pause"]);
                    this.stopABRTimer_()
                }
                ;
                n.delegateLoaders_ = function e(t, n) {
                    var i = this;
                    var r = [];
                    var a = t === "all";
                    if (a || t === "main") {
                        r.push(this.masterPlaylistLoader_)
                    }
                    var s = [];
                    if (a || t === "audio") {
                        s.push("AUDIO")
                    }
                    if (a || t === "subtitle") {
                        s.push("CLOSED-CAPTIONS");
                        s.push("SUBTITLES")
                    }
                    s.forEach(function(e) {
                        var t = i.mediaTypes_[e] && i.mediaTypes_[e].activePlaylistLoader;
                        if (t) {
                            r.push(t)
                        }
                    });
                    ["main", "audio", "subtitle"].forEach(function(e) {
                        var n = i[e + "SegmentLoader_"];
                        if (n && (t === e || t === "all")) {
                            r.push(n)
                        }
                    });
                    r.forEach(function(e) {
                        return n.forEach(function(t) {
                            if (typeof e[t] === "function") {
                                e[t]()
                            }
                        })
                    })
                }
                ;
                n.setCurrentTime = function e(t) {
                    var n = te(this.tech_.buffered(), t);
                    if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {
                        return 0
                    }
                    if (!this.masterPlaylistLoader_.media().segments) {
                        return 0
                    }
                    if (n && n.length) {
                        return t
                    }
                    this.mainSegmentLoader_.resetEverything();
                    this.mainSegmentLoader_.abort();
                    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                        this.audioSegmentLoader_.resetEverything();
                        this.audioSegmentLoader_.abort()
                    }
                    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
                        this.subtitleSegmentLoader_.resetEverything();
                        this.subtitleSegmentLoader_.abort()
                    }
                    this.load()
                }
                ;
                n.duration = function e() {
                    if (!this.masterPlaylistLoader_) {
                        return 0
                    }
                    var t = this.masterPlaylistLoader_.media();
                    if (!t) {
                        return 0
                    }
                    if (!t.endList) {
                        return Infinity
                    }
                    if (this.mediaSource) {
                        return this.mediaSource.duration
                    }
                    return so.Playlist.duration(t)
                }
                ;
                n.seekable = function e() {
                    return this.seekable_
                }
                ;
                n.onSyncInfoUpdate_ = function e() {
                    var t;
                    if (!this.masterPlaylistLoader_) {
                        return
                    }
                    var n = this.masterPlaylistLoader_.media();
                    if (!n) {
                        return
                    }
                    var i = this.syncController_.getExpiredTime(n, this.duration());
                    if (i === null) {
                        return
                    }
                    var r = this.masterPlaylistLoader_.master;
                    var a = so.Playlist.seekable(n, i, so.Playlist.liveEdgeDelay(r, n));
                    if (a.length === 0) {
                        return
                    }
                    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                        n = this.mediaTypes_.AUDIO.activePlaylistLoader.media();
                        i = this.syncController_.getExpiredTime(n, this.duration());
                        if (i === null) {
                            return
                        }
                        t = so.Playlist.seekable(n, i, so.Playlist.liveEdgeDelay(r, n));
                        if (t.length === 0) {
                            return
                        }
                    }
                    var s;
                    var o;
                    if (this.seekable_ && this.seekable_.length) {
                        s = this.seekable_.end(0);
                        o = this.seekable_.start(0)
                    }
                    if (!t) {
                        this.seekable_ = a
                    } else if (t.start(0) > a.end(0) || a.start(0) > t.end(0)) {
                        this.seekable_ = a
                    } else {
                        this.seekable_ = u["default"].createTimeRanges([[t.start(0) > a.start(0) ? t.start(0) : a.start(0), t.end(0) < a.end(0) ? t.end(0) : a.end(0)]])
                    }
                    if (this.seekable_ && this.seekable_.length) {
                        if (this.seekable_.end(0) === s && this.seekable_.start(0) === o) {
                            return
                        }
                    }
                    this.logger_("seekable updated [" + ae(this.seekable_) + "]");
                    this.tech_.trigger("seekablechanged")
                }
                ;
                n.updateDuration = function e(t) {
                    if (this.updateDuration_) {
                        this.mediaSource.removeEventListener("sourceopen", this.updateDuration_);
                        this.updateDuration_ = null
                    }
                    if (this.mediaSource.readyState !== "open") {
                        this.updateDuration_ = this.updateDuration.bind(this, t);
                        this.mediaSource.addEventListener("sourceopen", this.updateDuration_);
                        return
                    }
                    if (t) {
                        var n = this.seekable();
                        if (!n.length) {
                            return
                        }
                        if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < n.end(n.length - 1)) {
                            this.sourceUpdater_.setDuration(n.end(n.length - 1))
                        }
                        return
                    }
                    var i = this.tech_.buffered();
                    var r = so.Playlist.duration(this.masterPlaylistLoader_.media());
                    if (i.length > 0) {
                        r = Math.max(r, i.end(i.length - 1))
                    }
                    if (this.mediaSource.duration !== r) {
                        this.sourceUpdater_.setDuration(r)
                    }
                }
                ;
                n.dispose = function e() {
                    var t = this;
                    this.trigger("dispose");
                    this.decrypter_.terminate();
                    this.masterPlaylistLoader_.dispose();
                    this.mainSegmentLoader_.dispose();
                    if (this.loadOnPlay_) {
                        this.tech_.off("play", this.loadOnPlay_)
                    }
                    ["AUDIO", "SUBTITLES"].forEach(function(e) {
                        var n = t.mediaTypes_[e].groups;
                        for (var i in n) {
                            n[i].forEach(function(e) {
                                if (e.playlistLoader) {
                                    e.playlistLoader.dispose()
                                }
                            })
                        }
                    });
                    this.audioSegmentLoader_.dispose();
                    this.subtitleSegmentLoader_.dispose();
                    this.sourceUpdater_.dispose();
                    this.timelineChangeController_.dispose();
                    this.stopABRTimer_();
                    if (this.updateDuration_) {
                        this.mediaSource.removeEventListener("sourceopen", this.updateDuration_)
                    }
                    this.mediaSource.removeEventListener("durationchange", this.handleDurationChange_);
                    this.mediaSource.removeEventListener("sourceopen", this.handleSourceOpen_);
                    this.mediaSource.removeEventListener("sourceended", this.handleSourceEnded_);
                    this.off()
                }
                ;
                n.master = function e() {
                    return this.masterPlaylistLoader_.master
                }
                ;
                n.media = function e() {
                    return this.masterPlaylistLoader_.media() || this.initialMedia_
                }
                ;
                n.areMediaTypesKnown_ = function e() {
                    var t = !!this.mediaTypes_.AUDIO.activePlaylistLoader;
                    if (!this.mainSegmentLoader_.currentMediaInfo_ || t && !this.audioSegmentLoader_.currentMediaInfo_) {
                        return false
                    }
                    return true
                }
                ;
                n.getCodecsOrExclude_ = function e() {
                    var t = this;
                    var n = {
                        main: this.mainSegmentLoader_.currentMediaInfo_ || {},
                        audio: this.audioSegmentLoader_.currentMediaInfo_ || {}
                    };
                    n.video = n.main;
                    var i = Ua(this.master(), this.media());
                    var r = {};
                    var a = !!this.mediaTypes_.AUDIO.activePlaylistLoader;
                    if (n.main.hasVideo) {
                        r.video = i.video || n.main.videoCodec || Se
                    }
                    if (n.main.isMuxed) {
                        r.video += "," + (i.audio || n.main.audioCodec || be)
                    }
                    if (n.main.hasAudio && !n.main.isMuxed || n.audio.hasAudio || a) {
                        r.audio = i.audio || n.main.audioCodec || n.audio.audioCodec || be;
                        n.audio.isFmp4 = n.main.hasAudio && !n.main.isMuxed ? n.main.isFmp4 : n.audio.isFmp4
                    }
                    if (!r.audio && !r.video) {
                        this.blacklistCurrentPlaylist({
                            playlist: this.media(),
                            message: "Could not determine codecs for playlist.",
                            blacklistDuration: Infinity
                        });
                        return
                    }
                    var s = function e(t, n) {
                        return t ? ye(n) : _e(n)
                    };
                    var o = {};
                    var u;
                    ["video", "audio"].forEach(function(e) {
                        if (r.hasOwnProperty(e) && !s(n[e].isFmp4, r[e])) {
                            var t = n[e].isFmp4 ? "browser" : "muxer";
                            o[t] = o[t] || [];
                            o[t].push(r[e]);
                            if (e === "audio") {
                                u = t
                            }
                        }
                    });
                    if (a && u && this.media().attributes.AUDIO) {
                        var l = this.media().attributes.AUDIO;
                        this.master().playlists.forEach(function(e) {
                            var n = e.attributes && e.attributes.AUDIO;
                            if (n === l && e !== t.media()) {
                                e.excludeUntil = Infinity
                            }
                        });
                        this.logger_("excluding audio group " + l + " as " + u + ' does not support codec(s): "' + r.audio + '"')
                    }
                    if (Object.keys(o).length) {
                        var d = Object.keys(o).reduce(function(e, t) {
                            if (e) {
                                e += ", "
                            }
                            e += t + ' does not support codec(s): "' + o[t].join(",") + '"';
                            return e
                        }, "") + ".";
                        this.blacklistCurrentPlaylist({
                            playlist: this.media(),
                            internal: true,
                            message: d,
                            blacklistDuration: Infinity
                        });
                        return
                    }
                    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {
                        var c = [];
                        ["video", "audio"].forEach(function(e) {
                            var n = (pe(t.sourceUpdater_.codecs[e] || "")[0] || {}).type;
                            var i = (pe(r[e] || "")[0] || {}).type;
                            if (n && i && n.toLowerCase() !== i.toLowerCase()) {
                                c.push('"' + t.sourceUpdater_.codecs[e] + '" -> "' + r[e] + '"')
                            }
                        });
                        if (c.length) {
                            this.blacklistCurrentPlaylist({
                                playlist: this.media(),
                                message: "Codec switching not supported: " + c.join(", ") + ".",
                                blacklistDuration: Infinity,
                                internal: true
                            });
                            return
                        }
                    }
                    return r
                }
                ;
                n.tryToCreateSourceBuffers_ = function e() {
                    if (this.mediaSource.readyState !== "open" || this.sourceUpdater_.hasCreatedSourceBuffers()) {
                        return
                    }
                    if (!this.areMediaTypesKnown_()) {
                        return
                    }
                    var t = this.getCodecsOrExclude_();
                    if (!t) {
                        return
                    }
                    this.sourceUpdater_.createSourceBuffers(t);
                    var n = [t.video, t.audio].filter(Boolean).join(",");
                    this.excludeIncompatibleVariants_(n)
                }
                ;
                n.excludeUnsupportedVariants_ = function e() {
                    var t = this;
                    var n = this.master().playlists;
                    var i = [];
                    Object.keys(n).forEach(function(e) {
                        var r = n[e];
                        if (i.indexOf(r.id) !== -1) {
                            return
                        }
                        i.push(r.id);
                        var a = Ua(t.master, r);
                        var s = [];
                        if (a.audio && !_e(a.audio) && !ye(a.audio)) {
                            s.push("audio codec " + a.audio)
                        }
                        if (a.video && !_e(a.video) && !ye(a.video)) {
                            s.push("video codec " + a.video)
                        }
                        if (a.text && a.text === "stpp.ttml.im1t") {
                            s.push("text codec " + a.text)
                        }
                        if (s.length) {
                            r.excludeUntil = Infinity;
                            t.logger_("excluding " + r.id + " for unsupported: " + s.join(", "))
                        }
                    })
                }
                ;
                n.excludeIncompatibleVariants_ = function e(t) {
                    var n = this;
                    var i = [];
                    var r = this.master().playlists;
                    var a = Ra(pe(t));
                    var s = Ma(a);
                    var o = a.video && pe(a.video)[0] || null;
                    var u = a.audio && pe(a.audio)[0] || null;
                    Object.keys(r).forEach(function(e) {
                        var t = r[e];
                        if (i.indexOf(t.id) !== -1 || t.excludeUntil === Infinity) {
                            return
                        }
                        i.push(t.id);
                        var a = [];
                        var l = Ua(n.masterPlaylistLoader_.master, t);
                        var d = Ma(l);
                        if (!l.audio && !l.video) {
                            return
                        }
                        if (d !== s) {
                            a.push('codec count "' + d + '" !== "' + s + '"')
                        }
                        if (!n.sourceUpdater_.canChangeType()) {
                            var c = l.video && pe(l.video)[0] || null;
                            var f = l.audio && pe(l.audio)[0] || null;
                            if (c && o && c.type.toLowerCase() !== o.type.toLowerCase()) {
                                a.push('video codec "' + c.type + '" !== "' + o.type + '"')
                            }
                            if (f && u && f.type.toLowerCase() !== u.type.toLowerCase()) {
                                a.push('audio codec "' + f.type + '" !== "' + u.type + '"')
                            }
                        }
                        if (a.length) {
                            t.excludeUntil = Infinity;
                            n.logger_("blacklisting " + t.id + ": " + a.join(" && "))
                        }
                    })
                }
                ;
                n.updateAdCues_ = function e(t) {
                    var n = 0;
                    var i = this.seekable();
                    if (i.length) {
                        n = i.start(0)
                    }
                    Us(t, this.cueTagsTrack_, n)
                }
                ;
                n.goalBufferLength = function e() {
                    var t = this.tech_.currentTime();
                    var n = Ai.GOAL_BUFFER_LENGTH;
                    var i = Ai.GOAL_BUFFER_LENGTH_RATE;
                    var r = Math.max(n, Ai.MAX_GOAL_BUFFER_LENGTH);
                    return Math.min(n + t * i, r)
                }
                ;
                n.bufferLowWaterLine = function e() {
                    var t = this.tech_.currentTime();
                    var n = Ai.BUFFER_LOW_WATER_LINE;
                    var i = Ai.BUFFER_LOW_WATER_LINE_RATE;
                    var r = Math.max(n, Ai.MAX_BUFFER_LOW_WATER_LINE);
                    var a = Math.max(n, Ai.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);
                    return Math.min(n + t * i, this.experimentalBufferBasedABR ? a : r)
                }
                ;
                n.bufferHighWaterLine = function e() {
                    return Ai.BUFFER_HIGH_WATER_LINE
                }
                ;
                return t
            }(u["default"].EventTarget);
            var fo = function e(t, n, i) {
                return function(e) {
                    var r = t.master.playlists[n];
                    var a = De(r);
                    var s = Ne(r);
                    if (typeof e === "undefined") {
                        return s
                    }
                    if (e) {
                        delete r.disabled
                    } else {
                        r.disabled = true
                    }
                    if (e !== s && !a) {
                        i();
                        if (e) {
                            t.trigger("renditionenabled")
                        } else {
                            t.trigger("renditiondisabled")
                        }
                    }
                    return e
                }
            };
            var po = function e(t, n, i) {
                var r = t.masterPlaylistController_
                  , a = t.options_.smoothQualityChange;
                var s = a ? "smooth" : "fast";
                var o = r[s + "QualityChange_"].bind(r);
                if (n.attributes) {
                    var u = n.attributes.RESOLUTION;
                    this.width = u && u.width;
                    this.height = u && u.height;
                    this.bandwidth = n.attributes.BANDWIDTH
                }
                this.codecs = Ua(r.master(), n);
                this.playlist = n;
                this.id = i;
                this.enabled = fo(t.playlists, n.id, o)
            };
            var ho = function e(t) {
                t.representations = function() {
                    var e = t.masterPlaylistController_.master();
                    var n = He(e) ? t.masterPlaylistController_.getAudioTrackPlaylists_() : e.playlists;
                    if (!n) {
                        return []
                    }
                    return n.filter(function(e) {
                        return !De(e)
                    }).map(function(e, n) {
                        return new po(t,e,e.id)
                    })
                }
            };
            var vo = ["seeking", "seeked", "pause", "playing", "error"];
            var go = function e(t) {
                var n = t.buffered
                  , i = t.targetDuration
                  , r = t.currentTime;
                if (!n.length) {
                    return false
                }
                if (n.end(0) - n.start(0) < i * 2) {
                    return false
                }
                if (r > n.start(0)) {
                    return false
                }
                return n.start(0) - r < i
            };
            var mo = function() {
                function e(e) {
                    var t = this;
                    this.masterPlaylistController_ = e.masterPlaylistController;
                    this.tech_ = e.tech;
                    this.seekable = e.seekable;
                    this.allowSeeksWithinUnsafeLiveWindow = e.allowSeeksWithinUnsafeLiveWindow;
                    this.liveRangeSafeTimeDelta = e.liveRangeSafeTimeDelta;
                    this.media = e.media;
                    this.consecutiveUpdates = 0;
                    this.lastRecordedTime = null;
                    this.timer_ = null;
                    this.checkCurrentTimeTimeout_ = null;
                    this.logger_ = y("PlaybackWatcher");
                    this.logger_("initialize");
                    var n = function e() {
                        return t.monitorCurrentTime_()
                    };
                    var i = function e() {
                        return t.monitorCurrentTime_()
                    };
                    var r = function e() {
                        return t.techWaiting_()
                    };
                    var a = function e() {
                        return t.cancelTimer_()
                    };
                    var s = function e() {
                        return t.fixesBadSeeks_()
                    };
                    var u = this.masterPlaylistController_;
                    var l = ["main", "subtitle", "audio"];
                    var d = {};
                    l.forEach(function(e) {
                        d[e] = {
                            reset: function n() {
                                return t.resetSegmentDownloads_(e)
                            },
                            updateend: function n() {
                                return t.checkSegmentDownloads_(e)
                            }
                        };
                        u[e + "SegmentLoader_"].on("appendsdone", d[e].updateend);
                        u[e + "SegmentLoader_"].on("playlistupdate", d[e].reset);
                        t.tech_.on(["seeked", "seeking"], d[e].reset)
                    });
                    this.tech_.on("seekablechanged", s);
                    this.tech_.on("waiting", r);
                    this.tech_.on(vo, a);
                    this.tech_.on("canplay", i);
                    this.tech_.one("play", n);
                    this.dispose = function() {
                        t.logger_("dispose");
                        t.tech_.off("seekablechanged", s);
                        t.tech_.off("waiting", r);
                        t.tech_.off(vo, a);
                        t.tech_.off("canplay", i);
                        t.tech_.off("play", n);
                        l.forEach(function(e) {
                            u[e + "SegmentLoader_"].off("appendsdone", d[e].updateend);
                            u[e + "SegmentLoader_"].off("playlistupdate", d[e].reset);
                            t.tech_.off(["seeked", "seeking"], d[e].reset)
                        });
                        if (t.checkCurrentTimeTimeout_) {
                            o["default"].clearTimeout(t.checkCurrentTimeTimeout_)
                        }
                        t.cancelTimer_()
                    }
                }
                var t = e.prototype;
                t.monitorCurrentTime_ = function e() {
                    this.checkCurrentTime_();
                    if (this.checkCurrentTimeTimeout_) {
                        o["default"].clearTimeout(this.checkCurrentTimeTimeout_)
                    }
                    this.checkCurrentTimeTimeout_ = o["default"].setTimeout(this.monitorCurrentTime_.bind(this), 250)
                }
                ;
                t.resetSegmentDownloads_ = function e(t) {
                    var n = this.masterPlaylistController_[t + "SegmentLoader_"];
                    if (this[t + "StalledDownloads_"] > 0) {
                        this.logger_("resetting possible stalled download count for " + t + " loader")
                    }
                    this[t + "StalledDownloads_"] = 0;
                    this[t + "Buffered_"] = n.buffered_()
                }
                ;
                t.checkSegmentDownloads_ = function e(t) {
                    var n = this.masterPlaylistController_;
                    var i = n[t + "SegmentLoader_"];
                    var r = i.buffered_();
                    var a = ue(this[t + "Buffered_"], r);
                    this[t + "Buffered_"] = r;
                    if (a) {
                        this.resetSegmentDownloads_(t);
                        return
                    }
                    this[t + "StalledDownloads_"]++;
                    this.logger_("found #" + this[t + "StalledDownloads_"] + " " + t + " appends that did not increase buffer (possible stalled download)", {
                        playlistId: i.playlist_ && i.playlist_.id,
                        buffered: oe(r)
                    });
                    if (this[t + "StalledDownloads_"] < 10) {
                        return
                    }
                    this.logger_(t + " loader stalled download exclusion");
                    this.resetSegmentDownloads_(t);
                    this.tech_.trigger({
                        type: "usage",
                        name: "vhs-" + t + "-download-exclusion"
                    });
                    if (t === "subtitle") {
                        return
                    }
                    n.blacklistCurrentPlaylist({
                        message: "Excessive " + t + " segment downloading detected."
                    }, Infinity)
                }
                ;
                t.checkCurrentTime_ = function e() {
                    if (this.tech_.seeking() && this.fixesBadSeeks_()) {
                        this.consecutiveUpdates = 0;
                        this.lastRecordedTime = this.tech_.currentTime();
                        return
                    }
                    if (this.tech_.paused() || this.tech_.seeking()) {
                        return
                    }
                    var t = this.tech_.currentTime();
                    var n = this.tech_.buffered();
                    if (this.lastRecordedTime === t && (!n.length || t + $ >= n.end(n.length - 1))) {
                        return this.techWaiting_()
                    }
                    if (this.consecutiveUpdates >= 5 && t === this.lastRecordedTime) {
                        this.consecutiveUpdates++;
                        this.waiting_()
                    } else if (t === this.lastRecordedTime) {
                        this.consecutiveUpdates++
                    } else {
                        this.consecutiveUpdates = 0;
                        this.lastRecordedTime = t
                    }
                }
                ;
                t.cancelTimer_ = function e() {
                    this.consecutiveUpdates = 0;
                    if (this.timer_) {
                        this.logger_("cancelTimer_");
                        clearTimeout(this.timer_)
                    }
                    this.timer_ = null
                }
                ;
                t.fixesBadSeeks_ = function e() {
                    var t = this.tech_.seeking();
                    if (!t) {
                        return false
                    }
                    var n = this.seekable();
                    var i = this.tech_.currentTime();
                    var r = this.afterSeekableWindow_(n, i, this.media(), this.allowSeeksWithinUnsafeLiveWindow);
                    var a;
                    if (r) {
                        var s = n.end(n.length - 1);
                        a = s
                    }
                    if (this.beforeSeekableWindow_(n, i)) {
                        var o = n.start(0);
                        a = o + (o === n.end(0) ? 0 : $)
                    }
                    if (typeof a !== "undefined") {
                        this.logger_("Trying to seek outside of seekable at time " + i + " with " + ("seekable range " + ae(n) + ". Seeking to ") + (a + "."));
                        this.tech_.setCurrentTime(a);
                        return true
                    }
                    var u = this.tech_.buffered();
                    if (go({
                        buffered: u,
                        targetDuration: this.media().targetDuration,
                        currentTime: i
                    })) {
                        a = u.start(0) + $;
                        this.logger_("Buffered region starts (" + u.start(0) + ") " + (" just beyond seek point (" + i + "). Seeking to " + a + "."));
                        this.tech_.setCurrentTime(a);
                        return true
                    }
                    return false
                }
                ;
                t.waiting_ = function e() {
                    if (this.techWaiting_()) {
                        return
                    }
                    var t = this.tech_.currentTime();
                    var n = this.tech_.buffered();
                    var i = te(n, t);
                    if (i.length && t + 3 <= i.end(0)) {
                        this.cancelTimer_();
                        this.tech_.setCurrentTime(t);
                        this.logger_("Stopped at " + t + " while inside a buffered region " + ("[" + i.start(0) + " -> " + i.end(0) + "]. Attempting to resume ") + "playback by seeking to the current time.");
                        this.tech_.trigger({
                            type: "usage",
                            name: "vhs-unknown-waiting"
                        });
                        this.tech_.trigger({
                            type: "usage",
                            name: "hls-unknown-waiting"
                        });
                        return
                    }
                }
                ;
                t.techWaiting_ = function e() {
                    var t = this.seekable();
                    var n = this.tech_.currentTime();
                    if (this.tech_.seeking() && this.fixesBadSeeks_()) {
                        return true
                    }
                    if (this.tech_.seeking() || this.timer_ !== null) {
                        return true
                    }
                    if (this.beforeSeekableWindow_(t, n)) {
                        var i = t.end(t.length - 1);
                        this.logger_("Fell out of live window at time " + n + ". Seeking to " + ("live point (seekable end) " + i));
                        this.cancelTimer_();
                        this.tech_.setCurrentTime(i);
                        this.tech_.trigger({
                            type: "usage",
                            name: "vhs-live-resync"
                        });
                        this.tech_.trigger({
                            type: "usage",
                            name: "hls-live-resync"
                        });
                        return true
                    }
                    var r = this.tech_.vhs.masterPlaylistController_.sourceUpdater_;
                    var a = this.tech_.buffered();
                    var s = this.videoUnderflow_({
                        audioBuffered: r.audioBuffered(),
                        videoBuffered: r.videoBuffered(),
                        currentTime: n
                    });
                    if (s) {
                        this.cancelTimer_();
                        this.tech_.setCurrentTime(n);
                        this.tech_.trigger({
                            type: "usage",
                            name: "vhs-video-underflow"
                        });
                        this.tech_.trigger({
                            type: "usage",
                            name: "hls-video-underflow"
                        });
                        return true
                    }
                    var o = ne(a, n);
                    if (o.length > 0) {
                        var u = o.start(0) - n;
                        this.logger_("Stopped at " + n + ", setting timer for " + u + ", seeking " + ("to " + o.start(0)));
                        this.cancelTimer_();
                        this.timer_ = setTimeout(this.skipTheGap_.bind(this), u * 1e3, n);
                        return true
                    }
                    return false
                }
                ;
                t.afterSeekableWindow_ = function e(t, n, i, r) {
                    if (r === void 0) {
                        r = false
                    }
                    if (!t.length) {
                        return false
                    }
                    var a = t.end(t.length - 1) + $;
                    var s = !i.endList;
                    if (s && r) {
                        a = t.end(t.length - 1) + i.targetDuration * 3
                    }
                    if (n > a) {
                        return true
                    }
                    return false
                }
                ;
                t.beforeSeekableWindow_ = function e(t, n) {
                    if (t.length && t.start(0) > 0 && n < t.start(0) - this.liveRangeSafeTimeDelta) {
                        return true
                    }
                    return false
                }
                ;
                t.videoUnderflow_ = function e(t) {
                    var n = t.videoBuffered
                      , i = t.audioBuffered
                      , r = t.currentTime;
                    if (!n) {
                        return
                    }
                    var a;
                    if (n.length && i.length) {
                        var s = te(n, r - 3);
                        var o = te(n, r);
                        var u = te(i, r);
                        if (u.length && !o.length && s.length) {
                            a = {
                                start: s.end(0),
                                end: u.end(0)
                            }
                        }
                    } else {
                        var l = ne(n, r);
                        if (!l.length) {
                            a = this.gapFromVideoUnderflow_(n, r)
                        }
                    }
                    if (a) {
                        this.logger_("Encountered a gap in video from " + a.start + " to " + a.end + ". " + ("Seeking to current time " + r));
                        return true
                    }
                    return false
                }
                ;
                t.skipTheGap_ = function e(t) {
                    var n = this.tech_.buffered();
                    var i = this.tech_.currentTime();
                    var r = ne(n, i);
                    this.cancelTimer_();
                    if (r.length === 0 || i !== t) {
                        return
                    }
                    this.logger_("skipTheGap_:", "currentTime:", i, "scheduled currentTime:", t, "nextRange start:", r.start(0));
                    this.tech_.setCurrentTime(r.start(0) + J);
                    this.tech_.trigger({
                        type: "usage",
                        name: "vhs-gap-skip"
                    });
                    this.tech_.trigger({
                        type: "usage",
                        name: "hls-gap-skip"
                    })
                }
                ;
                t.gapFromVideoUnderflow_ = function e(t, n) {
                    var i = ie(t);
                    for (var r = 0; r < i.length; r++) {
                        var a = i.start(r);
                        var s = i.end(r);
                        if (n - a < 4 && n - a > 2) {
                            return {
                                start: a,
                                end: s
                            }
                        }
                    }
                    return null
                }
                ;
                return e
            }();
            var yo = {
                errorInterval: 30,
                getSource: function e(t) {
                    var n = this.tech({
                        IWillNotUseThisInPlugins: true
                    });
                    var i = n.currentSource_ || this.currentSource();
                    return t(i)
                }
            };
            var _o = function e(t, n) {
                var i = 0;
                var r = 0;
                var a = u["default"].mergeOptions(yo, n);
                t.ready(function() {
                    t.trigger({
                        type: "usage",
                        name: "vhs-error-reload-initialized"
                    });
                    t.trigger({
                        type: "usage",
                        name: "hls-error-reload-initialized"
                    })
                });
                var s = function e() {
                    if (r) {
                        t.currentTime(r)
                    }
                };
                var o = function e(n) {
                    if (n === null || n === undefined) {
                        return
                    }
                    r = t.duration() !== Infinity && t.currentTime() || 0;
                    t.one("loadedmetadata", s);
                    t.src(n);
                    t.trigger({
                        type: "usage",
                        name: "vhs-error-reload"
                    });
                    t.trigger({
                        type: "usage",
                        name: "hls-error-reload"
                    });
                    t.play()
                };
                var l = function e() {
                    if (Date.now() - i < a.errorInterval * 1e3) {
                        t.trigger({
                            type: "usage",
                            name: "vhs-error-reload-canceled"
                        });
                        t.trigger({
                            type: "usage",
                            name: "hls-error-reload-canceled"
                        });
                        return
                    }
                    if (!a.getSource || typeof a.getSource !== "function") {
                        u["default"].log.error("ERROR: reloadSourceOnError - The option getSource must be a function!");
                        return
                    }
                    i = Date.now();
                    return a.getSource.call(t, o)
                };
                var d = function e() {
                    t.off("loadedmetadata", s);
                    t.off("error", l);
                    t.off("dispose", e)
                };
                var c = function n(i) {
                    d();
                    e(t, i)
                };
                t.on("error", l);
                t.on("dispose", d);
                t.reloadSourceOnError = c
            };
            var bo = function e(t) {
                _o(this, t)
            };
            var So = "2.7.1";
            var Ao = "5.11.0";
            var To = "0.16.0";
            var ko = "4.6.0";
            var Eo = "3.1.2";
            var Po = {
                PlaylistLoader: Z,
                Playlist: Ge,
                utils: lt,
                STANDARD_PLAYLIST_SELECTOR: Ka,
                INITIAL_PLAYLIST_SELECTOR: Xa,
                lastBandwidthSelector: Ka,
                movingAverageBandwidthSelector: za,
                comparePlaylistBandwidth: Ha,
                comparePlaylistResolution: Ga,
                xhr: Ye()
            };
            Object.keys(Ai).forEach(function(e) {
                Object.defineProperty(Po, e, {
                    get: function t() {
                        u["default"].log.warn("using Vhs." + e + " is UNSAFE be sure you know what you are doing");
                        return Ai[e]
                    },
                    set: function t(n) {
                        u["default"].log.warn("using Vhs." + e + " is UNSAFE be sure you know what you are doing");
                        if (typeof n !== "number" || n < 0) {
                            u["default"].log.warn("value of Vhs." + e + " must be greater than or equal to 0");
                            return
                        }
                        Ai[e] = n
                    }
                })
            });
            var Io = "videojs-vhs";
            var Co = function e(t, n) {
                var i = n.media();
                var r = -1;
                for (var a = 0; a < t.length; a++) {
                    if (t[a].id === i.id) {
                        r = a;
                        break
                    }
                }
                t.selectedIndex_ = r;
                t.trigger({
                    selectedIndex: r,
                    type: "change"
                })
            };
            var wo = function e(t, n) {
                n.representations().forEach(function(e) {
                    t.addQualityLevel(e)
                });
                Co(t, n.playlists)
            };
            Po.canPlaySource = function() {
                return u["default"].log.warn("HLS is no longer a tech. Please remove it from " + "your player's techOrder.")
            }
            ;
            var jo = function e(t, n, i) {
                if (!t) {
                    return t
                }
                var r = {};
                if (n && n.attributes && n.attributes.CODECS) {
                    r = Ra(pe(n.attributes.CODECS))
                }
                if (i && i.attributes && i.attributes.CODECS) {
                    r.audio = i.attributes.CODECS
                }
                var a = me(r.video);
                var s = me(r.audio);
                var o = {};
                for (var l in t) {
                    o[l] = {};
                    if (s) {
                        o[l].audioContentType = s
                    }
                    if (a) {
                        o[l].videoContentType = a
                    }
                    if (n.contentProtection && n.contentProtection[l] && n.contentProtection[l].pssh) {
                        o[l].pssh = n.contentProtection[l].pssh
                    }
                    if (typeof t[l] === "string") {
                        o[l].url = t[l]
                    }
                }
                return u["default"].mergeOptions(t, o)
            };
            var Lo = function e(t, n) {
                return t.reduce(function(e, t) {
                    if (!t.contentProtection) {
                        return e
                    }
                    var i = n.reduce(function(e, n) {
                        var i = t.contentProtection[n];
                        if (i && i.pssh) {
                            e[n] = {
                                pssh: i.pssh
                            }
                        }
                        return e
                    }, {});
                    if (Object.keys(i).length) {
                        e.push(i)
                    }
                    return e
                }, [])
            };
            var Oo = function e(t) {
                var n = t.player
                  , i = t.sourceKeySystems
                  , r = t.audioMedia
                  , a = t.mainPlaylists;
                if (!n.eme.initializeMediaKeys) {
                    return Promise.resolve()
                }
                var s = r ? a.concat([r]) : a;
                var o = Lo(s, Object.keys(i));
                var u = [];
                var l = [];
                o.forEach(function(e) {
                    l.push(new Promise(function(e, t) {
                        n.tech_.one("keysessioncreated", e)
                    }
                    ));
                    u.push(new Promise(function(t, i) {
                        n.eme.initializeMediaKeys({
                            keySystems: e
                        }, function(e) {
                            if (e) {
                                i(e);
                                return
                            }
                            t()
                        })
                    }
                    ))
                });
                return Promise.race([Promise.all(u), Promise.race(l)])
            };
            var xo = function e(t) {
                var n = t.player
                  , i = t.sourceKeySystems
                  , r = t.media
                  , a = t.audioMedia;
                var s = jo(i, r, a);
                if (!s) {
                    return false
                }
                n.currentSource().keySystems = s;
                if (s && !n.eme) {
                    u["default"].log.warn("DRM encrypted source cannot be decrypted without a DRM plugin");
                    return false
                }
                return true
            };
            var Do = function e() {
                if (!o["default"].localStorage) {
                    return null
                }
                var t = o["default"].localStorage.getItem(Io);
                if (!t) {
                    return null
                }
                try {
                    return JSON.parse(t)
                } catch (e) {
                    return null
                }
            };
            var No = function e(t) {
                if (!o["default"].localStorage) {
                    return false
                }
                var n = Do();
                n = n ? u["default"].mergeOptions(n, t) : t;
                try {
                    o["default"].localStorage.setItem(Io, JSON.stringify(n))
                } catch (e) {
                    return false
                }
                return n
            };
            var Ro = function e(t) {
                if (t.toLowerCase().indexOf("data:application/vnd.videojs.vhs+json,") === 0) {
                    return JSON.parse(t.substring(t.indexOf(",") + 1))
                }
                return t
            };
            Po.supportsNativeHls = function() {
                if (!s["default"] || !s["default"].createElement) {
                    return false
                }
                var e = s["default"].createElement("video");
                if (!u["default"].getTech("Html5").isSupported()) {
                    return false
                }
                var t = ["application/vnd.apple.mpegurl", "audio/mpegurl", "audio/x-mpegurl", "application/x-mpegurl", "video/x-mpegurl", "video/mpegurl", "application/mpegurl"];
                return t.some(function(t) {
                    return /maybe|probably/i.test(e.canPlayType(t))
                })
            }();
            Po.supportsNativeDash = function() {
                if (!s["default"] || !s["default"].createElement || !u["default"].getTech("Html5").isSupported()) {
                    return false
                }
                return /maybe|probably/i.test(s["default"].createElement("video").canPlayType("application/dash+xml"))
            }();
            Po.supportsTypeNatively = function(e) {
                if (e === "hls") {
                    return Po.supportsNativeHls
                }
                if (e === "dash") {
                    return Po.supportsNativeDash
                }
                return false
            }
            ;
            Po.isSupported = function() {
                return u["default"].log.warn("HLS is no longer a tech. Please remove it from " + "your player's techOrder.")
            }
            ;
            var Mo = u["default"].getComponent("Component");
            var Uo = function(e) {
                p(t, e);
                function t(t, n, i) {
                    var r;
                    r = e.call(this, n, u["default"].mergeOptions(i.hls, i.vhs)) || this;
                    if (i.hls && Object.keys(i.hls).length) {
                        u["default"].log.warn("Using hls options is deprecated. Use vhs instead.")
                    }
                    r.logger_ = y("VhsHandler");
                    if (n.options_ && n.options_.playerId) {
                        var a = u["default"](n.options_.playerId);
                        if (!a.hasOwnProperty("hls")) {
                            Object.defineProperty(a, "hls", {
                                get: function e() {
                                    u["default"].log.warn("player.hls is deprecated. Use player.tech().vhs instead.");
                                    n.trigger({
                                        type: "usage",
                                        name: "hls-player-access"
                                    });
                                    return c(r)
                                },
                                configurable: true
                            })
                        }
                        if (!a.hasOwnProperty("vhs")) {
                            Object.defineProperty(a, "vhs", {
                                get: function e() {
                                    u["default"].log.warn("player.vhs is deprecated. Use player.tech().vhs instead.");
                                    n.trigger({
                                        type: "usage",
                                        name: "vhs-player-access"
                                    });
                                    return c(r)
                                },
                                configurable: true
                            })
                        }
                        if (!a.hasOwnProperty("dash")) {
                            Object.defineProperty(a, "dash", {
                                get: function e() {
                                    u["default"].log.warn("player.dash is deprecated. Use player.tech().vhs instead.");
                                    return c(r)
                                },
                                configurable: true
                            })
                        }
                        r.player_ = a
                    }
                    r.tech_ = n;
                    r.source_ = t;
                    r.stats = {};
                    r.ignoreNextSeekingEvent_ = false;
                    r.setOptions_();
                    if (r.options_.overrideNative && n.overrideNativeAudioTracks && n.overrideNativeVideoTracks) {
                        n.overrideNativeAudioTracks(true);
                        n.overrideNativeVideoTracks(true)
                    } else if (r.options_.overrideNative && (n.featuresNativeVideoTracks || n.featuresNativeAudioTracks)) {
                        throw new Error("Overriding native HLS requires emulated tracks. " + "See https://git.io/vMpjB")
                    }
                    r.on(s["default"], ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"], function(e) {
                        var t = s["default"].fullscreenElement || s["default"].webkitFullscreenElement || s["default"].mozFullScreenElement || s["default"].msFullscreenElement;
                        if (t && t.contains(r.tech_.el())) {
                            r.masterPlaylistController_.smoothQualityChange_()
                        }
                    });
                    r.on(r.tech_, "seeking", function() {
                        if (this.ignoreNextSeekingEvent_) {
                            this.ignoreNextSeekingEvent_ = false;
                            return
                        }
                        this.setCurrentTime(this.tech_.currentTime())
                    });
                    r.on(r.tech_, "error", function() {
                        if (this.tech_.error() && this.masterPlaylistController_) {
                            this.masterPlaylistController_.pauseLoading()
                        }
                    });
                    r.on(r.tech_, "play", r.play);
                    return r
                }
                var n = t.prototype;
                n.setOptions_ = function e() {
                    var t = this;
                    this.options_.withCredentials = this.options_.withCredentials || false;
                    this.options_.handleManifestRedirects = this.options_.handleManifestRedirects === false ? false : true;
                    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;
                    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;
                    this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;
                    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== "undefined" ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;
                    this.options_.customTagParsers = this.options_.customTagParsers || [];
                    this.options_.customTagMappers = this.options_.customTagMappers || [];
                    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;
                    this.options_.handlePartialData = this.options_.handlePartialData || false;
                    if (typeof this.options_.blacklistDuration !== "number") {
                        this.options_.blacklistDuration = 5 * 60
                    }
                    if (typeof this.options_.bandwidth !== "number") {
                        if (this.options_.useBandwidthFromLocalStorage) {
                            var n = Do();
                            if (n && n.bandwidth) {
                                this.options_.bandwidth = n.bandwidth;
                                this.tech_.trigger({
                                    type: "usage",
                                    name: "vhs-bandwidth-from-local-storage"
                                });
                                this.tech_.trigger({
                                    type: "usage",
                                    name: "hls-bandwidth-from-local-storage"
                                })
                            }
                            if (n && n.throughput) {
                                this.options_.throughput = n.throughput;
                                this.tech_.trigger({
                                    type: "usage",
                                    name: "vhs-throughput-from-local-storage"
                                });
                                this.tech_.trigger({
                                    type: "usage",
                                    name: "hls-throughput-from-local-storage"
                                })
                            }
                        }
                    }
                    if (typeof this.options_.bandwidth !== "number") {
                        this.options_.bandwidth = Ai.INITIAL_BANDWIDTH
                    }
                    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Ai.INITIAL_BANDWIDTH;
                    ["withCredentials", "useDevicePixelRatio", "limitRenditionByPlayerDimensions", "bandwidth", "smoothQualityChange", "customTagParsers", "customTagMappers", "handleManifestRedirects", "cacheEncryptionKeys", "handlePartialData", "playlistSelector", "initialPlaylistSelector", "experimentalBufferBasedABR", "liveRangeSafeTimeDelta", "experimentalLLHLS"].forEach(function(e) {
                        if (typeof t.source_[e] !== "undefined") {
                            t.options_[e] = t.source_[e]
                        }
                    });
                    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;
                    this.useDevicePixelRatio = this.options_.useDevicePixelRatio
                }
                ;
                n.src = function e(t, n) {
                    var i = this;
                    if (!t) {
                        return
                    }
                    this.setOptions_();
                    this.options_.src = Ro(this.source_.src);
                    this.options_.tech = this.tech_;
                    this.options_.externVhs = Po;
                    this.options_.sourceType = $e(n);
                    this.options_.seekTo = function(e) {
                        i.tech_.setCurrentTime(e)
                    }
                    ;
                    this.masterPlaylistController_ = new co(this.options_);
                    var r = u["default"].mergeOptions({
                        liveRangeSafeTimeDelta: $
                    }, this.options_, {
                        seekable: function e() {
                            return i.seekable()
                        },
                        media: function e() {
                            return i.masterPlaylistController_.media()
                        },
                        masterPlaylistController: this.masterPlaylistController_
                    });
                    this.playbackWatcher_ = new mo(r);
                    this.masterPlaylistController_.on("error", function() {
                        var e = u["default"].players[i.tech_.options_.playerId];
                        var t = i.masterPlaylistController_.error;
                        if (typeof t === "object" && !t.code) {
                            t.code = 3
                        } else if (typeof t === "string") {
                            t = {
                                message: t,
                                code: 3
                            }
                        }
                        e.error(t)
                    });
                    var a = this.options_.experimentalBufferBasedABR ? Po.movingAverageBandwidthSelector(.55) : Po.STANDARD_PLAYLIST_SELECTOR;
                    this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : a.bind(this);
                    this.masterPlaylistController_.selectInitialPlaylist = Po.INITIAL_PLAYLIST_SELECTOR.bind(this);
                    this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;
                    this.mediaSource = this.masterPlaylistController_.mediaSource;
                    Object.defineProperties(this, {
                        selectPlaylist: {
                            get: function e() {
                                return this.masterPlaylistController_.selectPlaylist
                            },
                            set: function e(t) {
                                this.masterPlaylistController_.selectPlaylist = t.bind(this)
                            }
                        },
                        throughput: {
                            get: function e() {
                                return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate
                            },
                            set: function e(t) {
                                this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = t;
                                this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1
                            }
                        },
                        bandwidth: {
                            get: function e() {
                                return this.masterPlaylistController_.mainSegmentLoader_.bandwidth
                            },
                            set: function e(t) {
                                this.masterPlaylistController_.mainSegmentLoader_.bandwidth = t;
                                this.masterPlaylistController_.mainSegmentLoader_.throughput = {
                                    rate: 0,
                                    count: 0
                                }
                            }
                        },
                        systemBandwidth: {
                            get: function e() {
                                var t = 1 / (this.bandwidth || 1);
                                var n;
                                if (this.throughput > 0) {
                                    n = 1 / this.throughput
                                } else {
                                    n = 0
                                }
                                var i = Math.floor(1 / (t + n));
                                return i
                            },
                            set: function e() {
                                u["default"].log.error('The "systemBandwidth" property is read-only')
                            }
                        }
                    });
                    if (this.options_.bandwidth) {
                        this.bandwidth = this.options_.bandwidth
                    }
                    if (this.options_.throughput) {
                        this.throughput = this.options_.throughput
                    }
                    Object.defineProperties(this.stats, {
                        bandwidth: {
                            get: function e() {
                                return i.bandwidth || 0
                            },
                            enumerable: true
                        },
                        mediaRequests: {
                            get: function e() {
                                return i.masterPlaylistController_.mediaRequests_() || 0
                            },
                            enumerable: true
                        },
                        mediaRequestsAborted: {
                            get: function e() {
                                return i.masterPlaylistController_.mediaRequestsAborted_() || 0
                            },
                            enumerable: true
                        },
                        mediaRequestsTimedout: {
                            get: function e() {
                                return i.masterPlaylistController_.mediaRequestsTimedout_() || 0
                            },
                            enumerable: true
                        },
                        mediaRequestsErrored: {
                            get: function e() {
                                return i.masterPlaylistController_.mediaRequestsErrored_() || 0
                            },
                            enumerable: true
                        },
                        mediaTransferDuration: {
                            get: function e() {
                                return i.masterPlaylistController_.mediaTransferDuration_() || 0
                            },
                            enumerable: true
                        },
                        mediaBytesTransferred: {
                            get: function e() {
                                return i.masterPlaylistController_.mediaBytesTransferred_() || 0
                            },
                            enumerable: true
                        },
                        mediaSecondsLoaded: {
                            get: function e() {
                                return i.masterPlaylistController_.mediaSecondsLoaded_() || 0
                            },
                            enumerable: true
                        },
                        buffered: {
                            get: function e() {
                                return oe(i.tech_.buffered())
                            },
                            enumerable: true
                        },
                        currentTime: {
                            get: function e() {
                                return i.tech_.currentTime()
                            },
                            enumerable: true
                        },
                        currentSource: {
                            get: function e() {
                                return i.tech_.currentSource_
                            },
                            enumerable: true
                        },
                        currentTech: {
                            get: function e() {
                                return i.tech_.name_
                            },
                            enumerable: true
                        },
                        duration: {
                            get: function e() {
                                return i.tech_.duration()
                            },
                            enumerable: true
                        },
                        master: {
                            get: function e() {
                                return i.playlists.master
                            },
                            enumerable: true
                        },
                        playerDimensions: {
                            get: function e() {
                                return i.tech_.currentDimensions()
                            },
                            enumerable: true
                        },
                        seekable: {
                            get: function e() {
                                return oe(i.tech_.seekable())
                            },
                            enumerable: true
                        },
                        timestamp: {
                            get: function e() {
                                return Date.now()
                            },
                            enumerable: true
                        },
                        videoPlaybackQuality: {
                            get: function e() {
                                return i.tech_.getVideoPlaybackQuality()
                            },
                            enumerable: true
                        }
                    });
                    this.tech_.one("canplay", this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));
                    this.tech_.on("bandwidthupdate", function() {
                        if (i.options_.useBandwidthFromLocalStorage) {
                            No({
                                bandwidth: i.bandwidth,
                                throughput: Math.round(i.throughput)
                            })
                        }
                    });
                    this.masterPlaylistController_.on("selectedinitialmedia", function() {
                        ho(i)
                    });
                    this.masterPlaylistController_.sourceUpdater_.on("createdsourcebuffers", function() {
                        i.setupEme_()
                    });
                    this.on(this.masterPlaylistController_, "progress", function() {
                        this.tech_.trigger("progress")
                    });
                    this.on(this.masterPlaylistController_, "firstplay", function() {
                        this.ignoreNextSeekingEvent_ = true
                    });
                    this.setupQualityLevels_();
                    if (!this.tech_.el()) {
                        return
                    }
                    this.mediaSourceUrl_ = o["default"].URL.createObjectURL(this.masterPlaylistController_.mediaSource);
                    this.tech_.src(this.mediaSourceUrl_)
                }
                ;
                n.setupEme_ = function e() {
                    var t = this;
                    var n = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;
                    var i = xo({
                        player: this.player_,
                        sourceKeySystems: this.source_.keySystems,
                        media: this.playlists.media(),
                        audioMedia: n && n.media()
                    });
                    if (u["default"].browser.IE_VERSION === 11 || !i) {
                        this.masterPlaylistController_.sourceUpdater_.initializedEme();
                        return
                    }
                    this.logger_("waiting for EME key session creation");
                    Oo({
                        player: this.player_,
                        sourceKeySystems: this.source_.keySystems,
                        audioMedia: n && n.media(),
                        mainPlaylists: this.playlists.master.playlists
                    }).then(function() {
                        t.logger_("created EME key session");
                        t.masterPlaylistController_.sourceUpdater_.initializedEme()
                    }).catch(function(e) {
                        t.logger_("error while creating EME key session", e);
                        t.player_.error({
                            message: "Failed to initialize media keys for EME",
                            code: 3
                        })
                    })
                }
                ;
                n.setupQualityLevels_ = function e() {
                    var t = this;
                    var n = u["default"].players[this.tech_.options_.playerId];
                    if (!n || !n.qualityLevels || this.qualityLevels_) {
                        return
                    }
                    this.qualityLevels_ = n.qualityLevels();
                    this.masterPlaylistController_.on("selectedinitialmedia", function() {
                        wo(t.qualityLevels_, t)
                    });
                    this.playlists.on("mediachange", function() {
                        Co(t.qualityLevels_, t.playlists)
                    })
                }
                ;
                t.version = function e() {
                    return {
                        "@videojs/http-streaming": So,
                        "mux.js": Ao,
                        "mpd-parser": To,
                        "m3u8-parser": ko,
                        "aes-decrypter": Eo
                    }
                }
                ;
                n.version = function e() {
                    return this.constructor.version()
                }
                ;
                n.canChangeType = function e() {
                    return xs.canChangeType()
                }
                ;
                n.play = function e() {
                    this.masterPlaylistController_.play()
                }
                ;
                n.setCurrentTime = function e(t) {
                    this.masterPlaylistController_.setCurrentTime(t)
                }
                ;
                n.duration = function e() {
                    return this.masterPlaylistController_.duration()
                }
                ;
                n.seekable = function e() {
                    return this.masterPlaylistController_.seekable()
                }
                ;
                n.dispose = function t() {
                    if (this.playbackWatcher_) {
                        this.playbackWatcher_.dispose()
                    }
                    if (this.masterPlaylistController_) {
                        this.masterPlaylistController_.dispose()
                    }
                    if (this.qualityLevels_) {
                        this.qualityLevels_.dispose()
                    }
                    if (this.player_) {
                        delete this.player_.vhs;
                        delete this.player_.dash;
                        delete this.player_.hls
                    }
                    if (this.tech_ && this.tech_.vhs) {
                        delete this.tech_.vhs
                    }
                    if (this.tech_) {
                        delete this.tech_.hls
                    }
                    if (this.mediaSourceUrl_ && o["default"].URL.revokeObjectURL) {
                        o["default"].URL.revokeObjectURL(this.mediaSourceUrl_);
                        this.mediaSourceUrl_ = null
                    }
                    e.prototype.dispose.call(this)
                }
                ;
                n.convertToProgramTime = function e(t, n) {
                    return mt({
                        playlist: this.masterPlaylistController_.media(),
                        time: t,
                        callback: n
                    })
                }
                ;
                n.seekToProgramTime = function e(t, n, i, r) {
                    if (i === void 0) {
                        i = true
                    }
                    if (r === void 0) {
                        r = 2
                    }
                    return yt({
                        programTime: t,
                        playlist: this.masterPlaylistController_.media(),
                        retryCount: r,
                        pauseAfterSeek: i,
                        seekTo: this.options_.seekTo,
                        tech: this.options_.tech,
                        callback: n
                    })
                }
                ;
                return t
            }(Mo);
            var Bo = {
                name: "videojs-http-streaming",
                VERSION: So,
                canHandleSource: function e(t, n) {
                    if (n === void 0) {
                        n = {}
                    }
                    var i = u["default"].mergeOptions(u["default"].options, n);
                    return Bo.canPlayType(t.type, i)
                },
                handleSource: function e(t, n, i) {
                    if (i === void 0) {
                        i = {}
                    }
                    var r = u["default"].mergeOptions(u["default"].options, i);
                    n.vhs = new Uo(t,n,r);
                    if (!u["default"].hasOwnProperty("hls")) {
                        Object.defineProperty(n, "hls", {
                            get: function e() {
                                u["default"].log.warn("player.tech().hls is deprecated. Use player.tech().vhs instead.");
                                return n.vhs
                            },
                            configurable: true
                        })
                    }
                    n.vhs.xhr = Ye();
                    n.vhs.src(t.src, t.type);
                    return n.vhs
                },
                canPlayType: function e(t, n) {
                    if (n === void 0) {
                        n = {}
                    }
                    var i = u["default"].mergeOptions(u["default"].options, n)
                      , r = i.vhs.overrideNative
                      , a = r === void 0 ? !u["default"].browser.IS_ANY_SAFARI : r;
                    var s = $e(t);
                    var o = s && (!Po.supportsTypeNatively(s) || a);
                    return o ? "maybe" : ""
                }
            };
            var Fo = function e() {
                return ye("avc1.4d400d,mp4a.40.2")
            };
            if (Fo()) {
                u["default"].getTech("Html5").registerSourceHandler(Bo, 0)
            }
            u["default"].VhsHandler = Uo;
            Object.defineProperty(u["default"], "HlsHandler", {
                get: function e() {
                    u["default"].log.warn("videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.");
                    return Uo
                },
                configurable: true
            });
            u["default"].VhsSourceHandler = Bo;
            Object.defineProperty(u["default"], "HlsSourceHandler", {
                get: function e() {
                    u["default"].log.warn("videojs.HlsSourceHandler is deprecated. " + "Use videojs.VhsSourceHandler instead.");
                    return Bo
                },
                configurable: true
            });
            u["default"].Vhs = Po;
            Object.defineProperty(u["default"], "Hls", {
                get: function e() {
                    u["default"].log.warn("videojs.Hls is deprecated. Use videojs.Vhs instead.");
                    return Po
                },
                configurable: true
            });
            if (!u["default"].use) {
                u["default"].registerComponent("Hls", Po);
                u["default"].registerComponent("Vhs", Po)
            }
            u["default"].options.vhs = u["default"].options.vhs || {};
            u["default"].options.hls = u["default"].options.hls || {};
            if (u["default"].registerPlugin) {
                u["default"].registerPlugin("reloadSourceOnError", bo)
            } else {
                u["default"].plugin("reloadSourceOnError", bo)
            }
            e.LOCAL_STORAGE_KEY = Io;
            e.Vhs = Po;
            e.VhsHandler = Uo;
            e.VhsSourceHandler = Bo;
            e.emeKeySystems = jo;
            e.expandDataUri = Ro;
            e.getAllPsshKeySystemsOptions = Lo;
            e.setupEmeOptions = xo;
            e.simpleTypeFromSourceType = $e;
            e.waitForKeySessionCreation = Oo;
            Object.defineProperty(e, "__esModule", {
                value: true
            })
        });
        (function() {
            if (videojs.getPlugin("perSourceBehaviors")) {
                return
            }
            (function(e, t) {
                typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js")) : typeof define === "function" && define.amd ? define(["video.js"], t) : e.videojsPerSourceBehaviors = t(e.videojs)
            }
            )(typeof self !== "undefined" ? self : this, function(e) {
                "use strict";
                e = e && e.hasOwnProperty("default") ? e["default"] : e;
                var t = "2.1.0";
                var n = e.getTech("Html5");
                var i = e.registerPlugin || e.plugin;
                var r = ["abort", "emptied", "loadstart", "play"];
                var a = ["abort", "emptied"];
                var s = ["ad-playback", "ads-ready?", "postroll?", "preroll?"];
                var o = function e(t) {
                    return s.indexOf(t) > -1
                };
                var u = function e(t) {
                    return t.usingPlugin("ads") && typeof t.ads.inAdBreak === "function"
                };
                var l = function e(t, n) {
                    if (!t.usingPlugin("ads")) {
                        return false
                    }
                    if (u(t)) {
                        return t.ads.isInAdMode() && n.type !== "loadstart"
                    }
                    return o(t.ads.state)
                };
                var d = function i() {
                    var s = this;
                    var o = [];
                    var u;
                    var d = false;
                    var c;
                    var f = true;
                    var p = function t(n) {
                        return function(t, i) {
                            var r = this;
                            if (this.perSourceBehaviors.disabled()) {
                                return
                            }
                            var a = arguments.length === 2;
                            var s = this.currentSrc();
                            var u = [t];
                            var l = e.bind(a ? this : t, arguments[arguments.length - 1]);
                            var d = function e() {
                                var t = r.currentSrc() !== s;
                                if (r.perSourceBehaviors.disabled()) {
                                    return
                                }
                                if (t || n) {
                                    r.off.apply(r, u)
                                }
                                if (!t) {
                                    l.apply(void 0, arguments)
                                }
                            };
                            d.guid = l.guid;
                            if (!a) {
                                u.push(i)
                            }
                            u.push(d);
                            o.push(u);
                            return this.on.apply(this, u)
                        }
                    };
                    this.perSourceBehaviors = {
                        disable: e.bind(this, function e() {
                            this.clearTimeout(c);
                            c = null;
                            d = true;
                            return d
                        }),
                        disabled: function e() {
                            return d
                        },
                        enable: function e() {
                            d = false;
                            return d
                        },
                        enabled: function e() {
                            return !d
                        },
                        isSrcStable: function e() {
                            return f
                        },
                        VERSION: t
                    };
                    this.onPerSrc = p();
                    this.onePerSrc = p(true);
                    this.on("dispose", function() {
                        o.length = 0
                    });
                    this.on(r, function(e) {
                        if (s.perSourceBehaviors.disabled() || c || l(s, e)) {
                            return
                        }
                        if (f && a.indexOf(e.type) > -1) {
                            f = false;
                            s.trigger("sourceunstable")
                        }
                        var t = [];
                        var i = function e(n) {
                            return t.push({
                                time: Date.now(),
                                event: n
                            })
                        };
                        i(e);
                        s.on(n.Events, i);
                        c = s.setTimeout(function() {
                            var e = s.currentSrc();
                            f = true;
                            c = null;
                            s.off(n.Events, i);
                            if (e && e !== u) {
                                o.forEach(function(e) {
                                    return s.off.apply(s, e)
                                });
                                o.length = 0;
                                s.trigger("sourcechanged", {
                                    interimEvents: t,
                                    from: u,
                                    to: e
                                });
                                u = e
                            }
                        }, 1)
                    })
                };
                d.VERSION = t;
                i("perSourceBehaviors", d);
                return d
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("contextmenu")) {
                return
            }
            (function(e, t) {
                typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js")) : typeof define === "function" && define.amd ? define(["video.js"], t) : e.videojsContextmenu = t(e.videojs)
            }
            )(this, function(e) {
                "use strict";
                e = e && e.hasOwnProperty("default") ? e["default"] : e;
                var t = "2.0.2";
                var n = e.registerPlugin || e.plugin;
                var i = {
                    cancel: true,
                    sensitivity: 10,
                    wait: 500,
                    disabled: false
                };
                var r = "vjs-contextmenu";
                function a(e, t) {
                    if (e.contextmenu.options.disabled) {
                        return e
                    }
                    var n = {
                        target: e,
                        type: r
                    };
                    ["clientX", "clientY", "pageX", "pageY", "screenX", "screenY"].forEach(function(e) {
                        n[e] = t[e]
                    });
                    return e.trigger(n)
                }
                function s(e) {
                    var t = this.contextmenu.current;
                    if (!t) {
                        return
                    }
                    var n = this.contextmenu.options.wait;
                    if (e.type === "touchend" && Number(new Date) - t.time >= n) {
                        a(this, e)
                    }
                    this.contextmenu.current = null
                }
                function o(e) {
                    var t = this.contextmenu.current;
                    if (!t) {
                        return
                    }
                    var n = e.touches[0];
                    var i = this.contextmenu.options.sensitivity;
                    if (n.screenX - t.screenX > i || n.screenY - t.screenY > i) {
                        this.contextmenu.current = null
                    }
                }
                function u(e) {
                    if (this.contextmenu.current) {
                        return
                    }
                    var t = e.touches[0];
                    this.contextmenu.current = {
                        screenX: t.screenX,
                        screenY: t.screenY,
                        time: Number(new Date)
                    }
                }
                function l(e) {
                    if (this.contextmenu.options.cancel && !this.contextmenu.options.disabled) {
                        e.preventDefault()
                    }
                    a(this, e);
                    this.off(["touchcancel", "touchend"], s);
                    this.off("touchmove", o);
                    this.off("touchstart", u)
                }
                function d(t) {
                    var n = this;
                    this.contextmenu.options = e.mergeOptions(i, t);
                    this.contextmenu.VERSION = "__VERSION__";
                    this.on("contextmenu", l);
                    this.on(["touchcancel", "touchend"], s);
                    this.on("touchmove", o);
                    this.on("touchstart", u);
                    this.ready(function() {
                        return n.addClass(r)
                    })
                }
                n("contextmenu", d);
                d.VERSION = t;
                return d
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("contextmenuUI")) {
                return
            }
            (function(e, t) {
                typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js"), require("global/document"), require("global/window")) : typeof define === "function" && define.amd ? define(["video.js", "global/document", "global/window"], t) : e.videojsContextmenuUi = t(e.videojs, e.document, e.window)
            }
            )(this, function(e, t, n) {
                "use strict";
                e = e && e.hasOwnProperty("default") ? e["default"] : e;
                t = t && t.hasOwnProperty("default") ? t["default"] : t;
                n = n && n.hasOwnProperty("default") ? n["default"] : n;
                function i(e, t) {
                    e.prototype = Object.create(t.prototype);
                    e.prototype.constructor = e;
                    e.__proto__ = t
                }
                function r(e) {
                    if (e === void 0) {
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                    }
                    return e
                }
                var a = e.getComponent("MenuItem");
                var s = function(e) {
                    i(t, e);
                    function t() {
                        return e.apply(this, arguments) || this
                    }
                    var r = t.prototype;
                    r.handleClick = function t(i) {
                        var r = this;
                        e.prototype.handleClick.call(this);
                        this.options_.listener();
                        n.setTimeout(function() {
                            r.player().contextmenuUI.menu.dispose()
                        }, 1)
                    }
                    ;
                    return t
                }(a);
                var o = e.getComponent("Menu");
                var u = e.dom || e;
                var l = function(t) {
                    i(a, t);
                    function a(i, a) {
                        var o;
                        o = t.call(this, i, a) || this;
                        o.dispose = e.bind(r(o), o.dispose);
                        a.content.forEach(function(t) {
                            var r = function e() {};
                            if (typeof t.listener === "function") {
                                r = t.listener
                            } else if (typeof t.href === "string") {
                                r = function e() {
                                    return n.open(t.href)
                                }
                            }
                            o.addItem(new s(i,{
                                label: t.label,
                                listener: e.bind(i, r)
                            }))
                        });
                        return o
                    }
                    var o = a.prototype;
                    o.createEl = function e() {
                        var n = t.prototype.createEl.call(this);
                        u.addClass(n, "vjs-contextmenu-ui-menu");
                        n.style.left = this.options_.position.left + "px";
                        n.style.top = this.options_.position.top + "px";
                        return n
                    }
                    ;
                    return a
                }(o);
                function d(e) {
                    var i;
                    if (e.getBoundingClientRect && e.parentNode) {
                        i = e.getBoundingClientRect()
                    }
                    if (!i) {
                        return {
                            left: 0,
                            top: 0
                        }
                    }
                    var r = t.documentElement;
                    var a = t.body;
                    var s = r.clientLeft || a.clientLeft || 0;
                    var o = n.pageXOffset || a.scrollLeft;
                    var u = i.left + o - s;
                    var l = r.clientTop || a.clientTop || 0;
                    var d = n.pageYOffset || a.scrollTop;
                    var c = i.top + d - l;
                    return {
                        left: Math.round(u),
                        top: Math.round(c)
                    }
                }
                function c(e, t) {
                    var n = {};
                    var i = d(e);
                    var r = e.offsetWidth;
                    var a = e.offsetHeight;
                    var s = i.top;
                    var o = i.left;
                    var u = t.pageY;
                    var l = t.pageX;
                    if (t.changedTouches) {
                        l = t.changedTouches[0].pageX;
                        u = t.changedTouches[0].pageY
                    }
                    n.y = Math.max(0, Math.min(1, (s - u + a) / a));
                    n.x = Math.max(0, Math.min(1, (l - o) / r));
                    return n
                }
                var f = "5.2.0";
                function p(e) {
                    return e.hasOwnProperty("contextmenuUI") && e.contextmenuUI.hasOwnProperty("menu") && e.contextmenuUI.menu.el()
                }
                function h(e) {
                    var t = e.tagName.toLowerCase();
                    return t === "input" || t === "textarea"
                }
                function v(e, t) {
                    return {
                        left: Math.round(t.width * e.x),
                        top: Math.round(t.height - t.height * e.y)
                    }
                }
                function g(n) {
                    var i = this;
                    if (p(this)) {
                        this.contextmenuUI.menu.dispose();
                        return
                    }
                    if (this.contextmenuUI.options_.excludeElements(n.target)) {
                        return
                    }
                    var r = c(this.el(), n);
                    var a = this.el().getBoundingClientRect();
                    var s = v(r, a);
                    var o = e.browser.IS_FIREFOX ? t.documentElement : t;
                    n.preventDefault();
                    var u = this.contextmenuUI.menu = new l(this,{
                        content: this.contextmenuUI.content,
                        position: s
                    });
                    this.contextmenuUI.closeMenu = function() {
                        e.log.warn("player.contextmenuUI.closeMenu() is deprecated, please use player.contextmenuUI.menu.dispose() instead!");
                        u.dispose()
                    }
                    ;
                    u.on("dispose", function() {
                        e.off(o, ["click", "tap"], u.dispose);
                        i.removeChild(u);
                        delete i.contextmenuUI.menu
                    });
                    this.addChild(u);
                    var d = u.el_.getBoundingClientRect();
                    var f = t.body.getBoundingClientRect();
                    if (this.contextmenuUI.keepInside || d.right > f.width || d.bottom > f.height) {
                        u.el_.style.left = Math.floor(Math.min(s.left, this.player_.currentWidth() - u.currentWidth())) + "px";
                        u.el_.style.top = Math.floor(Math.min(s.top, this.player_.currentHeight() - u.currentHeight())) + "px"
                    }
                    e.on(o, ["click", "tap"], u.dispose)
                }
                function m(t) {
                    var n = this;
                    var i = {
                        keepInside: true,
                        excludeElements: h
                    };
                    t = e.mergeOptions(i, t);
                    if (!Array.isArray(t.content)) {
                        throw new Error('"content" required')
                    }
                    if (p(this)) {
                        this.contextmenuUI.menu.dispose();
                        this.off("contextmenu", this.contextmenuUI.onContextMenu);
                        delete this.contextmenuUI
                    }
                    var r = this.contextmenuUI = function() {
                        m.apply(this, arguments)
                    }
                    ;
                    r.onContextMenu = e.bind(this, g);
                    r.content = t.content;
                    r.keepInside = t.keepInside;
                    r.options_ = t;
                    r.VERSION = f;
                    this.on("contextmenu", r.onContextMenu);
                    this.ready(function() {
                        return n.addClass("vjs-contextmenu-ui")
                    })
                }
                e.registerPlugin("contextmenuUI", m);
                m.VERSION = f;
                return m
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("bcAnalytics")) {
                return
            }
            (function(e, t) {
                typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("global/window"), require("global/document"), require("video.js"), require("@brightcove/loscore")) : typeof define === "function" && define.amd ? define(["global/window", "global/document", "video.js", "@brightcove/loscore"], t) : (e = e || self,
                e.videojsBcAnalytics = t(e.window, e.document, e.videojs, e.videojs.bc_))
            }
            )(this, function(e, t, n, i) {
                "use strict";
                e = e && e.hasOwnProperty("default") ? e["default"] : e;
                t = t && t.hasOwnProperty("default") ? t["default"] : t;
                n = n && n.hasOwnProperty("default") ? n["default"] : n;
                i = i && i.hasOwnProperty("default") ? i["default"] : i;
                var r = function(e, t, n) {
                    if (n === void 0) {
                        n = {}
                    }
                    t.forEach(function(t) {
                        if (e[t] !== undefined) {
                            n[t] = e[t]
                        }
                    });
                    return n
                };
                var a = function e(t, r) {
                    if (r === void 0) {
                        r = []
                    }
                    var a = {};
                    Object.keys(t).forEach(function(s) {
                        var o = t[s];
                        r.push(s);
                        if (i.isObj(o)) {
                            a = n.mergeOptions(a, e(o, r))
                        } else {
                            a[r.join(".")] = o
                        }
                        r.pop()
                    });
                    return a
                };
                var s = function e(t) {
                    return t.charAt(0).toUpperCase() + t.slice(1)
                };
                var o = function e(t, n) {
                    return t + "x" + n
                };
                var u = {
                    memory: ["jsHeapSizeLimit", "usedJSHeapSize", "totalJSHeapSize"],
                    navigation: ["redirectCount", "type", "directedMigration"],
                    timing: ["loadEventEnd", "loadEventStart", "domComplete", "domContentLoadedEventEnd", "domContentLoadedEventStart", "domInteractive", "domLoading", "responseEnd", "responseStart", "requestStart", "secureConnectionStart", "connectEnd", "connectStart", "domainLookupEnd", "domainLookupStart", "fetchStart", "redirectEnd", "redirectStart", "unloadEventEnd", "unloadEventStart", "navigationStart"]
                };
                var l = {
                    bitrate: "bitrates",
                    event: "events"
                };
                var d = function() {
                    function t() {
                        this.data_ = {
                            bitrates: {
                                bitrates: [],
                                playlists: [],
                                rendered: [],
                                throughput: []
                            },
                            events: [],
                            mr: 0,
                            performance: {},
                            content: {},
                            player: {
                                dimensions: [],
                                pixelratio: [],
                                screendimensions: []
                            },
                            frames: {}
                        }
                    }
                    var d = t.prototype;
                    d.keys = function e() {
                        return Object.keys(this.data_)
                    }
                    ;
                    d.append = function e(t) {
                        t = l.hasOwnProperty(t) ? l[t] : t;
                        if (!this.data_.hasOwnProperty(t)) {
                            throw new Error('"' + t + '" is not a known QosBuffer key')
                        }
                        for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++) {
                            i[r - 1] = arguments[r]
                        }
                        this["append" + s(t) + "_"].apply(this, i)
                    }
                    ;
                    d.flush = function e() {
                        var t = this;
                        for (var r = arguments.length, a = new Array(r), o = 0; o < r; o++) {
                            a[o] = arguments[o]
                        }
                        if (!a.length) {
                            a = this.keys()
                        }
                        for (var u = 0; u < a.length; u++) {
                            if (!this.data_.hasOwnProperty(a[u])) {
                                throw new Error('"' + a[u] + '" is not a known QosBuffer key')
                            }
                        }
                        var l = a.map(function(e) {
                            return t["flush" + s(e) + "_"]()
                        });
                        var d = n.mergeOptions.apply(n, l);
                        var c = i.qs().stringify(d).length;
                        if (c > 3e3 && d["qos.bitrates"]) {
                            d["qos.bitrates"] = JSON.stringify({
                                bitrates: [],
                                playlists: [],
                                rendered: [],
                                throughput: []
                            })
                        }
                        return d
                    }
                    ;
                    d.appendBitrates_ = function e(t) {
                        var n = this;
                        if (typeof t.playlists !== "undefined") {
                            this.data_.bitrates.playlists.push([Date.now(), t.bitrates, t.playlists]);
                            delete t.bitrates;
                            delete t.playlists
                        }
                        Object.keys(t).forEach(function(e) {
                            n.data_.bitrates[e].push([Date.now(), t[e]])
                        })
                    }
                    ;
                    d.appendMr_ = function e(t) {
                        this.data_.mr = t ? 1 : null
                    }
                    ;
                    d.appendPerformance_ = function t(n) {
                        var a = this;
                        var s = e.performance;
                        if (i.isNil(s)) {
                            return
                        }
                        Object.keys(u).forEach(function(e) {
                            if (!i.isNil(s[e])) {
                                a.data_.performance[e] = r(s[e], u[e])
                            }
                        });
                        if (i.isFn(s.measure)) {
                            ["bcParse", "bcInit"].forEach(function(e) {
                                s.getEntriesByName(e, "measure").forEach(function(t) {
                                    a.data_.performance[e] = t.duration
                                })
                            })
                        }
                        if (this.data_.performance.navigation) {
                            this.data_.performance.navigation.directedMigration = n ? i.qs().parse(n).directedMigration === "true" : false
                        }
                    }
                    ;
                    d.appendFrames_ = function e(t) {
                        this.data_.frames = {
                            dropped: t.droppedVideoFrames,
                            corrupted: t.corruptedVideoFrames,
                            total: t.totalVideoFrames
                        }
                    }
                    ;
                    d.appendPlayer_ = function t(n, i) {
                        if (i === void 0) {
                            i = Date.now()
                        }
                        this.data_.player.dimensions.push([i, o(n.width, n.height), o(n.computedWidth, n.computedHeight)]);
                        this.data_.player.pixelratio.push([i, e.devicePixelRatio]);
                        this.data_.player.screendimensions.push([i, o(e.screen.width, e.screen.height)])
                    }
                    ;
                    d.appendEvents_ = function e() {
                        for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
                            n[i] = arguments[i]
                        }
                        this.data_.events.push({
                            type: n.join("."),
                            time: Date.now()
                        })
                    }
                    ;
                    d.appendContent_ = function e(t) {
                        this.data_.content = {
                            sourceMimeType: t.sourceMimeType
                        }
                    }
                    ;
                    d.flushBitrates_ = function e() {
                        var t = this.data_.bitrates;
                        var n = {};
                        if (t.bitrates.length || t.playlists.length || t.rendered.length || t.throughput.length) {
                            n["qos.bitrates"] = JSON.stringify(t)
                        }
                        t.bitrates.length = 0;
                        t.playlists.length = 0;
                        t.rendered.length = 0;
                        t.throughput.length = 0;
                        return n
                    }
                    ;
                    d.flushEvents_ = function e() {
                        var t = this.data_.events;
                        var n = {};
                        t.forEach(function(e) {
                            var t = e.time
                              , i = e.type;
                            var r = "qos.events." + i;
                            if (Array.isArray(n[r])) {
                                n[r].push(t)
                            } else if (n.hasOwnProperty(r)) {
                                n[r] = [n[r], t]
                            } else {
                                n[r] = t
                            }
                        });
                        Object.keys(n).forEach(function(e) {
                            if (Array.isArray(n[e])) {
                                n[e] = JSON.stringify(n[e])
                            }
                        });
                        t.length = 0;
                        return n
                    }
                    ;
                    d.flushMr_ = function e() {
                        return {
                            "qos.mr": this.data_.mr
                        }
                    }
                    ;
                    d.flushFrames_ = function e() {
                        var t = a(this.data_.frames, ["qos", "frames"]);
                        this.data_.frames = {};
                        return t
                    }
                    ;
                    d.flushPerformance_ = function e() {
                        return a(this.data_.performance, ["qos", "performance"])
                    }
                    ;
                    d.flushPlayer_ = function e() {
                        var t = this.data_.player;
                        var n = {};
                        Object.keys(t).forEach(function(e) {
                            var i = t[e];
                            if (i.length) {
                                n["qos.player." + e] = JSON.stringify(i);
                                i.length = 0
                            }
                        });
                        return n
                    }
                    ;
                    d.flushContent_ = function e() {
                        return a(this.data_.content, ["qos", "content"])
                    }
                    ;
                    return t
                }();
                var c = ["ad-playback", "ads-ready?", "postroll?", "preroll?"];
                var f = function e(t) {
                    return t.usingPlugin("ads") ? t.ads.state : undefined
                };
                var p = function e(t) {
                    return t.usingPlugin("ads") && !!t.adonly
                };
                var h = function e(t) {
                    return c.indexOf(t) > -1
                };
                var v = function e(t) {
                    return t.usingPlugin("ads") && i.isFn(t.ads.inAdBreak)
                };
                var g = function e(t) {
                    if (!t.usingPlugin("ads")) {
                        return false
                    }
                    if (p(t)) {
                        return true
                    }
                    if (v(t)) {
                        return t.ads.isInAdMode()
                    }
                    return h(t.ads.state)
                };
                var m = function e(t) {
                    if (!t.usingPlugin("ads")) {
                        return false
                    }
                    return t.ads.isContentResuming()
                };
                var y = function e(t, n) {
                    if (v(n) && t && t.type === "loadstart") {
                        return true
                    }
                    return !g(n)
                };
                var _ = function e(t) {
                    var n = {};
                    if (t.ima3) {
                        var a = t.ima3.currentAdEventInfo;
                        n.plugin = "ima3";
                        if (i.isFn(t.ima3)) {
                            return n
                        }
                        n.pluginVersion = t.ima3.VERSION || t.ima3.version;
                        n.adTech = t.ima3.adTech;
                        n.requestMode = t.ima3.settings.requestMode;
                        n.timeout = t.ima3.settings.timeout;
                        if (a) {
                            r(a, ["adType", "adPodLength", "adPodId", "creativeFormat", "creativeLength", "creativeId", "creativeIndex", "advertiserName", "wrapperCreativeIds", "dealId", "adId", "adTitle", "adSystem", "creativeAdId"], n);
                            var s = a.creativeIndex;
                            if (s && s.length) {
                                n.firstPlayedAdIndex = s[0]
                            }
                            n.startedInAdPod = a.started;
                            n.completedInAdPod = a.completed
                        }
                    } else if (t.FreeWheelPlugin) {
                        n.plugin = "freewheel";
                        if (i.isFn(t.FreeWheelPlugin)) {
                            return n
                        }
                        n.pluginVersion = t.FreeWheelPlugin.VERSION || t.FreeWheelPlugin.getVersion()
                    }
                    return n
                };
                var b = function e(t) {
                    t.adBreakIndex = null;
                    t.hasAdBreakStarted = false;
                    t["ads-request"] = null;
                    t["ads-response-received"] = null;
                    t["ads-loading"] = [];
                    t["ads-ad-started"] = [];
                    t["ads-ad-ended"] = []
                };
                var S = function e() {
                    var t = {};
                    b(t);
                    return t
                };
                var A = function e(t, n, i) {
                    var r = t.currentAdSequence_;
                    var a = ["ads-loading", "ads-ad-started", "ads-ad-ended"];
                    if (n === "ads-request") {
                        b(r)
                    } else if (n === "adstart" || n === "ads-loading") {
                        if (!r.hasAdBreakStarted) {
                            if (r.adBreakIndex === null) {
                                r.adBreakIndex = 0
                            } else {
                                r.adBreakIndex++
                            }
                            r.hasAdBreakStarted = true;
                            a.forEach(function(e) {
                                r[e].push([])
                            })
                        }
                    } else if (n === "adend") {
                        r.hasAdBreakStarted = false
                    }
                    if (a.indexOf(n) > -1) {
                        r[n][r.adBreakIndex].push(i)
                    } else if (n === "ads-request" || n === "ads-response-received") {
                        r[n] = i
                    }
                };
                var T = "sendBeacon"in e.navigator;
                var k = e.Set;
                var E = "lbu";
                var P = 4e3;
                var I = new k;
                ["account", "domain", "event", "player"].forEach(function(e) {
                    return I.add(e)
                });
                var C = new k;
                ["account", "catalog_url", "destination", "domain", "dropped_frames", "error_code", "event", "feature", "file_size_bytes", "forward_buffer_seconds", "load_time_ms", "measured_bps", "platform", "platform_version", "player", "player_height", "player_name", "player_width", "range", "rebuffering_count", "rebuffering_seconds", "rendition_height", "rendition_indicated_bps", "rendition_mime_type", "rendition_url", "rendition_width", "response_time_ms", "session", "start_time_ms", "source", "time", "video", "video_duration", "video_name", "video_seconds_viewed"].forEach(function(e) {
                    return C.add(e)
                });
                var w = function e(t, n) {
                    return Math.floor(t) + ".." + (Math.floor(n) - 1)
                };
                var j = function e(t) {
                    var n = 2166136261;
                    var i = n;
                    for (var r = 0; r < t.length; ++r) {
                        i ^= t.charCodeAt(r);
                        i *= 16777619
                    }
                    return i >>> 0
                };
                var L = function e(t, n, i, r) {
                    var a = "players.brightcove.com/" + t + "/" + n + "_" + i;
                    if (r) {
                        a += "/" + r
                    }
                    return a
                };
                var O = function e(t, n) {
                    var r = i.qs();
                    Object.keys(n).forEach(function(e) {
                        if (i.isNil(n[e])) {
                            delete n[e]
                        }
                    });
                    var a = t + "?" + r.stringify(n);
                    if (a.length <= P) {
                        return a
                    }
                    Object.keys(n).forEach(function(e) {
                        if (!C.has(e)) {
                            delete n[e]
                        }
                    });
                    n.usage = E;
                    return t + "?" + r.stringify(n)
                };
                var x = function e(t, n, i, r, a) {
                    var s = n - t;
                    if (a !== undefined && a < n) {
                        s -= a - t
                    } else if (i !== undefined && r !== undefined) {
                        if (i < t) {
                            i = t
                        }
                        if (r > n) {
                            r = n
                        }
                        s -= r - i
                    }
                    return s
                };
                var D = function e(t) {
                    for (var i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), a = 1; a < i; a++) {
                        r[a - 1] = arguments[a]
                    }
                    var s = n.mergeOptions.apply(n, [t.params || {}].concat(r));
                    delete t.params;
                    return s
                };
                var N = function e(t, n) {
                    var r = t.mediainfo;
                    var a = r && r.duration || t.duration();
                    if (r) {
                        if (n.video === undefined) {
                            n.video = r.id
                        }
                        if (n.video_name === undefined) {
                            n.video_name = r.name
                        }
                    }
                    if (i.isNum(a) && n.video_duration === undefined) {
                        n.video_duration = Math.floor(a);
                        if (n.video_duration < 1 || n.video_duration === Infinity) {
                            n.video_duration = null
                        }
                    }
                    return n
                };
                var R = function e(t, n) {
                    var i = t.preload();
                    if (typeof i !== "string") {
                        i = t.el().getAttribute("preload")
                    }
                    if (typeof i === "string" && i.length === 0) {
                        i = "auto"
                    }
                    if (i) {
                        n.preload = i
                    }
                };
                var M = function() {
                    function a(e, t, i, r) {
                        if (r === void 0) {
                            r = {}
                        }
                        this.baseUrl_ = i;
                        this.logger_ = r.logger;
                        this.history_ = t;
                        this.currentAdSequence_ = S();
                        this.player_ = e;
                        this.metrics_ = [];
                        this.playerId = r.playerId;
                        this.embedId = r.embedId;
                        this.applicationId = r.applicationId;
                        this.eventCount_ = 0;
                        this.streamCount_ = -1;
                        this.hashUser_ = true;
                        this.playerUrl_ = null;
                        this.user(r.user || null);
                        this.device(r.device || null);
                        if (r.corpCommsApp) {
                            n.log.warn("The `corpCommsApp` option is deprecated. Please use `application` instead.")
                        }
                        this.application(r.application || r.corpCommsApp || null);
                        this.defaultParams_ = {
                            domain: "videocloud",
                            platform: "video-js",
                            session: ""
                        };
                        for (var a = 0; a < 3; a++) {
                            this.defaultParams_.session += (Math.random() * 4294967295 >>> 0).toString(16)
                        }
                        this.qos = new d(this);
                        this.resetTimesOf()
                    }
                    var s = a.prototype;
                    s.logger = function e() {
                        if (this.logger_)
                            ;
                    }
                    ;
                    s.metrics = function e() {
                        return this.metrics_.map(n.mergeOptions)
                    }
                    ;
                    s.resetTimesOf = function e() {
                        this.timeOfImpression = null;
                        this.timeOfView = null
                    }
                    ;
                    s.defaultParams = function e(t) {
                        if (t) {
                            if (t.player) {
                                this.playerUrl_ = t.player
                            }
                            t = i.isFn(t) ? t() : t;
                            this.defaultParams_ = n.mergeOptions(this.defaultParams_, t)
                        }
                        return this.defaultParams_
                    }
                    ;
                    s.getSession = function e() {
                        return this.defaultParams_.session
                    }
                    ;
                    s.user = function e(t) {
                        if (t === null || i.isNonEmptyStr(t) || i.isNum(t)) {
                            this.user_ = t;
                            this.hashUser_ = true
                        }
                        return this.user_
                    }
                    ;
                    s.setUser = function e(t) {
                        if (t === null || i.isNonEmptyStr(t)) {
                            this.user_ = t;
                            this.hashUser_ = false
                        }
                    }
                    ;
                    s.getUser = function e() {
                        return this.user_
                    }
                    ;
                    s.application = function e(t) {
                        if (t === null || i.isNonEmptyStr(t) || i.isNum(t)) {
                            this.application_ = t
                        }
                        return this.application_
                    }
                    ;
                    s.corpCommsApp = function e(t) {
                        if (t === null || i.isNonEmptyStr(t) || i.isNum(t)) {
                            this.application_ = t;
                            n.log.warn("The corpCommsApp() method is deprecated. Please use application() instead.")
                        }
                        return this.application_
                    }
                    ;
                    s.device = function e(t) {
                        if (t === null || i.isNonEmptyStr(t) || i.isNum(t)) {
                            this.device_ = t
                        }
                        return this.device_
                    }
                    ;
                    s.player = function e(t) {
                        if (t === null || i.isNonEmptyStr(t)) {
                            this.defaultParams_.player = t;
                            this.playerUrl_ = t
                        }
                        return this.playerUrl_ || this.defaultParams_.player
                    }
                    ;
                    s.send = function r(a, s) {
                        var o;
                        if (a === void 0) {
                            a = {}
                        }
                        if (s === void 0) {
                            s = {}
                        }
                        if (this.user()) {
                            if (this.hashUser_) {
                                a.user = j(this.user())
                            } else {
                                a.user = this.user()
                            }
                        }
                        if (this.application()) {
                            a.application = this.application();
                            a.user = this.user() || this.device()
                        }
                        if (i.isNil(a.time)) {
                            a.time = Date.now()
                        }
                        s.qos = Array.isArray(s.qos) ? s.qos : [];
                        s.qos.push("mr");
                        a = n.mergeOptions(this.defaultParams_, a, (o = this.qos).flush.apply(o, s.qos));
                        a.seq = "" + this.eventCount_;
                        this.eventCount_++;
                        if ("streamCount"in s) {
                            a.seq += "_" + s.streamCount
                        }
                        if (typeof this.player_.getAccountId === "function") {
                            var u = this.player_.getAccountId();
                            a.account = u;
                            a.player = this.playerUrl_ || L(u, this.playerId, this.embedId, this.applicationId)
                        }
                        I.forEach(function(e) {
                            if (i.isNil(a[e])) {
                                throw new Error('the "' + e + '" param is required')
                            }
                        });
                        var l = O(this.baseUrl_, a);
                        if (s.useSendBeaconOnly) {
                            if (T) {
                                e.navigator.sendBeacon(l)
                            } else {
                                return null
                            }
                        } else {
                            var d = t.createElement("img");
                            d.src = l
                        }
                        this.metrics_.push(a);
                        this.player_.trigger({
                            params: a,
                            type: "analytics_request"
                        });
                        this.player_.trigger({
                            params: a,
                            type: "analytics_request_" + a.event
                        });
                        return {
                            params: a,
                            url: l
                        }
                    }
                    ;
                    s.sendCatalog_ = function e(t, n) {
                        if (n === void 0) {
                            n = {}
                        }
                        var i = n
                          , r = i.error
                          , a = i.xhr;
                        if (r && a) {
                            r.status = a.status
                        }
                        if (r) {
                            t.error = JSON.stringify(r)
                        }
                        return this.send(t, n)
                    }
                    ;
                    s.sendVideoImpression = function e(t) {
                        if (t === void 0) {
                            t = {}
                        }
                        var r = D(t, {
                            event: "video_impression"
                        });
                        var a = _(this.player_);
                        if (Object.keys(a).length > 0) {
                            r.web_ad_info = JSON.stringify(a)
                        }
                        var s = i.isNonEmptyStr(this.player_.currentSrc());
                        if (!s || this.timeOfImpression) {
                            return null
                        }
                        if (n.bc_.isNonEmptyStr(this.player_.currentType())) {
                            this.qos.append("content", {
                                sourceMimeType: this.player_.currentType()
                            });
                            t.qos = t.qos || ["content"]
                        }
                        this.streamCount_++;
                        t.streamCount = this.streamCount_;
                        N(this.player_, r);
                        r.autoplay = this.player_.autoplay();
                        R(this.player_, r);
                        var o = this.send(r, t);
                        if (o) {
                            this.timeOfImpression = Number(o.params.time)
                        }
                        return o
                    }
                    ;
                    s.sendVideoView = function e(t) {
                        if (t === void 0) {
                            t = {}
                        }
                        var n = D(t, {
                            event: "video_view"
                        });
                        var r = i.isNonEmptyStr(this.player_.currentSrc());
                        if (!r || this.timeOfView || !this.timeOfImpression) {
                            return null
                        }
                        var a = this.history_;
                        var s = a.first("canplay");
                        var o = a.first("loadstart");
                        var u = a.first("play");
                        if (s) {
                            n.load_time_ms = s - this.timeOfImpression
                        }
                        n.start_time_ms = x(u || o, n.time, a.first("adstart", true), a.first("adend", true), a.first("adtimeout", true));
                        N(this.player_, n);
                        if (this.player_.usingPlugin("pluginDev")) {
                            n.feature = "iris"
                        }
                        t.streamCount = this.streamCount_;
                        var l = this.send(n, t);
                        if (l) {
                            this.timeOfView = Number(l.params.time)
                        }
                        return l
                    }
                    ;
                    s.sendVideoEngagement = function e(t, n, r) {
                        if (r === void 0) {
                            r = {}
                        }
                        var a = D(r, {
                            event: "video_engagement"
                        });
                        var s = n.buffered
                          , o = n.duration
                          , u = n.playbackEndTime
                          , l = n.height
                          , d = n.mediainfo
                          , c = n.playbackRate
                          , f = n.rebufferingCount
                          , p = n.rendition
                          , h = n.playbackStartTime
                          , v = n.rangeStart
                          , g = n.rangeEnd
                          , m = n.stats
                          , y = n.width;
                        var _ = u - h;
                        r.qos = r.qos || ["bitrates", "events", "player", "frames"];
                        t.length = t.end - t.start;
                        a.player_height = l;
                        a.player_width = y;
                        a.video_duration = o;
                        if (d) {
                            a.video = d.id;
                            a.video_name = d.name
                        }
                        if (p) {
                            a.rendition_url = p.url;
                            a.rendition_indicated_bps = p.indicatedBPS;
                            a.rendition_mime_type = p.mimeType;
                            a.rendition_height = p.height;
                            a.rendition_width = p.width
                        }
                        if (m) {
                            if (!i.isNil(m.mediaRequests)) {
                                a.media_requests = m.mediaRequests
                            }
                            if (!i.isNil(m.mediaTransferDuration)) {
                                a.media_transfer_duration = m.mediaTransferDuration
                            }
                            if (!i.isNil(m.mediaBytesTransferred)) {
                                a.media_bytes_transferred = m.mediaBytesTransferred
                            }
                            if (!i.isNil(m.bandwidth)) {
                                a.measured_bps = m.bandwidth
                            }
                            if (!i.isNil(m.mediaSecondsLoaded)) {
                                a.media_seconds_loaded = m.mediaSecondsLoaded
                            }
                        }
                        var b = _ / c * 1e3;
                        var S = t.end - t.start;
                        var A = 100;
                        var T = Math.floor((S - b) / A) * A / 1e3;
                        if (f > 0) {
                            a.rebuffering_count = f
                        }
                        if (T > 0) {
                            a.rebuffering_seconds = T
                        }
                        if (s) {
                            var k = 0;
                            for (var E = 0; E < s.length; E++) {
                                var P = s.start(E);
                                var I = s.end(E);
                                if (u >= P && u <= I) {
                                    k = I - u;
                                    break
                                }
                            }
                            a.forward_buffer_seconds = k
                        }
                        if (_ < 1 && !a.rebuffering_seconds) {
                            return null
                        }
                        var C = this.history_.filter(function(e) {
                            return e.name === "licenserequestattempted" && e.time >= t.start && e.time < t.end
                        });
                        if (C.length) {
                            a.license_request_attempts = C.length
                        }
                        N(this.player_, a);
                        r.streamCount = this.streamCount_;
                        if (a.video_duration === Infinity) {
                            a.video_seconds_viewed = Math.round(_);
                            delete a.video_duration
                        } else if (_ >= 1) {
                            a["qos.derived_range"] = w(h, u);
                            a.range = v + ".." + g
                        }
                        return this.send(a, r)
                    }
                    ;
                    s.sendVideoComplete = function e(t) {
                        if (t === void 0) {
                            t = {}
                        }
                        var n = D(t, {
                            event: "video_complete"
                        });
                        N(this.player_, n);
                        t.streamCount = this.streamCount_;
                        return this.send(n, t)
                    }
                    ;
                    s.sendError = function e(t) {
                        if (t === void 0) {
                            t = {}
                        }
                        var n = this.player_.error();
                        if (!n) {
                            return null
                        }
                        var r = D(t, {
                            event: "error"
                        });
                        var a = i.isFn(this.player_.errors) && i.isFn(this.player_.errors.getAll) && this.player_.errors.getAll() || {
                            unknown: {
                                type: "MEDIA_ERR_UNKNOWN"
                            }
                        };
                        if (n && a.hasOwnProperty(String(n.code))) {
                            r.error_code = a[String(n.code)].type
                        } else if (n.type !== undefined) {
                            r.error_code = n.type
                        } else {
                            r.error_code = a.unknown.type
                        }
                        N(this.player_, r);
                        t.streamCount = this.streamCount_;
                        return this.send(r, t)
                    }
                    ;
                    s.sendCatalogRequest = function e(t, n) {
                        if (n === void 0) {
                            n = {}
                        }
                        var i = D(n, {
                            event: "catalog_request",
                            url: t
                        });
                        return this.sendCatalog_(i, n)
                    }
                    ;
                    s.sendCatalogRequestError = function e(t, n) {
                        if (n === void 0) {
                            n = {}
                        }
                        var i = D(n, {
                            event: "catalog_request_error",
                            url: t
                        });
                        if (n.error) {
                            n.error = r(n.error, ["code", "message", "type"])
                        }
                        return this.sendCatalog_(i, n)
                    }
                    ;
                    s.sendCatalogResponse = function e(t, n) {
                        if (n === void 0) {
                            n = {}
                        }
                        var i = D(n, {
                            event: "catalog_response",
                            url: t
                        });
                        i.time = Date.now();
                        i.response_time_ms = i.time - this.history_.last("catalog_request");
                        return this.sendCatalog_(i, n)
                    }
                    ;
                    s.sendAdEnd = function e(t) {
                        if (t === void 0) {
                            t = {}
                        }
                        var n = _(this.player_);
                        var i = this.currentAdSequence_["ads-ad-started"];
                        var r = this.currentAdSequence_.adBreakIndex;
                        if (n.plugin !== undefined) {
                            if (n.adType === "preroll" && i.length > 0 && i[0].length > 0) {
                                var a = this.history_.first("play", true);
                                n.prerollDelay = i[0][0] - a;
                                n.firstPlayInSession = a
                            }
                            n.adsRequest = this.currentAdSequence_["ads-request"];
                            n.adsResponseReceived = this.currentAdSequence_["ads-response-received"];
                            n.adsLoading = this.currentAdSequence_["ads-loading"][r];
                            n.adsAdStarted = this.currentAdSequence_["ads-ad-started"][r];
                            n.adsAdEnded = this.currentAdSequence_["ads-ad-ended"][r]
                        } else {
                            n.plugin = "unknown"
                        }
                        var s = {
                            event: "ad_end",
                            web_ad_info: JSON.stringify(n)
                        };
                        t.streamCount = this.streamCount_;
                        return this.send(N(this.player_, D(t, s)), t)
                    }
                    ;
                    s.sendAdHardTimeout = function e(t) {
                        if (t === void 0) {
                            t = {}
                        }
                        t.streamCount = this.streamCount_;
                        return this.send(N(this.player_, D(t, {
                            event: "ad_hard_timeout"
                        })), t)
                    }
                    ;
                    s.sendAdStart = function e(t) {
                        if (t === void 0) {
                            t = {}
                        }
                        t.streamCount = this.streamCount_;
                        return this.send(N(this.player_, D(t, {
                            event: "ad_start"
                        })), t)
                    }
                    ;
                    s.sendAdTimeout = function e(t) {
                        if (t === void 0) {
                            t = {}
                        }
                        t.streamCount = this.streamCount_;
                        return this.send(N(this.player_, D(t, {
                            event: "ad_timeout"
                        })), t)
                    }
                    ;
                    s.sendPlayRequest = function e(t) {
                        if (t === void 0) {
                            t = {}
                        }
                        t.streamCount = this.streamCount_;
                        return this.send(N(this.player_, D(t, {
                            event: "play_request"
                        })), t)
                    }
                    ;
                    s.sendPlayerInit = function e(t) {
                        if (t === void 0) {
                            t = {}
                        }
                        return this.send(D(t, {
                            event: "player_init"
                        }), t)
                    }
                    ;
                    s.sendPlayerLoad = function e(t) {
                        if (t === void 0) {
                            t = {}
                        }
                        return this.send(D(t, {
                            event: "player_load"
                        }), t)
                    }
                    ;
                    return a
                }();
                var U = function(e) {
                    var t = e.bcAnalyticsLogger && e.bcAnalyticsLogger();
                    var n = function e() {
                        return t && t.add.apply(t, arguments)
                    };
                    return n
                };
                function B(e, t) {
                    e.prototype = Object.create(t.prototype);
                    e.prototype.constructor = e;
                    e.__proto__ = t
                }
                var F = function e(t) {
                    return typeof t === "number" && !isNaN(t) && t >= 0 && t < Infinity
                };
                var V = function e(t) {
                    return t.map(function(e) {
                        return Math.floor(e)
                    }).reduce(function(e, t) {
                        var n = e[e.length - 1];
                        if (t !== n) {
                            e.push(t)
                        }
                        return e
                    }, [])
                };
                var q = function e(t) {
                    return t.reduce(function(e, t) {
                        var n = e[e.length - 1];
                        if (n) {
                            if (n.end + 1 === t) {
                                n.end = t
                            } else {
                                e.push({
                                    start: t,
                                    end: t
                                })
                            }
                        } else {
                            e.push({
                                start: t,
                                end: t
                            })
                        }
                        return e
                    }, [])
                };
                var H = function e(t) {
                    return t.map(function(e) {
                        var t = e.start
                          , n = e.end;
                        var i = n - t;
                        if (i > 0) {
                            return {
                                start: t,
                                end: n - 1,
                                remainder: n
                            }
                        }
                        return {
                            start: t,
                            end: n,
                            remainder: n
                        }
                    })
                };
                var G = function e(t) {
                    var n = [];
                    var i = t.shift() || {}
                      , r = i.start
                      , a = i.end
                      , s = i.remainder;
                    while (F(r) && F(a) && F(s) && r === a && r === s) {
                        var o = t.shift() || {};
                        r = o.start;
                        a = o.end;
                        s = o.remainder
                    }
                    if (t.length === 0) {
                        n.push(s)
                    }
                    for (var u = 0; u < t.length; u++) {
                        var l = t[u]
                          , d = l.start
                          , c = l.end
                          , f = l.remainder;
                        for (var p = d; p <= (f || c); p++) {
                            n.push(p)
                        }
                    }
                    return {
                        start: r,
                        end: a,
                        remainders: n,
                        ranges: t.length
                    }
                };
                var W = function e(t) {
                    return G(H(q(V(t))))
                };
                var K = 1;
                function z() {
                    return K++
                }
                var Y = [];
                var X = function e(t, n, i, r, a) {
                    if (a === void 0) {
                        a = true
                    }
                    var s = [].concat(i).sort();
                    if (n !== "removeEventListener") {
                        t.off(s, r)
                    } else {
                        s.forEach(function(e) {
                            t.removeEventListener(e, r)
                        })
                    }
                    if (!a) {
                        return
                    }
                    var o = Y.length;
                    var u = function e() {
                        var n = Y[o];
                        if (n.context === t && (n.fn.guid === r.guid || n.fn === r) && s.every(function(e, t) {
                            return n.events[t]
                        })) {
                            Y.splice(o, 1);
                            return "break"
                        }
                    };
                    while (o--) {
                        var l = u();
                        if (l === "break")
                            break
                    }
                };
                var Q = function e() {
                    var t = Y.length;
                    while (t--) {
                        var n = Y.shift()
                          , i = n.context
                          , r = n.mode
                          , a = n.events
                          , s = n.fn;
                        var o = "off";
                        if (r === "addEventListener") {
                            o = "removeEventListener"
                        }
                        X(i, o, a, s, false)
                    }
                };
                var Z = function e(t, n, i, r) {
                    var a = [].concat(i).sort();
                    var s = {
                        events: a,
                        fn: r,
                        mode: n,
                        context: t
                    };
                    if (n === "one" || n === "onePerSrc") {
                        s.fn = function() {
                            var e = "off";
                            if (s.mode === "addEventListener") {
                                e = "removeEventListener"
                            }
                            X(s.context, e, s.events, s.fn);
                            for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
                                n[i] = arguments[i]
                            }
                            return r.apply(this, n)
                        }
                        ;
                        if (!r.guid) {
                            r.guid = z()
                        }
                        s.fn.guid = r.guid
                    }
                    Y.push(s);
                    if (n === "addEventListener") {
                        s.events.forEach(function(e) {
                            s.context.addEventListener(e, s.fn)
                        })
                    } else {
                        s.context[s.mode](s.events, s.fn)
                    }
                };
                var J = function e() {
                    var t = Y.slice(0);
                    Q();
                    t.forEach(function(e) {
                        var t = e.context
                          , n = e.mode
                          , i = e.events
                          , r = e.fn;
                        Z(t, n, i, r)
                    })
                };
                var $ = 1e4;
                var ee = function e(t) {
                    return Boolean(t.onceux && t.onceux.currentTime && t.onceux.timeline)
                };
                var te = function(e) {
                    B(t, e);
                    function t(t, n) {
                        var i;
                        i = e.call(this) || this;
                        i.player_ = t;
                        i.logger_ = n;
                        i.stateBySrc_ = {};
                        i.lastStateRecord_ = 0;
                        i.disposed_ = false;
                        return i
                    }
                    var i = t.prototype;
                    i.logger = function e() {}
                    ;
                    i.stateBySrc = function e(t) {
                        if (t === void 0) {
                            t = this.player_.currentSrc()
                        }
                        if (!this.stateBySrc_.hasOwnProperty(t)) {
                            this.stateBySrc_[t] = {
                                buffered: null,
                                duration: 0,
                                end: 0,
                                height: 0,
                                mediainfo: null,
                                playbackRate: 1,
                                rebufferingCount: 0,
                                src: t,
                                start: 0,
                                width: 0,
                                playbackStartTime: 0,
                                playbackEndTime: 0,
                                stats: null,
                                rendition: null,
                                videoPlaybackQuality: null,
                                times: []
                            }
                        }
                        var n = this.player_.tech_ && this.player_.tech_.vhs;
                        this.stateBySrc_[t].stats = n && n.stats || null;
                        return this.stateBySrc_[t]
                    }
                    ;
                    i.clearStateBySrc = function e(t) {
                        if (t === void 0) {
                            t = this.player_.currentSrc()
                        }
                        delete this.stateBySrc_[t]
                    }
                    ;
                    i.recordState = function e() {
                        var t = this.player_;
                        var n = this.stateBySrc();
                        n.mediainfo = t.mediainfo;
                        n.playbackEndTime = t.currentTime();
                        n.times.push(n.playbackEndTime);
                        if (ee(t)) {
                            n.duration = t.onceux.timeline.contentDuration
                        } else {
                            n.duration = t.duration()
                        }
                        n.buffered = t.buffered();
                        n.playbackRate = t.playbackRate()
                    }
                    ;
                    i.isTracking = function e() {
                        return !!this.timerId_
                    }
                    ;
                    i.start = function e(t) {
                        var n = this;
                        if (t === void 0) {
                            t = {}
                        }
                        if (this.disposed_) {
                            return
                        }
                        var i = t
                          , r = i.reason
                          , a = i.src;
                        if (!a) {
                            a = this.player_.currentSrc()
                        }
                        var s = this.stateBySrc(a);
                        s.playbackStartTime = s.playbackEndTime = this.player_.currentTime();
                        if (ee(this.player_)) {
                            s.duration = this.player_.onceux.timeline.contentDuration
                        } else {
                            s.duration = this.player_.duration()
                        }
                        s.rebufferingCount = 0;
                        this.player_.clearTimeout(this.timerId_);
                        this.timerCreatedAt_ = Date.now();
                        this.timerId_ = this.player_.setTimeout(function() {
                            return n.stop({
                                src: a,
                                reason: "engagement timer fired"
                            })
                        }, $);
                        return this
                    }
                    ;
                    i.prepareState_ = function e(t) {
                        var i = this.player_;
                        var r = this.stateBySrc(t);
                        r.height = Math.round(i.currentHeight());
                        r.width = Math.round(i.currentWidth());
                        var a = i.tech_ && i.tech_.vhs;
                        if (a && a.playlists && a.playlists.media()) {
                            var s = a.playlists.media();
                            var o = r.rendition = {
                                url: s.resolvedUri,
                                mimeType: i.currentType()
                            };
                            if (s.attributes) {
                                o.indicatedBPS = s.attributes.BANDWIDTH;
                                if (s.attributes.RESOLUTION) {
                                    o.height = s.attributes.RESOLUTION.height;
                                    o.width = s.attributes.RESOLUTION.width
                                }
                            }
                        }
                        r.videoPlaybackQuality = i.getVideoPlaybackQuality();
                        if (r.mediainfo) {
                            var u = {};
                            Object.keys(r.mediainfo).forEach(function(e) {
                                if (!/_/.test(e)) {
                                    u[e] = r.mediainfo[e]
                                }
                            });
                            r.mediainfo = u
                        }
                        r.times.push(i.currentTime());
                        var l = W(r.times)
                          , d = l.start
                          , c = l.end
                          , f = l.remainders
                          , p = l.ranges;
                        r.times = f;
                        return n.mergeOptions({
                            rangeExtras: p,
                            rangeStart: d,
                            rangeEnd: c
                        }, r)
                    }
                    ;
                    i.stop = function e(t) {
                        var n = this;
                        if (t === void 0) {
                            t = {}
                        }
                        if (!t.src) {
                            t.src = this.player_.currentSrc()
                        }
                        if (this.isTracking()) {
                            this.player_.clearTimeout(this.timerId_);
                            this.timerId_ = null;
                            var i = this.stateBySrc(t.src);
                            var r = (i.duration - i.playbackEndTime) * 1e3;
                            if (!this.player_.ended() && r > 0 && r < 1500) {
                                this.timerId_ = true;
                                Z(this.player_, "one", "ended", function() {
                                    n.recordState();
                                    n.stop({
                                        reason: "content ended after we delayed the engager"
                                    })
                                });
                                return this
                            }
                            t.state = this.prepareState_(t.src);
                            t.period = t.period || {};
                            t.period.start = t.period.start || this.timerCreatedAt_;
                            t.period.end = t.period.end || Date.now();
                            this.trigger({
                                type: "engagement",
                                engagement: t
                            })
                        }
                        return this
                    }
                    ;
                    i.dispose = function e() {
                        this.disposed_ = true;
                        this.stop({
                            ignoreAdState: true,
                            reason: "player disposed"
                        });
                        this.off();
                        return this
                    }
                    ;
                    return t
                }(n.EventTarget);
                var ne = ["progress", "seeking", "suspend", "timeupdate"];
                var ie = ["seek", "stable", "unstable"];
                var re = ["adend", "adscanceled", "adserror", "adskip", "adsready", "adstart", "adtimeout", "contentplayback", "contentupdate", "nopostroll", "nopreroll", "readyforpreroll"];
                var ae = [].concat(n.getTech("Html5").Events);
                var se = ae.filter(function(e) {
                    return ne.indexOf(e) === -1
                });
                var oe = ["ads-request", "ads-response-received", "adstart", "ads-loading", "ads-ad-started", "ads-ad-ended", "adend"];
                var ue = ["NETWORK_EMPTY", "NETWORK_IDLE", "NETWORK_LOADING", "NETWORK_NO_SOURCE"];
                var le = ["HAVE_NOTHING", "HAVE_METADATA", "HAVE_CURRENT_DATA", "HAVE_FUTURE_DATA", "HAVE_ENOUGH_DATA"];
                var de = function() {
                    function e(e) {
                        this.logger_ = e;
                        this.events_ = []
                    }
                    var t = e.prototype;
                    t.add = function e(t, i, r) {
                        if (i === void 0) {
                            i = Date.now()
                        }
                        var a = n.mergeOptions(r, {
                            name: t,
                            time: i
                        });
                        this.events_.push(a);
                        return i
                    }
                    ;
                    t.record = function e(t, n) {
                        var i = Date.now();
                        this.add(t, i, {
                            adState: f(n),
                            isInAdState: g(n),
                            networkState: ue[n.networkState()],
                            readyState: le[n.readyState()]
                        });
                        return i
                    }
                    ;
                    t.reset = function e() {
                        this.events_.length = 0
                    }
                    ;
                    t.filter = function e(t) {
                        if (!i.isFn(t)) {
                            return this.events_.filter(function(e) {
                                return e.name === t
                            })
                        }
                        return this.events_.filter(t)
                    }
                    ;
                    t.map = function e(t) {
                        return this.events_.map(t)
                    }
                    ;
                    t.names = function e() {
                        return this.map(function(e) {
                            return e.name
                        })
                    }
                    ;
                    t.first = function e(t, n) {
                        for (var i = 0; i < this.events_.length; i++) {
                            var r = this.events_[i];
                            if (!n && r.isInAdState) {
                                continue
                            }
                            if (r.name === t) {
                                return r.time
                            }
                        }
                    }
                    ;
                    t.last = function e(t, n) {
                        var i = this.events_.length;
                        while (i--) {
                            var r = this.events_[i];
                            if (!n && r.isInAdState) {
                                continue
                            }
                            if (r.name === t) {
                                return r.time
                            }
                        }
                    }
                    ;
                    return e
                }();
                var ce = function() {
                    function e() {
                        this.log_ = {}
                    }
                    var t = e.prototype;
                    t.put = function e(t) {
                        this.log_[t] = true
                    }
                    ;
                    t.peek = function e() {
                        return Object.keys(this.log_)
                    }
                    ;
                    t.flush = function e() {
                        var t = Object.keys(this.log_);
                        this.log_ = {};
                        return t
                    }
                    ;
                    return e
                }();
                var fe = "3.15.0";
                var pe = {
                    production: "https://metrics.brightcove.com/v2/tracker",
                    qa: "https://metrics.juju.qa.brightcove.com/v2/tracker",
                    staging: "https://metrics.juju.staging.brightcove.com/v2/tracker"
                };
                var he = function e(t, n, r) {
                    Object.keys(r).forEach(function(e) {
                        n[e] = String(n[e] || "");
                        if (e === "accountId" && !i.isNonEmptyStr(n[e])) {
                            n[e] = String(n.account || "")
                        }
                        if (!i.isNonEmptyStr(n[e])) {
                            n[e] = t.getAttribute("data-" + r[e]) || ""
                        }
                    });
                    return n
                };
                var ve = function t(n, r) {
                    var a = he(n.el(), r, {
                        accountId: "account",
                        applicationId: "application-id",
                        embedId: "embed",
                        playerId: "player",
                        playerName: "name",
                        usage: "usage"
                    })
                      , s = a.accountId
                      , o = a.applicationId
                      , u = a.embedId
                      , l = a.playerId;
                    if (!i.isNonEmptyStr(r.player)) {
                        if (e.location.hostname === "players.api.brightcove.com") {
                            r.player = "players.api.brightcove.com/" + l + "_" + u;
                            return
                        }
                        r.player = L(s, l, u);
                        if (o) {
                            r.player += "/" + o
                        }
                    }
                    if (o) {
                        if (i.isNonEmptyStr(r.playerName)) {
                            r.playerName += " - " + o
                        } else {
                            r.playerName = o
                        }
                    }
                };
                var ge = function e(t) {
                    return {
                        computedHeight: t.currentHeight(),
                        computedWidth: t.currentWidth(),
                        height: t.height(),
                        width: t.width()
                    }
                };
                var me = function t(i) {
                    if (typeof i === "boolean") {
                        n.log.warn("The __iframe__ option should only be used in tests!");
                        return i
                    }
                    try {
                        return e.parent !== e.self
                    } catch (e) {
                        return true
                    }
                };
                var ye = function r(a) {
                    var s = this;
                    if (a === void 0) {
                        a = {}
                    }
                    var o = false;
                    var u = false;
                    var l = {};
                    a = n.mergeOptions(a);
                    a.env = pe.hasOwnProperty(a.env) ? a.env : "production";
                    ve(this, a);
                    var d = U(this);
                    var c = new te(this,d);
                    var h = new de(d);
                    var _ = new ce;
                    var b = i.isNonEmptyStr(a.usage) ? a.usage.split(",") : [];
                    b.forEach(function(e) {
                        _.put(e)
                    });
                    var S = new M(this,h,i.isNonEmptyStr(a.analyticsUrl) ? a.analyticsUrl : pe[a.env],{
                        logger: d,
                        user: a.user,
                        corpCommsApp: a.corpCommsApp,
                        application: a.application,
                        device: a.device,
                        playerId: a.playerId,
                        embedId: a.embedId,
                        applicationId: a.applicationId
                    });
                    S.defaultParams(function() {
                        var n = {
                            account: a.accountId || null,
                            destination: e.location.href,
                            platform_version: a.platformVersion,
                            player: a.player,
                            player_name: a.playerName,
                            source: t.referrer
                        };
                        if (me(a.__iframe__)) {
                            n.destination = t.referrer;
                            if (i.isNonEmptyStr(a.referrer)) {
                                n.source = a.referrer
                            } else {
                                try {
                                    n.source = e.parent.document.referrer
                                } catch (e) {
                                    n.source = null
                                }
                            }
                        }
                        return n
                    });
                    Z(this, "on", "pluginsetup:ads", J);
                    this.bcAnalytics = {
                        client: S,
                        engager: c,
                        history: h,
                        settings: a,
                        VERSION: fe
                    };
                    Z(this, "on", "usage", function(e) {
                        if (!e.name) {
                            return n.log.warn("Ignored usage event without a `name` parameter")
                        }
                        _.put(e.name)
                    });
                    var T = function e() {
                        _.put("unload");
                        c.stop({
                            fromUnload: true,
                            ignoreAdState: true,
                            reason: "unload called"
                        })
                    };
                    Z(e, "addEventListener", "unload", T);
                    var k = function e(t) {
                        if (!y(t, s)) {
                            return
                        }
                        var n = h.first("loadstart", v(s));
                        var i = h.first("play");
                        var r = h.last("playing");
                        if ((i || r) && !c.isTracking() && !s.paused()) {
                            c.start({
                                period: {
                                    start: i || r
                                },
                                reason: "workflow detected that it is playing"
                            })
                        }
                        if (S.timeOfImpression && S.timeOfView) {
                            return
                        }
                        l.workflow = l.workflow || s.setTimeout(function() {
                            l.workflow = null;
                            n = h.first("loadstart", v(s));
                            i = h.first("play");
                            r = h.last("playing");
                            if ((n || i) && !S.timeOfImpression) {
                                S.sendVideoImpression({
                                    params: {
                                        time: Math.min(n || Infinity, i || Infinity)
                                    }
                                })
                            }
                            if (n && r && !S.timeOfView) {
                                S.sendVideoView({
                                    params: {
                                        time: r
                                    }
                                })
                            }
                        }, 1)
                    };
                    c.on("engagement", function(t) {
                        var n = t.engagement
                          , i = n.fromUnload
                          , r = n.ignoreAdState
                          , a = n.period
                          , o = n.restartAlways
                          , u = n.state;
                        var l = g(s);
                        var d = {
                            useSendBeaconOnly: i,
                            params: {
                                time: a.end
                            }
                        };
                        if (u.rangeExtras >= 2) {
                            _.put("disco-engmnt")
                        }
                        var f = _.peek();
                        if (f && f.length) {
                            d.params.usage = f.map(e.encodeURIComponent).sort().join(",")
                        }
                        if (!l || r) {
                            S.qos.append("frames", u.videoPlaybackQuality);
                            var p = S.sendVideoEngagement(a, u, d);
                            if (o || p && !s.paused()) {
                                if (l) {
                                    return
                                }
                                _.flush();
                                c.start({
                                    reason: "sent engagement and still playing"
                                })
                            }
                        }
                    });
                    Z(this, "on", "dispose", function() {
                        Q();
                        _.put("disposed");
                        c.dispose()
                    });
                    Z(this, "on", se.concat(re, ie).concat("sourceunstable"), function(e) {
                        h.record(e.type, s)
                    });
                    Z(this, "on", se.concat("ads-ad-started"), function(e) {
                        S.qos.append("event", g(s) ? "ad" : "content", e.type)
                    });
                    Z(this, "on", ["loadedmetadata", "resize"], function() {
                        S.qos.append("player", ge(s))
                    });
                    Z(this, "on", "fullscreenchange", function() {
                        var e = Date.now();
                        l.fullscreen = s.setTimeout(function() {
                            l.fullscreen = null;
                            S.qos.append("player", ge(s), e)
                        }, 500)
                    });
                    Z(this, "on", "mediachange", function() {
                        if (s.tech_.vhs) {
                            var e = s.tech_.vhs.playlists.media();
                            S.qos.append("bitrate", {
                                bitrates: s.tech_.vhs.bandwidth,
                                playlists: e && e.attributes && e.attributes.BANDWIDTH
                            })
                        }
                    });
                    Z(this, "on", "ratechange", function() {
                        var e = s.playbackRate().toFixed(2);
                        _.put("pr:" + e)
                    });
                    Z(this, "on", "ready", function() {
                        Z(s.tech_, "on", "usage", function(e) {
                            if (!e.name) {
                                return n.log.warn("Ignored usage event without a `name` parameter")
                            }
                            _.put(e.name)
                        });
                        Z(s.tech_, "on", "bandwidthupdate", function() {
                            S.qos.append("bitrate", {
                                bitrates: s.tech_.vhs.bandwidth,
                                throughput: Math.round(s.tech_.vhs.throughput)
                            })
                        });
                        Z(s.tech_, "on", "liveresync", function() {
                            s.trigger({
                                type: "usage",
                                name: "hls-live-resync"
                            })
                        });
                        Z(s.tech_, "on", "videounderflow", function() {
                            s.trigger({
                                type: "usage",
                                name: "hls-video-underflow"
                            })
                        });
                        Z(s.tech_, "on", "licenserequestattempted", function() {
                            h.add("licenserequestattempted")
                        });
                        Z(s, "on", "loadedmetadata", function() {
                            var e = s.textTracks();
                            for (var t = 0; t < e.length; t++) {
                                if (e[t].label === "segment-metadata") {
                                    (function() {
                                        var n = e[t];
                                        var i = void 0;
                                        Z(n, "addEventListener", "cuechange", function() {
                                            var e = n.activeCues[0];
                                            if (e) {
                                                var t = s.tech_.vhs.playlists.master.playlists[e.value.playlist];
                                                if (i !== t.uri) {
                                                    if (t.attributes && t.attributes.BANDWIDTH) {
                                                        S.qos.append("bitrate", {
                                                            rendered: t.attributes.BANDWIDTH
                                                        })
                                                    }
                                                    if (i !== undefined) {
                                                        c.stop({
                                                            reason: "rendition on screen changed",
                                                            restartAlways: true
                                                        })
                                                    }
                                                }
                                                i = t.uri
                                            }
                                        })
                                    }
                                    )()
                                }
                            }
                        })
                    });
                    Z(this, "on", "waiting", function(e) {
                        if (!u && !g(s)) {
                            c.stateBySrc().rebufferingCount++
                        }
                    });
                    Z(this, "on", "sourcechanged", function(e, t) {
                        var n = t.interimEvents;
                        var i = n[0].event;
                        var r = function e() {
                            if (!u && !g(s)) {
                                c.recordState()
                            }
                        };
                        if (t.from) {
                            c.stop({
                                reason: "changing sources",
                                period: {
                                    end: n[0].time
                                },
                                ignoreAdState: true,
                                src: t.from
                            });
                            c.clearStateBySrc(t.from)
                        }
                        o = false;
                        u = false;
                        S.resetTimesOf();
                        h.reset();
                        n.forEach(function(e) {
                            return h.add(e.event.type, e.time)
                        });
                        k();
                        Z(s, "onPerSrc", "timeupdate", r);
                        Z(s, "onePerSrc", "sourceunstable", function() {
                            if (f(s) === "content-resuming") {
                                return
                            }
                            var e = s.currentSrc();
                            c.stop({
                                ignoreAdState: true,
                                reason: "sourceunstable",
                                src: e
                            });
                            if (!g(s)) {
                                X(s, "off", "timeupdate", r)
                            }
                        });
                        Z(s, "onPerSrc", ["loadstart", "play", "playing"], k);
                        Z(s, "onPerSrc", ["pause", "ratechange"], function(e) {
                            if (!u && !g(s) && !s.ended()) {
                                c.stop({
                                    reason: 'saw "' + e.type + '"'
                                });
                                if (s.paused()) {
                                    Z(s, "onePerSrc", "playing", function() {
                                        c.start({
                                            reason: "playback began after a pause"
                                        })
                                    })
                                } else if (e.type === "ratechange") {
                                    l.ratechange = s.setTimeout(function() {
                                        l.ratechange = null;
                                        c.start({
                                            reason: "the playback rate changed"
                                        })
                                    }, 1)
                                }
                            }
                        });
                        Z(s, "onPerSrc", "unstable", function() {
                            if (!u && !g(s)) {
                                u = true;
                                c.stop({
                                    reason: "seeking"
                                })
                            }
                        });
                        Z(s, "onPerSrc", "seek", function() {
                            if (u && !g(s)) {
                                u = false;
                                c.start({
                                    reason: "stopped seeking"
                                })
                            }
                        });
                        Z(s, "onePerSrc", "adstart", function() {
                            if (!p(s)) {
                                S.sendVideoImpression({
                                    params: {
                                        time: h.last("adstart", true) - 100
                                    }
                                })
                            }
                        });
                        Z(s, "onPerSrc", "adstart", function() {
                            o = s.ended();
                            c.stop({
                                ignoreAdState: true,
                                period: {
                                    end: h.last("adstart", true)
                                },
                                reason: "saw adstart"
                            })
                        });
                        Z(s, "onePerSrc", "adend", function() {
                            if (!s.paused() && !s.ended()) {
                                k()
                            }
                        });
                        Z(s, "onPerSrc", "adend", function() {
                            if (!o) {
                                c.start({
                                    reason: 'saw "adend"'
                                })
                            }
                        });
                        Z(s, "onePerSrc", "ended", function() {
                            c.stop({
                                reason: "end of content"
                            });
                            S.sendVideoComplete()
                        })
                    });
                    Z(this, "on", "catalog_request", function(e) {
                        h.record(e.type, s);
                        S.sendCatalogRequest(e.url)
                    });
                    Z(this, "on", "catalog_request_error", function(e) {
                        h.record(e.type, s);
                        S.sendCatalogRequestError(e.url, {
                            error: e.error,
                            xhr: e.response
                        })
                    });
                    Z(this, "on", "catalog_response", function(e) {
                        h.record(e.type, s);
                        S.sendCatalogResponse(e.url, {
                            xhr: e.response
                        })
                    });
                    Z(this, "on", "play", function(e) {
                        if (m(s)) {
                            return
                        }
                        var t = {
                            params: {
                                time: Date.now()
                            }
                        };
                        if (s.perSourceBehaviors.isSrcStable()) {
                            S.sendPlayRequest(t)
                        } else {
                            Z(s, "one", "sourcechanged", function() {
                                S.sendPlayRequest(t)
                            })
                        }
                    });
                    Z(this, "on", "error", function() {
                        if (!g(s)) {
                            S.sendError()
                        }
                    });
                    Z(this, "on", "adstart", function(e) {
                        S.sendAdStart();
                        l.perSrcDisable = s.setTimeout(function() {
                            l.perSrcDisable = null;
                            s.perSourceBehaviors.disable()
                        }, 1)
                    });
                    Z(this, "on", "adend", function(e) {
                        S.sendAdEnd();
                        if (l.perSrcDisable) {
                            s.clearTimeout(l.perSrcDisable)
                        } else {
                            s.perSourceBehaviors.enable()
                        }
                    });
                    Z(this, "on", "adtimeout", function() {
                        S.sendAdTimeout()
                    });
                    Z(this, "on", "ad-hard-timeout", function() {
                        S.sendAdHardTimeout()
                    });
                    Z(this, "on", oe, function(e) {
                        A(S, e.type, Date.now())
                    });
                    S.qos.append("mr", a.mr);
                    S.sendPlayerInit();
                    S.sendError();
                    Z(this, "on", "ready", function() {
                        S.defaultParams({
                            feature: p(s) ? "adonly" : null
                        });
                        S.qos.append("performance", (e.location.href || "").split("?")[1]);
                        S.qos.append("player", ge(s));
                        if ("hidden"in t && "visibilityState"in t) {
                            if (t.hidden) {
                                s.trigger({
                                    type: "usage",
                                    name: "document-hidden"
                                })
                            }
                            var n = function e() {
                                s.trigger({
                                    type: "usage",
                                    name: "document-" + t.visibilityState
                                })
                            };
                            Z(t, "addEventListener", "visibilitychange", n)
                        }
                        if (t.querySelector(".bc-iframe")) {
                            s.trigger({
                                type: "usage",
                                name: "iframe-embed"
                            })
                        } else {
                            s.trigger({
                                type: "usage",
                                name: "inpage-embed"
                            })
                        }
                        S.sendPlayerLoad({
                            qos: S.qos.keys(),
                            params: {
                                usage: _.flush()
                            }
                        })
                    })
                };
                ye.VERSION = fe;
                if (n.registerPlugin) {
                    n.registerPlugin("bcAnalytics", ye)
                } else {
                    n.plugin("bcAnalytics", ye)
                }
                return ye
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("errors")) {
                return
            }
            (function(e, t) {
                typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js"), require("global/document")) : typeof define === "function" && define.amd ? define(["video.js", "global/document"], t) : (e = e || self,
                e.videojsErrors = t(e.videojs, e.document))
            }
            )(this, function(e, t) {
                "use strict";
                e = e && Object.prototype.hasOwnProperty.call(e, "default") ? e["default"] : e;
                t = t && Object.prototype.hasOwnProperty.call(t, "default") ? t["default"] : t;
                var n = "4.4.0";
                var i = e.getComponent("Flash");
                var r = !e.browser.IS_IPHONE;
                var a = e.registerPlugin || e.plugin;
                var s = {
                    header: "",
                    code: "",
                    message: "",
                    timeout: 45 * 1e3,
                    backgroundTimeout: 300 * 1e3,
                    dismiss: r,
                    errors: {
                        1: {
                            type: "MEDIA_ERR_ABORTED",
                            headline: "The video download was cancelled"
                        },
                        2: {
                            type: "MEDIA_ERR_NETWORK",
                            headline: "The video connection was lost, please confirm you are " + "connected to the internet"
                        },
                        3: {
                            type: "MEDIA_ERR_DECODE",
                            headline: "The video is bad or in a format that cannot be played on your browser"
                        },
                        4: {
                            type: "MEDIA_ERR_SRC_NOT_SUPPORTED",
                            headline: "This video is either unavailable or not supported in this browser"
                        },
                        5: {
                            type: "MEDIA_ERR_ENCRYPTED",
                            headline: "The video you are trying to watch is encrypted and we do not know how " + "to decrypt it"
                        },
                        unknown: {
                            type: "MEDIA_ERR_UNKNOWN",
                            headline: "An unanticipated problem was encountered, check back soon and try again"
                        },
                        "-1": {
                            type: "PLAYER_ERR_NO_SRC",
                            headline: "No video has been loaded"
                        },
                        "-2": {
                            type: "PLAYER_ERR_TIMEOUT",
                            headline: "Could not download the video"
                        },
                        PLAYER_ERR_DOMAIN_RESTRICTED: {
                            headline: "This video is restricted from playing on your current domain"
                        },
                        PLAYER_ERR_IP_RESTRICTED: {
                            headline: "This video is restricted at your current IP address"
                        },
                        PLAYER_ERR_GEO_RESTRICTED: {
                            headline: "This video is restricted from playing in your current geographic region"
                        },
                        FLASHLS_ERR_CROSS_DOMAIN: {
                            headline: "The video could not be loaded: crossdomain access denied."
                        }
                    }
                };
                var o = function r(a, o) {
                    var u;
                    var l;
                    var d;
                    var c = [];
                    var f = function t(n) {
                        o.errors = e.mergeOptions(o.errors, n);
                        Object.keys(o.errors).forEach(function(e) {
                            var t = o.errors[e];
                            if (!t.type) {
                                t.type = e
                            }
                        })
                    };
                    f();
                    var p = function e() {
                        if (a.error() && a.error().code === -2) {
                            a.error(null)
                        }
                        a.clearTimeout(l);
                        a.clearTimeout(u);
                        if (d) {
                            d = false;
                            a.removeClass("vjs-waiting")
                        }
                        if (t.visibilityState === "hidden" && (o.backgroundTimeout === Infinity || a.muted()) || t.visibilityState === "visible" && o.timeout === Infinity) {
                            return
                        }
                        l = a.setTimeout(function() {
                            if (a.error() || a.paused() || a.ended()) {
                                return
                            }
                            d = true;
                            a.addClass("vjs-waiting")
                        }, 1e3);
                        u = a.setTimeout(function() {
                            if (a.error() || a.paused() || a.ended()) {
                                return
                            }
                            a.error({
                                code: -2,
                                type: "PLAYER_ERR_TIMEOUT"
                            })
                        }, t.visibilityState === "hidden" ? o.backgroundTimeout : o.timeout)
                    };
                    var h = function e() {
                        var t;
                        while (c.length) {
                            t = c.shift();
                            a.off(t[0], t[1])
                        }
                        a.clearTimeout(u);
                        a.clearTimeout(l)
                    };
                    var v = function e(t, n) {
                        var i = function e() {
                            if (!a.error()) {
                                var t = a.$(".vjs-tech");
                                if (t && t.type === "application/x-shockwave-flash" && !t.vjs_getProperty) {
                                    a.error({
                                        code: -2,
                                        type: "PLAYER_ERR_TIMEOUT"
                                    });
                                    return
                                }
                                if (a.paused()) {
                                    return p()
                                }
                                if (a.ended()) {
                                    return p()
                                }
                            }
                            n.call(this)
                        };
                        a.on(t, i);
                        c.push([t, i])
                    };
                    var g = function e() {
                        var n = 0;
                        h();
                        p();
                        v(["timeupdate", "adtimeupdate"], function() {
                            var e = a.currentTime();
                            if (e !== n) {
                                n = e;
                                p()
                            }
                        });
                        a.off(t, "visibilitychange", e);
                        a.on(t, "visibilitychange", e)
                    };
                    var m = function e() {
                        if (!a.currentSrc()) {
                            a.error({
                                code: -1,
                                type: "PLAYER_ERR_NO_SRC"
                            })
                        }
                    };
                    var y = function n() {
                        var r = "";
                        var s = a.error();
                        var u = t.createElement("div");
                        var l = "";
                        if (!s) {
                            return
                        }
                        a.off(t, "visibilitychange", g);
                        s = e.mergeOptions(s, o.errors[s.code || s.type || 0]);
                        if (s.message) {
                            r = '<div class="vjs-errors-details">' + a.localize("Technical details") + '\n        : <div class="vjs-errors-message">' + a.localize(s.message) + "</div>\n        </div>"
                        }
                        if (s.code === 4 && i && !i.isSupported()) {
                            var d = a.localize("If you are using an older browser please try upgrading or installing Flash.");
                            r += '<span class="vjs-errors-flashmessage">' + d + "</span>"
                        }
                        var c = a.getChild("errorDisplay");
                        u.className = "vjs-errors-dialog";
                        u.id = "vjs-errors-dialog";
                        l = '<div class="vjs-errors-content-container">\n      <h2 class="vjs-errors-headline">' + this.localize(s.headline) + '</h2>\n        <div class="vjs-errors-code"><b>' + this.localize("Error Code") + ":</b> " + (s.type || s.code) + "</div>\n        " + r + "\n      </div>";
                        var f = c.closeable(!("dismiss"in s) || s.dismiss);
                        if (f) {
                            l += '<div class="vjs-errors-ok-button-container">\n          <button class="vjs-errors-ok-button">' + this.localize("OK") + "</button>\n        </div>";
                            u.innerHTML = l;
                            c.fillWith(u);
                            c.contentEl().firstChild.appendChild(c.getChild("closeButton").el());
                            var p = c.el().querySelector(".vjs-errors-ok-button");
                            a.on(p, "click", function() {
                                c.close()
                            })
                        } else {
                            u.innerHTML = l;
                            c.fillWith(u)
                        }
                        if (a.currentWidth() <= 600 || a.currentHeight() <= 250) {
                            c.addClass("vjs-xs")
                        }
                        c.one("modalclose", function() {
                            return a.error(null)
                        })
                    };
                    var _ = function e() {
                        h();
                        a.removeClass("vjs-errors");
                        a.off("play", g);
                        a.off(t, "visibilitychange", g);
                        a.off("play", m);
                        a.off("dispose", e);
                        a.off(["aderror", "error"], y)
                    };
                    var b = function t(n) {
                        _();
                        r(a, e.mergeOptions(s, n))
                    };
                    b.extend = function(e) {
                        return f(e)
                    }
                    ;
                    b.getAll = function() {
                        return e.mergeOptions(o.errors)
                    }
                    ;
                    b.timeout = function(e) {
                        if (typeof e === "undefined") {
                            return o.timeout
                        }
                        if (e !== o.timeout) {
                            o.timeout = e;
                            if (!a.paused()) {
                                g()
                            }
                        }
                    }
                    ;
                    b.backgroundTimeout = function(e) {
                        if (typeof e === "undefined") {
                            return o.backgroundTimeout
                        }
                        if (e !== o.backgroundTimeout) {
                            o.backgroundTimeout = e;
                            if (!a.paused()) {
                                g()
                            }
                        }
                    }
                    ;
                    b.disableProgress = function() {}
                    ;
                    a.on("play", g);
                    a.on("play", m);
                    a.on("dispose", _);
                    a.on(["aderror", "contenterror", "error"], y);
                    a.ready(function() {
                        a.addClass("vjs-errors")
                    });
                    if (!a.paused()) {
                        g()
                    }
                    b.VERSION = n;
                    a.errors = b
                };
                var u = function t(n) {
                    o(this, e.mergeOptions(s, n))
                };
                ["extend", "getAll"].forEach(function(t) {
                    u[t] = function() {
                        e.log.warn("The errors." + t + "() method is not available until the plugin has been initialized!")
                    }
                });
                u.VERSION = n;
                a("errors", u);
                return u
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("catalog")) {
                return
            }
            (function(e, t) {
                typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js"), require("global/window"), require("global/document"), require("@brightcove/loscore")) : typeof define === "function" && define.amd ? define(["video.js", "global/window", "global/document", "@brightcove/loscore"], t) : (e = e || self,
                e.videojsBcCatalog = t(e.videojs, e.window, e.document, e.videojs.bc_))
            }
            )(this, function(e, t, n, i) {
                "use strict";
                e = e && Object.prototype.hasOwnProperty.call(e, "default") ? e["default"] : e;
                t = t && Object.prototype.hasOwnProperty.call(t, "default") ? t["default"] : t;
                n = n && Object.prototype.hasOwnProperty.call(n, "default") ? n["default"] : n;
                i = i && Object.prototype.hasOwnProperty.call(i, "default") ? i["default"] : i;
                var r = "3.38.10";
                var a = "video";
                var s = "playlist";
                var o = "search";
                var u = "lazySequence";
                var l = "related";
                var d = [{
                    attr: "data-video-id",
                    query: "videoId",
                    config: "videoId",
                    type: a
                }, {
                    attr: "data-playlist-id",
                    query: "playlistId",
                    config: "playlistId",
                    type: s
                }, {
                    attr: "data-catalog-search",
                    query: "catalogSearch",
                    config: "search",
                    type: o
                }, {
                    attr: "data-catalog-sequence",
                    query: "catalogSequence",
                    config: "sequence",
                    type: u
                }];
                var c = function e(t, n, i) {
                    for (var r = 0; r < d.length; r++) {
                        var a = d[r];
                        var o = a[t];
                        if (n[o]) {
                            var u = {
                                id: n[o],
                                type: a.type
                            };
                            if (u.type === s) {
                                u.playlistVideoId = i
                            }
                            return u
                        }
                    }
                };
                var f = function t(n, r, a) {
                    var s = r.options_;
                    var l = Boolean(r.el().ownerDocument.querySelector(".bc-iframe"));
                    var f = i.qs();
                    a = a ? f.parse(a) : f.search;
                    d.concat({
                        query: "playlistVideoId"
                    }).forEach(function(e) {
                        var t = e.query;
                        if (Array.isArray(a[t])) {
                            a[t] = a[t].pop()
                        }
                    });
                    if (d.filter(function(e) {
                        return !!n[e.config]
                    }).length > 1 || d.filter(function(e) {
                        return !!s[e.attr]
                    }).length > 1) {
                        r.error({
                            headline: "Bad Request: Multiple catalog media queries provided. Please only provide one",
                            type: "PLAYER_ERR_CONFLICTING_DATA",
                            code: -3,
                            message: "Too many catalog media parameters were provided in this player. " + "Please use only one of the following: videoId, playlistId, catalogSequence, or catalogSearch."
                        });
                        return
                    }
                    var p = l && c("query", a, a.playlistVideoId) || c("attr", s, s["data-playlist-video-id"] || a.playlistVideoId) || c("config", n, a.playlistVideoId || n.playlistVideoId);
                    if (!p) {
                        return
                    }
                    if (typeof p.id === "string" && (p.type === o || p.type === u)) {
                        var h = p.id;
                        try {
                            p.id = JSON.parse(h)
                        } catch (t) {
                            if (p.type === u) {
                                e.log.error("sequence must be valid JSON or an object", t);
                                return
                            }
                        }
                        if (!i.isObj(p.id) && !Array.isArray(p.id)) {
                            p.id = h
                        }
                    }
                    ["adConfigId", "deliveryConfigId"].forEach(function(e) {
                        var t = n[e];
                        if (!i.isNonEmptyStr(t)) {
                            return
                        }
                        if (i.isObj(p.id)) {
                            p.id[e] = t
                        } else if (Array.isArray(p.id)) {
                            p.id.forEach(function(n) {
                                n[e] = t
                            })
                        } else {
                            p[e] = n[e]
                        }
                    });
                    return p
                };
                var p = {
                    VIDEO_CLOUD_ERR_ACCOUNT_NOT_FOUND: {
                        headline: "The Video Cloud account was not found."
                    },
                    VIDEO_CLOUD_ERR_RESOURCE_NOT_FOUND: {
                        headline: "The Video Cloud resource was not found."
                    },
                    VIDEO_CLOUD_ERR_VIDEO_NOT_FOUND: {
                        headline: "The Video Cloud video was not found."
                    },
                    VIDEO_CLOUD_ERR_NOT_PLAYABLE: {
                        headline: "The Video Cloud video is not playable."
                    },
                    VIDEO_CLOUD_ERR_AD_CONFIG_ID_NOT_FOUND: {
                        headline: "The Video Cloud SSAI ad config id was not found."
                    },
                    VIDEO_CLOUD_ERR_TOKEN_REQUIRED: {
                        headline: "A JWT is required, but was not provided."
                    },
                    VIDEO_CLOUD_ERR_TOKEN_INVALID: {
                        headline: "The JWT provided did not pass validation."
                    },
                    VIDEO_CLOUD_ERR_SERVER: {
                        headline: "There was a server error that prevented playback."
                    }
                };
                var h = function e(t) {
                    var n = function e() {
                        return t.errors.extend(p)
                    };
                    var r = i.isFn(t.usingPlugin) ? t.usingPlugin("errors") : i.isFn(t.errors) && i.isFn(t.errors.extend);
                    if (!r) {
                        t.on("pluginsetup:errors", n);
                        t.on("dispose", function() {
                            t.off("pluginsetup:errors", n)
                        });
                        return
                    }
                    n()
                };
                var v = {
                    400: {
                        AD_CONFIG_NOT_FOUND: "VIDEO_CLOUD_ERR_AD_CONFIG_ID_NOT_FOUND"
                    },
                    401: {
                        TOKEN_REQUIRED: "VIDEO_CLOUD_ERR_TOKEN_REQUIRED",
                        TOKEN_VALIDATION: "VIDEO_CLOUD_ERR_TOKEN_INVALID"
                    },
                    403: {
                        ACCESS_DENIED: {
                            DOMAIN: "PLAYER_ERR_DOMAIN_RESTRICTED",
                            CLIENT_IP: "PLAYER_ERR_IP_RESTRICTED",
                            CLIENT_GEO: "PLAYER_ERR_GEO_RESTRICTED",
                            OFFERS: "PLAYER_ERR_OFFER_RESTRICTED",
                            TAGS: "PLAYER_ERR_TAG_RESTRICTED"
                        },
                        VIDEO_NOT_PLAYABLE: "VIDEO_CLOUD_ERR_NOT_PLAYABLE",
                        PLAYLIST_NOT_PLAYABLE: "VIDEO_CLOUD_ERR_NOT_PLAYABLE"
                    },
                    404: {
                        ACCOUNT_NOT_FOUND: "VIDEO_CLOUD_ERR_ACCOUNT_NOT_FOUND",
                        RESOURCE_NOT_FOUND: "VIDEO_CLOUD_ERR_RESOURCE_NOT_FOUND",
                        VIDEO_NOT_FOUND: "VIDEO_CLOUD_ERR_VIDEO_NOT_FOUND",
                        PLAYLIST_NOT_FOUND: "VIDEO_CLOUD_ERR_RESOURCE_NOT_FOUND"
                    },
                    500: {
                        SERVER_ERROR: "VIDEO_CLOUD_ERR_SERVER"
                    },
                    502: {
                        SERVER_ERROR: "VIDEO_CLOUD_ERR_SERVER",
                        VIDEO_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
                        VIDEO_URLS_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
                        PLAYLIST_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
                        ACCOUNT_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
                        PLAYBACK_RIGHT_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
                        LICENSE_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
                        OFFERS_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
                        RIGHTS_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER"
                    },
                    503: {
                        SERVICE_UNAVAILABLE: "VIDEO_CLOUD_ERR_SERVER"
                    },
                    504: {
                        SERVER_TIMEOUT: "VIDEO_CLOUD_ERR_SERVER"
                    }
                };
                var g = function e(t, n) {
                    var r = n.shift();
                    if (i.isNonEmptyStr(t[r])) {
                        return t[r]
                    }
                    if (!r || !t[r]) {
                        return "unknown"
                    }
                    return e(t[r], n)
                };
                var m = function e(t, n) {
                    n = Array.isArray(n) ? n[0] : n || {};
                    return {
                        code: g(v, [t, n.error_code, n.error_subcode])
                    }
                };
                var y = function t(n, i, r) {
                    if (r.embedHasPoster) {
                        n.poster = i.options_.poster
                    }
                    if (r.embedHasSources) {
                        n.sources = i.options_.sources
                    }
                    if (r.embedHasTracks) {
                        n.textTracks = i.options_.tracks
                    }
                    if (n.textTracks && n.textTracks.length > 0 && e.browser.IS_ANY_SAFARI) {
                        i.$(".vjs-tech").setAttribute("crossorigin", "anonymous")
                    }
                    return n
                };
                var _ = function e(t, n) {
                    return function(e, i) {
                        if (e) {
                            e.data = i;
                            t.catalog.error = e;
                            t.error(m(e.status, i));
                            return t.trigger("bc-catalog-error")
                        }
                        t.ready(function() {
                            return t.catalog.load(n(i))
                        })
                    }
                };
                var b = function t(n, i, r) {
                    if (n === a) {
                        return _(i, function(e) {
                            return y(e, i, r)
                        })
                    }
                    return _(i, function(t) {
                        var a = y({}, i, r);
                        if (Array.isArray(t.videos)) {
                            var o = t.videos[0] || {};
                            t.videos[0] = e.mergeOptions(o, a, {
                                rawItem: o
                            })
                        } else {
                            t.videos = [a]
                        }
                        if (r.playlistVideoId && n === s) {
                            for (var u = 0; u < t.length; u++) {
                                if (t[u].id === r.playlistVideoId || "ref:" + t[u].referenceId === r.playlistVideoId) {
                                    t.startingIndex = u;
                                    break
                                }
                            }
                        }
                        return t
                    })
                };
                var S = function e() {
                    return Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 2
                };
                var A = function e(t, n) {
                    var i = t.cuePoints;
                    var r = i[n];
                    var a;
                    for (n++; n < i.length; n++) {
                        if (i[n].time > r.time) {
                            a = i[n];
                            break
                        }
                    }
                    var s = isFinite(t.duration) ? t.duration : S();
                    r.startTime = r.time;
                    if (a && a.time < s) {
                        r.endTime = a.time
                    } else {
                        r.endTime = s
                    }
                    return r
                };
                var T = function e(t) {
                    var n = t.remoteTextTracks();
                    if (n) {
                        var i = n.length;
                        while (i--) {
                            t.removeRemoteTextTrack(n[i])
                        }
                    }
                    var r = t.textTracks();
                    if (r) {
                        var a = r.length;
                        while (a--) {
                            var s = r[a];
                            if (s.kind === "metadata" && s.cues) {
                                var o = s.cues.length;
                                while (o--) {
                                    s.removeCue(s.cues[o])
                                }
                            }
                            s.mode = "disabled"
                        }
                    }
                };
                var k = function e(n, i) {
                    T(n);
                    if (!i.cuePoints) {
                        return
                    }
                    var r = n.mediaCuePointsTrack();
                    var a = t.VTTCue || t.vttjs && t.vttjs.VTTCue || t.TextTrackCue;
                    for (var s = 0; s < i.cuePoints.length; s++) {
                        var o = i.cuePoints[s];
                        var u = new a(o.startTime,o.endTime,o.type);
                        u.originalCuePoint = o;
                        r.addCue(u)
                    }
                    r.mode = "hidden"
                };
                var E = function e(t, n, i) {
                    var r = 0;
                    for (; r < t.length; r++) {
                        if (n(t[r])) {
                            return t[r]
                        }
                    }
                    return i
                };
                function P(e) {
                    var t = P.windowLocationProtocol();
                    var n = function e(n) {
                        return n.src && n.src.indexOf(t) === 0
                    };
                    if (e && e.length && e.length > 0) {
                        return E(e, n, e[0]).src
                    }
                }
                P.windowLocationProtocol = function() {
                    return t.location.protocol
                }
                ;
                var I = function e(t, n) {
                    return "https://" + t + ".api." + (n ? n + "." : "") + "brightcove.com/playback/v1/"
                };
                var C = {
                    production: {
                        papi: I("edge"),
                        epa: I("edge-auth")
                    },
                    qa: {
                        papi: I("edge", "qa"),
                        epa: I("edge-auth", "qa")
                    },
                    staging: {
                        papi: I("edge", "staging"),
                        epa: I("edge-auth", "staging")
                    }
                };
                var w = function e(n) {
                    return t.encodeURIComponent(n)
                };
                var j = function e(t) {
                    return typeof t === "string" && /^BCpk/.test(t)
                };
                var L = function e(t) {
                    var n = {
                        ad_config_id: "adConfigId",
                        config_id: "deliveryConfigId"
                    };
                    var r = ["ad_config_id", "config_id", "tveToken"];
                    if (t.type !== a) {
                        r.push("limit");
                        r.push("offset")
                    }
                    if (t.type === o) {
                        r.push("q");
                        r.push("sort")
                    }
                    var s = {};
                    r.forEach(function(e) {
                        var i = n[e] || e;
                        if (t[i]) {
                            s[e] = t[i]
                        }
                    });
                    var u = i.qs().stringify(s);
                    return u ? "?" + u : ""
                };
                var O = function e(t, n) {
                    var r = n.env
                      , a = n.type;
                    if (!r) {
                        r = "production"
                    }
                    var u;
                    if (i.isNonEmptyStr(n.baseUrl)) {
                        u = n.baseUrl
                    } else if (j(n.policyKey)) {
                        u = C[r].papi
                    } else {
                        u = C[r].epa
                    }
                    if (u.slice(-1) === "/") {
                        u = u.slice(0, -1)
                    }
                    var d;
                    d = u + "/accounts/" + w(t) + "/" + (a === s ? "playlists" : "videos");
                    if (a !== o) {
                        d += "/" + w(n.id)
                    }
                    if (a === l) {
                        d += "/related"
                    }
                    d += L(n);
                    return d
                };
                var x = function t(n, r, u, d) {
                    if (d === void 0) {
                        d = function e() {}
                    }
                    var c = u.deliveryConfigId
                      , f = u.adConfigId
                      , p = u.id
                      , h = u.bcovAuthToken
                      , v = u.policyKey
                      , g = u.q
                      , m = u.type;
                    if (!r || !m) {
                        return d(new Error("accountId and type are required"))
                    }
                    if (m === o && !g) {
                        return d(new Error("q is required when performing a search"))
                    } else if (m !== o && !p) {
                        return d(new Error("id is required when getting a video or playlist"))
                    }
                    var y = O(r, u);
                    var _ = function e(t, u) {
                        n.trigger(i.assign({
                            type: "catalog_" + t,
                            accountId: r,
                            deliveryConfigId: c,
                            adConfigId: f,
                            playlistId: m === s ? p : undefined,
                            related: m === l ? p : undefined,
                            search: m === o ? g : undefined,
                            url: y,
                            videoId: m === a ? p : undefined
                        }, u))
                    };
                    var b = function e(t, n, i) {
                        return _("request_error", {
                            error: t,
                            response: n,
                            body: i
                        })
                    };
                    _("request");
                    var S = {};
                    if (j(v)) {
                        S.Accept = "application/json;pk=" + v
                    } else if (h) {
                        S.Authorization = "Bearer " + h
                    }
                    var A = e.xhr({
                        headers: S,
                        json: true,
                        url: y
                    }, function(e, t, n) {
                        if (e) {
                            b(e, A, n);
                            return d(e, n)
                        }
                        if (A.status >= 400) {
                            b(new Error("Request Failed"), A, n);
                            return d(A, n)
                        }
                        _("response", {
                            response: A
                        });
                        d(null, n)
                    });
                    var T = A.onabort.bind(A);
                    A.onabort = function() {
                        var e = new Error("Request Aborted");
                        T();
                        b(e, A, null);
                        return d(e, null)
                    }
                    ;
                    return A
                };
                var D = function e() {
                    var n = t.GestureEvent;
                    return !!(n && t.WebKitMediaKeys && t.WebKitMediaKeys.isTypeSupported("com.apple.fps.1_0", "video/mp4"))
                };
                var N = function n() {
                    return e.browser.IS_EDGE && /Chrome/i.test(t.navigator.userAgent)
                };
                var R = function n() {
                    return t.navigator.requestMediaKeySystemAccess && !e.browser.IS_IOS && (e.browser.IS_FIREFOX || e.browser.IS_CHROME || N())
                };
                var M = function e(t) {
                    var n = t.tech(true).vhs;
                    return n && n.canChangeType && n.canChangeType()
                };
                var U = function e() {
                    return t.MediaSource && t.MediaSource.isTypeSupported && t.MediaSource.isTypeSupported('video/mp4; codecs="hvc1.1.6.L60.90"')
                };
                var B = function e(t) {
                    return t === "application/vnd.apple.mpegurl" || t === "application/x-mpegURL"
                };
                var F = function t(n) {
                    var i = e.parseUrl(n);
                    return i.hostname.indexOf("boltdns.net") !== -1 && i.pathname.indexOf("/aes128/") !== -1
                };
                var V = function e(t) {
                    return t.isSecureContext || !/^http:/.test(t.location.href)
                };
                var q;
                var H = function t() {
                    if (q !== undefined) {
                        return q
                    }
                    var i = n.createElement("video");
                    var r = e.options.hls && e.options.hls.overrideNative;
                    if (i && i.canPlayType) {
                        q = !r && /probably|maybe/i.test(i.canPlayType("application/vnd.apple.mpegurl"))
                    } else {
                        q = false
                    }
                    return q
                };
                var G = {
                    isSafariWithFairplaySupport: D,
                    isChromiumEdge: N,
                    isBrowserWithWidevineSupport: R,
                    isHlsType: B,
                    isCodecSwitchingSupported: M,
                    isHEVCSupported: U,
                    isBoltEncryptedHls: F,
                    preferHttps: V,
                    isNativeHlsSupported: H
                };
                var W = "https://fps.brightcove.com/v1/application_certificate";
                var K = "com.apple.fps.1_0";
                var z = function e(n) {
                    return t.btoa(String.fromCharCode.apply(null, n))
                };
                var Y = function e(t) {
                    return String.fromCharCode.apply(null, new Uint16Array(t.buffer))
                };
                var X = function e(t) {
                    var n = t.source
                      , i = t.publisherId
                      , r = t.applicationId;
                    var a = n.key_systems[K].certificate_url;
                    if (a) {
                        return a
                    }
                    if (r && i) {
                        return W + "/" + i + "/" + r
                    }
                    return null
                };
                var Q = function t(n, i) {
                    var r = X({
                        source: n.source,
                        publisherId: n.publisherId,
                        applicationId: n.applicationId
                    });
                    e.xhr({
                        uri: r,
                        responseType: "arraybuffer"
                    }, function(e, t, n) {
                        if (e) {
                            i(e);
                            return
                        }
                        i(null, new Uint8Array(n))
                    })
                };
                var Z = function e(t, n) {
                    return Y(n).split("//")[1]
                };
                var J = function t(n) {
                    return function(t, i, r, a) {
                        var s = {
                            "Content-Type": "application/json",
                            Accept: "application/octet-stream"
                        };
                        if (t.emeHeaders && t.emeHeaders["BCOV-Auth"]) {
                            s["BCOV-Auth"] = t.emeHeaders["BCOV-Auth"]
                        }
                        e.xhr({
                            uri: n,
                            method: "POST",
                            responseType: "arraybuffer",
                            json: {
                                publisher_id: t.publisherId,
                                application_id: t.applicationId,
                                key_id: i.split("/")[3],
                                server_playback_context: z(r)
                            },
                            headers: s
                        }, function(e, t, n) {
                            if (e) {
                                a(e);
                                return
                            }
                            if (t.statusCode >= 400 && t.statusCode <= 599) {
                                a({});
                                return
                            }
                            a(null, n)
                        })
                    }
                };
                var $ = {
                    getCertificateUri: X,
                    getCertificate: Q,
                    getContentId: Z,
                    createGetLicenseFunc: J,
                    base64EncodeUint8Array: z,
                    FAIRPLAY_KEY_SYSTEM: K
                };
                var ee = function e(t) {
                    if (t === void 0) {
                        t = []
                    }
                    return t.filter(function(e) {
                        return e.keySystems && e.keySystems[$.FAIRPLAY_KEY_SYSTEM]
                    })
                };
                var te = function e(t, n, i) {
                    var r = ee(n);
                    if (!r.length || !t.eme) {
                        i();
                        return
                    }
                    var a = t.eme.options || {};
                    var s = 0;
                    var o = [];
                    var u = {};
                    var l = function e(t) {
                        var n = r[t];
                        var l = $.getCertificateUri({
                            source: n,
                            publisherId: a.publisherId,
                            applicationId: a.applicationId
                        });
                        if (!l) {
                            return "continue"
                        }
                        if (u[l]) {
                            u[l].push(n);
                            return "continue"
                        }
                        s++;
                        u[l] = [n];
                        n.keySystems[$.FAIRPLAY_KEY_SYSTEM].getCertificate({
                            source: n,
                            publisherId: a.publisherId,
                            applicationId: a.applicationId
                        }, function(e, t) {
                            if (e) {
                                o.push({
                                    message: "Unable to resolve FairPlay certificate",
                                    error: e
                                })
                            } else {
                                var n = u[l];
                                for (var r = 0; r < n.length; r++) {
                                    var a = n[r];
                                    a.keySystems[$.FAIRPLAY_KEY_SYSTEM].getCertificate = function(e, n) {
                                        n(null, t)
                                    }
                                }
                            }
                            s--;
                            if (!s) {
                                if (o.length) {
                                    i(o);
                                    return
                                }
                                i()
                            }
                        })
                    };
                    for (var d = 0; d < r.length; d++) {
                        var c = l(d);
                        if (c === "continue")
                            continue
                    }
                };
                var ne = function e(t) {
                    if (!G.isHlsType(t.type) || !t.key_systems || !t.key_systems[$.FAIRPLAY_KEY_SYSTEM]) {
                        return null
                    }
                    var n = t.key_systems[$.FAIRPLAY_KEY_SYSTEM];
                    var i = n.key_request_url;
                    var r = {};
                    r[$.FAIRPLAY_KEY_SYSTEM] = {
                        getCertificate: $.getCertificate,
                        getLicense: $.createGetLicenseFunc(i),
                        getContentId: $.getContentId
                    };
                    return r
                };
                var ie = function e(t) {
                    return ne(t)
                };
                var re = {
                    getKeySystemOptions: ie,
                    getFairPlaySources: ee,
                    resolveFairPlayCertificates: te
                };
                var ae = function e(t, n) {
                    n = n || t && t.mediainfo || {};
                    return t && t.hasPlugin && t.hasPlugin("vr") && n && n.projection
                };
                var se = 50 * 1024 * 1024;
                var oe = 3 * 1024 * 1024;
                var ue = .5 * 1024 * 1024;
                var le = {
                    http: {
                        nativeHls: {
                            http: {
                                "application/vnd.apple.mpegurl": 1,
                                "video/mp4": 5,
                                "application/dash+xml": 3
                            },
                            https: {
                                "application/vnd.apple.mpegurl": 2,
                                "video/mp4": 6,
                                "application/dash+xml": 4
                            }
                        },
                        noNativeHls: {
                            http: {
                                "application/vnd.apple.mpegurl": 1,
                                "video/mp4": 5,
                                "application/dash+xml": 3
                            },
                            https: {
                                "application/vnd.apple.mpegurl": 2,
                                "video/mp4": 6,
                                "application/dash+xml": 4
                            }
                        },
                        preferMp4: {
                            http: {
                                "application/vnd.apple.mpegurl": 3,
                                "video/mp4": 1,
                                "application/dash+xml": 5
                            },
                            https: {
                                "application/vnd.apple.mpegurl": 4,
                                "video/mp4": 2,
                                "application/dash+xml": 6
                            }
                        }
                    },
                    https: {
                        nativeHls: {
                            http: {
                                "application/vnd.apple.mpegurl": 2,
                                "video/mp4": 6,
                                "application/dash+xml": 5
                            },
                            https: {
                                "application/vnd.apple.mpegurl": 1,
                                "video/mp4": 4,
                                "application/dash+xml": 3
                            }
                        },
                        noNativeHls: {
                            http: {
                                "application/vnd.apple.mpegurl": 5,
                                "video/mp4": 4,
                                "application/dash+xml": 6
                            },
                            https: {
                                "application/vnd.apple.mpegurl": 1,
                                "video/mp4": 3,
                                "application/dash+xml": 2
                            }
                        },
                        preferMp4: {
                            http: {
                                "application/vnd.apple.mpegurl": 5,
                                "video/mp4": 4,
                                "application/dash+xml": 6
                            },
                            https: {
                                "application/vnd.apple.mpegurl": 2,
                                "video/mp4": 1,
                                "application/dash+xml": 3
                            }
                        }
                    },
                    codecs: {
                        switching: {
                            hevc: {
                                combined: 1,
                                hevc: 2,
                                avc: 3
                            },
                            nohevc: {
                                combined: 5,
                                hevc: 6,
                                avc: 4
                            }
                        },
                        noswitching: {
                            hevc: {
                                combined: 3,
                                hevc: 5,
                                avc: 2
                            },
                            nohevc: {
                                combined: 4,
                                hevc: 6,
                                avc: 1
                            }
                        }
                    }
                };
                var de = {
                    1: 3,
                    2: 3.2,
                    3: 4.2,
                    4: 5,
                    5: 6,
                    6: 7,
                    7: 8
                };
                var ce = function e(t, n) {
                    return n.type === "application/vnd.apple.mpegurl" && n.key_systems && G.isSafariWithFairplaySupport() && t.eme && t.eme.options
                };
                var fe = function e(t, n) {
                    return n.type === "application/vnd.apple.mpegurl" && n.key_systems && G.isBrowserWithWidevineSupport() && t.eme && t.eme.options
                };
                var pe = function t(n, i, r, a) {
                    if (!i.src) {
                        return 9999
                    }
                    if (i.type === "application/vnd.apple.mpegurl" && i.key_systems && (i.key_systems["com.apple.fps.1_0"] && !ce(r, i) || i.key_systems["com.widevine.alpha"] && !fe(r, i))) {
                        return 9999
                    }
                    if (i.profiles && i.profiles.match(/hbbtv/i)) {
                        return 9999
                    }
                    if (e.browser.IS_IOS && i.type === "application/vnd.apple.mpegurl" && de[i.ext_x_version] > parseFloat(e.browser.IOS_VERSION)) {
                        return 9999
                    }
                    n = n[/^[^:]*/.exec(i.src)];
                    if (!n) {
                        return 9999
                    }
                    var s = n[i.type] || 9999;
                    var o = i.codecs && i.codecs.indexOf("avc1") !== -1;
                    var u = i.codecs && i.codecs.indexOf("hvc1") !== -1;
                    var l = o && u;
                    var d;
                    if (l) {
                        d = a.combined
                    } else if (u) {
                        d = a.hevc
                    } else {
                        d = a.avc
                    }
                    return s + d
                };
                var he = function t(n, i, r, a, s) {
                    var o = ve.preferHttps() ? le.https : le.http;
                    var u;
                    if (ae(n, i)) {
                        u = se
                    } else if (e.browser.IS_IOS || e.browser.IS_ANDROID) {
                        u = ue
                    } else {
                        u = oe
                    }
                    if (ve.preferMp4(n, i)) {
                        o = o.preferMp4
                    } else if (ve.supportsNativeHls()) {
                        o = o.nativeHls
                    } else {
                        o = o.noNativeHls
                    }
                    var l = pe(o, a, n, r) - pe(o, s, n, r);
                    if (l) {
                        return l
                    }
                    if (a.type === "video/mp4" && s.type === "video/mp4") {
                        if (a.avg_bitrate && s.avg_bitrate) {
                            return Math.abs(a.avg_bitrate - u) - Math.abs(s.avg_bitrate - u)
                        }
                        if (a.avg_bitrate || s.avg_bitrate) {
                            l = a.avg_bitrate ? -1 : 1
                        }
                    }
                    if (a.type === "application/vnd.apple.mpegurl" && s.type === "application/vnd.apple.mpegurl") {
                        if (a.ext_x_version && s.ext_x_version) {
                            return s.ext_x_version - a.ext_x_version
                        }
                        if (a.ext_x_version || s.ext_x_version) {
                            l = a.ext_x_version ? -1 : 1
                        }
                    }
                    return l
                };
                function ve(t, n, r) {
                    if (r === void 0) {
                        r = {}
                    }
                    var a = n.sources || [];
                    var s = [];
                    var o = r
                      , u = o.bcovAuthToken
                      , l = o.policyKey
                      , d = o.allowPlayreadyInChromiumEdge;
                    var c = !!u && l === null;
                    if (u && !i.isNonEmptyStr(u)) {
                        e.log.error("The bcovAuthToken catalog property must be a string");
                        u = null
                    }
                    for (var f = 0; f < a.length; f++) {
                        var p = a[f];
                        if (p.key_systems && p.key_systems["com.microsoft.playready"] && G.isChromiumEdge() && (c && typeof d === "undefined" || d === false)) {
                            if (Object.keys(p.key_systems).length > 1) {
                                delete p.key_systems["com.microsoft.playready"]
                            } else {
                                a.splice(f, 1);
                                f--;
                                continue
                            }
                        }
                        if (u && p.key_systems) {
                            p.emeHeaders = {
                                "BCOV-Auth": u
                            }
                        }
                        if (p.src && p.container === "MP4") {
                            p.type = "video/mp4"
                        } else if (p.src && (p.container === "M2TS" || G.isHlsType(p.type))) {
                            p.type = "application/vnd.apple.mpegurl";
                            if (ce(t, p)) {
                                p.keySystems = re.getKeySystemOptions(p)
                            }
                            if (G.isBoltEncryptedHls(p.src) && u) {
                                if (p.vmap && t.hasPlugin("ssai")) {
                                    p.bcovAuthToken = u
                                } else {
                                    var h = e.parseUrl(p.src);
                                    var v = "bcov_auth=" + u;
                                    if (!h.search) {
                                        v = "?" + v
                                    } else if (!(h.search[h.search.length - 1] === "&")) {
                                        v = "&" + v
                                    }
                                    p.src += v
                                }
                            }
                        }
                        s.push(p)
                    }
                    var g = ve.supportsSwitchingCodecs(t) ? "switching" : "noswitching";
                    var m = ve.supportsHEVC() ? "hevc" : "nohevc";
                    var y = le.codecs[g][m];
                    return s.sort(he.bind(null, t, n, y))
                }
                ve.supportsNativeHls = function() {
                    return G.isNativeHlsSupported()
                }
                ;
                ve.preferHttps = function() {
                    return G.preferHttps(t)
                }
                ;
                ve.supportsHEVC = function() {
                    return G.isHEVCSupported()
                }
                ;
                ve.supportsSwitchingCodecs = function(e) {
                    return G.isCodecSwitchingSupported(e)
                }
                ;
                ve.preferMp4 = function(t, n) {
                    return e.browser.IS_ANDROID && e.browser.ANDROID_VERSION < 5 || ae(t, n)
                }
                ;
                var ge = function() {
                    function e() {
                        this.defaults_ = {}
                    }
                    var t = e.prototype;
                    t.normalize = function e(t, n, r) {
                        var a = i.assign({}, this.defaults_);
                        if (t && !i.isObj(t)) {
                            a.id = t
                        } else {
                            i.assign(a, t);
                            if (i.isObj(t.id)) {
                                i.assign(a, t.id);
                                if (!t.id.hasOwnProperty("id")) {
                                    delete a.id
                                }
                            }
                        }
                        if (typeof n === "string") {
                            a.type = n
                        }
                        if (a.type === o) {
                            if (!a.q) {
                                a.q = a.id
                            }
                            delete a.id
                        }
                        if (typeof t.deliveryConfigId === "string") {
                            a.deliveryConfigId = t.deliveryConfigId
                        }
                        if (typeof r === "string") {
                            a.adConfigId = r
                        }
                        if ((a.type === s || a.type === o) && a.limit === undefined) {
                            a.limit = "100"
                        }
                        return a
                    }
                    ;
                    t.setDefaults = function e(t) {
                        if (t === null) {
                            this.defaults_ = {}
                        } else {
                            i.assign(this.defaults_, t)
                        }
                    }
                    ;
                    t.getDefault = function e(t) {
                        return i.isObj(this.defaults_) && this.defaults_[t] || undefined
                    }
                    ;
                    t.getDefaults = function e() {
                        return i.isObj(this.defaults_) && i.assign({}, this.defaults_) || {}
                    }
                    ;
                    return e
                }();
                var me = /([A-Za-z0-9])_([A-Za-z0-9])/g;
                var ye = function e(t) {
                    return t.replace(me, function(e, t, n) {
                        return t + n.toUpperCase()
                    })
                };
                var _e = function t(n) {
                    var i = e.mergeOptions(n);
                    Object.keys(i).filter(function(e) {
                        return e.match(me)
                    }).forEach(function(e) {
                        i[ye(e)] = i[e]
                    });
                    return i
                };
                var be = function e(t, i) {
                    if (!i) {
                        return
                    }
                    t.mediainfo = _e(i);
                    var r = Boolean(t.el().ownerDocument.querySelector(".bc-iframe"));
                    var a = t.mediainfo.name;
                    if (r && a) {
                        n.title = a
                    }
                };
                var Se = function e(t, n) {
                    if (!n) {
                        return
                    }
                    t.playlistinfo = _e(n);
                    delete t.playlistinfo.videos
                };
                var Ae = function e(t, n) {
                    return (t.type === "application/vnd.apple.mpegurl" || t.type === "application/dash+xml") && n.toLowerCase() === "html5"
                };
                function Te(n) {
                    var r = this;
                    var l = function e(t) {
                        if (t && t.accountId) {
                            r.trigger({
                                type: "usage",
                                name: "catalog-get-account-id"
                            });
                            return t.accountId
                        }
                        if (typeof r.getAccountId === "function") {
                            return r.getAccountId()
                        }
                        return n.accountId || r.options_["data-account"]
                    };
                    var d = new ge;
                    var c = {};
                    var p;
                    var v = {
                        policyKey: r.options_["data-policy-key"],
                        bcovAuthToken: r.options_["data-bcov-auth-token"]
                    };
                    var g = Object.keys(v).reduce(function(e, t) {
                        if (v[t]) {
                            e[t] = v[t]
                        }
                        return e
                    }, {});
                    ["baseUrl", "bcovAuthToken", "env", "policyKey", "allowPlayreadyInChromiumEdge"].forEach(function(e) {
                        if (n.hasOwnProperty(e)) {
                            g[e] = n[e]
                        }
                    });
                    d.setDefaults(g);
                    h(r);
                    r.on("loadstart", function() {
                        if (!i.isFn(r.playlist) || !r.playlist() || !r.playlist().length) {
                            return
                        }
                        be(r, r.playlist()[r.playlist.indexOf(r.currentSrc())])
                    });
                    r.on("dispose", function() {
                        return T(r)
                    });
                    var y = function t(n, i) {
                        var a = re.getFairPlaySources(n);
                        if (!a.length) {
                            i();
                            return
                        }
                        re.resolveFairPlayCertificates(r, a, function(t) {
                            if (t) {
                                e.log("Unable to resolve FairPlay certificates", t)
                            }
                            i()
                        })
                    };
                    var _ = function t(n) {
                        if (!r.hasPlugin || !r.hasPlugin("ssai") || !n) {
                            return n
                        }
                        return n.map(function(t) {
                            if (t.vmap) {
                                t.type = e.getPlugin("ssai").MIME_TYPE;
                                t.originalHlsSource = t.src;
                                t.src = t.vmap
                            }
                            return t
                        })
                    };
                    var S = function t(n) {
                        if (!n.variants) {
                            return n
                        }
                        var i = n.name
                          , r = n.description
                          , a = n.longDescription
                          , s = n.customFields;
                        var o = null;
                        var u = {
                            name: i,
                            description: r,
                            longDescription: a,
                            language: o
                        };
                        u.customFields = e.mergeOptions(s);
                        var l = n.variants.map(_e);
                        n.variants = [].concat(l, [u]);
                        return n
                    };
                    var E = function e(t) {
                        if (!t) {
                            return
                        }
                        if (Array.isArray(t)) {
                            p = t.map(function(e) {
                                return S(_e(e))
                            })
                        } else {
                            p = S(_e(t))
                        }
                    };
                    var I = function t(n, i) {
                        if (!n || !n.variants) {
                            return e.mergeOptions(n)
                        }
                        var r;
                        if (i) {
                            i = i.toLowerCase()
                        }
                        for (var a = 0; a < n.variants.length; a++) {
                            if (n.variants[a].language === null) {
                                r = n.variants[a]
                            }
                            if (n.variants[a].language && n.variants[a].language.toLowerCase() === i) {
                                r = n.variants[a];
                                break
                            }
                        }
                        return e.mergeOptions(n, r)
                    };
                    var C = function n(i) {
                        var a = function n() {
                            var a = false;
                            be(r, i);
                            E(i);
                            if (ae(r)) {
                                var s = r.el().querySelector("video");
                                s.setAttribute("crossorigin", "anonymous")
                            }
                            r.el().setAttribute("data-video-id", i.id);
                            if (t.bc && !t.bc.disposedAfterPreroll_) {
                                r.poster(i.poster)
                            }
                            if (i.sources) {
                                for (var o = 0; o < i.sources.length; o++) {
                                    if (i.sources[o].vmap !== undefined) {
                                        a = true;
                                        break
                                    }
                                }
                            }
                            if (a && r.onceux !== undefined) {
                                r.onceux.loadSourcesFromCatalog(i.sources)
                            } else {
                                if (a) {
                                    i.sources = _(i.sources)
                                }
                                r.src(i.sources)
                            }
                            k(r, i);
                            if (i.textTracks) {
                                var u = new RegExp("^" + t.location.protocol);
                                var l = new RegExp("^https:");
                                var d = null;
                                var c = null;
                                for (var f = 0; f < i.textTracks.length; f++) {
                                    var p = i.textTracks[f];
                                    if (p.label === "thumbnails") {
                                        if (r.usingPlugin("thumbnails") && p.width <= 480) {
                                            if (u.test(p.src)) {
                                                d = p
                                            } else if (l.test(p.src)) {
                                                c = p
                                            }
                                        }
                                    } else {
                                        r.addRemoteTextTrack(p)
                                    }
                                }
                                var h = d || c;
                                if (h) {
                                    r.addRemoteTextTrack({
                                        src: h.src,
                                        label: "thumbnails",
                                        kind: "metadata",
                                        mode: "hidden"
                                    }, false)
                                }
                                if (i.textTracks.length > 0 && e.browser.IS_ANY_SAFARI || e.browser.IS_IOS) {
                                    r.crossOrigin("anonymous")
                                }
                            }
                        };
                        y(i.sources, a)
                    };
                    var w = function e(t) {
                        var n = function e() {
                            r.on("beforeplaylistitem", function(e, t) {
                                return k(r, t)
                            });
                            r.on("playlistchange", function() {
                                return E(r.playlist())
                            });
                            for (var n = 0; n < t.length; n++) {
                                t[n].sources = _(t[n].sources)
                            }
                            var i = t.startingIndex || 0;
                            E(t);
                            be(r, t[i]);
                            Se(r, r.catalog.data);
                            if (ae(r)) {
                                var a = r.el().querySelector("video");
                                a.setAttribute("crossorigin", "anonymous")
                            }
                            r.playlist(t, i)
                        };
                        var i = t.filter(function(e) {
                            return e.sources
                        }).reduce(function(e, t) {
                            return e.concat(t.sources)
                        }, []);
                        y(i, n)
                    };
                    var j = function e(t, i) {
                        var a;
                        var s = _e(t);
                        if (s.sources) {
                            s.rawSources_ = s.sources;
                            s.sources = (n.getSources || ve)(r, s, i);
                            a = r.selectSource(s.sources)
                        }
                        if (s.posterSources) {
                            s.poster = P(s.posterSources)
                        }
                        if (s.thumbnailSources) {
                            s.thumbnail = P(s.thumbnailSources)
                        }
                        if (s.textTracks) {
                            var o = a && Ae(a.source, a.tech);
                            s.textTracks = s.textTracks.filter(function(e) {
                                return !(o && e.in_band_metadata_track_dispatch_type !== undefined)
                            }).map(function(e) {
                                if (e.sources) {
                                    e.src = P(e.sources)
                                }
                                return e
                            })
                        }
                        if (s.duration) {
                            s.duration = s.duration * .001
                        }
                        if (s.cuePoints) {
                            for (var u = 0; u < s.cuePoints.length; u++) {
                                A(s, u)
                            }
                        }
                        return s
                    };
                    r.catalog = {
                        transformCatalogError: m,
                        transformVideoResponse: j,
                        mediaCuePointsTrack: function t() {
                            if (!r.catalog.mediaCuePointsTrack.hasWarned_) {
                                e.log.warn("player.catalog.mediaCuePointsTrack() is deprecated, please use player.mediaCuePointsTrack() instead!");
                                r.catalog.mediaCuePointsTrack.hasWarned_ = true
                            }
                            return r.mediaCuePointsTrack()
                        },
                        get: function t(n, s) {
                            n = d.normalize(n);
                            if (r.catalog.tveToken) {
                                n.tveToken = r.catalog.tveToken
                            }
                            c = n;
                            r.catalog.loading++;
                            var u;
                            var f = new i.Promise(function(t, i) {
                                u = x(r, l(n), n, function(s, u) {
                                    r.catalog.loading--;
                                    if (n.type === o && u && (!u.videos || !u.videos.length)) {
                                        s = new Error("No videos returned from search")
                                    }
                                    if (s) {
                                        s.data = u;
                                        r.catalog.error = s;
                                        return i(s)
                                    }
                                    if (!u) {
                                        return t(null)
                                    }
                                    r.catalog.data = e.mergeOptions({}, u);
                                    if (n.adConfigId) {
                                        r.catalog.data.adConfigId = n.adConfigId
                                    }
                                    var l = {
                                        policyKey: n.policyKey,
                                        allowPlayreadyInChromiumEdge: n.allowPlayreadyInChromiumEdge
                                    };
                                    if (n.bcovAuthToken) {
                                        l.bcovAuthToken = n.bcovAuthToken
                                    }
                                    if (n.type === a) {
                                        r.catalog.sources = u.sources;
                                        r.catalog.poster = u.poster;
                                        return t(j(u, l))
                                    }
                                    var d = u.videos.filter(function(e) {
                                        return !e.hasOwnProperty("errors")
                                    }).map(function(e) {
                                        return j(e, l)
                                    });
                                    if (d.length) {
                                        return t(d)
                                    }
                                    return i(new Error("No videos returned from playlist"))
                                })
                            }
                            );
                            if (!i.isFn(s)) {
                                return f
                            }
                            f.then(function(e) {
                                s(null, e)
                            }).catch(function(e) {
                                s(e, e.data)
                            });
                            return u
                        },
                        getVideo: function e(t, n, i) {
                            if (n === void 0) {
                                n = function e() {}
                            }
                            return this.get(d.normalize(t, a, i), n)
                        },
                        getSequence: function t(n, i, a) {
                            var s = this;
                            if (i === void 0) {
                                i = function e() {}
                            }
                            if (!Array.isArray(n)) {
                                n = [n]
                            }
                            n = n.filter(function(t) {
                                if (!/^(search|video|playlist)$/i.test(t.type)) {
                                    e.log.error("invalid sequence type, please use search, video, or playlist. for:", t);
                                    return false
                                }
                                return true
                            });
                            if (!n.length) {
                                i(new Error("No valid sequences"), null);
                                return
                            }
                            var o = n.length;
                            var u = new Array(n.length);
                            return n.map(function(t, l) {
                                return s.get(d.normalize(t, t.type, a), function(a, s) {
                                    o--;
                                    if (a) {
                                        e.log.error("failed to request sequence", t);
                                        e.log.error("with error", a)
                                    } else if (s) {
                                        if (!Array.isArray(s)) {
                                            s = [s]
                                        }
                                        u[l] = s
                                    }
                                    if (o === 0) {
                                        r.catalog.data = u;
                                        var d = u.reduce(function(e, t) {
                                            return t && e.concat(t)
                                        }, []);
                                        if (!d.length) {
                                            i(new Error("No data was loaded for the sequence " + JSON.stringify(n),null))
                                        } else {
                                            i(null, d)
                                        }
                                    }
                                }, a)
                            })
                        },
                        getLazySequence: function e(t, n, i) {
                            var a = this;
                            if (n === void 0) {
                                n = function e() {}
                            }
                            if (!Array.isArray(t)) {
                                t = [t]
                            }
                            var s = function e(n) {
                                return a.getSequence(t.shift(), function(i, r) {
                                    if ((i || !r) && t && t.length) {
                                        return e(n)
                                    }
                                    n(i, r)
                                }, i)
                            };
                            var o = function e() {
                                if (!t.length) {
                                    r.off("playlistitem", e);
                                    return
                                }
                                var n = r.playlist;
                                var i = n.currentIndex && n.currentIndex() || n.currentItem && n.currentItem() || 0;
                                var a = n.lastIndex && n.lastIndex() || n().length - 1 || 0;
                                if (i !== a) {
                                    return
                                }
                                s(function(e, t) {
                                    if (e || !t) {
                                        return
                                    }
                                    r.playlist(r.playlist().concat(t), i)
                                })
                            };
                            r.on("playlistitem", o);
                            return s(n)
                        },
                        getSearch: function e(t, n, i) {
                            if (n === void 0) {
                                n = function e() {}
                            }
                            return this.get(d.normalize(t, o, i), n)
                        },
                        getPlaylist: function e(t, n, i) {
                            if (n === void 0) {
                                n = function e() {}
                            }
                            return this.get(d.normalize(t, s, i), n)
                        },
                        load: function e(t) {
                            if (Array.isArray(t)) {
                                w(t)
                            } else {
                                C(t)
                            }
                        },
                        autoFindAndLoadMedia: function e(t) {
                            var n = f(t, r);
                            if (!n) {
                                return
                            }
                            t.playlistVideoId = n.playlistVideoId;
                            var i = b(n.type, r, t);
                            if (n.type === u) {
                                this.getLazySequence(n.id, i)
                            } else {
                                this.get(d.normalize(n), i)
                            }
                            return n
                        },
                        setBcovAuthToken: function t(n) {
                            if (n !== null && !i.isNonEmptyStr(n)) {
                                e.log.warn("Authorization Token must be a valid string or null");
                                return
                            }
                            d.setDefaults({
                                bcovAuthToken: n
                            })
                        },
                        setPolicyKey: function t(n) {
                            if (n !== null && !i.isNonEmptyStr(n)) {
                                e.log.warn("Policy key must be a valid string or null");
                                return
                            }
                            d.setDefaults({
                                policyKey: n
                            })
                        },
                        getCatalogParamDefault_: function e(t) {
                            if (t === "accountId") {
                                return l()
                            }
                            return d.getDefault(t)
                        },
                        getLastParams: function t() {
                            return e.mergeOptions(c)
                        },
                        getLastData: function t() {
                            return e.mergeOptions(r.catalog.data)
                        },
                        getMetadata: function e(t) {
                            var n = t ? t : {}
                              , i = n.type
                              , a = n.lang;
                            if (!p) {
                                r.log.debug("getMetadata() called with no cached metadata");
                                return i === s ? [] : {}
                            }
                            var o = r.usingPlugin("playlist") ? r.playlist() : [];
                            if (i === s && o.length) {
                                return p.map(function(e) {
                                    return I(e, a)
                                })
                            }
                            if (o.length && Array.isArray(p)) {
                                var u = r.playlist.indexOf(r.currentSrc());
                                if (u === -1) {
                                    return {}
                                }
                                return I(p[u], a)
                            }
                            return I(p, a)
                        },
                        loading: 0
                    }
                }
                e.registerPlugin("catalog", Te);
                Te.VERSION = r;
                return Te
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("dock")) {
                return
            }
            (function(e, t) {
                typeof exports === "object" && typeof module !== "undefined" ? t(exports, require("video.js")) : typeof define === "function" && define.amd ? define(["exports", "video.js"], t) : t(e.videojsDock = e.videojsDock || {}, e.videojs)
            }
            )(this, function(e, t) {
                "use strict";
                t = "default"in t ? t["default"] : t;
                var n = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
                var i = {};
                var r = (Object.freeze || Object)({
                    default: i
                });
                var a = r && i || r;
                var s = typeof n !== "undefined" ? n : typeof window !== "undefined" ? window : {};
                var o;
                if (typeof document !== "undefined") {
                    o = document
                } else {
                    o = s["__GLOBAL_DOCUMENT_CACHE@4"];
                    if (!o) {
                        o = s["__GLOBAL_DOCUMENT_CACHE@4"] = a
                    }
                }
                var u = o;
                var l = 1;
                var d = function e() {
                    return l++
                };
                var c = function(e, t) {
                    if (!(e instanceof t)) {
                        throw new TypeError("Cannot call a class as a function")
                    }
                };
                var f = function(e, t) {
                    if (typeof t !== "function" && t !== null) {
                        throw new TypeError("Super expression must either be null or a function, not " + typeof t)
                    }
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: false,
                            writable: true,
                            configurable: true
                        }
                    });
                    if (t)
                        Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                };
                var p = function(e, t) {
                    if (!e) {
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                    }
                    return t && (typeof t === "object" || typeof t === "function") ? t : e
                };
                var h = t.dom || t;
                var v = t.registerPlugin || t.plugin;
                var g = t.getComponent("Component");
                var m = function(e) {
                    f(t, e);
                    function t(n, i) {
                        c(this, t);
                        var r = p(this, e.call(this, n, i));
                        var a = n.$(".vjs-tech");
                        a.setAttribute("aria-labelledby", r.title.id);
                        a.setAttribute("aria-describedby", r.description.id);
                        return r
                    }
                    t.prototype.createEl = function t() {
                        var n = h.createEl("div", {
                            className: "vjs-dock-title",
                            title: this.options_.title,
                            innerHTML: this.options_.title
                        }, {
                            id: "vjs-dock-title-" + d()
                        });
                        var i = h.createEl("div", {
                            className: "vjs-dock-description",
                            title: this.options_.description,
                            innerHTML: this.options_.description
                        }, {
                            id: "vjs-dock-description-" + d()
                        });
                        var r = e.prototype.createEl.call(this, "div", {
                            className: "vjs-dock-text"
                        });
                        this.title = n;
                        this.description = i;
                        r.appendChild(n);
                        r.appendChild(i);
                        return r
                    }
                    ;
                    t.prototype.update = function e(t, n) {
                        this.title.innerHTML = "";
                        this.description.innerHTML = "";
                        this.title.appendChild(u.createTextNode(t));
                        this.description.appendChild(u.createTextNode(n))
                    }
                    ;
                    return t
                }(g);
                var y = function(e) {
                    f(t, e);
                    function t() {
                        c(this, t);
                        return p(this, e.apply(this, arguments))
                    }
                    t.prototype.createEl = function t() {
                        return e.prototype.createEl.call(this, "div", {
                            className: "vjs-dock-shelf"
                        })
                    }
                    ;
                    return t
                }(g);
                t.registerComponent("Title", m);
                t.registerComponent("Shelf", y);
                var _ = function e(t) {
                    var n = t || {};
                    var i = {
                        title: {
                            title: n.title || "",
                            description: n.description || ""
                        }
                    };
                    var r = this.title;
                    var a = this.shelf;
                    this.addClass("vjs-dock");
                    var s = this.children().indexOf(this.getChild("bigPlayButton"));
                    var o = s > 0 ? s - 1 : null;
                    if (!a) {
                        a = this.shelf = this.addChild("shelf", i, o)
                    }
                    if (!r) {
                        r = this.title = this.addChild("title", i.title, o)
                    } else {
                        r.update(i.title.title, i.title.description)
                    }
                    this.one(r, "dispose", function() {
                        this.title = null
                    });
                    this.one(a, "dispose", function() {
                        this.shelf = null
                    })
                };
                v("dock", _);
                e.Title = m;
                e.Shelf = y;
                e["default"] = _
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("playlist")) {
                return
            }
            (function(e, t) {
                typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js")) : typeof define === "function" && define.amd ? define(["video.js"], t) : (e = e || self,
                e.videojsPlaylist = t(e.videojs))
            }
            )(this, function(e) {
                "use strict";
                e = e && e.hasOwnProperty("default") ? e["default"] : e;
                var t = function e(t) {
                    return typeof t === "number" && !isNaN(t) && t >= 0 && t < Infinity
                };
                var n = function e(t) {
                    var n = t.playlist.autoadvance_;
                    if (n.timeout) {
                        t.clearTimeout(n.timeout)
                    }
                    if (n.trigger) {
                        t.off("ended", n.trigger)
                    }
                    n.timeout = null;
                    n.trigger = null
                };
                var i = function e(i, r) {
                    n(i);
                    if (!t(r)) {
                        i.playlist.autoadvance_.delay = null;
                        return
                    }
                    i.playlist.autoadvance_.delay = r;
                    i.playlist.autoadvance_.trigger = function() {
                        var t = function t() {
                            return e(i, r)
                        };
                        i.one("play", t);
                        i.playlist.autoadvance_.timeout = i.setTimeout(function() {
                            n(i);
                            i.off("play", t);
                            i.playlist.next()
                        }, r * 1e3)
                    }
                    ;
                    i.one("ended", i.playlist.autoadvance_.trigger)
                };
                var r = function e(t) {
                    var n = t.remoteTextTracks();
                    var i = n && n.length || 0;
                    while (i--) {
                        t.removeRemoteTextTrack(n[i])
                    }
                };
                var a = function e(t, n) {
                    var a = !t.paused() || t.ended();
                    t.trigger("beforeplaylistitem", n.originalValue || n);
                    if (n.playlistItemId_) {
                        t.playlist.currentPlaylistItemId_ = n.playlistItemId_
                    }
                    t.poster(n.poster || "");
                    t.src(n.sources);
                    r(t);
                    t.ready(function() {
                        (n.textTracks || []).forEach(t.addRemoteTextTrack.bind(t));
                        t.trigger("playlistitem", n.originalValue || n);
                        if (a) {
                            var e = t.play();
                            if (typeof e !== "undefined" && typeof e.then === "function") {
                                e.then(null, function(e) {})
                            }
                        }
                        i(t, t.playlist.autoadvance_.delay)
                    });
                    return t
                };
                var s = function e(t) {
                    return !!t && typeof t === "object"
                };
                var o = function e(t) {
                    var n = [];
                    var i;
                    t.forEach(function(e) {
                        if (!s(e)) {
                            i = Object(e);
                            i.originalValue = e
                        } else {
                            i = e
                        }
                        n.push(i)
                    });
                    return n
                };
                var u = function e(t) {
                    var n = 1;
                    t.forEach(function(e) {
                        e.playlistItemId_ = n++
                    })
                };
                var l = function e(t, n) {
                    for (var i = 0; i < t.length; i++) {
                        if (t[i].playlistItemId_ === n) {
                            return i
                        }
                    }
                    return -1
                };
                var d = function e(t, n) {
                    var i = t;
                    var r = n;
                    if (typeof t === "object") {
                        i = t.src
                    }
                    if (typeof n === "object") {
                        r = n.src
                    }
                    if (/^\/\//.test(i)) {
                        r = r.slice(r.indexOf("//"))
                    }
                    if (/^\/\//.test(r)) {
                        i = i.slice(i.indexOf("//"))
                    }
                    return i === r
                };
                var c = function e(t, n) {
                    for (var i = 0; i < t.length; i++) {
                        var r = t[i].sources;
                        if (Array.isArray(r)) {
                            for (var a = 0; a < r.length; a++) {
                                var s = r[a];
                                if (s && d(s, n)) {
                                    return i
                                }
                            }
                        }
                    }
                    return -1
                };
                var f = function e(t) {
                    var n = -1;
                    var i = t.length - 1;
                    while (++n < t.length) {
                        var r = n + Math.floor(Math.random() * (i - n + 1));
                        var a = t[r];
                        t[r] = t[n];
                        t[n] = a
                    }
                    return t
                };
                function p(t, r, d) {
                    if (d === void 0) {
                        d = 0
                    }
                    var p = null;
                    var h = false;
                    var v = t.playlist = function(e, n) {
                        if (n === void 0) {
                            n = 0
                        }
                        if (h) {
                            throw new Error("do not call playlist() during a playlist change")
                        }
                        if (Array.isArray(e)) {
                            var i = Array.isArray(p) ? p.slice() : null;
                            var r = e.slice();
                            p = r.slice();
                            if (p.filter(function(e) {
                                return s(e)
                            }).length !== p.length) {
                                p = o(p)
                            }
                            u(p);
                            h = true;
                            t.trigger({
                                type: "duringplaylistchange",
                                nextIndex: n,
                                nextPlaylist: r,
                                previousIndex: v.currentIndex_,
                                previousPlaylist: i || []
                            });
                            h = false;
                            if (n !== -1) {
                                v.currentItem(n)
                            }
                            if (i) {
                                t.setTimeout(function() {
                                    t.trigger("playlistchange")
                                }, 0)
                            }
                        }
                        return p.map(function(e) {
                            return e.originalValue || e
                        }).slice()
                    }
                    ;
                    t.on("loadstart", function() {
                        if (v.currentItem() === -1) {
                            n(t)
                        }
                    });
                    v.currentIndex_ = -1;
                    v.player_ = t;
                    v.autoadvance_ = {};
                    v.repeat_ = false;
                    v.currentPlaylistItemId_ = null;
                    v.currentItem = function(e) {
                        if (h) {
                            return v.currentIndex_
                        }
                        if (typeof e === "number" && v.currentIndex_ !== e && e >= 0 && e < p.length) {
                            v.currentIndex_ = e;
                            a(v.player_, p[v.currentIndex_]);
                            return v.currentIndex_
                        }
                        var t = v.player_.currentSrc() || "";
                        if (v.currentPlaylistItemId_) {
                            var n = l(p, v.currentPlaylistItemId_);
                            var i = p[n];
                            if (i && Array.isArray(i.sources) && c([i], t) > -1) {
                                v.currentIndex_ = n;
                                return v.currentIndex_
                            }
                            v.currentPlaylistItemId_ = null
                        }
                        v.currentIndex_ = v.indexOf(t);
                        return v.currentIndex_
                    }
                    ;
                    v.contains = function(e) {
                        return v.indexOf(e) !== -1
                    }
                    ;
                    v.indexOf = function(e) {
                        if (typeof e === "string") {
                            return c(p, e)
                        }
                        var t = Array.isArray(e) ? e : e.sources;
                        for (var n = 0; n < t.length; n++) {
                            var i = t[n];
                            if (typeof i === "string") {
                                return c(p, i)
                            } else if (i.src) {
                                return c(p, i.src)
                            }
                        }
                        return -1
                    }
                    ;
                    v.currentIndex = function() {
                        return v.currentItem()
                    }
                    ;
                    v.lastIndex = function() {
                        return p.length - 1
                    }
                    ;
                    v.nextIndex = function() {
                        var e = v.currentItem();
                        if (e === -1) {
                            return -1
                        }
                        var t = v.lastIndex();
                        if (v.repeat_ && e === t) {
                            return 0
                        }
                        return Math.min(e + 1, t)
                    }
                    ;
                    v.previousIndex = function() {
                        var e = v.currentItem();
                        if (e === -1) {
                            return -1
                        }
                        if (v.repeat_ && e === 0) {
                            return v.lastIndex()
                        }
                        return Math.max(e - 1, 0)
                    }
                    ;
                    v.first = function() {
                        if (h) {
                            return
                        }
                        var e = v.currentItem(0);
                        if (p.length) {
                            return p[e].originalValue || p[e]
                        }
                        v.currentIndex_ = -1
                    }
                    ;
                    v.last = function() {
                        if (h) {
                            return
                        }
                        var e = v.currentItem(v.lastIndex());
                        if (p.length) {
                            return p[e].originalValue || p[e]
                        }
                        v.currentIndex_ = -1
                    }
                    ;
                    v.next = function() {
                        if (h) {
                            return
                        }
                        var e = v.nextIndex();
                        if (e !== v.currentIndex_) {
                            var t = v.currentItem(e);
                            return p[t].originalValue || p[t]
                        }
                    }
                    ;
                    v.previous = function() {
                        if (h) {
                            return
                        }
                        var e = v.previousIndex();
                        if (e !== v.currentIndex_) {
                            var t = v.currentItem(e);
                            return p[t].originalValue || p[t]
                        }
                    }
                    ;
                    v.autoadvance = function(e) {
                        i(v.player_, e)
                    }
                    ;
                    v.repeat = function(t) {
                        if (t === undefined) {
                            return v.repeat_
                        }
                        if (typeof t !== "boolean") {
                            e.log.error("videojs-playlist: Invalid value for repeat", t);
                            return
                        }
                        v.repeat_ = !!t;
                        return v.repeat_
                    }
                    ;
                    v.sort = function(e) {
                        if (!p.length) {
                            return
                        }
                        p.sort(e);
                        if (h) {
                            return
                        }
                        t.trigger("playlistsorted")
                    }
                    ;
                    v.reverse = function() {
                        if (!p.length) {
                            return
                        }
                        p.reverse();
                        if (h) {
                            return
                        }
                        t.trigger("playlistsorted")
                    }
                    ;
                    v.shuffle = function(e) {
                        var n = e === void 0 ? {} : e
                          , i = n.rest;
                        var r = 0;
                        var a = p;
                        if (i) {
                            r = v.currentIndex_ + 1;
                            a = p.slice(r)
                        }
                        if (a.length <= 1) {
                            return
                        }
                        f(a);
                        if (i) {
                            var s;
                            (s = p).splice.apply(s, [r, a.length].concat(a))
                        }
                        if (h) {
                            return
                        }
                        t.trigger("playlistsorted")
                    }
                    ;
                    if (Array.isArray(r)) {
                        v(r.slice(), d)
                    } else {
                        p = []
                    }
                    return v
                }
                var h = "4.3.1";
                var v = e.registerPlugin || e.plugin;
                var g = function e(t, n) {
                    p(this, t, n)
                };
                v("playlist", g);
                g.VERSION = h;
                return g
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("ima3")) {
                return
            }
            !function(e) {
                if ("object" == typeof exports && "undefined" != typeof module)
                    module.exports = e();
                else if ("function" == typeof define && define.amd)
                    define([], e);
                else {
                    var t;
                    t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this,
                    t.videojsIma3 = e()
                }
            }(function() {
                var e;
                return function() {
                    function e(t, n, i) {
                        function r(s, o) {
                            if (!n[s]) {
                                if (!t[s]) {
                                    var u = "function" == typeof require && require;
                                    if (!o && u)
                                        return u(s, !0);
                                    if (a)
                                        return a(s, !0);
                                    var l = new Error("Cannot find module '" + s + "'");
                                    throw l.code = "MODULE_NOT_FOUND",
                                    l
                                }
                                var d = n[s] = {
                                    exports: {}
                                };
                                t[s][0].call(d.exports, function(e) {
                                    var n = t[s][1][e];
                                    return r(n || e)
                                }, d, d.exports, e, t, n, i)
                            }
                            return n[s].exports
                        }
                        for (var a = "function" == typeof require && require, s = 0; s < i.length; s++)
                            r(i[s]);
                        return r
                    }
                    return e
                }()({
                    1: [function(e, t, n) {
                        (function(i) {
                            "use strict";
                            function r(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                }
                            }
                            function a(e) {
                                var t = o["default"].browser.IS_IOS
                                  , n = undefined;
                                n = t && e.playsinline() ? [{
                                    prop: "canAutoPlayInlineVideo",
                                    method: "video",
                                    params: {
                                        retryAfterTimeout: 2,
                                        timeout: 250,
                                        muted: !1,
                                        inline: !0
                                    }
                                }, {
                                    prop: "canAutoPlayMutedInlineVideo",
                                    method: "video",
                                    params: {
                                        retryAfterTimeout: 2,
                                        timeout: 250,
                                        muted: !0,
                                        inline: !0
                                    }
                                }] : [{
                                    prop: "canAutoPlayVideo",
                                    method: "video",
                                    params: {
                                        retryAfterTimeout: 2,
                                        timeout: 250,
                                        muted: !1
                                    }
                                }, {
                                    prop: "canAutoPlayMutedVideo",
                                    method: "video",
                                    params: {
                                        retryAfterTimeout: 2,
                                        timeout: 250,
                                        muted: !0
                                    }
                                }];
                                var i = function t(n) {
                                    return c["default"][n.method](n.params).then(function(i) {
                                        var r = i.result
                                          , a = i.error;
                                        if (e.ima3[n.prop] = r,
                                        a && "Error" === a.name && n.params.retryAfterTimeout && (!e.ima3.canAutoPlayVideo || !e.ima3.canAutoPlayInlineVideo))
                                            return n.params.retryAfterTimeout--,
                                            t(n)
                                    })
                                };
                                return l["default"].Promise ? e.autoplay() ? e.ima3.canAutoPlayTestsResult ? e.ima3.canAutoPlayTestsResult : (e.ima3.canAutoPlayTestsResult = function() {
                                    return n.reduce(function(t, n) {
                                        return t.then(function() {
                                            if (!e.ima3.canAutoPlayVideo && !e.ima3.canAutoPlayInlineVideo)
                                                return i(n)
                                        })
                                    }, Promise.resolve()).then(function() {
                                        return Promise.resolve()
                                    })
                                }(),
                                e.ima3.canAutoPlayTestsResult) : Promise.resolve() : (e.ima3.canAutoPlayVideo = !0,
                                e.ima3.canAutoPlayMutedVideo = !0,
                                {
                                    then: function(e) {
                                        e()
                                    }
                                })
                            }
                            Object.defineProperty(n, "__esModule", {
                                value: !0
                            }),
                            n["default"] = a;
                            var s = "undefined" != typeof window ? window.videojs : void 0 !== i ? i.videojs : null
                              , o = r(s)
                              , u = e("global/window")
                              , l = r(u)
                              , d = e("can-autoplay")
                              , c = r(d);
                            t.exports = n["default"]
                        }
                        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
                    }
                    , {
                        "can-autoplay": 4,
                        "global/window": 6
                    }],
                    2: [function(e, t, n) {
                        (function(e) {
                            "use strict";
                            function i(e, t) {
                                g(e, t),
                                e.ima3.cueState_.cueModule.setMetadataTrackMode = function(e) {
                                    e.mode = "hidden"
                                }
                                ,
                                e.ima3.cueState_.cueModule.getCueId = function(e, t) {
                                    var n = e.ima3.cueState_.cueModule.getSupportedAdCue(e, t);
                                    return n ? n.id : null
                                }
                                ,
                                e.ima3.cueState_.cueModule.isSupportedAdCue = function(e, t) {
                                    return null !== e.ima3.cueState_.cueModule.getSupportedAdCue(e, t)
                                }
                                ,
                                e.ima3.cueState_.cueModule.getSupportedAdCue = function(e, t) {
                                    return e.ima3.settings.useMediaCuePoints && "oncue" === e.ima3.settings.requestMode ? u(t) : "oncue" === e.ima3.settings.requestMode ? o(t) : null
                                }
                                ,
                                e.ima3.cueState_.cueModule.processMetadataTracks(e, v)
                            }
                            Object.defineProperty(n, "__esModule", {
                                value: !0
                            }),
                            n["default"] = i;
                            var r = "undefined" != typeof window ? window.videojs : void 0 !== e ? e.videojs : null
                              , a = function(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                }
                            }(r)
                              , s = function(e, t) {
                                var n = t.cues
                                  , i = t.label
                                  , r = t.inBandMetadataTrackDispatchType
                                  , a = t.kind;
                                if ("metadata" === a)
                                    return "media-cues" === i || (!(!r || "metadata" !== a) || (!n || !n.length || e.ima3.cueState_.cueModule.isSupportedAdCue(e, n[0])))
                            }
                              , o = function(e) {
                                var t = undefined;
                                if (e && !e.value || "TXXX" !== e.value.key)
                                    return null;
                                try {
                                    t = JSON.parse(e.value.data)
                                } catch (e) {
                                    return a["default"].log.error("ERROR: Parsing JSON. Please confirm that JSON is valid.", e.message),
                                    null
                                }
                                if (!t.name)
                                    return null;
                                var n = t.name.toLowerCase();
                                return "adcue" !== n && "adcancel" !== n ? null : t
                            }
                              , u = function(e) {
                                if (!e.originalCuePoint || !e.text || "ad" !== e.text.toLowerCase())
                                    return null;
                                if (!e.id) {
                                    var t = a["default"].mergeOptions({}, e);
                                    return t.id = e.originalCuePoint.id,
                                    t
                                }
                                return e
                            }
                              , l = function(e, t) {
                                return !(!t || !t.text || "ad" !== t.text.toLowerCase()) || !(!t || !t.name || "adcue" !== t.name.toLowerCase())
                            }
                              , d = function(e, t, n) {
                                var i = Math.abs(n - e.duration())
                                  , r = Math.abs(n - e.currentTime())
                                  , s = undefined;
                                if (0 === n) {
                                    if (e.ima3.cueState_.prerollPlayed)
                                        return;
                                    e.ima3.cueState_.prerollPlayed = !0,
                                    e.ads.adType = "preroll"
                                }
                                if (i <= 1) {
                                    if (e.ima3.cueState_.postrollPlayed)
                                        return;
                                    e.ima3.cueState_.postrollPlayed = !0
                                }
                                r >= 1 || (s = !e.ima3.settings.useMediaCuePoints && t.serverUrl ? t.serverUrl : e.ima3.settings.serverUrl,
                                s = e.ima3.adMacroReplacement(s),
                                t.duration && (/\?/.test(s) ? s += "&breaklength=" + t.duration : s += "?breaklength=" + t.duration),
                                e.ima3.isReady_ && (a["default"].log("Oncue ad request at " + n + " seconds"),
                                e.ima3.adrequest(s)))
                            }
                              , c = function(e, t, n, i, r) {
                                0 === i && e.ima3.cueState_.prerollPlayed || r <= 1 && e.ima3.cueState_.postrollPlayed || (d(e, t, i),
                                e.ima3.cueState_.usedActiveCues[n] = !0)
                            }
                              , f = function(e, t, n, i) {
                                var r = e.mediainfo ? Math.max(e.duration(), e.mediainfo.duration) : e.duration()
                                  , s = Math.abs(i - r);
                                if (!e.ads.isAdPlaying() || !l(0, t)) {
                                    if (!n)
                                        return void a["default"].log.error("The cue does not have an ID and cannot be used", t);
                                    if (!(e.ima3.cueState_.usedActiveCues[n] || t.name && "adcancel" === t.name.toLowerCase()))
                                        return 0 !== i || e.ima3.cueState_.prerollHandledEarly || e.ima3.cueState_.prerollPlayed || !e.paused() || e.ads._cancelledPlay ? s <= 1 && !e.ima3.cueState_.postrollHandled ? (e.ima3.cueState_.postrollHandled = !0,
                                        void e.ima3.oneUnlessContentUpdate_("contentended", function() {
                                            c(e, t, n, i, s)
                                        })) : void (e.ima3.isReady_ && c(e, t, n, i, s)) : (e.ima3.cueState_.prerollHandledEarly = !0,
                                        void e.ima3.oneUnlessContentUpdate_("play", function() {
                                            c(e, t, n, i, s)
                                        }))
                                }
                            }
                              , p = function(e, t, n, i) {
                                e.ima3.settings.useMediaCuePoints || "adCancel" !== t.name || !e.ima3.adsManager || e.ima3.cueState_.usedActiveCues[n] || (e.ima3.cueState_.usedActiveCues[n] = !0,
                                e.ima3.adsManager.stop(),
                                a["default"].log("Cancelling oncue ad at " + i + " seconds"))
                            }
                              , h = function(e) {
                                return function() {
                                    var t = this.activeCues;
                                    if (!e.scrubbing() && t && t.length) {
                                        var n = t[t.length - 1]
                                          , i = [n];
                                        if (!s(e, this))
                                            return void this.removeEventListener("cuechange", e.ima3.cueState_.adCueChangeHandler);
                                        e.ima3.cueState_.cueModule.processAdTrack(e, i, f, p)
                                    }
                                }
                            }
                              , v = function(e, t) {
                                var n = t.cues
                                  , i = undefined;
                                if (s(e, t)) {
                                    if (n && n.length) {
                                        for (var r = 0; r < n.length; r++) {
                                            var a = e.mediainfo ? Math.max(e.duration(), e.mediainfo.duration) : e.duration();
                                            Math.abs(n[r].startTime - a) <= 1 && (i = n[r])
                                        }
                                        i || (e.trigger("nopostroll"),
                                        e.ima3.oneUnlessContentUpdate_("ended", function() {
                                            t.mode = "hidden"
                                        }))
                                    }
                                    t.addEventListener("cuechange", e.ima3.cueState_.adCueChangeHandler)
                                }
                            }
                              , g = function(e, t) {
                                e.ima3.cueState_ = {
                                    cueModule: t,
                                    adCueChangeHandler: h(e),
                                    usedActiveCues: {},
                                    prerollHandledEarly: !1,
                                    prerollPlayed: !1,
                                    postrollHandled: !1,
                                    postrollPlayed: !1
                                }
                            };
                            t.exports = n["default"]
                        }
                        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
                    }
                    , {}],
                    3: [function(e, t, n) {}
                    , {}],
                    4: [function(e, t, n) {
                        "use strict";
                        function i(e) {
                            for (var t = /^data:([^;]+);base64,(.+)$/i, n = e.match(t), i = n[1], r = n[2], a = atob(r), s = a.length, o = Math.ceil(s / 1024), u = new Array(o), l = 0; l < o; ++l) {
                                for (var d = 1024 * l, c = Math.min(d + 1024, s), f = new Array(c - d), p = d, h = 0; p < c; ++h,
                                ++p)
                                    f[h] = a[p].charCodeAt(0);
                                u[l] = new Uint8Array(f)
                            }
                            return new Blob(u,{
                                type: i
                            })
                        }
                        function r(e) {
                            return Object.assign({
                                muted: !1,
                                timeout: 250,
                                inline: !1,
                                blob: !1
                            }, e)
                        }
                        function a(e, t) {
                            var n = e.muted
                              , i = e.timeout
                              , r = e.inline
                              , a = t()
                              , s = a.element
                              , o = a.source
                              , u = void 0
                              , l = void 0
                              , d = void 0;
                            return s.muted = n,
                            !0 === n && s.setAttribute("muted", "muted"),
                            !0 === r && s.setAttribute("playsinline", "playsinline"),
                            s.src = o,
                            new Promise(function(e) {
                                u = s.play(),
                                l = setTimeout(function() {
                                    d(!1, new Error("Timeout " + i + " ms has been reached"))
                                }, i),
                                d = function(t) {
                                    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                                    clearTimeout(l),
                                    e({
                                        result: t,
                                        error: n
                                    })
                                }
                                ,
                                u !== undefined ? u.then(function() {
                                    return d(!0)
                                })["catch"](function(e) {
                                    return d(!1, e)
                                }) : d(!0)
                            }
                            )
                        }
                        function s(e) {
                            return e = r(e),
                            a(e, function() {
                                var t = e.blob ? URL.createObjectURL(i(l)) : l;
                                return {
                                    element: document.createElement("video"),
                                    source: t
                                }
                            })
                        }
                        function o(e) {
                            return e = r(e),
                            a(e, function() {
                                var t = e.blob ? URL.createObjectURL(i(l)) : u;
                                return {
                                    element: document.createElement("audio"),
                                    source: t
                                }
                            })
                        }
                        var u = "data:audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq"
                          , l = "data:video/mp4;base64,AAAAHGZ0eXBpc29tAAACAGlzb21pc28ybXA0MQAAAAhmcmVlAAAC721kYXQhEAUgpBv/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3pwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcCEQBSCkG//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADengAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAsJtb292AAAAbG12aGQAAAAAAAAAAAAAAAAAAAPoAAAALwABAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAB7HRyYWsAAABcdGtoZAAAAAMAAAAAAAAAAAAAAAIAAAAAAAAALwAAAAAAAAAAAAAAAQEAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAACRlZHRzAAAAHGVsc3QAAAAAAAAAAQAAAC8AAAAAAAEAAAAAAWRtZGlhAAAAIG1kaGQAAAAAAAAAAAAAAAAAAKxEAAAIAFXEAAAAAAAtaGRscgAAAAAAAAAAc291bgAAAAAAAAAAAAAAAFNvdW5kSGFuZGxlcgAAAAEPbWluZgAAABBzbWhkAAAAAAAAAAAAAAAkZGluZgAAABxkcmVmAAAAAAAAAAEAAAAMdXJsIAAAAAEAAADTc3RibAAAAGdzdHNkAAAAAAAAAAEAAABXbXA0YQAAAAAAAAABAAAAAAAAAAAAAgAQAAAAAKxEAAAAAAAzZXNkcwAAAAADgICAIgACAASAgIAUQBUAAAAAAfQAAAHz+QWAgIACEhAGgICAAQIAAAAYc3R0cwAAAAAAAAABAAAAAgAABAAAAAAcc3RzYwAAAAAAAAABAAAAAQAAAAIAAAABAAAAHHN0c3oAAAAAAAAAAAAAAAIAAAFzAAABdAAAABRzdGNvAAAAAAAAAAEAAAAsAAAAYnVkdGEAAABabWV0YQAAAAAAAAAhaGRscgAAAAAAAAAAbWRpcmFwcGwAAAAAAAAAAAAAAAAtaWxzdAAAACWpdG9vAAAAHWRhdGEAAAABAAAAAExhdmY1Ni40MC4xMDE="
                          , d = {
                            audio: o,
                            video: s
                        };
                        t.exports = d
                    }
                    , {}],
                    5: [function(e, t, n) {
                        (function(n) {
                            var i = void 0 !== n ? n : "undefined" != typeof window ? window : {}
                              , r = e("min-document");
                            if ("undefined" != typeof document)
                                t.exports = document;
                            else {
                                var a = i["__GLOBAL_DOCUMENT_CACHE@4"];
                                a || (a = i["__GLOBAL_DOCUMENT_CACHE@4"] = r),
                                t.exports = a
                            }
                        }
                        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
                    }
                    , {
                        "min-document": 3
                    }],
                    6: [function(e, t, n) {
                        (function(e) {
                            "undefined" != typeof window ? t.exports = window : void 0 !== e ? t.exports = e : "undefined" != typeof self ? t.exports = self : t.exports = {}
                        }
                        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
                    }
                    , {}],
                    7: [function(t, n, i) {
                        (function(t) {
                            !function(t, r) {
                                "object" == typeof i && void 0 !== n ? n.exports = r("undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null) : "function" == typeof e && e.amd ? e(["video.js"], r) : t.videojsContribAds = r(t.videojs)
                            }(this, function(e) {
                                "use strict";
                                function n(e) {
                                    "playing" === e.type ? h(this, e) : "ended" === e.type ? v(this, e) : "loadstart" === e.type || "loadeddata" === e.type || "loadedmetadata" === e.type ? g(this, e) : "play" === e.type ? m(this, e) : this.ads.isInAdMode() && (this.ads.isContentResuming() ? p(this, "content", e) : p(this, "ad", e))
                                }
                                function i(t) {
                                    var n = void 0;
                                    n = e.browser.IS_IOS && t.ads.isLive(t) && t.seekable().length > 0 ? t.currentTime() - t.seekable().end(0) : t.currentTime();
                                    var i = t.$(".vjs-tech")
                                      , r = t.textTracks ? t.textTracks() : []
                                      , a = []
                                      , s = {
                                        ended: t.ended(),
                                        currentSrc: t.currentSrc(),
                                        src: t.tech_.src(),
                                        currentTime: n,
                                        type: t.currentType()
                                    };
                                    i && (s.nativePoster = i.poster,
                                    s.style = i.getAttribute("style"));
                                    for (var o = 0; o < r.length; o++) {
                                        var u = r[o];
                                        a.push({
                                            track: u,
                                            mode: u.mode
                                        }),
                                        u.mode = "disabled"
                                    }
                                    return s.suppressedTracks = a,
                                    s
                                }
                                function r(t, n) {
                                    if (!0 === t.ads.disableNextSnapshotRestore)
                                        return void (t.ads.disableNextSnapshotRestore = !1);
                                    var i = t.$(".vjs-tech")
                                      , r = 20
                                      , a = n.suppressedTracks
                                      , s = void 0
                                      , o = function() {
                                        for (var e = 0; e < a.length; e++)
                                            s = a[e],
                                            s.track.mode = s.mode
                                    }
                                      , u = function() {
                                        var i = void 0;
                                        e.browser.IS_IOS && t.ads.isLive(t) ? n.currentTime < 0 && (i = t.seekable().length > 0 ? t.seekable().end(0) + n.currentTime : t.currentTime(),
                                        t.currentTime(i)) : n.ended ? t.currentTime(t.duration()) : t.currentTime(n.currentTime),
                                        n.ended || t.play(),
                                        t.ads.shouldRemoveAutoplay_ && (t.autoplay(!1),
                                        t.ads.shouldRemoveAutoplay_ = !1)
                                    }
                                      , l = function n() {
                                        if (t.off("contentcanplay", n),
                                        t.ads.tryToResumeTimeout_ && (t.clearTimeout(t.ads.tryToResumeTimeout_),
                                        t.ads.tryToResumeTimeout_ = null),
                                        i = t.el().querySelector(".vjs-tech"),
                                        i.readyState > 1)
                                            return u();
                                        if (i.seekable === undefined)
                                            return u();
                                        if (i.seekable.length > 0)
                                            return u();
                                        if (r--)
                                            c.setTimeout(n, 50);
                                        else
                                            try {
                                                u()
                                            } catch (t) {
                                                e.log.warn("Failed to resume the content after an advertisement", t)
                                            }
                                    };
                                    n.nativePoster && (i.poster = n.nativePoster),
                                    "style"in n && i.setAttribute("style", n.style || ""),
                                    t.ads.videoElementRecycled() ? (t.one("contentloadedmetadata", o),
                                    e.browser.IS_IOS && !t.autoplay() && (t.autoplay(!0),
                                    t.ads.shouldRemoveAutoplay_ = !0),
                                    t.src({
                                        src: n.currentSrc,
                                        type: n.type
                                    }),
                                    t.one("contentcanplay", l),
                                    t.ads.tryToResumeTimeout_ = t.setTimeout(l, 2e3)) : (o(),
                                    t.ended() || t.play())
                                }
                                function a(e) {
                                    e.ads.contentSrc = e.currentSrc();
                                    var t = function() {
                                        if ("ad-playback" !== e.ads.state) {
                                            var t = e.currentSrc();
                                            t !== e.ads.contentSrc && (e.trigger({
                                                type: "contentupdate",
                                                oldValue: e.ads.contentSrc,
                                                newValue: t
                                            }),
                                            e.ads.contentSrc = t)
                                        }
                                    };
                                    e.on("loadstart", t),
                                    c.setTimeout(t, 1)
                                }
                                function s(e) {
                                    e.ads.cancelPlayTimeout || (e.ads.cancelPlayTimeout = c.setTimeout(function() {
                                        e.ads.cancelPlayTimeout = null,
                                        e.paused() || e.pause(),
                                        e.ads._cancelledPlay = !0
                                    }, 1))
                                }
                                function o(t, n, i) {
                                    n === undefined && (n = !1);
                                    var r = {};
                                    i !== undefined && (r = i),
                                    r["{player.id}"] = this.options_["data-player"],
                                    r["{mediainfo.id}"] = this.mediainfo ? this.mediainfo.id : "",
                                    r["{mediainfo.name}"] = this.mediainfo ? this.mediainfo.name : "",
                                    r["{mediainfo.description}"] = this.mediainfo ? this.mediainfo.description : "",
                                    r["{mediainfo.tags}"] = this.mediainfo ? this.mediainfo.tags : "",
                                    r["{mediainfo.reference_id}"] = this.mediainfo ? this.mediainfo.reference_id : "",
                                    r["{mediainfo.duration}"] = this.mediainfo ? this.mediainfo.duration : "",
                                    r["{mediainfo.ad_keys}"] = this.mediainfo ? this.mediainfo.ad_keys : "",
                                    r["{player.duration}"] = this.duration(),
                                    r["{timestamp}"] = (new Date).getTime(),
                                    r["{document.referrer}"] = A.referrer,
                                    r["{window.location.href}"] = c.location.href,
                                    r["{random}"] = Math.floor(1e12 * Math.random()),
                                    E(this.mediainfo, r, "custom_fields"),
                                    E(this.mediainfo, r, "customFields");
                                    for (var a in r)
                                        t = t.split(a).join(k(r[a], n));
                                    return t = t.replace(/{pageVariable\.([^}]+)}/g, function(t, i) {
                                        for (var r = void 0, a = c, s = i.split("."), o = 0; o < s.length; o++)
                                            o === s.length - 1 ? r = a[s[o]] : a = a[s[o]];
                                        var u = void 0 === r ? "undefined" : T(r);
                                        return null === r ? "null" : r === undefined ? (e.log.warn('Page variable "' + i + '" not found'),
                                        "") : "string" !== u && "number" !== u && "boolean" !== u ? (e.log.warn('Page variable "' + i + '" is not a supported type'),
                                        "") : k(String(r), n)
                                    })
                                }
                                e = e && e.hasOwnProperty("default") ? e["default"] : e;
                                var u, l = "undefined" != typeof window ? window : void 0 !== t ? t : "undefined" != typeof self ? self : {};
                                u = "undefined" != typeof window ? window : void 0 !== l ? l : "undefined" != typeof self ? self : {};
                                var d, c = u, f = function(e, t) {
                                    t.isImmediatePropagationStopped = function() {
                                        return !0
                                    }
                                    ,
                                    t.cancelBubble = !0,
                                    t.isPropagationStopped = function() {
                                        return !0
                                    }
                                }, p = function(e, t, n) {
                                    f(0, n),
                                    e.trigger({
                                        type: t + n.type,
                                        state: e.ads.state,
                                        originalEvent: n
                                    })
                                }, h = function(e, t) {
                                    e.ads.isInAdMode() && (e.ads.isContentResuming() ? e.ads._contentEnding && p(e, "content", t) : e.ads._cancelledPlay ? f(0, t) : p(e, "ad", t))
                                }, v = function(e, t) {
                                    if (e.ads.isInAdMode()) {
                                        if (e.ads.isContentResuming())
                                            return;
                                        p(e, "ad", t)
                                    } else
                                        p(e, "content", t)
                                }, g = function(e, t) {
                                    if (!("loadstart" === t.type && !e.ads._hasThereBeenALoadStartDuringPlayerLife || "loadeddata" === t.type && !e.ads._hasThereBeenALoadedData || "loadedmetadata" === t.type && !e.ads._hasThereBeenALoadedMetaData))
                                        if (e.ads.isAdPlaying())
                                            p(e, "ad", t);
                                        else {
                                            if (e.currentSrc() !== e.ads.contentSrc)
                                                return;
                                            p(e, "content", t)
                                        }
                                }, m = function(e, t) {
                                    var n = e.ads._cancelledPlay && !e.ads.isInAdMode();
                                    e.ads.isAdPlaying() ? p(e, "ad", t) : (e.ads.isContentResuming() || n) && p(e, "content", t)
                                }, y = {}, _ = (Object.freeze || Object)({
                                    default: y
                                }), b = _ && y || _, S = void 0 !== l ? l : "undefined" != typeof window ? window : {};
                                "undefined" != typeof document ? d = document : (d = S["__GLOBAL_DOCUMENT_CACHE@4"]) || (d = S["__GLOBAL_DOCUMENT_CACHE@4"] = b);
                                var A = d
                                  , T = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                                    return typeof e
                                }
                                : function(e) {
                                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                }
                                  , k = function(e, t) {
                                    return t ? encodeURIComponent(e) : e
                                }
                                  , E = function(e, t, n) {
                                    if (e && e[n])
                                        for (var i = e[n], r = Object.keys(i), a = 0; a < r.length; a++) {
                                            var s = "{mediainfo." + n + "." + r[a] + "}";
                                            t[s] = i[r[a]]
                                        }
                                }
                                  , P = {};
                                P.processMetadataTracks = function(e, t) {
                                    for (var n = e.textTracks(), i = function(n) {
                                        "metadata" === n.kind && (e.ads.cueTextTracks.setMetadataTrackMode(n),
                                        t(e, n))
                                    }, r = 0; r < n.length; r++)
                                        i(n[r]);
                                    n.addEventListener("addtrack", function(e) {
                                        i(e.track)
                                    })
                                }
                                ,
                                P.setMetadataTrackMode = function(e) {}
                                ,
                                P.getSupportedAdCue = function(e, t) {
                                    return t
                                }
                                ,
                                P.isSupportedAdCue = function(e, t) {
                                    return !0
                                }
                                ,
                                P.getCueId = function(e, t) {
                                    return t.id
                                }
                                ;
                                var I = function(e, t) {
                                    return t !== undefined && e.ads.includedCues[t]
                                }
                                  , C = function(e, t) {
                                    t !== undefined && "" !== t && (e.ads.includedCues[t] = !0)
                                };
                                P.processAdTrack = function(t, n, i, r) {
                                    t.ads.includedCues = {};
                                    for (var a = 0; a < n.length; a++) {
                                        var s = n[a]
                                          , o = this.getSupportedAdCue(t, s);
                                        if (!this.isSupportedAdCue(t, s))
                                            return void e.log.warn("Skipping as this is not a supported ad cue.", s);
                                        var u = this.getCueId(t, s)
                                          , l = s.startTime;
                                        if (I(t, u))
                                            return void e.log("Skipping ad already seen with ID " + u);
                                        r && r(t, o, u, l),
                                        i(t, o, u, l),
                                        C(t, u)
                                    }
                                }
                                ;
                                var w = e.getTech("Html5").Events
                                  , j = function(e) {
                                    var t = e.$(".vjs-tech");
                                    t && t.removeAttribute("poster")
                                }
                                  , L = {
                                    timeout: 5e3,
                                    prerollTimeout: 100,
                                    postrollTimeout: 100,
                                    debug: !1,
                                    stitchedAds: !1
                                }
                                  , O = function(t) {
                                    var u = this
                                      , l = e.mergeOptions(L, t)
                                      , d = w.concat(["firstplay", "loadedalldata", "playing"]);
                                    u.on(d, n),
                                    c.setTimeout(function() {
                                        u.ads._hasThereBeenALoadStartDuringPlayerLife || "" === u.src() || e.log.error("videojs-contrib-ads has not seen a loadstart event 5 seconds after being initialized, but a source is present. This indicates that videojs-contrib-ads was initialized too late. It must be initialized immediately after video.js in the same tick. As a result, some ads will not play and some media events will be incorrect. For more information, see https://github.com/videojs/videojs-contrib-ads#important-note-about-initialization")
                                    }, 5e3),
                                    u.on("ended", function() {
                                        u.hasClass("vjs-has-started") || u.addClass("vjs-has-started")
                                    }),
                                    u.on(["addurationchange", "adcanplay"], function() {
                                        u.ads.snapshot && u.currentSrc() === u.ads.snapshot.currentSrc || u.ads.isAdPlaying() && u.play()
                                    }),
                                    u.on("nopreroll", function() {
                                        u.ads.nopreroll_ = !0
                                    }),
                                    u.on("nopostroll", function() {
                                        u.ads.nopostroll_ = !0
                                    }),
                                    u.on(["ads-ad-started", "playing"], function() {
                                        u.removeClass("vjs-ad-loading")
                                    }),
                                    u.on("playing", function() {
                                        u.ads._cancelledPlay = !1
                                    }),
                                    u.one("loadstart", function() {
                                        u.ads._hasThereBeenALoadStartDuringPlayerLife = !0
                                    }),
                                    u.on("loadeddata", function() {
                                        u.ads._hasThereBeenALoadedData = !0
                                    }),
                                    u.on("loadedmetadata", function() {
                                        u.ads._hasThereBeenALoadedMetaData = !0
                                    }),
                                    u.ads = {
                                        state: "content-set",
                                        disableNextSnapshotRestore: !1,
                                        _contentEnding: !1,
                                        _contentHasEnded: !1,
                                        _hasThereBeenALoadStartDuringPlayerLife: !1,
                                        _hasThereBeenALoadedData: !1,
                                        _hasThereBeenALoadedMetaData: !1,
                                        _inLinearAdMode: !1,
                                        adType: null,
                                        VERSION: "__VERSION__",
                                        reset: function() {
                                            u.ads.disableNextSnapshotRestore = !1,
                                            u.ads._contentEnding = !1,
                                            u.ads._contentHasEnded = !1,
                                            u.ads.snapshot = null,
                                            u.ads.adType = null,
                                            u.ads._hasThereBeenALoadedData = !1,
                                            u.ads._hasThereBeenALoadedMetaData = !1,
                                            u.ads._cancelledPlay = !1
                                        },
                                        startLinearAdMode: function() {
                                            "preroll?" !== u.ads.state && "content-playback" !== u.ads.state && "postroll?" !== u.ads.state || (u.ads._inLinearAdMode = !0,
                                            u.trigger("adstart"))
                                        },
                                        endLinearAdMode: function() {
                                            "ad-playback" === u.ads.state && (u.ads._inLinearAdMode = !1,
                                            u.trigger("adend"),
                                            u.removeClass("vjs-ad-loading"))
                                        },
                                        skipLinearAdMode: function() {
                                            "ad-playback" !== u.ads.state && u.trigger("adskip")
                                        },
                                        stitchedAds: function(e) {
                                            return e !== undefined && (this._stitchedAds = !!e),
                                            this._stitchedAds
                                        },
                                        videoElementRecycled: function() {
                                            if (u.ads.shouldPlayContentBehindAd(u))
                                                return !1;
                                            if (!this.snapshot)
                                                throw new Error("You cannot use videoElementRecycled while there is no snapshot.");
                                            var e = u.tech_.src() !== this.snapshot.src
                                              , t = u.currentSrc() !== this.snapshot.currentSrc;
                                            return e || t
                                        },
                                        isLive: function(t) {
                                            return t.duration() === Infinity || "8" === e.browser.IOS_VERSION && 0 === t.duration()
                                        },
                                        shouldPlayContentBehindAd: function(t) {
                                            return !e.browser.IS_IOS && !e.browser.IS_ANDROID && t.duration() === Infinity
                                        },
                                        isInAdMode: function() {
                                            return "ads-ready?" === u.ads.state || "preroll?" === u.ads.state || "ad-playback" === u.ads.state || "content-resuming" === u.ads.state
                                        },
                                        isContentResuming: function() {
                                            return "content-resuming" === u.ads.state
                                        },
                                        isAdPlaying: function() {
                                            return this._inLinearAdMode
                                        }
                                    },
                                    u.ads.stitchedAds(l.stitchedAds),
                                    u.ads.cueTextTracks = P,
                                    u.ads.adMacroReplacement = o.bind(u),
                                    a(u),
                                    u.on("contentupdate", u.ads.reset);
                                    var f = {
                                        "content-set": {
                                            events: {
                                                adscanceled: function() {
                                                    this.state = "content-playback"
                                                },
                                                adsready: function() {
                                                    this.state = "ads-ready"
                                                },
                                                play: function() {
                                                    this.state = "ads-ready?",
                                                    s(u),
                                                    j(u)
                                                },
                                                adserror: function() {
                                                    this.state = "content-playback"
                                                },
                                                adskip: function() {
                                                    this.state = "content-playback"
                                                }
                                            }
                                        },
                                        "ads-ready": {
                                            events: {
                                                play: function() {
                                                    this.state = "preroll?",
                                                    s(u)
                                                },
                                                adskip: function() {
                                                    this.state = "content-playback"
                                                },
                                                adserror: function() {
                                                    this.state = "content-playback"
                                                }
                                            }
                                        },
                                        "preroll?": {
                                            enter: function() {
                                                u.ads.nopreroll_ ? (u.trigger("readyforpreroll"),
                                                c.setTimeout(function() {
                                                    u.trigger("nopreroll")
                                                }, 1)) : (u.addClass("vjs-ad-loading"),
                                                u.ads.adTimeoutTimeout = c.setTimeout(function() {
                                                    u.trigger("adtimeout")
                                                }, l.prerollTimeout),
                                                u.ads._hasThereBeenALoadStartDuringPlayerLife ? u.trigger("readyforpreroll") : u.one("loadstart", function() {
                                                    u.trigger("readyforpreroll")
                                                }))
                                            },
                                            leave: function() {
                                                c.clearTimeout(u.ads.adTimeoutTimeout)
                                            },
                                            events: {
                                                play: function() {
                                                    s(u)
                                                },
                                                adstart: function() {
                                                    this.state = "ad-playback",
                                                    u.ads.adType = "preroll"
                                                },
                                                adskip: function() {
                                                    this.state = "content-playback"
                                                },
                                                adtimeout: function() {
                                                    this.state = "content-playback"
                                                },
                                                adserror: function() {
                                                    this.state = "content-playback"
                                                },
                                                nopreroll: function() {
                                                    this.state = "content-playback"
                                                }
                                            }
                                        },
                                        "ads-ready?": {
                                            enter: function() {
                                                u.addClass("vjs-ad-loading"),
                                                u.ads.adTimeoutTimeout = c.setTimeout(function() {
                                                    u.trigger("adtimeout")
                                                }, l.timeout)
                                            },
                                            leave: function() {
                                                c.clearTimeout(u.ads.adTimeoutTimeout),
                                                u.removeClass("vjs-ad-loading")
                                            },
                                            events: {
                                                play: function() {
                                                    s(u)
                                                },
                                                adscanceled: function() {
                                                    this.state = "content-playback"
                                                },
                                                adsready: function() {
                                                    this.state = "preroll?"
                                                },
                                                adskip: function() {
                                                    this.state = "content-playback"
                                                },
                                                adtimeout: function() {
                                                    this.state = "content-playback"
                                                },
                                                adserror: function() {
                                                    this.state = "content-playback"
                                                }
                                            }
                                        },
                                        "ad-playback": {
                                            enter: function() {
                                                u.ads.shouldPlayContentBehindAd(u) || (this.snapshot = i(u)),
                                                u.ads.shouldPlayContentBehindAd(u) && (this.preAdVolume_ = u.volume(),
                                                u.volume(0)),
                                                u.addClass("vjs-ad-playing"),
                                                u.hasClass("vjs-live") && u.removeClass("vjs-live"),
                                                j(u),
                                                u.ads.cancelPlayTimeout && c.setTimeout(function() {
                                                    c.clearTimeout(u.ads.cancelPlayTimeout),
                                                    u.ads.cancelPlayTimeout = null
                                                }, 1)
                                            },
                                            leave: function() {
                                                u.removeClass("vjs-ad-playing"),
                                                u.ads.isLive(u) && u.addClass("vjs-live"),
                                                u.ads.shouldPlayContentBehindAd(u) || r(u, this.snapshot),
                                                u.ads.shouldPlayContentBehindAd(u) && u.volume(this.preAdVolume_)
                                            },
                                            events: {
                                                adend: function() {
                                                    this.state = "content-resuming",
                                                    u.ads.adType = null
                                                },
                                                adserror: function() {
                                                    u.ads.endLinearAdMode()
                                                }
                                            }
                                        },
                                        "content-resuming": {
                                            enter: function() {
                                                this._contentHasEnded && (c.clearTimeout(u.ads._fireEndedTimeout),
                                                u.ads._fireEndedTimeout = c.setTimeout(function() {
                                                    u.trigger("ended")
                                                }, 1e3))
                                            },
                                            leave: function() {
                                                c.clearTimeout(u.ads._fireEndedTimeout)
                                            },
                                            events: {
                                                contentupdate: function() {
                                                    this.state = "content-set"
                                                },
                                                contentresumed: function() {
                                                    this.state = "content-playback"
                                                },
                                                playing: function() {
                                                    this.state = "content-playback"
                                                },
                                                ended: function() {
                                                    this.state = "content-playback"
                                                }
                                            }
                                        },
                                        "postroll?": {
                                            enter: function() {
                                                u.ads._contentEnding = !0,
                                                u.ads.nopostroll_ ? c.setTimeout(function() {
                                                    u.ads.state = "content-resuming",
                                                    u.trigger("ended")
                                                }, 1) : (u.addClass("vjs-ad-loading"),
                                                u.ads.adTimeoutTimeout = c.setTimeout(function() {
                                                    u.trigger("adtimeout")
                                                }, l.postrollTimeout))
                                            },
                                            leave: function() {
                                                c.clearTimeout(u.ads.adTimeoutTimeout),
                                                u.removeClass("vjs-ad-loading")
                                            },
                                            events: {
                                                adstart: function() {
                                                    this.state = "ad-playback",
                                                    u.ads.adType = "postroll"
                                                },
                                                adskip: function() {
                                                    this.state = "content-resuming",
                                                    c.setTimeout(function() {
                                                        u.trigger("ended")
                                                    }, 1)
                                                },
                                                adtimeout: function() {
                                                    this.state = "content-resuming",
                                                    c.setTimeout(function() {
                                                        u.trigger("ended")
                                                    }, 1)
                                                },
                                                adserror: function() {
                                                    this.state = "content-resuming",
                                                    c.setTimeout(function() {
                                                        u.trigger("ended")
                                                    }, 1)
                                                },
                                                contentupdate: function() {
                                                    this.state = "ads-ready?"
                                                }
                                            }
                                        },
                                        "content-playback": {
                                            enter: function() {
                                                u.ads.cancelPlayTimeout && (c.clearTimeout(u.ads.cancelPlayTimeout),
                                                u.ads.cancelPlayTimeout = null),
                                                u.trigger({
                                                    type: "contentplayback",
                                                    triggerevent: u.ads.triggerevent
                                                }),
                                                u.ads._cancelledPlay && u.paused() && u.play()
                                            },
                                            events: {
                                                adsready: function() {
                                                    u.trigger("readyforpreroll")
                                                },
                                                adstart: function() {
                                                    this.state = "ad-playback",
                                                    "preroll" !== u.ads.adType && (u.ads.adType = "midroll")
                                                },
                                                contentupdate: function() {
                                                    u.paused() ? this.state = "content-set" : this.state = "ads-ready?"
                                                },
                                                contentended: function() {
                                                    if (this._contentHasEnded)
                                                        return void (this.state = "content-resuming");
                                                    this._contentEnding = !1,
                                                    this._contentHasEnded = !0,
                                                    this.state = "postroll?"
                                                }
                                            }
                                        }
                                    }
                                      , p = function(t) {
                                        var n = u.ads.state
                                          , i = f[n].events;
                                        if (i) {
                                            var r = i[t.type];
                                            r && r.apply(u.ads)
                                        }
                                        if (n !== u.ads.state) {
                                            var a = n
                                              , s = u.ads.state;
                                            u.ads.triggerevent = t.type,
                                            f[a].leave && f[a].leave.apply(u.ads),
                                            f[s].enter && f[s].enter.apply(u.ads),
                                            l.debug && e.log("ads", u.ads.triggerevent + " triggered: " + a + " -> " + s)
                                        }
                                    }
                                      , h = function() {
                                        return !u.ads.shouldPlayContentBehindAd(u) && u.ads.isAdPlaying() && u.tech_.featuresNativeTextTracks && e.browser.IS_IOS && !Array.isArray(u.textTracks())
                                    }
                                      , v = function() {
                                        var e = u.textTracks();
                                        if (h())
                                            for (var t = 0; t < e.length; t++) {
                                                var n = e[t];
                                                "showing" === n.mode && (n.mode = "disabled")
                                            }
                                    };
                                    u.ready(function() {
                                        u.textTracks().addEventListener("change", v)
                                    }),
                                    u.on(w.concat(["adtimeout", "contentupdate", "contentplaying", "contentended", "contentresumed", "adstart", "adend", "adskip", "adsready", "adserror", "adscanceled", "nopreroll"]), p),
                                    u.on("dispose", function() {
                                        u.ads.adTimeoutTimeout && c.clearTimeout(u.ads.adTimeoutTimeout),
                                        u.ads._fireEndedTimeout && c.clearTimeout(u.ads._fireEndedTimeout),
                                        u.ads.cancelPlayTimeout && c.clearTimeout(u.ads.cancelPlayTimeout),
                                        u.ads.tryToResumeTimeout_ && u.clearTimeout(u.ads.tryToResumeTimeout_),
                                        u.textTracks().removeEventListener("change", v)
                                    }),
                                    u.paused() || p({
                                        type: "play"
                                    })
                                };
                                return (e.registerPlugin || e.plugin)("ads", O),
                                O
                            })
                        }
                        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
                    }
                    , {}],
                    8: [function(e, t, n) {
                        (function(t) {
                            "use strict";
                            function n(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                }
                            }
                            function n(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                }
                            }
                            function n(e) {
                                return e && e.__esModule ? e : {
                                    default: e
                                }
                            }
                            var i = "undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null
                              , r = n(i);
                            e("videojs-contrib-ads");
                            var a = e("global/window")
                              , s = n(a)
                              , o = e("./videojs.ima3-cuepoints.js")
                              , u = n(o)
                              , l = e("./videojs.ima3-canautoplay.js")
                              , d = n(l)
                              , c = r["default"].ima3 = {}
                              , f = c.defaults = {
                                sdkurl: (/^(file|data):/.test(s["default"].location.protocol) ? "http:" : "") + "//imasdk.googleapis.com/js/sdkloader/ima3.js",
                                adTechOrder: ["flash", "html5"],
                                serverUrl: ("file:" === s["default"].location.protocol ? "http:" : "") + "//pubads.g.doubleclick.net/gampad/ads?sz=400x300&iu=%2F6062%2Fiab_vast_samples&ciu_szs=300x250%2C728x90&gdfp_req=1&env=vp&output=xml_vast2&unviewed_position_start=1&url=[referrer_url]&correlator=[timestamp]&cust_params=iab_vast_samples%3Dlinear",
                                adSwf: ("file:" === s["default"].location.protocol ? "http:" : "") + "//players.brightcove.net/videojs-ima3/2.22.3/videojs.ima3.swf",
                                loadingSpinner: !1,
                                timeout: 4e3,
                                requestMode: "onload",
                                hardTimeouts: !0,
                                showVpaidControls: !1
                            }
                              , p = r["default"].ima3.extend = function(e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = arguments[t];
                                    for (var i in n)
                                        n.hasOwnProperty(i) && (e[i] = n[i])
                                }
                                return e
                            }
                              , h = function(e) {
                                var t = this
                                  , n = p({}, f, e || {})
                                  , i = this.el().querySelector(".vjs-tech")
                                  , a = n.adTechOrder
                                  , o = !1
                                  , l = undefined;
                                if (this.addClass("vjs-ima3-not-playing-yet"),
                                e && e.useMediaCuePoints && "oncue" !== e.requestMode)
                                    throw new Error('useMediaCuePoints must be used with requestMode "oncue" rather than the currently set ' + e.requestMode);
                                if (this.ready(function() {
                                    var e = this;
                                    (0,
                                    d["default"])(this).then(function() {
                                        e.autoplay() && !e.ima3.canAutoPlayVideo && e.ima3.canAutoPlayMutedVideo && (e.muted(!0),
                                        e.play()),
                                        r["default"].browser.IS_IOS && e.playsinline() && e.autoplay() && !e.ima3.canAutoPlayInlineVideo && e.ima3.canAutoPlayMutedInlineVideo && (e.muted(!0),
                                        e.play())
                                    })
                                }),
                                this.on(["playing"], function(e) {
                                    t.removeClass("vjs-ima3-not-playing-yet"),
                                    t.tech_.el_.removeAttribute("poster")
                                }),
                                n.prerollTimeout && (r["default"].log.warn("The prerollTimeout option is deprecated and will be removed, please use the timeout option. The prerollTimeout will be set to the value of the timeout option."),
                                n.prerollTimeout = undefined),
                                n.postrollTimeout && (r["default"].log.warn("The postrollTimeout option is deprecated and will be removed, please use the timeout option. The postrollTimeout will be set to the value of the timeout option."),
                                n.postrollTimeout = undefined),
                                n.timeout && (n.prerollTimeout = n.postrollTimeout = n.timeout),
                                n.contribAdsPrerollTimeout && (n.prerollTimeout = n.contribAdsPrerollTimeout),
                                n.contribAdsPostrollTimeout && (n.postrollTimeout = n.contribAdsPostrollTimeout),
                                !this.autoplay() || r["default"].browser.IS_IOS || r["default"].browser.IS_ANDROID || this.addClass("vjs-ima3-autoplay"),
                                "onplay" === n.requestMode && this.autoplay() && (n.requestMode = "onload"),
                                !("adControlBar"in n)) {
                                    var c = {
                                        name: "adControlBar"
                                    }
                                      , h = this.getChild("controlBar");
                                    h && h.getChild("volumeMenuButton") ? c.volumeMenuButton = {
                                        vertical: h.getChild("volumeMenuButton").options_.vertical
                                    } : h && h.getChild("volumePanel") && (c.volumePanel = {
                                        inline: h.getChild("volumePanel").options_.inline
                                    }),
                                    n.adControlBar = p({}, this.options_.children.controlBar, c)
                                }
                                n.adControlBar.hasOwnProperty("children") || function() {
                                    var e = r["default"].getComponent("ControlBar")
                                      , t = ["audioTrackButton", "captionsButton", "chaptersButton", "descriptionsButton", "subsCapsButton", "subtitlesButton"];
                                    n.adControlBar.children = [].concat(e.prototype.options_.children).filter(function(e) {
                                        return -1 === t.indexOf(e)
                                    })
                                }(),
                                n.eventMap = {
                                    "ima3-click": "ads-click",
                                    "ima3-started": "ads-ad-started",
                                    "ima3-complete": "ads-ad-ended",
                                    "ima3-first-quartile": "ads-first-quartile",
                                    "ima3-midpoint": "ads-midpoint",
                                    "ima3-third-quartile": "ads-third-quartile",
                                    "ima3-volume-changed": "ads-volumechange",
                                    "ima3-paused": "ads-pause",
                                    "ima3-resumed": "ads-play",
                                    "ima3-skipped": "ads-ad-skipped",
                                    "ima3-all-ads-completed": "ads-allpods-completed",
                                    "ads-request": "ads-request",
                                    "ads-pod-ended": "ads-pod-ended",
                                    "ads-pod-started": "ads-pod-started",
                                    "ads-load": "ads-load"
                                },
                                this.ads(n),
                                this.ads.ad = {},
                                this.ads.pod = {
                                    id: undefined,
                                    size: undefined
                                },
                                "oncue" === n.requestMode && this.on("loadedmetadata", function() {
                                    (0,
                                    u["default"])(t, t.ads.cueTextTracks)
                                }),
                                "ondemand" !== n.requestMode && "oncue" !== n.requestMode || ("ondemand" === n.requestMode && (this.trigger("nopreroll"),
                                this.trigger("nopostroll")),
                                this.trigger("adsready"),
                                this.on("contentupdate", function() {
                                    t.trigger("adsready")
                                })),
                                this.on("ima3-ready", function() {
                                    this.ima3.isReady_ = !0,
                                    this.contextmenu && (this.contextmenu.options.disabled = this.ima3.contextMenuPreviouslyDisabled),
                                    this.removeClass("vjs-ima3-right-click");
                                    for (var e = 0; e < this.ima3.readyQueue_.length; e++)
                                        this.ima3.readyQueue_[e].call(this);
                                    this.ima3.readyQueue_ = []
                                }),
                                this.on("ads-ad-started", function() {
                                    this.ima3.volume = this.volume(),
                                    this.muted() ? this.ima3.adPlayer.muted(!0) : this.ima3.adPlayer.volume(this.volume() || this.ads.preAdVolume_),
                                    this.ima3.adPlayer.trigger("durationchange")
                                }),
                                this.on(["ads-ad-ended", "ads-ad-skipped"], function() {
                                    this.volume(this.ima3.adPlayer.volume()),
                                    this.ads.preAdVolume_ && (this.ads.preAdVolume_ = this.volume()),
                                    this.muted(this.ima3.adPlayer.muted())
                                }),
                                n.showVpaidControls || this.addClass("vjs-vpaid-controls-disabled"),
                                this.ima3 = {
                                    readyQueue_: [],
                                    isReady_: !1,
                                    player: this,
                                    tech: i,
                                    settings: n,
                                    ready: function(e) {
                                        return e && (t.ima3.isReady_ ? e.call(t) : (t.ima3.readyQueue_ === undefined && (t.ima3.readyQueue_ = []),
                                        t.ima3.readyQueue_.push(e))),
                                        t.ima3
                                    },
                                    makeAdRequestFunction: function(e) {
                                        var t = this;
                                        return function(n) {
                                            var i = n || t.settings.serverUrl;
                                            return t.player.mediainfo && "FREE" === t.player.mediainfo.economics ? void r["default"].log("On demand adRequest attempted on video with advertising disabled.") : i ? (r["default"].log("Clearing any previous VAST ad data and triggering ondemand adrequest."),
                                            void e.call(t, i)) : void r["default"].log("On demand adRequest attempted without an adTagUrl!")
                                        }
                                    },
                                    adMacroReplacement: function(e) {
                                        var n = {};
                                        return t.bcAnalytics && (n["{player.url}"] = s["default"].location.protocol + "//" + t.bcAnalytics.settings.player),
                                        t.ads.adMacroReplacement(e, !0, n)
                                    },
                                    insertAdContainer: function(e) {
                                        var n = t.el().querySelector(".vjs-big-play-button");
                                        t.el().insertBefore(e, n)
                                    },
                                    currentAdEventInfo: {},
                                    addToCurrentAdEventInfo: function(e, t) {
                                        "" !== t && (this.currentAdEventInfo[e] ? this.currentAdEventInfo[e].push(t) : this.currentAdEventInfo[e] = [t])
                                    },
                                    setAdsRenderingSettings: function(e) {
                                        this.adsRenderingSettings_ = e,
                                        this.adsManager && this.adsManager.updateAdsRenderingSettings(e)
                                    },
                                    oneHandlers_: [],
                                    oneUnlessContentUpdate_: function(e, t) {
                                        this.oneHandlers_.push({
                                            type: e,
                                            handler: t
                                        }),
                                        this.player.one(e, t)
                                    },
                                    version: "2.22.3",
                                    VERSION: "2.22.3"
                                },
                                this.on("contentupdate", function() {
                                    for (var e = this.ima3.oneHandlers_, t = 0; t < e.length; t++) {
                                        var n = e[t];
                                        this.off(n.type, n.handler)
                                    }
                                    this.ima3.oneHandlers_ = []
                                }),
                                this.on("adstart", function(e) {
                                    t.duration() !== Infinity && t.pause(),
                                    t.hasStarted(!0),
                                    t.ima3.currentAdEventInfo = {}
                                }),
                                this.on("adend", function() {
                                    t.duration() === Infinity && t.trigger("playing")
                                }),
                                this.on("adplay", function() {
                                    t.tech_.src() !== t.ads.snapshot.src || t.currentSrc() !== t.ads.snapshot.currentSrc || setTimeout(function() {
                                        t.pause()
                                    }, 0)
                                }),
                                this.ready(function() {
                                    for (var e = 0; e < a.length; e++)
                                        if (l = a[e].charAt(0).toUpperCase() + a[e].substring(1).toLowerCase(),
                                        r["default"].getTech(l).isSupported()) {
                                            r["default"].ima3[l].call(t, n),
                                            t.addClass("vjs-ima3-" + l.toLowerCase()),
                                            n.loadingSpinner && t.addClass("ima3-loading-spinner"),
                                            o = !0;
                                            break
                                        }
                                    if (!o)
                                        return void r["default"].log("No supported ad tech available. If you have removed one of the default ad techs, you may want to consider adding it back in.")
                                }, !0)
                            };
                            r["default"].ima3.AdPlayer = r["default"].extend(r["default"].getComponent("Component"), {
                                constructor: function() {
                                    var e = [this].concat(Array.prototype.slice.call(arguments));
                                    r["default"].getComponent("Component").apply(this, e)
                                },
                                buffered: function() {
                                    return []
                                },
                                language: function(e) {
                                    return e === undefined ? this.options_.contentPlayer.language_ : this.options_.contentPlayer.language(e)
                                },
                                languages: function() {
                                    return this.options_.contentPlayer.languages()
                                },
                                localize: function(e) {
                                    return this.options_.contentPlayer.localize(e)
                                },
                                remainingTime: function() {
                                    return this.duration() - this.currentTime()
                                },
                                remainingTimeDisplay: function() {
                                    return Math.floor(this.duration()) - Math.floor(this.currentTime())
                                },
                                exitFullscreen: function() {
                                    return this.options_.contentPlayer.exitFullscreen()
                                },
                                reportUserActivity: function() {},
                                requestFullscreen: function() {
                                    return this.options_.contentPlayer.requestFullscreen()
                                },
                                el: function() {
                                    return this.options_.contentPlayer.el()
                                },
                                audioTracks: function() {},
                                textTracks: function() {},
                                videoTracks: function() {},
                                remoteTextTracks: function() {},
                                addTextTrack: function() {},
                                addRemoteTextTrack: function() {},
                                removeRemoteTextTrack: function() {},
                                scrubbing: function() {},
                                lastVolume_: function() {
                                    var e;
                                    return (e = this.options_.contentPlayer).lastVolume_.apply(e, arguments)
                                }
                            }),
                            (r["default"].registerPlugin || r["default"].plugin)("ima3", h);
                            var i = "undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null
                              , r = n(i)
                              , a = e("global/window")
                              , s = n(a)
                              , v = e("global/document")
                              , g = n(v)
                              , m = function(e) {
                                for (var t = e.split("."), n = s["default"], i = 0; i < t.length; i++)
                                    n[t[i]] || (n[t[i]] = {}),
                                    n = n[t[i]]
                            };
                            r["default"].ima3.Flash = function(e) {
                                var t = this
                                  , n = g["default"].createElement("div")
                                  , i = '<param name="flashvars" value="playerId=' + this.el().id + "&debug=" + this.ima3.settings.debug + '"><param name="wmode" value="transparent"><param name="AllowScriptAccess" value="always">'
                                  , a = this.el().id + "-ima3-flash"
                                  , o = r["default"].getComponent("ControlBar")
                                  , u = undefined
                                  , l = undefined
                                  , d = undefined
                                  , c = undefined
                                  , f = function(e) {
                                    return e && !/^https?:|file:/.test(e) ? s["default"].location.protocol + e : e
                                }
                                  , p = function() {
                                    u.vjs_postrolltimeout(),
                                    t.trigger("ad-hard-timeout"),
                                    r["default"].log("ima3-hard-timeout")
                                }
                                  , h = function() {
                                    t.ads.ad = {},
                                    t.ads.pod = {}
                                }
                                  , v = function(e) {
                                    t.ima3.ready(function() {
                                        h(),
                                        u.vjs_trigger({
                                            type: "adrequest",
                                            adTag: this.ima3.adMacroReplacement(f(e)),
                                            currentTime: this.currentTime(),
                                            options: {}
                                        })
                                    })
                                };
                                this.ima3.adTech = "flash",
                                r["default"].ima3.Flash.adrequest = function() {
                                    return r["default"].log.warn("videojs.ima3.Flash.adrequest is deprecated. Use player.ima3.adrequest instead."),
                                    v.apply(this, arguments)
                                }
                                ,
                                this.ima3.adrequest = this.ima3.makeAdRequestFunction(v),
                                e.serverUrl = f(e.serverUrl),
                                n.className = "vjs-ima3-ad-container vjs-ima3-ad-background",
                                n.innerHTML = '\x3c!--[if !IE]>--\x3e<object width="100%" height="100%" type="application/x-shockwave-flash" data="' + e.adSwf + '">' + i + "</object>\x3c!--<![endif]--\x3e",
                                u = n.querySelector("object"),
                                u || (n.innerHTML = '<object width="100%" height="100%" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000">  <param name="movie" value="' + e.adSwf + '">' + i + "</object>",
                                u = n.querySelector("object")),
                                u.id = a,
                                u.name = a,
                                u.className = "vjs-ima3-flash-ad-container",
                                m("google.ima.ImaSdkSettings"),
                                m("google.ima.AdsManager"),
                                m("google.ima.AdsLoader"),
                                s["default"].google.ima.ImaSdkSettings.setAutoPlayAdBreaks = function(e) {
                                    u.vjs_autoplayadbreaks(e)
                                }
                                ,
                                s["default"].google.ima.AdsManager.getRemainingTime = function() {
                                    return u.vjs_getRemainingTime()
                                }
                                ,
                                s["default"].google.ima.AdsManager.destroy = function() {
                                    return u.vjs_destroyAdsManager()
                                }
                                ,
                                s["default"].google.ima.AdsManager.stop = function() {
                                    return u.vjs_stopAdsManager()
                                }
                                ,
                                s["default"].google.ima.AdsLoader.contentComplete = function() {
                                    return u.vjs_contentComplete()
                                }
                                ,
                                this.contextmenu && (this.ima3.contextMenuPreviouslyDisabled = this.contextmenu.options.disabled,
                                this.contextmenu.options.disabled = !0),
                                this.addClass("vjs-ima3-right-click"),
                                this.ima3.insertAdContainer(n);
                                var y = r["default"].ima3.Flash.adPlayer(u, {
                                    contentPlayer: this
                                })
                                  , _ = new o(y,e.adControlBar);
                                _.addClass("vjs-ad-control-bar"),
                                this.addClass("vjs-ad-controls"),
                                this.addChild(_),
                                this.on(["contentupdate", "adend", "ima3-ready"], function() {
                                    h()
                                }),
                                this.on("adscanceled", function() {
                                    u.vjs_destroyAdsManager && u.vjs_destroyAdsManager()
                                }),
                                this.on("adserror", function() {
                                    this.removeClass("ima3-ad-loading"),
                                    u.vjs_destroyAdsManager && u.vjs_destroyAdsManager()
                                });
                                var b = function() {
                                    "none" === u.style.display && (t.contextmenu && (t.contextmenu.options.disabled = t.ima3.contextMenuPreviouslyDisabled),
                                    t.removeClass("vjs-ima3-right-click"),
                                    t.trigger("adtimeout"),
                                    s["default"].clearInterval(l)),
                                    t.ima3.settings.hardTimeouts && t.ads.adTimeoutTimeout && !d && (s["default"].clearTimeout(t.ads.adTimeoutTimeout),
                                    d = !0,
                                    s["default"].setTimeout(function() {
                                        c = !0
                                    }, t.ima3.settings.timeout))
                                };
                                l = s["default"].setInterval(function() {
                                    b();
                                    var n = function(e) {
                                        u.vjs_trigger({
                                            type: e.type,
                                            options: {
                                                serverUrl: t.ima3.adMacroReplacement(t.ima3.settings.serverUrl)
                                            }
                                        })
                                    };
                                    u.vjs_trigger && (t.trigger("ima3-ready"),
                                    s["default"].clearInterval(l),
                                    c && t.trigger("adtimeout"),
                                    t.on("readyforpreroll", function(e) {
                                        var i = t.ima3.settings;
                                        "ondemand" !== i.requestMode && "oncue" !== i.requestMode && n(e)
                                    }),
                                    t.on("contentended", function(e) {
                                        "postroll?" === this.ads.state && (this.one("adtimeout", p),
                                        e.type = "ended",
                                        n(e))
                                    }),
                                    t.on(["contentupdate", "dispose"], function() {
                                        t.off("adtimeout", p)
                                    }),
                                    t.on("timeupdate", function(e) {
                                        u.vjs_trigger({
                                            type: e.type,
                                            currentTime: t.currentTime()
                                        })
                                    }),
                                    t.on("contentupdate", function(i) {
                                        var r = t.currentSrc();
                                        if (h(),
                                        t.mediainfo && "FREE" === t.mediainfo.economics)
                                            return t.trigger("adscanceled"),
                                            t.trigger("nopreroll"),
                                            void t.trigger("nopostroll");
                                        t.ima3.currentSrc !== r && (t.ima3.currentSrc = r,
                                        "onplay" === e.requestMode ? t.paused() ? t.one("play", function(e) {
                                            n({
                                                type: "contentupdate"
                                            })
                                        }) : n({
                                            type: "contentupdate"
                                        }) : "onload" === e.requestMode && n(i))
                                    }),
                                    t.ready(function() {
                                        var i = t.currentSrc();
                                        if (t.ads.ad = {},
                                        t.ads.pod = {},
                                        i && t.ima3.currentSrc !== i) {
                                            if (t.ima3.currentSrc = i,
                                            t.mediainfo && "FREE" === t.mediainfo.economics)
                                                return t.trigger("adscanceled"),
                                                t.trigger("nopreroll"),
                                                void t.trigger("nopostroll");
                                            "onplay" === e.requestMode ? t.one("play", function() {
                                                n({
                                                    type: "contentupdate"
                                                })
                                            }) : "onload" === e.requestMode && n({
                                                type: "contentupdate"
                                            })
                                        }
                                    }),
                                    t.on("debug", function(e) {
                                        u.vjs_trigger({
                                            type: e.type,
                                            enable: e.enable
                                        })
                                    }))
                                }, 50),
                                this.ima3.adControlBar = _,
                                this.ima3.adPlayer = y,
                                this.ima3.el = u,
                                this.ima3._object = u,
                                this.ima3.adsManager = s["default"].google.ima.AdsManager,
                                this.ima3.adsLoader = s["default"].google.ima.AdsLoader
                            }
                            ,
                            r["default"].ima3.Flash.adPlayer = function(e, t) {
                                var n = t.contentPlayer
                                  , i = new r["default"].ima3.AdPlayer(t)
                                  , a = function(e) {
                                    n.ima3._object.vjs_cancelNextAd(),
                                    n.ima3._object.vjs_stopAdsManager(),
                                    n.ads.isAdPlaying() && n.trigger("adend")
                                };
                                n.on("ima3-ads-manager-loaded", function(e) {
                                    var t = n.ima3.settings
                                      , i = n.ima3._object.vjs_getCuePoints()
                                      , s = i && i.length > 0;
                                    t.useMediaCuePoints && "oncue" === t.requestMode && s && (a(),
                                    r["default"].log.error("Cancelling VMAP ad because useMediaCuePoints must be used with VAST"))
                                });
                                var o = function(t, n) {
                                    return function() {
                                        var i = "vjs_" + t;
                                        return e[i] ? e[i].apply(e, Array.prototype.slice.call(arguments)) : n
                                    }
                                }
                                  , u = o("duration", -1)
                                  , l = o("currentTime")
                                  , d = o("pause")
                                  , c = o("play")
                                  , f = o("volume", 1);
                                return function() {
                                    var e = !1
                                      , t = {
                                        0: "PREROLL",
                                        "-1": "POSTROLL"
                                    }
                                      , a = function() {
                                        if (!i.paused()) {
                                            i.options_.contentPlayer.$(".vjs-ima3-flash .vjs-ad-control-bar .vjs-play-progress").className.match("vjs-play-progress-resetting") || i.trigger("timeupdate")
                                        }
                                    }
                                      , o = function t() {
                                        e && (a(),
                                        s["default"].setTimeout(t, 250))
                                    }
                                      , u = function(e) {
                                        if (e !== undefined) {
                                            var t = n.ima3;
                                            t.currentAdEventInfo.adPodId = n.ads.pod.id,
                                            t.currentAdEventInfo.adPodLength = n.ads.pod.size,
                                            t.currentAdEventInfo.adType = n.ads.adType,
                                            t.addToCurrentAdEventInfo("adId", n.ads.ad.id),
                                            t.addToCurrentAdEventInfo("creativeLength", n.ads.ad.duration),
                                            t.addToCurrentAdEventInfo("creativeIndex", n.ads.ad.index),
                                            t.addToCurrentAdEventInfo("adIsciId", e.isci),
                                            t.addToCurrentAdEventInfo("creativeFormat", e.contentType),
                                            t.addToCurrentAdEventInfo("creativeUrl", e.mediaUrl),
                                            t.addToCurrentAdEventInfo("surveyUrl", e.surveyUrl),
                                            t.addToCurrentAdEventInfo("adTitle", e.title),
                                            t.addToCurrentAdEventInfo("wrapperCreativeIds", e.wrapperAdIds),
                                            t.addToCurrentAdEventInfo("adSystem", e.adSystem),
                                            t.addToCurrentAdEventInfo("wrapperAdSystems", e.wrapperAdSystems)
                                        }
                                    }
                                      , l = function(e) {
                                        var i = e.type
                                          , r = n.ima3.settings.eventMap[i];
                                        n.ima3.currentAd !== undefined && (n.ads.ad.id = n.ima3.currentAd.id,
                                        n.ads.ad.duration = n.ima3.currentAd.duration,
                                        n.ads.ad.index = n.ima3.currentAd.adPodInfo.adPosition - 1,
                                        n.ads.ad.type = t[n.ima3.currentAd.adPodInfo.timeOffset] || "MIDROLL",
                                        n.ads.pod.id = n.ima3.currentAd.adPodInfo.podIndex,
                                        n.ads.pod.size = n.ima3.currentAd.adPodInfo.totalAds,
                                        "ima3-started" === i ? (u(n.ima3.currentAd),
                                        n.ima3.addToCurrentAdEventInfo("started", n.ads.ad.index)) : "ima3-complete" === i && n.ima3.addToCurrentAdEventInfo("completed", n.ads.ad.index)),
                                        e.type = r || i,
                                        n.trigger(e)
                                    };
                                    i.on("play", function() {
                                        n.removeClass("vjs-ima3-paused"),
                                        e = !0,
                                        s["default"].setTimeout(o, 250)
                                    }),
                                    i.on("pause", function() {
                                        n.addClass("vjs-ima3-paused"),
                                        e = !1
                                    }),
                                    i.on("ima3-started", function(e) {
                                        r["default"].log("ima3-started"),
                                        l(e);
                                        var t = i.options_.contentPlayer.$(".vjs-ad-control-bar .vjs-play-progress");
                                        t.className = t.className.replace(" vjs-play-progress-resetting", "")
                                    }),
                                    i.on("ima3-complete", function(e) {
                                        r["default"].log("ima3-complete");
                                        var t = i.options_.contentPlayer.$(".vjs-ima3-flash .vjs-ad-control-bar .vjs-play-progress");
                                        t.className += " vjs-play-progress-resetting",
                                        t.style.width = "0"
                                    });
                                    var d = function(e) {
                                        var t = n.ima3._object.vjs_getCuePoints()
                                          , i = t && 0 === t.length
                                          , a = t && 0 === t.indexOf(0);
                                        "VAST" === e && i ? (n.ima3._object.vjs_destroyAdsManager(),
                                        n.trigger("ad-hard-timeout"),
                                        r["default"].log("ima3-hard-timeout")) : "VMAP" === e && a && (n.ima3._object.vjs_cancelNextAd(),
                                        n.trigger("ad-hard-timeout"),
                                        r["default"].log("ima3-hard-timeout"))
                                    };
                                    n.ima3.settings.hardTimeouts && n.on("adtimeout", function() {
                                        var e = this;
                                        n.ima3._object.vjs_isAdsManagerReady && n.ima3._object.vjs_isAdsManagerReady() ? d("VAST") : function() {
                                            var t = function(e) {
                                                d("VMAP")
                                            }
                                              , i = function(e) {
                                                d("VAST")
                                            };
                                            n.ima3.oneUnlessContentUpdate_("ima3-ads-manager-loaded", t),
                                            n.ima3.oneUnlessContentUpdate_("adsready", i),
                                            e.one("adstart", function(n) {
                                                e.off("ima3-ads-manager-loaded", t),
                                                e.off("adsready", i)
                                            })
                                        }()
                                    }),
                                    i.on("ima3-resumed", l),
                                    i.on("ima3-paused", l),
                                    i.on("ima3-first-quartile", l),
                                    i.on("ima3-midpoint", l),
                                    i.on("ima3-third-quartile", l),
                                    i.on("ima3-volume-changed", l),
                                    i.on("ima3-click", l),
                                    i.on("ima3-complete", l),
                                    i.on("ima3-all-ads-completed", l),
                                    i.on("ima3-skipped", l),
                                    i.on("ads-request", l),
                                    i.on("ads-load", l),
                                    i.on("ads-pod-ended", l),
                                    i.on("ads-pod-started", l),
                                    i.on("ads-loading", l),
                                    i.on("ads-response-received", l)
                                }(),
                                i.currentTime = function() {
                                    if (i.currentTimeCache && (new Date).getTime() - i.currentTimeCacheTime < 250)
                                        return i.currentTimeCache;
                                    var e = l();
                                    return e = e < 0 ? 0 : e,
                                    i.currentTimeCache = e,
                                    i.currentTimeCacheTime = (new Date).getTime(),
                                    e
                                }
                                ,
                                i.on("ima3-started", function() {
                                    n.removeClass("vjs-ima3-paused")
                                }),
                                i.on("adserror", function() {
                                    n.trigger("adserror")
                                }),
                                i.on("adscanceled", function() {
                                    n.trigger("adscanceled")
                                }),
                                i.duration = function() {
                                    if (i.durationCache && (new Date).getTime() - i.durationCacheTime < 250)
                                        return i.durationCache;
                                    var e = u();
                                    return e = e < 0 ? 0 : e,
                                    i.durationCache = e,
                                    i.durationCacheTime = (new Date).getTime(),
                                    e
                                }
                                ,
                                i.isFullscreen = function() {
                                    return n.isFullscreen()
                                }
                                ,
                                i.requestFullscreen = function() {
                                    return n.requestFullscreen()
                                }
                                ,
                                i.volume = function(e) {
                                    var t = f();
                                    if (e === undefined)
                                        return t || n.ima3.volume;
                                    f(e),
                                    n.ima3.volume = e || n.ima3.volume,
                                    i.trigger("volumechange")
                                }
                                ,
                                i.muted = function(e) {
                                    var t = f();
                                    return e !== undefined ? 0 === i.volume(e ? 0 : n.ima3.volume) : 0 === t
                                }
                                ,
                                i.pause = function() {
                                    i.trigger("pause"),
                                    d()
                                }
                                ,
                                i.paused = o("paused"),
                                i.play = function() {
                                    i.trigger("play"),
                                    c()
                                }
                                ,
                                i
                            }
                            ;
                            var i = "undefined" != typeof window ? window.videojs : void 0 !== t ? t.videojs : null
                              , r = n(i)
                              , a = e("global/window")
                              , s = n(a)
                              , v = e("global/document")
                              , g = n(v)
                              , l = e("./videojs.ima3-canautoplay.js")
                              , d = n(l)
                              , p = r["default"].ima3.extend
                              , y = function(e, t) {
                                return "function" == typeof getComputedStyle ? s["default"].getComputedStyle(e)[t] : e.currentStyle[t]
                            }
                              , _ = function(e) {
                                return {
                                    width: parseInt(y(e.el(), "width"), 10),
                                    height: parseInt(y(e.el(), "height"), 10)
                                }
                            }
                              , b = function(e, t, n) {
                                var i = {}
                                  , r = {
                                    0: "PREROLL",
                                    "-1": "POSTROLL"
                                }
                                  , a = function(e) {
                                    if (e !== undefined) {
                                        var t = n.ima3;
                                        t.currentAdEventInfo.adPodId = n.ads.pod.id,
                                        t.currentAdEventInfo.adPodLength = n.ads.pod.size,
                                        t.currentAdEventInfo.adType = n.ads.adType,
                                        t.addToCurrentAdEventInfo("adId", n.ads.ad.id),
                                        t.addToCurrentAdEventInfo("creativeLength", n.ads.ad.duration),
                                        t.addToCurrentAdEventInfo("creativeIndex", n.ads.ad.index),
                                        t.addToCurrentAdEventInfo("creativeId", e.getCreativeId()),
                                        t.addToCurrentAdEventInfo("creativeAdId", e.getCreativeAdId()),
                                        t.addToCurrentAdEventInfo("creativeFormat", e.getContentType()),
                                        t.addToCurrentAdEventInfo("creativeUrl", e.getMediaUrl()),
                                        t.addToCurrentAdEventInfo("surveyUrl", e.getSurveyUrl()),
                                        t.addToCurrentAdEventInfo("adTitle", e.getTitle()),
                                        t.addToCurrentAdEventInfo("wrapperCreativeIds", e.getWrapperCreativeIds()),
                                        t.addToCurrentAdEventInfo("advertiserName", e.getAdvertiserName()),
                                        t.addToCurrentAdEventInfo("dealId", e.getDealId()),
                                        t.addToCurrentAdEventInfo("adSystem", e.getAdSystem()),
                                        t.addToCurrentAdEventInfo("wrapperAdSystems", e.getWrapperAdSystems())
                                    }
                                };
                                for (var s in t)
                                    !function(t, s) {
                                        var o = function(t) {
                                            var i = {
                                                emitter: e,
                                                originalEvent: t
                                            };
                                            i.type = s,
                                            n.trigger(i),
                                            i.type = n.ima3.settings.eventMap[s],
                                            n.trigger(i),
                                            n.ima3.currentAd !== undefined && (n.ads.ad.id = n.ima3.currentAd.getAdId(),
                                            n.ads.ad.duration = n.ima3.currentAd.getDuration(),
                                            n.ads.ad.currentTime = n.ima3.currentAd.getAdPodInfo().getTimeOffset(),
                                            n.ads.ad.index = n.ima3.currentAd.getAdPodInfo().getAdPosition() - 1,
                                            n.ads.ad.type = r[n.ima3.currentAd.getAdPodInfo().getTimeOffset()] || "MIDROLL",
                                            n.ads.pod.id = n.ima3.currentAd.getAdPodInfo().getPodIndex(),
                                            n.ads.pod.size = n.ima3.currentAd.getAdPodInfo().getTotalAds(),
                                            "ima3-started" === s && (a(n.ima3.currentAd),
                                            n.ima3.addToCurrentAdEventInfo("started", n.ads.ad.index))),
                                            "ima3-complete" === s && n.ima3.addToCurrentAdEventInfo("completed", n.ads.ad.index)
                                        };
                                        i[t] = o,
                                        e.addEventListener(t, o, !1)
                                    }(t[s][0], t[s][1]);
                                return function() {
                                    for (var t in i)
                                        e.removeEventListener(t, i[t])
                                }
                            }
                              , S = function(e, t) {
                                var n = g["default"].createElement("script")
                                  , i = g["default"].querySelector("head");
                                n.async = !0,
                                n.src = e,
                                n.onload = n.onreadystatechange = function(e, i) {
                                    (i || !n.readyState || /loaded|complete/.test(n.readyState)) && (n.onload = n.onreadystatechange = null,
                                    n.parentNode.removeChild(n),
                                    n = null,
                                    t(i))
                                }
                                ,
                                i.insertBefore(n, i.firstChild)
                            }
                              , A = function(e) {
                                for (var t = {}, n = ["AdErrorEvent", "AdEvent", "AdsManagerLoadedEvent"], i = n.length; i--; )
                                    if (e[n[i]] && e[n[i]].Type) {
                                        var r = e[n[i]].Type;
                                        for (var a in r)
                                            r.hasOwnProperty(a) && (t[r[a]] = [r[a], function(e) {
                                                return "ima3-" + e.toLowerCase().replace(/_/g, "-")
                                            }(a)])
                                    }
                                return t
                            }
                              , c = r["default"].ima3.Html5 = function(e) {
                                var t = this
                                  , n = this.el().querySelector(".vjs-tech")
                                  , i = undefined
                                  , a = undefined
                                  , o = g["default"].createElement("div")
                                  , u = undefined
                                  , l = undefined
                                  , c = undefined
                                  , f = function() {
                                    t.ima3 && t.ima3.adsManager && t.ima3.adsManager.skip && t.ima3.adsManager.skip(),
                                    c(),
                                    t.trigger("ad-hard-timeout"),
                                    r["default"].log("ima3-hard-timeout")
                                }
                                  , h = undefined
                                  , v = undefined
                                  , m = function(e) {
                                    e.ads.ad = {},
                                    e.ads.pod = {}
                                };
                                this.ima3.adTech = "html5",
                                o.className = "vjs-ima3-ad-container",
                                this.ima3.insertAdContainer(o);
                                var y = function(n) {
                                    if (!t.ima3.isReady_)
                                        return r["default"].log.error("Cannot make an ad request when the plugin is not ready. Skipping ad..."),
                                        void t.ads.endLinearAdMode();
                                    t.ads.startLinearAdMode(),
                                    c(),
                                    u(e, n),
                                    t.addClass("ima3-ad-loading")
                                };
                                r["default"].ima3.Html5.adrequest = function() {
                                    return r["default"].log.warn("videojs.ima3.Html5.adrequest is deprecated. Use player.ima3.adrequest instead."),
                                    y.apply(this, arguments)
                                }
                                ,
                                this.ima3.adrequest = this.ima3.makeAdRequestFunction(y),
                                this.on("ima3-content-pause-requested", function(e) {
                                    t.ads.startLinearAdMode(),
                                    t.addClass("ima3-ad-loading"),
                                    t.trigger("ads-pod-started"),
                                    "application/javascript" === e.originalEvent.getAd().getContentType() && t.addClass("vjs-vpaid-playing")
                                }),
                                this.on("ima3-content-resume-requested", function(e) {
                                    t.ads.endLinearAdMode(),
                                    t.removeClass("ima3-ad-loading"),
                                    t.removeClass("vjs-vpaid-playing"),
                                    t.trigger("ads-pod-ended")
                                }),
                                this.on("fullscreenchange", function(e) {
                                    if (r["default"].IS_ANY_SAFARI)
                                        for (var n = t.textTracks(), i = 0; i < n.length; i++)
                                            "metadata" === n[i].kind && "disabled" === n[i].mode && (n[i].mode = "hidden");
                                    var a = t.hasClass("vjs-fullscreen")
                                      , s = 3
                                      , o = undefined;
                                    if (t.ima3 && t.ima3.adsManager) {
                                        o = a ? h.ViewMode.FULLSCREEN : h.ViewMode.NORMAL;
                                        var u = _(t);
                                        o === h.ViewMode.FULLSCREEN ? t.ima3.adsManager.resize(t.el().offsetWidth, t.el().offsetHeight, o) : t.ima3.adsManager.resize(u.width, u.height, o),
                                        setTimeout(function e(n, i) {
                                            var r = _(t);
                                            return function() {
                                                o === h.ViewMode.FULLSCREEN ? t.ima3.adsManager.resize(t.el().offsetWidth, t.el().offsetHeight, o) : t.ima3.adsManager.resize(r.width, r.height, o),
                                                r.width === n && r.height === i || s-- && setTimeout(e(r.width, r.height), 1e3)
                                            }
                                        }(u.width, u.height), 1e3)
                                    }
                                }),
                                this.on("ima3-started", function() {
                                    t.removeClass("ima3-ad-loading"),
                                    r["default"].log("ima3-started");
                                    var e = t.$(".vjs-ad-control-bar .vjs-play-progress");
                                    e.className = e.className.replace(" vjs-play-progress-resetting", "")
                                });
                                var T = function(e) {
                                    var t = h.AdError.ErrorCode;
                                    for (var n in t)
                                        if (t.hasOwnProperty(n) && !n.match("COMPANION|NONLINEAR|OVERLAY") && e.getErrorCode() === t[n] && "adLoadError" === e.getType())
                                            return !0;
                                    return !1
                                };
                                this.on("ima3-ad-error", function(e) {
                                    var n = {}
                                      , i = undefined;
                                    e.originalEvent && (n = e.originalEvent.getError(),
                                    i = n.getErrorCode(),
                                    r["default"].log("ima3-ad-error", e.originalEvent.getError().toString(), e),
                                    (T(n) && "onload" === t.ima3.settings.requestMode || "onplay" === t.ima3.settings.requestMode) && t.trigger("nopostroll")),
                                    t.removeClass("ima3-ad-loading"),
                                    t.trigger({
                                        type: "adserror",
                                        errorCode: i
                                    })
                                });
                                var k = function() {
                                    var e = t.ima3.adsManager && 0 === t.ima3.adsManager.getCuePoints().length
                                      , n = t.ima3.adsManager && t.ima3.adsManager.getCuePoints().indexOf(0) >= 0;
                                    e ? (c(),
                                    t.trigger("ad-hard-timeout"),
                                    r["default"].log("ima3-hard-timeout")) : n && (t.ima3.adsManager.discardAdBreak(),
                                    t.trigger("ad-hard-timeout"),
                                    r["default"].log("ima3-hard-timeout"))
                                };
                                e.hardTimeouts && this.on("adtimeout", function() {
                                    t.ima3.adsManager ? k() : (t.one("ima3-ads-manager-loaded", k),
                                    t.one(["adstart", "contentupdate", "dispose"], function(e) {
                                        t.off("ima3-ads-manager-loaded", k)
                                    }))
                                }),
                                this.on("ima3-loaded", function(e) {
                                    var n = e.originalEvent.getAd();
                                    t.ima3.currentAd = n,
                                    t.trigger("ads-loading"),
                                    t.removeClass("ima3-ad-loading"),
                                    n && !n.isLinear() && (t.addClass("vjs-ima3-overlay"),
                                    t.trigger("adstart"),
                                    t.trigger("adend"))
                                }),
                                this.on("ima3-complete", function(e) {
                                    var n = e.originalEvent.getAd();
                                    r["default"].log("ima3-complete"),
                                    delete t.ima3.currentAd,
                                    n && (n.isLinear() ? t.addClass("ima3-ad-loading") : t.removeClass("vjs-ima3-overlay"));
                                    var i = t.$(".vjs-ad-control-bar .vjs-play-progress");
                                    i.className += " vjs-play-progress-resetting",
                                    i.style.width = "0"
                                }),
                                this.on("resize", function() {
                                    if (t.ima3.adsManager) {
                                        var e = _(t);
                                        t.ima3.adsManager.resize(e.width, e.height, h.ViewMode.NORMAL)
                                    }
                                }),
                                this.on("readyforpreroll", function() {
                                    "ondemand" !== e.requestMode && "oncue" !== e.requestMode && l()
                                }),
                                this.on("adserror", function() {
                                    c()
                                }),
                                this.on("adscanceled", function() {
                                    c()
                                });
                                var E = function(e) {
                                    t.ima3.adsManager.discardAdBreak(),
                                    t.ima3.adsManager.skip(),
                                    t.ima3.managerCleanup = null,
                                    "ad-playback" === t.ads.state && t.ads.endLinearAdMode()
                                };
                                this.on("ima3-ads-manager-loaded", function(e) {
                                    t.ima3.managerCleanup && c();
                                    var n = {};
                                    n.currentTime = t.currentTime(),
                                    n.duration = t.duration(),
                                    t.on("timeupdate", function() {
                                        n.currentTime = t.currentTime()
                                    });
                                    var i = e.originalEvent.getAdsManager(n, t.ima3.adsRenderingSettings_);
                                    t.ima3.adsManager = i,
                                    t.trigger("ads-response-received");
                                    var a = t.ima3.settings
                                      , s = t.ima3.adsManager.getCuePoints()
                                      , o = s && s.length > 0;
                                    if (a.useMediaCuePoints && "oncue" === a.requestMode && o)
                                        return E(),
                                        void r["default"].log.error("Cancelling VMAP ad because useMediaCuePoints must be used with VAST");
                                    t.ima3.managerCleanup = b(i, v, t),
                                    "ad-playback" === t.ads.state ? l() : t.trigger("adsready"),
                                    "oncue" !== a.requestMode && (i.getCuePoints().length && i.getCuePoints().indexOf(0) < 0 && t.trigger("nopreroll"),
                                    i.getCuePoints().indexOf(-1) < 0 && t.trigger("nopostroll"))
                                });
                                var P = function(e, n) {
                                    if (!h || h && !h.AdsRequest)
                                        throw new Error("An ad request was made before the plugin is ready");
                                    var i = _(t);
                                    return !t.ima3.lastSrc_ || t.ima3.lastSrc_ !== t.currentSrc() || "onload" !== e.requestMode && "onplay" !== e.requestMode ? (t.ima3.lastSrc_ = t.currentSrc(),
                                    t.ima3.adsRequest = p(new h.AdsRequest, {
                                        adTagUrl: t.ima3.adMacroReplacement(n || t.ima3.settings.serverUrl),
                                        linearAdSlotWidth: i.width,
                                        linearAdSlotHeight: i.height,
                                        nonLinearAdSlotWidth: i.width,
                                        nonLinearAdSlotHeight: i.height
                                    }),
                                    t.ima3.adsRequest.adTagUrl ? void (0,
                                    d["default"])(t).then(function() {
                                        t.ima3.adsRequest.setAdWillPlayMuted(t.muted()),
                                        t.ima3.adsRequest.setAdWillAutoPlay(t.autoplay()),
                                        t.ima3.adsLoader.requestAds(t.ima3.adsRequest),
                                        t.trigger("ads-request")
                                    }) : void t.trigger("adscanceled")) : void r["default"].log("Cancelling repeat adsRequest for " + t.currentSrc())
                                };
                                u = function(e, n) {
                                    "onplay" === e.requestMode && t.paused() ? t.one("play", function() {
                                        P(e, n)
                                    }) : P(e, n)
                                }
                                ;
                                var I = function() {
                                    t.ima3.adDisplayContainer && !t.ima3.adDisplayContainer.initialized && (t.ima3.adDisplayContainer.initialize(),
                                    t.ima3.adDisplayContainer.initialized = !0)
                                };
                                l = function() {
                                    var e = _(t);
                                    try {
                                        t.muted() ? t.ima3.adsManager.setVolume(0) : t.ima3.adsManager.setVolume(.01),
                                        I(),
                                        t.trigger("ads-load"),
                                        t.ima3.adsManager.init(e.width, e.height, h.ViewMode.NORMAL),
                                        t.ima3.adsManager.start()
                                    } catch (e) {
                                        t.trigger("adserror")
                                    }
                                }
                                ,
                                c = function() {
                                    t.ima3.adsManager && (t.ima3.adsManager.destroy(),
                                    t.ima3.adsManager = null),
                                    t.ima3.managerCleanup && (t.ima3.managerCleanup(),
                                    t.ima3.managerCleanup = null)
                                }
                                ;
                                var C = function() {
                                    var l = r["default"].getComponent("ControlBar");
                                    if (h = s["default"].google.ima,
                                    v = A(h),
                                    e.ima3SdkSettings)
                                        for (var d in e.ima3SdkSettings) {
                                            var c = "set" + d.charAt(0).toUpperCase() + d.slice(1);
                                            "function" == typeof h.settings[c] ? h.settings[c](e.ima3SdkSettings[d]) : r["default"].log.warn('Invalid ima3SdkSetting: "' + d + '"')
                                        }
                                    a = r["default"].ima3.Html5.adPlayer(o, {
                                        contentPlayer: t
                                    }),
                                    i = new l(a,e.adControlBar),
                                    i.addClass("vjs-ad-control-bar"),
                                    t.addClass("vjs-ad-controls"),
                                    t.addChild(i),
                                    t.ima3.adControlBar = i,
                                    t.ima3.adPlayer = a;
                                    var p = r["default"].browser.IS_IOS
                                      , g = r["default"].browser.IS_ANDROID;
                                    if (!p && !g || t.tech_.featuresVolumeControl || t.muted() || i.volumeMenuButton && i.volumeMenuButton.addClass("vjs-hidden"),
                                    e.vpaidMode) {
                                        if ("number" != typeof h.ImaSdkSettings.VpaidMode[e.vpaidMode])
                                            throw new Error('Invalid VPAID Mode: "' + e.vpaidMode + '"');
                                        h.settings.setVpaidMode(h.ImaSdkSettings.VpaidMode[e.vpaidMode])
                                    }
                                    t.ima3.adDisplayContainer = new h.AdDisplayContainer(o,n,e.clickTrackingElement),
                                    t.ima3.adDisplayContainer.initialized = !1;
                                    var y = "click";
                                    (p || g) && (y = "touchend"),
                                    t.one(y, function() {
                                        I()
                                    }),
                                    t.ima3.adsLoader = new h.AdsLoader(t.ima3.adDisplayContainer);
                                    var _ = t.ima3.adsLoader.getSettings();
                                    _.setPlayerVersion(t.ima3.version),
                                    _.setPlayerType("brightcove/player-html5"),
                                    t.ima3.loaderCleanup = b(t.ima3.adsLoader, v, t);
                                    var S = t.currentSrc();
                                    t.mediainfo && "FREE" === t.mediainfo.economics ? (t.trigger("adscanceled"),
                                    t.trigger("nopreroll"),
                                    t.trigger("nopostroll")) : S && "" !== S && "ondemand" !== e.requestMode && "oncue" !== e.requestMode && u(e),
                                    t.on("contentupdate", function() {
                                        if (S = t.currentSrc(),
                                        t.mediainfo && "FREE" === t.mediainfo.economics)
                                            return t.trigger("adscanceled"),
                                            t.trigger("nopreroll"),
                                            void t.trigger("nopostroll");
                                        S && "" !== S && "ondemand" !== e.requestMode && "oncue" !== e.requestMode && u(e)
                                    }),
                                    t.on("contentended", function() {
                                        "postroll?" === t.ads.state && (t.one("adtimeout", f),
                                        t.ima3.adsLoader.contentComplete())
                                    }),
                                    t.on(["contentupdate", "dispose"], function() {
                                        t.off("adtimeout", f)
                                    }),
                                    t.on(["contentupdate", "adend", "ima3-ready"], function() {
                                        m(t)
                                    }),
                                    t.ima3.el = o
                                };
                                s["default"].google && s["default"].google.ima ? (C(),
                                this.trigger("ima3-ready")) : S(e.sdkurl, function(e) {
                                    C(),
                                    e ? t.trigger({
                                        type: "adserror",
                                        info: e
                                    }) : t.trigger("ima3-ready")
                                })
                            }
                            ;
                            c.eventTypes = A,
                            r["default"].ima3.Html5.adPlayer = function(e, t) {
                                var n = t.contentPlayer
                                  , i = new r["default"].ima3.AdPlayer(t)
                                  , a = !0;
                                return i.currentTime = function() {
                                    var e = i.duration();
                                    if (!e || !n.ima3.adsManager)
                                        return 0;
                                    var t = n.ima3.adsManager.getRemainingTime();
                                    return t <= 0 ? 0 : t > e ? 0 : t > 0 ? e - t : void 0
                                }
                                ,
                                i.duration = function() {
                                    var e = n.ima3.currentAd;
                                    if (e) {
                                        var t = e.getDuration();
                                        return t > 0 ? t : 0
                                    }
                                    return 0
                                }
                                ,
                                i.pause = function() {
                                    a = !0,
                                    n.ima3.adsManager.pause()
                                }
                                ,
                                i.paused = function() {
                                    return a
                                }
                                ,
                                i.play = function() {
                                    a = !1,
                                    n.ima3.adsManager.resume(),
                                    i.trigger("play")
                                }
                                ,
                                i.isFullscreen = function() {
                                    return n.isFullscreen()
                                }
                                ,
                                i.requestFullscreen = function() {
                                    return n.requestFullscreen()
                                }
                                ,
                                i.volume = function(e) {
                                    if (!n.ima3 || !n.ima3.adsManager)
                                        return void r["default"].log.error("Too early to set Volume. IMA3 is not loaded");
                                    var t = n.ima3.adsManager.getVolume();
                                    return e !== undefined && (n.ima3.adsManager.setVolume(e),
                                    n.ima3.volume = e || n.ima3.volume,
                                    i.trigger("volumechange")),
                                    t || n.ima3.volume
                                }
                                ,
                                i.muted = function(e) {
                                    var t = n.ima3.adsManager.getVolume();
                                    return e !== undefined ? 0 === i.volume(e ? 0 : n.ima3.volume) : 0 === t
                                }
                                ,
                                n.on("ima3-started", function() {
                                    n.removeClass("vjs-ima3-paused"),
                                    i.trigger("play"),
                                    a = !1
                                }),
                                n.on("ima3-resumed", function() {
                                    n.removeClass("vjs-ima3-paused"),
                                    i.trigger("play"),
                                    a = !1
                                }),
                                n.on("ima3-paused", function() {
                                    n.addClass("vjs-ima3-paused"),
                                    i.trigger("pause"),
                                    a = !0
                                }),
                                function e() {
                                    n.ads.isAdPlaying() && !i.paused() && i.trigger("timeupdate"),
                                    s["default"].setTimeout(e, 1e3)
                                }(),
                                i
                            }
                        }
                        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
                    }
                    , {
                        "./videojs.ima3-canautoplay.js": 1,
                        "./videojs.ima3-cuepoints.js": 2,
                        "global/document": 5,
                        "global/window": 6,
                        "videojs-contrib-ads": 7
                    }]
                }, {}, [8])(8)
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("errorscreen")) {
                return
            }
            videojs.registerPlugin("errorscreen", function(e) {
                var t = {
                    errorHandled: {
                        "-1": {
                            msg: "PLAYER_ERR_NO_SRC",
                            description: "Nessun video \xe8 stato caricato"
                        },
                        "-2": {
                            msg: "PLAYER_ERR_TIMEOUT",
                            description: "Impossibile scaricare il video"
                        },
                        1: {
                            msg: "MEDIA_ERR_ABORTED",
                            description: "Il download del video \xe8 stato cancellato"
                        },
                        2: {
                            msg: "MEDIA_ERR_NETWORK",
                            description: "Connessione persa. Controlla di essere connesso a internet"
                        },
                        3: {
                            msg: "MEDIA_ERR_DECODE",
                            description: "Il video \xe8 in un formato non valido o non compatibile con il browser, oppure hai perso la connessione. Prova a ricaricare la pagina."
                        },
                        4: {
                            msg: "MEDIA_ERR_SRC_NOT_SUPPORTED",
                            description: "Il video \xe8 non disponibile o non supportato dal browser"
                        },
                        5: {
                            msg: "MEDIA_ERR_ENCRYPTED",
                            description: "Il video che stai cercando di guarda \xe8 criptato"
                        },
                        unknown: {
                            msg: "MEDIA_ERR_UNKNOWN",
                            description: "Si \xe8 verificato un errore, riprova pi\xf9 tardi"
                        }
                    }
                };
                r();
                var n = function(e) {
                    this.player = e;
                    this.errorScreen
                };
                n.prototype = {
                    listenForErrors: function() {
                        var e = this;
                        this.player.on("error", function() {
                            var t = this.error();
                            e.displayErrorScreen(t)
                        })
                    },
                    stopListeningErrors: function() {
                        this.player.off("error", function() {
                            var e = this.player.error();
                            self.displayErrorScreen(e)
                        })
                    },
                    displayErrorScreen: function(e) {
                        var n = t.errorHandled[e.code].description;
                        this.errorScreen = document.createElement("div");
                        this.errorScreen.setAttribute("class", "error-screen-container");
                        var i = document.createElement("div");
                        i.setAttribute("class", "error-screen-body");
                        var r = document.createElement("div");
                        r.setAttribute("class", "error-screen-message");
                        r.innerHTML = n;
                        i.appendChild(r);
                        this.errorScreen.appendChild(i);
                        this.player.el().appendChild(this.errorScreen)
                    },
                    removeErrorScreen: function() {
                        if (typeof this.endscreen !== "undefined")
                            this.player.el().removeChild(this.errorScreen)
                    }
                };
                n.prototype.constructor = n;
                var i = this;
                i.ready(function() {
                    var e = new n(i);
                    e.listenForErrors()
                });
                function r() {
                    if (typeof e !== "undefined") {
                        for (var n in e)
                            t[n] = e[n]
                    }
                }
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("overlay")) {
                return
            }
            !function(e, t) {
                "object" == typeof exports && "undefined" != typeof module ? module.exports = t(require("video.js"), require("global/window")) : "function" == typeof define && define.amd ? define(["video.js", "global/window"], t) : e.videojsOverlay = t(e.videojs, e.window)
            }(this, function(e, t) {
                "use strict";
                function n(e) {
                    if (void 0 === e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return e
                }
                e = e && e.hasOwnProperty("default") ? e.default : e,
                t = t && t.hasOwnProperty("default") ? t.default : t;
                var i = {
                    align: "top-left",
                    class: "",
                    content: "This overlay will show up while the video is playing",
                    debug: !1,
                    showBackground: !0,
                    attachToControlBar: !1,
                    overlays: [{
                        start: "playing",
                        end: "paused"
                    }]
                }
                  , r = e.getComponent("Component")
                  , a = e.dom || e
                  , s = e.registerPlugin || e.plugin
                  , o = function(e) {
                    return "number" == typeof e && e == e
                }
                  , u = function(e) {
                    return "string" == typeof e && /^\S+$/.test(e)
                }
                  , l = function(i) {
                    var r, s;
                    function l(e, t) {
                        var r;
                        return r = i.call(this, e, t) || this,
                        ["start", "end"].forEach(function(e) {
                            var t = r.options_[e];
                            if (o(t))
                                r[e + "Event_"] = "timeupdate";
                            else if (u(t))
                                r[e + "Event_"] = t;
                            else if ("start" === e)
                                throw new Error('invalid "start" option; expected number or string')
                        }),
                        ["endListener_", "rewindListener_", "startListener_"].forEach(function(e) {
                            r[e] = function(t) {
                                return l.prototype[e].call(n(n(r)), t)
                            }
                        }),
                        "timeupdate" === r.startEvent_ && r.on(e, "timeupdate", r.rewindListener_),
                        r.debug('created, listening to "' + r.startEvent_ + '" for "start" and "' + (r.endEvent_ || "nothing") + '" for "end"'),
                        r.hide(),
                        r
                    }
                    s = i,
                    (r = l).prototype = Object.create(s.prototype),
                    r.prototype.constructor = r,
                    r.__proto__ = s;
                    var d = l.prototype;
                    return d.createEl = function() {
                        var e = this.options_
                          , n = e.content
                          , i = e.showBackground ? "vjs-overlay-background" : "vjs-overlay-no-background"
                          , r = a.createEl("div", {
                            className: "\n        vjs-overlay\n        vjs-overlay-" + e.align + "\n        " + e.class + "\n        " + i + "\n        vjs-hidden\n      "
                        });
                        return "string" == typeof n ? r.innerHTML = n : n instanceof t.DocumentFragment ? r.appendChild(n) : a.appendContent(r, n),
                        r
                    }
                    ,
                    d.debug = function() {
                        if (this.options_.debug) {
                            for (var t = e.log, n = t, i = arguments.length, r = new Array(i), a = 0; a < i; a++)
                                r[a] = arguments[a];
                            t.hasOwnProperty(r[0]) && "function" == typeof t[r[0]] && (n = t[r.shift()]),
                            n.apply(void 0, ["overlay#" + this.id() + ": "].concat(r))
                        }
                    }
                    ,
                    d.hide = function() {
                        return i.prototype.hide.call(this),
                        this.debug("hidden"),
                        this.debug('bound `startListener_` to "' + this.startEvent_ + '"'),
                        this.endEvent_ && (this.debug('unbound `endListener_` from "' + this.endEvent_ + '"'),
                        this.off(this.player(), this.endEvent_, this.endListener_)),
                        this.on(this.player(), this.startEvent_, this.startListener_),
                        this
                    }
                    ,
                    d.shouldHide_ = function(e, t) {
                        var n = this.options_.end;
                        return o(n) ? e >= n : n === t
                    }
                    ,
                    d.show = function() {
                        return i.prototype.show.call(this),
                        this.off(this.player(), this.startEvent_, this.startListener_),
                        this.debug("shown"),
                        this.debug('unbound `startListener_` from "' + this.startEvent_ + '"'),
                        this.endEvent_ && (this.debug('bound `endListener_` to "' + this.endEvent_ + '"'),
                        this.on(this.player(), this.endEvent_, this.endListener_)),
                        this
                    }
                    ,
                    d.shouldShow_ = function(e, t) {
                        var n = this.options_.start
                          , i = this.options_.end;
                        return o(n) ? o(i) ? e >= n && e < i : this.hasShownSinceSeek_ ? Math.floor(e) === n : (this.hasShownSinceSeek_ = !0,
                        e >= n) : n === t
                    }
                    ,
                    d.startListener_ = function(e) {
                        var t = this.player().currentTime();
                        this.shouldShow_(t, e.type) && this.show()
                    }
                    ,
                    d.endListener_ = function(e) {
                        var t = this.player().currentTime();
                        this.shouldHide_(t, e.type) && this.hide()
                    }
                    ,
                    d.rewindListener_ = function(e) {
                        var t = this.player().currentTime()
                          , n = this.previousTime_
                          , i = this.options_.start
                          , r = this.options_.end;
                        t < n && (this.debug("rewind detected"),
                        o(r) && !this.shouldShow_(t) ? (this.debug("hiding; " + r + " is an integer and overlay should not show at this time"),
                        this.hasShownSinceSeek_ = !1,
                        this.hide()) : u(r) && t < i && (this.debug("hiding; show point (" + i + ") is before now (" + t + ") and end point (" + r + ") is an event"),
                        this.hasShownSinceSeek_ = !1,
                        this.hide())),
                        this.previousTime_ = t
                    }
                    ,
                    l
                }(r);
                e.registerComponent("Overlay", l);
                var d = function(t) {
                    var n = this
                      , r = e.mergeOptions(i, t);
                    Array.isArray(this.overlays_) && this.overlays_.forEach(function(e) {
                        n.removeChild(e),
                        n.controlBar && n.controlBar.removeChild(e),
                        e.dispose()
                    });
                    var a = r.overlays;
                    delete r.overlays,
                    this.overlays_ = a.map(function(t) {
                        var i = e.mergeOptions(r, t)
                          , a = "string" == typeof i.attachToControlBar || !0 === i.attachToControlBar;
                        if (!n.controls() || !n.controlBar)
                            return n.addChild("overlay", i);
                        if (a && -1 !== i.align.indexOf("bottom")) {
                            var s = n.controlBar.children()[0];
                            if (void 0 !== n.controlBar.getChild(i.attachToControlBar) && (s = n.controlBar.getChild(i.attachToControlBar)),
                            s) {
                                var o = n.controlBar.children().indexOf(s);
                                return n.controlBar.addChild("overlay", i, o)
                            }
                        }
                        var u = n.addChild("overlay", i);
                        return n.el().insertBefore(u.el(), n.controlBar.el()),
                        u
                    })
                };
                return d.VERSION = "2.1.5",
                s("overlay", d),
                d
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("popularVideosOverlay")) {
                return
            }
            videojs.registerPlugin("popularVideosOverlay", function(e, t, n) {
                if (!e)
                    return;
                const i = this;
                let r, a = 0;
                const s = e && e.videoMostViewd;
                function o(e, t, n) {
                    const i = document.createElement(e) || null;
                    if (null !== t) {
                        for (var r in t)
                            i.setAttribute(r, t[r]);
                        n && function(e, t) {
                            e.appendChild(document.createTextNode(t))
                        }(i, n)
                    }
                    return i
                }
                function u() {
                    var e, t;
                    r = document.querySelector(".vjs-overlay"),
                    t = "custom-overlay-hide",
                    (e = r) && e.classList && e.classList.add(t)
                }
                i.one("loadstart", function() {
                    const e = o("div", {
                        style: "height: 100%"
                    })
                      , r = function(e) {
                        const i = o("div", {
                            id: "videoList",
                            style: "height: 100%"
                        })
                          , r = o("div", {
                            class: "custom-overlay-main"
                        });
                        let a, s, u;
                        return i.appendChild(r),
                        e && e.length && e.map(function(e) {
                            a = o("a", {
                                href: t("fogliavideo", {
                                    uuid: e.uuid,
                                    sectionId: e.sectionId,
                                    slug: e.slug
                                }),
                                target: n ? "_blank" : "",
                                class: "custom-overlay-thumbnail",
                                style: "background-image: url(" + (e.cover && (e.cover.big || e.cover.medium)) || ");"
                            }),
                            r.appendChild(a),
                            s = a.appendChild(o("span", {
                                class: "custom-overlay-info"
                            })),
                            (u = s.appendChild(o("div", {
                                class: "custom-overlay-info-top"
                            }))).appendChild(o("div", {
                                class: "custom-overlay-description"
                            }, e.title.leafTitle))
                        }),
                        i
                    }(s);
                    e.appendChild(r),
                    i.overlay({
                        overlays: [{
                            align: "top",
                            content: e,
                            start: 0,
                            class: "custom-overlay-hide"
                        }]
                    })
                }),
                i.on("ads-ad-started", function() {
                    clearTimeout(a),
                    u()
                }),
                i.on("ended", function() {
                    a = setTimeout(function() {
                        var e, t;
                        r = document.querySelector(".vjs-overlay"),
                        t = "custom-overlay-hide",
                        (e = r) && e.classList && e.classList.remove(t)
                    }, 1e3)
                }),
                i.on("playing", function() {
                    clearTimeout(a),
                    u()
                })
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("customPip")) {
                return
            }
            videojs.registerPlugin("customPip", function(e) {
                if (e)
                    return;
                var t = this;
                var n = t.children_[0];
                n.classList.add("intro-video");
                var i = document.querySelector(".intro-video-container");
                var r = i.querySelector(".popout-video");
                var a = r.offsetHeight;
                var s = 0;
                var o = false;
                var u = null;
                var l = 0;
                var d = false;
                var c = document.createElement("button");
                c.classList.add("popout-video--btn");
                var f = document.createElement("span");
                f.classList.add("icon", "icon-close");
                c.appendChild(f);
                function p() {
                    if (o) {
                        r.classList.remove("popout-video--popout");
                        r.children[0].removeChild(c);
                        o = !o
                    }
                }
                function h() {
                    if (!o) {
                        r.classList.add("popout-video--popout");
                        r.children[0].appendChild(c);
                        o = !o
                    }
                }
                function v() {
                    l = window.scrollY;
                    s = window.pageYOffset + r.getBoundingClientRect().top;
                    if (!d) {
                        setTimeout(function() {
                            if (l > a / 2 + s) {
                                h()
                            } else {
                                p()
                            }
                            d = false
                        }, 16)
                    }
                    d = true
                }
                c.addEventListener("click", function() {
                    t.pause();
                    if (u)
                        u.pause();
                    p()
                });
                function g() {
                    if (window.scrollY <= a)
                        p()
                }
                t.ready(function() {
                    t.on("ads-ad-started", function() {
                        u = t.ima3.adPlayer
                    });
                    t.on("playing", function() {
                        window.removeEventListener("scroll", g);
                        window.addEventListener("scroll", v)
                    });
                    t.on("ended", function() {
                        window.addEventListener("scroll", g);
                        window.removeEventListener("scroll", v)
                    });
                    t.on("pause", function() {
                        window.removeEventListener("scroll", v);
                        window.addEventListener("scroll", g)
                    });
                    t.on("ads-ad-started", function() {
                        window.removeEventListener("scroll", g);
                        window.addEventListener("scroll", v)
                    });
                    t.on("ads-play", function() {
                        window.removeEventListener("scroll", g);
                        window.addEventListener("scroll", v)
                    });
                    t.on("ads-pause", function() {
                        window.removeEventListener("scroll", v);
                        window.addEventListener("scroll", g)
                    });
                    t.on("ads-ad-ended", function() {
                        window.removeEventListener("scroll", g);
                        window.removeEventListener("scroll", v)
                    })
                })
            })
        }
        )();
        (function() {
            if (videojs.getPlugin("comscore")) {
                return
            }
            !function(e, t) {
                "use strict";
                "function" == typeof define && define.amd ? (t(e.ns_ = e.ns_ || {}),
                define([], function() {
                    return e.ns_
                })) : "object" == typeof module && module.exports ? module.exports = t({}) : t(e.ns_ = e.ns_ || {})
            }(this, function(e) {
                "use strict";
                e.ns_ = e;
                var t = t || {};
                t.indexOf = function(e, t) {
                    var n = -1;
                    return this.forEach(t, function(t, i) {
                        t == e && (n = i)
                    }),
                    n
                }
                ,
                t.forEach = function(e, t, n) {
                    try {
                        if ("function" == typeof t)
                            if (n = "undefined" != typeof n ? n : null,
                            "number" != typeof e.length || "undefined" == typeof e[0]) {
                                var i = "undefined" != typeof e.__proto__;
                                for (var r in e)
                                    e.hasOwnProperty(r) && (!i || i && "undefined" == typeof e.__proto__[r]) && "function" != typeof e[r] && t.call(n, e[r], r)
                            } else
                                for (var a = 0, s = e.length; a < s; a++)
                                    t.call(n, e[a], a)
                    } catch (e) {}
                }
                ;
                var t = t || {};
                t.parseBoolean = function(e, t) {
                    return t = t || !1,
                    e ? "0" != e : t
                }
                ,
                t.parseInteger = function(e, t) {
                    return null == e || isNaN(e) ? t || 0 : parseInt(e)
                }
                ,
                t.parseLong = function(e, t) {
                    var n = Number(e);
                    return null == e || isNaN(n) ? t || 0 : n
                }
                ,
                t.toString = function(e) {
                    if ("undefined" == typeof e)
                        return "undefined";
                    if ("string" == typeof e)
                        return e;
                    if (e instanceof Array)
                        return e.join(",");
                    var t = "";
                    for (var n in e)
                        e.hasOwnProperty(n) && (t += n + ":" + e[n] + ";");
                    return t || e.toString()
                }
                ;
                var t = t || {};
                t.filter = function(e, t) {
                    var n = {};
                    for (var i in t)
                        t.hasOwnProperty(i) && e(t[i]) && (n[i] = t[i]);
                    return n
                }
                ,
                t.extend = function(e) {
                    var t, n = arguments.length;
                    e = e || {};
                    for (var i = 1; i < n; i++)
                        if (t = arguments[i])
                            for (var r in t)
                                t.hasOwnProperty(r) && (e[r] = t[r]);
                    return e
                }
                ;
                var t = t || {};
                t.cloneObject = function(e) {
                    if (null == e || "object" != typeof e)
                        return e;
                    var t = function() {
                        function e() {}
                        function t(t) {
                            return "object" == typeof t ? (e.prototype = t,
                            new e) : t
                        }
                        function n(e) {
                            for (var t in e)
                                e.hasOwnProperty(t) && (this[t] = e[t])
                        }
                        function i() {
                            this.copiedObjects = [];
                            var e = this;
                            this.recursiveDeepCopy = function(t) {
                                return e.deepCopy(t)
                            }
                            ,
                            this.depth = 0
                        }
                        function r(e, t) {
                            var n = new i;
                            return t && (n.maxDepth = t),
                            n.deepCopy(e)
                        }
                        function a(e) {
                            return "undefined" != typeof window && window && window.Node ? e instanceof Node : "undefined" != typeof document && e === document || "number" == typeof e.nodeType && e.attributes && e.childNodes && e.cloneNode
                        }
                        var s = [];
                        return n.prototype = {
                            constructor: n,
                            canCopy: function() {
                                return !1
                            },
                            create: function(e) {},
                            populate: function(e, t, n) {}
                        },
                        i.prototype = {
                            constructor: i,
                            maxDepth: 256,
                            cacheResult: function(e, t) {
                                this.copiedObjects.push([e, t])
                            },
                            getCachedResult: function(e) {
                                for (var t = this.copiedObjects, n = t.length, i = 0; i < n; i++)
                                    if (t[i][0] === e)
                                        return t[i][1]
                            },
                            deepCopy: function(e) {
                                if (null === e)
                                    return null;
                                if ("object" != typeof e)
                                    return e;
                                var t = this.getCachedResult(e);
                                if (t)
                                    return t;
                                for (var n = 0; n < s.length; n++) {
                                    var i = s[n];
                                    if (i.canCopy(e))
                                        return this.applyDeepCopier(i, e)
                                }
                                throw new Error("Unable to clone the following object " + e)
                            },
                            applyDeepCopier: function(e, t) {
                                var n = e.create(t);
                                if (this.cacheResult(t, n),
                                this.depth++,
                                this.depth > this.maxDepth)
                                    throw new Error("Maximum recursion depth exceeded.");
                                return e.populate(this.recursiveDeepCopy, t, n),
                                this.depth--,
                                n
                            }
                        },
                        r.DeepCopier = n,
                        r.deepCopiers = s,
                        r.register = function(e) {
                            e instanceof n || (e = new n(e)),
                            s.unshift(e)
                        }
                        ,
                        r.register({
                            canCopy: function() {
                                return !0
                            },
                            create: function(e) {
                                return e instanceof e.constructor ? t(e.constructor.prototype) : {}
                            },
                            populate: function(e, t, n) {
                                for (var i in t)
                                    t.hasOwnProperty(i) && (n[i] = e(t[i]));
                                return n
                            }
                        }),
                        r.register({
                            canCopy: function(e) {
                                return e instanceof Array
                            },
                            create: function(e) {
                                return new e.constructor
                            },
                            populate: function(e, t, n) {
                                for (var i = 0; i < t.length; i++)
                                    n.push(e(t[i]));
                                return n
                            }
                        }),
                        r.register({
                            canCopy: function(e) {
                                return e instanceof Date
                            },
                            create: function(e) {
                                return new Date(e)
                            }
                        }),
                        r.register({
                            canCopy: function(e) {
                                return a(e)
                            },
                            create: function(e) {
                                return "undefined" != typeof document && e === document ? document : e.cloneNode(!1)
                            },
                            populate: function(e, t, n) {
                                if ("undefined" != typeof document && t === document)
                                    return document;
                                if (t.childNodes && t.childNodes.length)
                                    for (var i = 0; i < t.childNodes.length; i++) {
                                        var r = e(t.childNodes[i]);
                                        n.appendChild(r)
                                    }
                            }
                        }),
                        {
                            deepCopy: r
                        }
                    }();
                    return t.deepCopy(e)
                }
                ;
                var t = t || {};
                t.getNamespace = function() {
                    return e.ns_ || e
                }
                ,
                t.uid = function() {
                    var e = 1;
                    return function() {
                        return +new Date + "_" + e++
                    }
                }(),
                t.isEmpty = function(e) {
                    return void 0 === e || null === e || "" === e || e instanceof Array && 0 === e.length
                }
                ,
                t.isNotEmpty = function(e) {
                    return !this.isEmpty(e)
                }
                ,
                t.safeGet = function(e, t) {
                    return t = this.exists(t) ? t : "",
                    this.exists(e) ? e : t
                }
                ,
                t.isTrue = function(e) {
                    return "undefined" != typeof e && ("string" == typeof e ? (e = e.toLowerCase(),
                    "true" === e || "1" === e || "on" === e) : !!e)
                }
                ,
                t.regionMatches = function(e, t, n, i, r) {
                    if (t < 0 || i < 0 || t + r > e.length || i + r > n.length)
                        return !1;
                    for (; --r >= 0; ) {
                        var a = e.charAt(t++)
                          , s = n.charAt(i++);
                        if (a != s)
                            return !1
                    }
                    return !0
                }
                ,
                t.exists = function(e) {
                    return "undefined" != typeof e && null != e
                }
                ,
                !function() {
                    var e = []
                      , n = !1
                      , i = !0
                      , r = 1e3;
                    t.onSystemClockJump = function(t, a) {
                        e.push(t),
                        n || (n = !0,
                        r = a || r,
                        i = +new Date,
                        setInterval(function() {
                            var t = i + r
                              , n = +new Date;
                            i = n;
                            var a = n - t;
                            if (Math.abs(a) > r)
                                for (var s = 0; s < e.length; ++s)
                                    e[s](a > 0)
                        }, r))
                    }
                }();
                var t = t || {};
                t.hasPageVisibilityAPISupport = function() {
                    if ("undefined" == typeof document)
                        return !1;
                    var e = !1;
                    return "undefined" != typeof document.hidden ? e = !0 : "undefined" != typeof document.mozHidden ? e = !0 : "undefined" != typeof document.msHidden ? e = !0 : "undefined" != typeof document.webkitHidden && (e = !0),
                    function() {
                        return e
                    }
                }(),
                t.getPageVisibilityAPI = function() {
                    if ("undefined" == typeof document)
                        return null;
                    var e, t, n;
                    "undefined" != typeof document.hidden ? (e = "hidden",
                    t = "visibilitychange",
                    n = "visibilityState") : "undefined" != typeof document.mozHidden ? (e = "mozHidden",
                    t = "mozvisibilitychange",
                    n = "mozVisibilityState") : "undefined" != typeof document.msHidden ? (e = "msHidden",
                    t = "msvisibilitychange",
                    n = "msVisibilityState") : "undefined" != typeof document.webkitHidden && (e = "webkitHidden",
                    t = "webkitvisibilitychange",
                    n = "webkitVisibilityState");
                    var i = {
                        hidden: e,
                        visibilityChange: t,
                        state: n
                    };
                    return function() {
                        return i
                    }
                }(),
                t.isTabInBackground = function() {
                    if ("undefined" == typeof document)
                        return null;
                    var e = t.getPageVisibilityAPI();
                    return function() {
                        return document[e.hidden]
                    }
                }(),
                t.getBrowserName = function() {
                    if (!navigator)
                        return "";
                    var e, t, n = navigator.userAgent || "", i = navigator.appName || "";
                    return (t = n.indexOf("Opera")) != -1 || (t = n.indexOf("OPR/")) != -1 ? i = "Opera" : (t = n.indexOf("Android")) != -1 ? i = "Android" : (t = n.indexOf("Chrome")) != -1 ? i = "Chrome" : (t = n.indexOf("Safari")) != -1 ? i = "Safari" : (t = n.indexOf("Firefox")) != -1 ? i = "Firefox" : (t = n.indexOf("IEMobile")) != -1 ? i = "Internet Explorer Mobile" : "Microsoft Internet Explorer" == i || "Netscape" == i ? i = "Internet Explorer" : (e = n.lastIndexOf(" ") + 1) < (t = n.lastIndexOf("/")) ? (i = n.substring(e, t),
                    i.toLowerCase() == i.toUpperCase() && (i = navigator.appName)) : i = "unknown",
                    i
                }
                ,
                t.getBrowserFullVersion = function() {
                    if (!navigator)
                        return "";
                    var e, t, n, i, r = navigator.userAgent || "", a = navigator.appName || "", s = navigator.appVersion ? "" + parseFloat(navigator.appVersion) : "";
                    return (t = r.indexOf("Opera")) != -1 ? (s = r.substring(t + 6),
                    (t = r.indexOf("Version")) != -1 && (s = r.substring(t + 8))) : (t = r.indexOf("OPR/")) != -1 ? s = r.substring(t + 4) : (t = r.indexOf("Android")) != -1 ? s = r.substring(t + 11) : (t = r.indexOf("Chrome")) != -1 ? s = r.substring(t + 7) : (t = r.indexOf("Safari")) != -1 ? (s = r.substring(t + 7),
                    (t = r.indexOf("Version")) != -1 && (s = r.substring(t + 8))) : (t = r.indexOf("Firefox")) != -1 ? s = r.substring(t + 8) : "Microsoft Internet Explorer" == a ? (i = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})"),
                    null != i.exec(r) && (s = parseFloat(RegExp.$1))) : "Netscape" == a ? (i = new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})"),
                    null != i.exec(r) && (s = parseFloat(RegExp.$1))) : s = r.lastIndexOf(" ") + 1 < (t = r.lastIndexOf("/")) ? r.substring(t + 1) : "unknown",
                    s = s.toString(),
                    (n = s.indexOf(";")) != -1 && (s = s.substring(0, n)),
                    (n = s.indexOf(" ")) != -1 && (s = s.substring(0, n)),
                    (n = s.indexOf(")")) != -1 && (s = s.substring(0, n)),
                    e = parseInt("" + s, 10),
                    isNaN(e) && (s = "" + parseFloat(navigator.appVersion)),
                    s
                }
                ,
                t.browserAcceptsLargeURLs = function() {
                    return "undefined" == typeof window || (null !== window.ActiveXObject,
                    !0)
                }
                ,
                t.isBrowser = function() {
                    return "undefined" != typeof window && "undefined" != typeof document
                }
                ,
                t.isWebSecure = function() {
                    return "undefined" != typeof document && null != document && "s" === document.location.href.charAt(4)
                }
                ;
                var n = function() {
                    var e = 1e4;
                    return function(t, n) {
                        function i(e) {
                            e = e || [];
                            var n = [o, +new Date];
                            return t && n.push(t),
                            e = Array.prototype.slice.call(e),
                            n = n.concat(e)
                        }
                        function r(e) {
                            var t, i, r;
                            if ("boolean" == typeof n || !n)
                                return !!n;
                            if (r = e.join(" "),
                            n instanceof Array && n.length > 0) {
                                for (t = 0; t < n.length; ++t)
                                    if (i = n[t],
                                    i instanceof RegExp && i.test(r))
                                        return !0;
                                return !1
                            }
                            if ("object" == typeof n) {
                                var a = !1;
                                if (n.hide instanceof Array)
                                    for (t = 0; t < n.hide.length; ++t)
                                        if (i = n.hide[t],
                                        i instanceof RegExp && i.test(r)) {
                                            a = !0;
                                            break
                                        }
                                if (n.show instanceof Array)
                                    for (t = 0; t < n.show.length; ++t)
                                        if (i = n.show[t],
                                        i instanceof RegExp && i.test(r))
                                            return !0;
                                return !a && !n.show
                            }
                            return !0
                        }
                        function a(t) {
                            var i = u.length;
                            (i > e || n && n.max && i > n.max) && (u = u.slice(-Math.floor(n.max / 2)),
                            u.push("Previous logs: " + i)),
                            u.push(t)
                        }
                        var s = this
                          , o = "comScore"
                          , u = [];
                        s.log = function() {
                            var e = i(arguments);
                            a(e),
                            "undefined" != typeof console && "function" == typeof console.log && r(e) && console.log.apply(console, e)
                        }
                        ,
                        s.warn = function() {
                            var e = i(arguments);
                            a(e),
                            "undefined" != typeof console && "function" == typeof console.warn && r(e) && console.warn.apply(console, e)
                        }
                        ,
                        s.error = function() {
                            var e = i(arguments);
                            a(e),
                            "undefined" != typeof console && "function" == typeof console.error && r(e) && console.error.apply(console, e)
                        }
                        ,
                        s.apiCall = function(e) {
                            for (var t = ["API call to:", e], n = 1; n < arguments.length; ++n)
                                t.push("arg" + n + ":", arguments[n]);
                            this.log.apply(this, t)
                        }
                        ,
                        s.infoLog = function() {
                            var e = ["Trace log:"];
                            e.push.apply(e, Array.prototype.slice.call(arguments)),
                            this.log.apply(this, e)
                        }
                        ,
                        s.deprecation = function(e, t) {
                            var n = ["Deprecated API:", e, "is deprecated and will be eventually removed."];
                            t && n.push("Use", t, "instead."),
                            this.warn.apply(this, n)
                        }
                        ,
                        s.getLogHistory = function() {
                            return u
                        }
                    }
                }();
                return e.StreamingAnalytics = e.StreamingAnalytics || function() {
                    var e = function() {
                        var e = "cs_";
                        return function() {
                            var n = "undefined" != typeof localStorage ? localStorage : null;
                            t.extend(this, {
                                get: function(t) {
                                    return n && n.getItem(e + t)
                                },
                                set: function(t, i) {
                                    n && n.setItem(e + t, i)
                                },
                                has: function(t) {
                                    return n && n.getItem(e + t)
                                },
                                remove: function(t) {
                                    n && n.removeItem(e + t)
                                },
                                clear: function() {
                                    for (var t = 0; n && t < n.length; ++t) {
                                        var i = n.key(t);
                                        i.substr(0, e.length) === e && n.removeItem(i)
                                    }
                                }
                            })
                        }
                    }()
                      , i = function(e, t) {
                        if ("undefined" == typeof Image)
                            return void ("function" == typeof setTimeout ? t && setTimeout(t, 0) : t && t());
                        var n = new Image;
                        n.onload = function() {
                            t && t(200),
                            n = null
                        }
                        ,
                        n.onerror = function() {
                            t && t(),
                            n = null
                        }
                        ,
                        n.src = e
                    }
                      , r = function(e, t, n) {
                        "function" == typeof setTimeout ? n && setTimeout(function() {
                            n(200)
                        }, 0) : n && n(200)
                    }
                      , a = function() {
                        return {
                            dir: function() {
                                return null
                            },
                            append: function(e, t, n) {},
                            write: function(e, t, n) {},
                            deleteFile: function() {
                                return !1
                            },
                            read: function() {
                                return null
                            }
                        }
                    }()
                      , s = function() {
                        return {
                            PLATFORM: "generic",
                            httpGet: i,
                            httpPost: r,
                            Storage: e,
                            IO: a,
                            onDataFetch: function(e) {
                                e()
                            },
                            getCrossPublisherId: function() {
                                return null
                            },
                            getAppName: function() {
                                return o.UNKNOWN_VALUE
                            },
                            getAppVersion: function() {
                                return o.UNKNOWN_VALUE
                            },
                            getVisitorId: function() {
                                return +new Date + ~~(1e3 * Math.random())
                            },
                            getVisitorIdSuffix: function() {
                                return "72"
                            },
                            getDeviceModel: function() {
                                return o.UNKNOWN_VALUE
                            },
                            getPlatformVersion: function() {
                                return o.UNKNOWN_VALUE
                            },
                            getPlatformName: function() {
                                return "js"
                            },
                            getRuntimeName: function() {
                                return o.UNKNOWN_VALUE
                            },
                            getRuntimeVersion: function() {
                                return o.UNKNOWN_VALUE
                            },
                            getDisplayResolution: function() {
                                return o.UNKNOWN_RESOLUTION
                            },
                            getApplicationResolution: function() {
                                return o.UNKNOWN_RESOLUTION
                            },
                            getLanguage: function() {
                                return o.UNKNOWN_VALUE
                            },
                            getPackageName: function() {
                                return null
                            },
                            isConnectionAvailable: function() {
                                return !0
                            },
                            isCompatible: function() {
                                return !0
                            },
                            autoSelect: function() {},
                            setPlatformAPI: function() {},
                            isCrossPublisherIdChanged: function() {
                                return !1
                            },
                            setTimeout: function(e, t) {
                                return setTimeout(e, t)
                            },
                            clearTimeout: function(e) {
                                return clearTimeout(e)
                            },
                            getDeviceArchitecture: function() {
                                return o.UNKNOWN_VALUE
                            },
                            getConnectionType: function() {
                                return o.UNKNOWN_VALUE
                            },
                            getDeviceJailBrokenFlag: function() {
                                return o.UNKNOWN_VALUE
                            },
                            isConnectionSecure: function() {
                                return !1
                            },
                            processMeasurementLabels: function() {}
                        }
                    }()
                      , o = {
                        UNKNOWN_VALUE: "unknown",
                        UNKNOWN_RESOLUTION: "0x0"
                    };
                    t.jsonObjectToStringDictionary = function(e) {
                        var t = {};
                        for (var n in e) {
                            var i = e[n];
                            null === i || void 0 === i ? t[n] = i : t[n] = e[n] + ""
                        }
                        return t
                    }
                    ,
                    t.getKeys = function(e, t) {
                        var n, i = [];
                        for (n in e)
                            t && !t.test(n) || !e.hasOwnProperty(n) || (i[i.length] = n);
                        return i
                    }
                    ,
                    t.fixEventTime = function(e) {
                        if (e.ns_ts)
                            return parseInt(e.ns_ts);
                        var t = +new Date;
                        return e.ns_ts = t + "",
                        t
                    }
                    ,
                    t.isBrowser = function() {
                        return "undefined" != typeof window && "undefined" != typeof document
                    }
                    ,
                    t.addNewPlaybackInterval = function(e, n, i, r) {
                        var a = {};
                        if (!(i >= n))
                            return t.cloneObject(e);
                        if (a.start = n,
                        a.end = i,
                        0 == e.length)
                            return e.push(a),
                            t.cloneObject(e);
                        var s;
                        for (s = 0; s < e.length; s++)
                            if (a.start >= e[s].start && a.end <= e[s].end)
                                return t.cloneObject(e);
                        var o, u = !1;
                        for (o = 0; o < e.length; o++)
                            if (o + 1 === e.length && a.start >= e[o].start || a.start >= e[o].start && a.start < e[o + 1].start) {
                                e.splice(o + 1, 0, a),
                                u = !0;
                                break
                            }
                        u || e.splice(0, 0, a);
                        var l = [e[0]];
                        for (s = 1; s < e.length; s++)
                            l[l.length - 1].end + r < e[s].start ? l.push(e[s]) : l[l.length - 1].end < e[s].end && (l[l.length - 1].end = e[s].end);
                        return t.cloneObject(l)
                    }
                    ,
                    t.stateToString = function(e) {
                        var t = x.InternalStates;
                        for (var n in t)
                            if (t.hasOwnProperty(n) && t[n] == e)
                                return n
                    }
                    ;
                    var u = function() {
                        var e = ["play", "pause", "pause-on-buffering", "end", "buffer", "buffer-stop", "keep-alive", "hb", "custom", "load", "start", "skstart", "adskip", "cta", "error", "trans", "drmfa", "drmap", "drmde", "bitrt", "playrt", "volume", "window", "audio", "video", "subs", "cdn"];
                        return {
                            PLAY: 0,
                            PAUSE: 1,
                            PAUSE_ON_BUFFERING: 2,
                            END: 3,
                            BUFFER: 4,
                            BUFFER_STOP: 5,
                            KEEPALIVE: 6,
                            HEARTBEAT: 7,
                            CUSTOM: 8,
                            LOAD: 9,
                            ENGAGE: 10,
                            SEEK_START: 11,
                            AD_SKIP: 12,
                            CTA: 13,
                            ERROR: 14,
                            TRANSFER: 15,
                            DRM_FAILED: 16,
                            DRM_APPROVED: 17,
                            DRM_DENIED: 18,
                            BIT_RATE: 19,
                            PLAYBACK_RATE: 20,
                            VOLUME: 21,
                            WINDOW_STATE: 22,
                            AUDIO: 23,
                            VIDEO: 24,
                            SUBS: 25,
                            CDN: 26,
                            toString: function(t) {
                                return e[t]
                            }
                        }
                    }()
                      , l = function() {
                        return {
                            IDLE: 0,
                            PLAYBACK_NOT_STARTED: 1,
                            PLAYING: 2,
                            PAUSED: 3,
                            BUFFERING_BEFORE_PLAYBACK: 4,
                            BUFFERING_DURING_PLAYBACK: 5,
                            BUFFERING_DURING_SEEKING: 6,
                            BUFFERING_DURING_PAUSE: 7,
                            SEEKING_BEFORE_PLAYBACK: 8,
                            SEEKING_DURING_PLAYBACK: 9,
                            SEEKING_DURING_BUFFERING: 10,
                            SEEKING_DURING_PAUSE: 11,
                            PAUSED_DURING_BUFFERING: 12
                        }
                    }()
                      , d = function() {
                        var e = ["c", "s", "r"];
                        return {
                            SINGLE_CLIP: 0,
                            SEGMENTED: 1,
                            REDUCED: 2,
                            toString: function(t) {
                                return e[t]
                            }
                        }
                    }()
                      , c = {
                        STREAMINGANALYTICS_VERSION: "6.1.0.170130",
                        MODEL_VERSION: "5.8",
                        LOG_NAMESPACE: "STA",
                        DEFAULT_PLAYERNAME: "js_api",
                        DEFAULT_HEARTBEAT_INTERVAL: [{
                            playingtime: 6e4,
                            interval: 1e4
                        }, {
                            playingtime: null,
                            interval: 6e4
                        }],
                        DEFAULT_KEEP_ALIVE_INTERVAL: 12e5,
                        DEFAULT_PAUSED_ON_BUFFERING_INTERVAL: 500,
                        C1_VALUE: "19",
                        C10_VALUE: "js",
                        NS_AP_C12M_VALUE: "1",
                        NS_NC_VALUE: "1",
                        PAGE_NAME_LABEL: "name",
                        RESTRICTED_URL_LENGTH_LIMIT: 2048,
                        URL_LENGTH_LIMIT: 4096,
                        THROTTLING_DELAY: 500,
                        INTERVAL_MERGE_TOLERANCE: 500,
                        SYSTEM_CLOCK_JUMP_DETECTION_DEFAULT_INTERVAL: 1e3,
                        SYSTEM_CLOCK_JUMP_DETECTION_MINIMUM_INTERVAL: 500,
                        DEFAULT_ASSET_PLAYBACK_RATE: 100,
                        STANDARD_METADATA_LABELS: ["ns_st_st", "ns_st_ci", "ns_st_pr", "ns_st_sn", "ns_st_en", "ns_st_ep", "ns_st_ty", "ns_st_ct", "ns_st_li", "ns_st_ad", "ns_st_bn", "ns_st_tb", "ns_st_an", "ns_st_ta", "ns_st_pu", "c3", "c4", "c6"],
                        LABELS_ORDER: ["c1", "c2", "ca2", "cb2", "cc2", "cd2", "ns_site", "ca_ns_site", "cb_ns_site", "cc_ns_site", "cd_ns_site", "ns_vsite", "ca_ns_vsite", "cb_ns_vsite", "cc_ns_vsite", "cd_ns_vsite", "ns_alias", "ca_ns_alias", "cb_ns_alias", "cc_ns_alias", "cd_ns_alias", "ns_ap_an", "ca_ns_ap_an", "cb_ns_ap_an", "cc_ns_ap_an", "cd_ns_ap_an", "ns_ap_pn", "ns_ap_pv", "c12", "ca12", "cb12", "cc12", "cd12", "ns_ak", "ns_ap_hw", "name", "ns_ap_ni", "ns_ap_ec", "ns_ap_ev", "ns_ap_device", "ns_ap_id", "ns_ap_csf", "ns_ap_bi", "ns_ap_pfm", "ns_ap_pfv", "ns_ap_ver", "ca_ns_ap_ver", "cb_ns_ap_ver", "cc_ns_ap_ver", "cd_ns_ap_ver", "ns_ap_sv", "ns_ap_cv", "ns_ap_smv", "ns_type", "ca_ns_type", "cb_ns_type", "cc_ns_type", "cd_ns_type", "ns_radio", "ns_nc", "cs_partner", "cs_xcid", "cs_impid", "ns_ap_ui", "ca_ns_ap_ui", "cb_ns_ap_ui", "cc_ns_ap_ui", "cd_ns_ap_ui", "ns_ap_gs", "ns_st_sv", "ns_st_pv", "ns_st_smv", "ns_st_it", "ns_st_id", "ns_st_ec", "ns_st_sp", "ns_st_sc", "ns_st_psq", "ns_st_asq", "ns_st_sq", "ns_st_ppc", "ns_st_apc", "ns_st_spc", "ns_st_cn", "ns_st_ev", "ns_st_po", "ns_st_cl", "ns_st_el", "ns_st_sl", "ns_st_pb", "ns_st_hc", "ns_st_mp", "ca_ns_st_mp", "cb_ns_st_mp", "cc_ns_st_mp", "cd_ns_st_mp", "ns_st_mv", "ca_ns_st_mv", "cb_ns_st_mv", "cc_ns_st_mv", "cd_ns_st_mv", "ns_st_pn", "ns_st_tp", "ns_st_ad", "ns_st_li", "ns_st_ci", "ns_st_si", "ns_st_pt", "ns_st_dpt", "ns_st_ipt", "ns_st_et", "ns_st_det", "ns_st_upc", "ns_st_dupc", "ns_st_iupc", "ns_st_upa", "ns_st_dupa", "ns_st_iupa", "ns_st_lpc", "ns_st_dlpc", "ns_st_lpa", "ns_st_dlpa", "ns_st_pa", "ns_st_ie", "ns_ap_jb", "ns_ap_et", "ns_ap_res", "ns_ap_sd", "ns_ap_po", "ns_ap_ot", "ns_ap_c12m", "cs_c12u", "ca_cs_c12u", "cb_cs_c12u", "cc_cs_c12u", "cd_cs_c12u", "ns_ap_install", "ns_ap_updated", "ns_ap_lastrun", "ns_ap_cs", "ns_ap_runs", "ns_ap_usage", "ns_ap_fg", "ns_ap_ft", "ns_ap_dft", "ns_ap_bt", "ns_ap_dbt", "ns_ap_dit", "ns_ap_as", "ns_ap_das", "ns_ap_it", "ns_ap_uc", "ns_ap_aus", "ns_ap_daus", "ns_ap_us", "ns_ap_dus", "ns_ap_ut", "ns_ap_oc", "ns_ap_uxc", "ns_ap_uxs", "ns_ap_lang", "ns_ap_ar", "ns_ap_miss", "ns_ts", "ns_ap_cfg", "ns_st_ca", "ns_st_cp", "ns_st_er", "ca_ns_st_er", "cb_ns_st_er", "cc_ns_st_er", "cd_ns_st_er", "ns_st_pe", "ns_st_ui", "ca_ns_st_ui", "cb_ns_st_ui", "cc_ns_st_ui", "cd_ns_st_ui", "ns_st_bc", "ns_st_dbc", "ns_st_bt", "ns_st_dbt", "ns_st_bp", "ns_st_lt", "ns_st_skc", "ns_st_dskc", "ns_st_ska", "ns_st_dska", "ns_st_skd", "ns_st_skt", "ns_st_dskt", "ns_st_pc", "ns_st_dpc", "ns_st_pp", "ns_st_br", "ns_st_pbr", "ns_st_rt", "ns_st_prt", "ns_st_ub", "ns_st_vo", "ns_st_pvo", "ns_st_ws", "ns_st_pws", "ns_st_ki", "ns_st_rp", "ns_st_bn", "ns_st_tb", "ns_st_an", "ns_st_ta", "ns_st_pl", "ns_st_pr", "ns_st_sn", "ns_st_en", "ns_st_ep", "ns_st_sr", "ns_st_ty", "ns_st_ct", "ns_st_cs", "ns_st_ge", "ns_st_st", "ns_st_stc", "ns_st_ce", "ns_st_ia", "ns_st_dt", "ns_st_ddt", "ns_st_tdt", "ns_st_tm", "ns_st_dtm", "ns_st_ttm", "ns_st_de", "ns_st_pu", "ns_st_ti", "ns_st_cu", "ns_st_fee", "ns_st_ft", "ns_st_at", "ns_st_pat", "ns_st_vt", "ns_st_pvt", "ns_st_tt", "ns_st_ptt", "ns_st_cdn", "ns_st_pcdn", "ns_st_ami", "ns_st_amt", "ns_st_ams", "ns_ap_i1", "ns_ap_i2", "ns_ap_i3", "ns_ap_i4", "ns_ap_i5", "ns_ap_i6", "ns_ap_referrer", "ns_clid", "ns_campaign", "ns_source", "ns_mchannel", "ns_linkname", "ns_fee", "gclid", "utm_campaign", "utm_source", "utm_medium", "utm_term", "utm_content", "ns_ecommerce", "ns_ec_sv", "ns_client_id", "ns_order_id", "ns_ec_cur", "ns_orderline_id", "ns_orderlines", "ns_prod_id", "ns_qty", "ns_prod_price", "ns_prod_grp", "ns_brand", "ns_shop", "ns_category", "category", "ns_c", "ns_search_term", "ns_search_result", "ns_m_exp", "ns_m_chs", "c3", "ca3", "cb3", "cc3", "cd3", "c4", "ca4", "cb4", "cc4", "cd4", "c5", "ca5", "cb5", "cc5", "cd5", "c6", "ca6", "cb6", "cc6", "cd6", "c10", "c11", "c13", "c14", "c15", "c16", "c7", "c8", "c9", "ns_ap_er", "ns_st_amc"]
                    }
                      , f = function() {
                        function e() {
                            function e() {
                                a = {},
                                a.ns_st_cl = "0",
                                a.ns_st_pn = "1",
                                a.ns_st_tp = "0",
                                a.ns_st_cn = "1",
                                a.ns_st_skd = "0",
                                a.ns_st_ci = "0",
                                a.c3 = "*null",
                                a.c4 = "*null",
                                a.c6 = "*null",
                                a.ns_st_st = "*null",
                                a.ns_st_pu = "*null",
                                a.ns_st_pr = "*null",
                                a.ns_st_ep = "*null",
                                a.ns_st_sn = "*null",
                                a.ns_st_en = "*null",
                                a.ns_st_ct = "*null",
                                s = {},
                                r = !1,
                                i = !1,
                                n = o.UNKNOWN_VALUE,
                                u = !0,
                                l = 0,
                                d = NaN,
                                v = 0,
                                p = 0,
                                f = NaN,
                                g = 0,
                                m = NaN,
                                _ = 0,
                                y = 0,
                                h = 0,
                                A = NaN,
                                b = [],
                                S = [],
                                T = 0,
                                k = 0,
                                E = 0,
                                P = 0,
                                I = 0,
                                C = 0,
                                w = 0,
                                j = NaN,
                                L = 0,
                                O = 0,
                                x = 0,
                                D = !1,
                                N = NaN,
                                B = !1,
                                U = 0,
                                q = 0,
                                R = 0,
                                M = 0,
                                F = 0,
                                V = 0,
                                H = 0,
                                G = 0,
                                W = 0,
                                K = 0,
                                z = 0,
                                Y = 0,
                                X = 0,
                                Q = 0,
                                Z = 0,
                                J = !1,
                                $ = c.DEFAULT_ASSET_PLAYBACK_RATE
                            }
                            var n, i, r, a, s, u, l, d, f, p, h, v, g, m, y, _, b, S, A, T, k, E, P, I, C, w, j, L, O, x, D, N, R, M, U, B, F, V, q, H, G, W, K, z, Y, X, Q, Z, J, $, ee = this, te = c.INTERVAL_MERGE_TOLERANCE;
                            t.extend(this, {
                                getHash: function() {
                                    return n
                                },
                                setHash: function(e) {
                                    n = e
                                },
                                setPlaybackIntervalMergeTolerance: function(e) {
                                    te = e
                                },
                                getPlaybackIntervalMergeTolerance: function() {
                                    return te
                                },
                                setInternalLabel: function(e, t) {
                                    a[e] = t
                                },
                                getInternalLabel: function(e) {
                                    return a[e]
                                },
                                hasInternalLabel: function(e) {
                                    return null != a[e]
                                },
                                setLabels: function(e) {
                                    e && t.extend(s, e)
                                },
                                getLabels: function() {
                                    return s
                                },
                                setLabel: function(e, t) {
                                    s[e] = t
                                },
                                getLabel: function(e) {
                                    return s[e]
                                },
                                hasLabel: function(e) {
                                    return e in s
                                },
                                getClipNumber: function() {
                                    return parseInt(ee.getInternalLabel("ns_st_cn"))
                                },
                                setClipNumber: function(e) {
                                    ee.setInternalLabel("ns_st_cn", e + "")
                                },
                                getPartNumber: function() {
                                    return ee.hasLabel("ns_st_pn") ? parseInt(ee.getLabel("ns_st_pn")) : parseInt(ee.getInternalLabel("ns_st_pn"))
                                },
                                createLabels: function(e, n) {
                                    var i = e || {}
                                      , o = t.isEmpty(i.ns_st_pt) ? ee.getPlaybackTime() : parseInt(i.ns_st_pt);
                                    i.ns_st_pt = o + (isNaN(d) ? 0 : n - d) + "",
                                    i.ns_st_dpt = o + (isNaN(d) ? 0 : n - d) - p + "",
                                    i.ns_st_ipt = o + (isNaN(d) ? 0 : n - d) - h + "";
                                    var u = t.isEmpty(i.ns_st_et) ? ee.getElapsedTime() : parseInt(i.ns_st_et);
                                    i.ns_st_et = u + (isNaN(m) ? 0 : n - m) + "",
                                    i.ns_st_det = u + (isNaN(m) ? 0 : n - m) - y + "";
                                    var l = t.isEmpty(i.ns_st_bt) ? ee.getBufferingTime() : parseInt(i.ns_st_bt);
                                    i.ns_st_bt = l + "",
                                    i.ns_st_dbt = l + (isNaN(j) ? 0 : n - j) - L + "";
                                    for (var c, f = parseInt(i.ns_st_po), v = t.addNewPlaybackInterval(t.cloneObject(ee.getSegmentPlaybackIntervals()), $ < 0 ? f : A, $ < 0 ? A : f, te), g = t.addNewPlaybackInterval(t.cloneObject(ee.getAssetPlaybackIntervals()), $ < 0 ? f : A, $ < 0 ? A : f, te), _ = 0, b = 0, S = 0; S < v.length; S++)
                                        c = Math.abs(v[S].end - v[S].start),
                                        _ += c,
                                        c > b && (b = c);
                                    var w = 0
                                      , O = 0;
                                    for (S = 0,
                                    c; S < g.length; S++)
                                        c = Math.abs(g[S].end - g[S].start),
                                        w += c,
                                        c > O && (O = c);
                                    i.ns_st_upc = _ + "",
                                    i.ns_st_dupc = _ - T + "",
                                    i.ns_st_iupc = _ - k + "",
                                    _ > k ? i.ns_st_iupc = _ - k + "" : i.ns_st_iupc = "0",
                                    i.ns_st_lpc = b + "",
                                    i.ns_st_dlpc = b - E + "",
                                    i.ns_st_upa = w + "",
                                    i.ns_st_dupa = w - P + "",
                                    w > I ? i.ns_st_iupa = w - I + "" : i.ns_st_iupa = "0",
                                    i.ns_st_lpa = O + "",
                                    i.ns_st_dlpa = O - C + "";
                                    var D = t.isEmpty(i.ns_st_pc) ? ee.getPauses() : parseInt(i.ns_st_pc);
                                    i.ns_st_pc = D + "",
                                    i.ns_st_dpc = D - G + "";
                                    var N = t.isEmpty(i.ns_st_skc) ? ee.getSeeks() : parseInt(i.ns_st_skc);
                                    i.ns_st_skc = N + "",
                                    i.ns_st_dskc = N - K + "";
                                    var R = t.isEmpty(i.ns_st_bc) ? ee.getBuffers() : parseInt(i.ns_st_bc);
                                    i.ns_st_bc = R + "",
                                    i.ns_st_dbc = R - x + "";
                                    var U = t.isEmpty(i.ns_st_skt) ? ee.getSeekingTime() : parseInt(i.ns_st_skt);
                                    i.ns_st_skt = U + "",
                                    i.ns_st_dskt = U - M + "";
                                    var B = t.isEmpty(i.ns_st_ska) ? ee.getSeekingAmount() : parseInt(i.ns_st_ska);
                                    return i.ns_st_ska = B + "",
                                    i.ns_st_dska = B - V + "",
                                    r && (i.ns_st_spc = z + "",
                                    i.ns_st_apc = Y + "",
                                    i.ns_st_sq = X + "",
                                    i.ns_st_asq = Q + ""),
                                    r || 0 != Z ? i.ns_st_sc = Z + "" : i.ns_st_sc = "1",
                                    i.ns_st_rt = $ + "",
                                    t.extend(i, a, s),
                                    i
                                },
                                updateDeltaLabels: function(e) {
                                    p = parseInt(e.ns_st_pt),
                                    y = parseInt(e.ns_st_et),
                                    L = parseInt(e.ns_st_bt),
                                    T = parseInt(e.ns_st_upc),
                                    E = parseInt(e.ns_st_lpc),
                                    P = parseInt(e.ns_st_upa),
                                    C = parseInt(e.ns_st_lpa),
                                    G = parseInt(e.ns_st_pc),
                                    K = parseInt(e.ns_st_skc),
                                    x = parseInt(e.ns_st_bc),
                                    M = parseInt(e.ns_st_skt),
                                    V = parseInt(e.ns_st_ska),
                                    ee.setSeekingDirection(0)
                                },
                                updateIndependentLabels: function(e) {
                                    h = parseInt(e.ns_st_pt),
                                    k = parseInt(e.ns_st_upc),
                                    I = parseInt(e.ns_st_upa)
                                },
                                getVideoTrack: function() {
                                    return ee.getInternalLabel("ns_st_vt")
                                },
                                setVideoTrack: function(e) {
                                    ee.setInternalLabel("ns_st_vt", e + "")
                                },
                                getAudioTrack: function() {
                                    return ee.getInternalLabel("ns_st_at")
                                },
                                setAudioTrack: function(e) {
                                    ee.setInternalLabel("ns_st_at", e + "")
                                },
                                getSubtitleTrack: function() {
                                    return ee.getInternalLabel("ns_st_tt")
                                },
                                setSubtitleTrack: function(e) {
                                    ee.setInternalLabel("ns_st_tt", e + "")
                                },
                                getCDN: function() {
                                    return ee.getInternalLabel("ns_st_cdn")
                                },
                                setCDN: function(e) {
                                    ee.setInternalLabel("ns_st_cdn", e + "")
                                },
                                getSegmentPlaybackIntervals: function() {
                                    return b
                                },
                                setAssetPlaybackIntervals: function(e) {
                                    b = e
                                },
                                getAssetPlaybackIntervals: function() {
                                    return S
                                },
                                incrementPauses: function() {
                                    H++
                                },
                                incrementSeeks: function() {
                                    W++
                                },
                                incrementPlayCounter: function() {
                                    X++
                                },
                                getPlayCounter: function() {
                                    return X
                                },
                                getBufferingTime: function() {
                                    return w
                                },
                                setBufferingTime: function(e) {
                                    w = e
                                },
                                addBufferingTime: function(e) {
                                    if (!isNaN(j)) {
                                        var t = ee.getBufferingTime();
                                        t += e - j,
                                        ee.setBufferingTime(t),
                                        j = NaN
                                    }
                                },
                                setPlaybackStartPosition: function(e) {
                                    A = parseInt(e)
                                },
                                getPlaybackStartPosition: function() {
                                    return A
                                },
                                addInterval: function(e) {
                                    isNaN(A) || isNaN(e) || (b = t.addNewPlaybackInterval(b, $ < 0 ? e : A, $ < 0 ? A : e, te),
                                    S = t.addNewPlaybackInterval(S, $ < 0 ? e : A, $ < 0 ? A : e, te),
                                    A = NaN)
                                },
                                getElapsedTime: function() {
                                    return g
                                },
                                setElapsedTime: function(e) {
                                    g = e
                                },
                                addElapsedTime: function(e) {
                                    if (!isNaN(m)) {
                                        var t = ee.getElapsedTime();
                                        t += e - m,
                                        ee.setElapsedTime(t),
                                        m = NaN
                                    }
                                },
                                getElapsedTimestamp: function() {
                                    return m
                                },
                                setElapsedTimestamp: function(e) {
                                    m = e
                                },
                                addPlaybackTime: function(e) {
                                    if (!isNaN(d)) {
                                        var t = ee.getPlaybackTime();
                                        t += e - d,
                                        ee.setPlaybackTime(t),
                                        d = NaN
                                    }
                                },
                                getPlaybackTime: function() {
                                    return l
                                },
                                getExpectedPlaybackPosition: function(e) {
                                    return isNaN(d) ? v : v + Math.floor((e - d) * $ / 100)
                                },
                                setPlaybackTimeOffset: function(e) {
                                    v = e
                                },
                                getPlaybackTimeOffset: function() {
                                    return v
                                },
                                setPlaybackTime: function(e) {
                                    l = e
                                },
                                getPlaybackTimestamp: function() {
                                    return d
                                },
                                setPlaybackTimestamp: function(e) {
                                    d = e
                                },
                                setPreviousPlaybackTime: function(e) {
                                    p = e
                                },
                                setPreviousPlaybackTimestamp: function(e) {
                                    f = e
                                },
                                getBufferingTimestamp: function() {
                                    return j
                                },
                                setBufferingTimestamp: function(e) {
                                    j = e
                                },
                                getPauses: function() {
                                    return H
                                },
                                setPauses: function(e) {
                                    H = e
                                },
                                getSeeks: function() {
                                    return W
                                },
                                setSeeks: function(e) {
                                    W = e
                                },
                                setSeeking: function(e) {
                                    D = e
                                },
                                isSeeking: function() {
                                    return D
                                },
                                setCollectingSeekingTime: function(e) {
                                    B = e
                                },
                                isCollectingSeekingTime: function() {
                                    return B
                                },
                                setAssetStarted: function(e) {
                                    i = e
                                },
                                isAssetStarted: function() {
                                    return i
                                },
                                setPlaybackStarted: function(e) {
                                    r = e
                                },
                                isPlaybackStarted: function() {
                                    return r
                                },
                                setSeekingTimestamp: function(e) {
                                    N = e
                                },
                                getSeekingTimestamp: function() {
                                    return N
                                },
                                addSeekingTime: function(e) {
                                    if (!isNaN(N)) {
                                        var t = ee.getSeekingTime();
                                        t += e - N,
                                        ee.setSeekingTime(t),
                                        N = NaN
                                    }
                                },
                                getSeekingTime: function() {
                                    return R
                                },
                                setSeekingTime: function(e) {
                                    R = e
                                },
                                setSeekingTimeBeforeEnd: function(e) {
                                    q = e
                                },
                                getSeekingTimeBeforeEnd: function() {
                                    return q
                                },
                                setSeekStartPosition: function(e) {
                                    U = e
                                },
                                getSeekStartPosition: function() {
                                    return U
                                },
                                setSeekingAmount: function(e) {
                                    F = e
                                },
                                getSeekingAmount: function() {
                                    return F
                                },
                                addSeekingAmount: function(e) {
                                    var t = ee.getSeekingAmount();
                                    t += Math.abs(e - U),
                                    ee.setSeekingAmount(t);
                                    var n;
                                    U == e ? n = 0 : U > e ? n = -1 : U < e && (n = 1),
                                    ee.setSeekingDirection(n),
                                    U = 0
                                },
                                getSeekingDirection: function() {
                                    return parseInt(ee.getInternalLabel("ns_st_skd"))
                                },
                                setSeekingDirection: function(e) {
                                    ee.setInternalLabel("ns_st_skd", e + "")
                                },
                                resetAssetLifecycleLabels: function() {
                                    l = 0,
                                    p = 0,
                                    h = 0,
                                    w = 0,
                                    L = 0,
                                    O = 0,
                                    x = 0,
                                    H = 0,
                                    G = 0,
                                    X = 0,
                                    S = [],
                                    P = 0,
                                    I = 0,
                                    C = 0,
                                    g = 0,
                                    y = 0,
                                    R = 0,
                                    M = 0,
                                    F = 0,
                                    V = 0,
                                    W = 0,
                                    K = 0
                                },
                                incrementSegmentPlaybackCounter: function() {
                                    z++
                                },
                                incrementAssetLoadCounter: function() {
                                    Z++
                                },
                                incrementAssetPlaybackCounter: function() {
                                    Y++
                                },
                                getPreviousUniquePlaybackInterval: function() {
                                    return T
                                },
                                setPreviousUniquePlaybackInterval: function(e) {
                                    T = e
                                },
                                getPreviousEventIndependentUniquePlaybackInterval: function() {
                                    return k
                                },
                                setPreviousEventIndependentUniquePlaybackInterval: function(e) {
                                    k = e
                                },
                                setPreviousLongestPlaybackInterval: function(e) {
                                    E = e
                                },
                                getPreviousLongestPlaybackInterval: function() {
                                    return E
                                },
                                resetAssetPlaybackIntervals: function() {
                                    S = [],
                                    P = 0,
                                    I = 0,
                                    C = 0
                                },
                                setSegmentPlaybackCounter: function(e) {
                                    z = e
                                },
                                setAssetLoadCounter: function(e) {
                                    Z = e
                                },
                                setAssetPlaybackCounter: function(e) {
                                    Y = e
                                },
                                setLowestPartNumberPlayed: function(e) {
                                    _ = e
                                },
                                getSegmentPlaybackCounter: function() {
                                    return z
                                },
                                getAssetLoadCounter: function() {
                                    return Z
                                },
                                getAssetPlaybackCounter: function() {
                                    return Y
                                },
                                getLowestPartNumberPlayed: function() {
                                    return _
                                },
                                getBuffers: function() {
                                    return O
                                },
                                incrementBufferCount: function() {
                                    O++
                                },
                                getPreviousBufferingTime: function() {
                                    return L
                                },
                                setPlaySequenceCounter: function(e) {
                                    Q = e
                                },
                                incrementPlaySequenceCounter: function() {
                                    Q++
                                },
                                getPlaySequenceCounter: function() {
                                    return Q
                                },
                                isPlaybackSessionLooping: function() {
                                    return J
                                },
                                setPlaybackSessionLooping: function(e) {
                                    J = e
                                },
                                enableAutoCalculatePositions: function(e) {
                                    u = !!e
                                },
                                isAutoCalculatePositionsEnabled: function() {
                                    return u
                                },
                                getPlaybackRate: function() {
                                    return $
                                },
                                setPlaybackRate: function(e) {
                                    $ = e
                                }
                            }),
                            e()
                        }
                        return e.resetAsset = function(e, t, n) {
                            for (var i = e.getLabels(), r = {}, a = 0; n && a < n.length; ++a)
                                i.hasOwnProperty(n[a]) && (r[n[a]] = i[n[a]]);
                            t.setLabels(r),
                            t.setPlaybackIntervalMergeTolerance(e.getPlaybackIntervalMergeTolerance())
                        }
                        ,
                        e
                    }()
                      , p = function() {
                        function e(e) {
                            function n() {
                                i = new f,
                                o = {},
                                o.ns_st_id = +new Date + "",
                                d = {},
                                r = NaN,
                                a = 0,
                                s = NaN,
                                h = {},
                                v = 0,
                                p = !1,
                                g = !1,
                                m = 0,
                                _ = 0,
                                y = 0,
                                b = 1,
                                S = 0,
                                A = []
                            }
                            var i, r, a, s, o, d, p, h, v, g, m, y, _, b, S, A, T = this;
                            t.extend(this, {
                                resetAsset: function() {
                                    var e = i;
                                    i = new f,
                                    f.resetAsset(e, i)
                                },
                                hashExists: function(e) {
                                    return null != h[e]
                                },
                                storeHash: function(e) {
                                    h[e] = {}
                                },
                                removeHash: function(e) {
                                    delete h[e]
                                },
                                storeAssetPlaybackCounters: function() {
                                    for (var e in h)
                                        if (h.hasOwnProperty(e) && h[e].clipNumber === i.getClipNumber()) {
                                            t.extend(h[e], {
                                                segmentPlaybackCounter: i.getSegmentPlaybackCounter(),
                                                assetLoadCounter: i.getAssetLoadCounter(),
                                                assetPlaybackCounter: i.getAssetPlaybackCounter(),
                                                lowestPartNumberPlayed: i.getLowestPartNumberPlayed(),
                                                seeking: i.isSeeking(),
                                                seekingTimeBeforeEnd: i.getSeekingTimeBeforeEnd(),
                                                seekingStartPosition: i.getSeekStartPosition(),
                                                segmentPlaybackIntervals: i.getSegmentPlaybackIntervals(),
                                                videoTrack: i.getVideoTrack(),
                                                audioTrack: i.getAudioTrack(),
                                                subtitleTrack: i.getSubtitleTrack(),
                                                cdn: i.getCDN(),
                                                playSequenceCounter: i.getPlaySequenceCounter(),
                                                previousUniquePlaybackInterval: i.getPreviousUniquePlaybackInterval(),
                                                previousEventIndependentUniquePlaybackInterval: i.getPreviousEventIndependentUniquePlaybackInterval(),
                                                previousLongestPlaybackInterval: i.getPreviousLongestPlaybackInterval()
                                            });
                                            break
                                        }
                                },
                                getStoredAssetRegisters: function(e) {
                                    return h[e]
                                },
                                getClipNumber: function(e) {
                                    return h[e].clipNumber
                                },
                                getMaxClipNumber: function() {
                                    return v
                                },
                                storeClipNumber: function(e, t) {
                                    h[e].clipNumber = t,
                                    t > v && (v = t)
                                },
                                setLabels: function(e) {
                                    null != e && t.extend(d, e)
                                },
                                getLabels: function() {
                                    return d
                                },
                                setLabel: function(e, t) {
                                    var n = {};
                                    n[e] = t,
                                    T.setLabels(n)
                                },
                                getLabel: function(e) {
                                    return d[e]
                                },
                                getAsset: function() {
                                    return i
                                },
                                addInternalErrorFlag: function(e) {
                                    for (var t = 0; t < A.length; ++t)
                                        if (A[t] == e)
                                            return;
                                    A.push(e)
                                },
                                createLabels: function(n, r) {
                                    var a = n || {}
                                      , u = t.isEmpty(a.ns_st_pa) ? T.getPlaybackTime() : parseInt(a.ns_st_pa);
                                    return a.ns_st_pa = u + (isNaN(s) ? 0 : r - s) + "",
                                    a.ns_st_pp = _ + "",
                                    a.ns_st_sp = b + "",
                                    a.ns_st_bp = S + "",
                                    g || (a.ns_st_pb = null != a.ns_st_pb ? a.ns_st_pb : "1"),
                                    i.isPlaybackStarted() && (a.ns_st_ppc = m + "",
                                    a.ns_st_psq = y + ""),
                                    A.length > 0 && (a.ns_st_ie = (a.ns_st_ie ? a.ns_st_ie + ";" : "") + A.join(";")),
                                    t.extend(a, o, d),
                                    e.getPlaybackSession().getAsset().createLabels(a, r),
                                    a
                                },
                                incrementPlayCounter: function() {
                                    b++
                                },
                                incrementPauses: function() {
                                    _++
                                },
                                addPlaybackTime: function(e) {
                                    if (!isNaN(s)) {
                                        var t = T.getPlaybackTime();
                                        t += e - s,
                                        T.setPlaybackTime(t),
                                        s = NaN
                                    }
                                },
                                addBufferingTime: function(e) {
                                    if (!isNaN(r)) {
                                        var t = T.getBufferingTime();
                                        t += e - r,
                                        T.setBufferingTime(t),
                                        r = NaN
                                    }
                                },
                                getBufferingTime: function() {
                                    return S
                                },
                                setBufferingTime: function(e) {
                                    S = e
                                },
                                getPlaybackTime: function() {
                                    return a
                                },
                                setBufferingTimestamp: function(e) {
                                    r = e
                                },
                                getBufferingTimestamp: function() {
                                    return r
                                },
                                setPlaybackTime: function(e) {
                                    a = e
                                },
                                setPlaybackTimestamp: function(e) {
                                    s = e
                                },
                                getPlaybackTimestamp: function() {
                                    return s
                                },
                                getPauses: function() {
                                    return _
                                },
                                setPauses: function(e) {
                                    _ = e
                                },
                                isPlaybackSessionStarted: function() {
                                    return p
                                },
                                setPlaybackSessionStarted: function(e) {
                                    p = e
                                },
                                getPlaybackCounter: function() {
                                    return m
                                },
                                incrementPlaybackCounter: function() {
                                    m++
                                },
                                setFirstEventSent: function(e) {
                                    g = e
                                },
                                setPlaySequenceCounter: function(e) {
                                    y = e
                                },
                                incrementPlaySequenceCounter: function() {
                                    y++
                                },
                                getPlaybackSessionID: function() {
                                    return o.ns_st_id
                                },
                                setAsset: function(n, i) {
                                    e.getLogging().apiCall("setAsset", n, i),
                                    n = t.jsonObjectToStringDictionary(n);
                                    var r = e.getStateMachine().getCurrentState();
                                    if (r != l.IDLE) {
                                        e.getLogging().infoLog("Ending the current Clip. It was in state:", t.stateToString(r));
                                        var a = {};
                                        e.getStaCore().newEvent(u.END, t.fixEventTime(a), a)
                                    }
                                    var s = ""
                                      , o = 0;
                                    if (null != n.ns_st_cn)
                                        s = n.ns_st_cn;
                                    else
                                        for (var d = 0; d < c.STANDARD_METADATA_LABELS.length; d++)
                                            n[c.STANDARD_METADATA_LABELS[d]] && (s += c.STANDARD_METADATA_LABELS[d] + ":" + n[c.STANDARD_METADATA_LABELS[d]] + ";");
                                    var f = T
                                      , p = f.getAsset();
                                    p.isAssetStarted() ? (f.hashExists(p.getHash()) || (f.storeHash(p.getHash()),
                                    f.storeClipNumber(p.getHash(), p.getClipNumber())),
                                    f.storeAssetPlaybackCounters(),
                                    o = f.hashExists(s) ? f.getClipNumber(s) : t.exists(n.ns_st_cn) ? parseInt(n.ns_st_cn) : f.getMaxClipNumber() + 1) : o = f.hashExists(s) ? f.getClipNumber(s) : p.getClipNumber(),
                                    f.resetAsset(),
                                    p = f.getAsset(),
                                    p.setHash(s),
                                    p.setClipNumber(o),
                                    p.setLabels(n);
                                    var h = f.getStoredAssetRegisters(s);
                                    h && (p.setAssetStarted(!0),
                                    p.setSegmentPlaybackCounter(h.segmentPlaybackCounter),
                                    p.setAssetLoadCounter(h.assetLoadCounter),
                                    p.setAssetPlaybackCounter(h.assetPlaybackCounter),
                                    p.setLowestPartNumberPlayed(h.lowestPartNumberPlayed),
                                    p.setSeeking(h.seeking),
                                    p.setSeekingTimeBeforeEnd(h.seekingTimeBeforeEnd),
                                    p.setSeekStartPosition(h.seekingStartPosition),
                                    p.setAssetPlaybackIntervals(h.segmentPlaybackIntervals),
                                    h.videoTrack && p.setVideoTrack(h.videoTrack),
                                    h.audioTrack && p.setAudioTrack(h.audioTrack),
                                    h.subtitleTrack && p.setSubtitleTrack(h.subtitleTrack),
                                    h.cdn && p.setCDN(h.cdn),
                                    p.setPlaySequenceCounter(h.playSequenceCounter),
                                    p.setPreviousUniquePlaybackInterval(h.previousUniquePlaybackInterval),
                                    p.setPreviousEventIndependentUniquePlaybackInterval(h.previousEventIndependentUniquePlaybackInterval),
                                    p.setPreviousLongestPlaybackInterval(h.previousLongestPlaybackInterval)),
                                    p.incrementAssetLoadCounter(),
                                    p.isAssetStarted() && i && f.incrementPlayCounter(),
                                    i && (f.setPlaySequenceCounter(0),
                                    p.setPlaybackSessionLooping(!0)),
                                    !t.exists(n.ns_st_tp) && t.exists(n.ns_st_ad) && t.isNotEmpty(n.ns_st_ad) && "0" !== n.ns_st_ad && p.setInternalLabel("ns_st_tp", "1")
                                }
                            }),
                            n()
                        }
                        return e.resetPlaybackSession = function(e, t, n) {
                            for (var i = t.getAsset(), r = t.getLabels(), a = {}, s = 0; n && s < n.length; s++)
                                r.hasOwnProperty(n[s]) && (a[n[s]] = r[n[s]]);
                            e.getPlaybackSession().setLabels(a),
                            f.resetAsset(i, e.getPlaybackSession().getAsset(), n)
                        }
                        ,
                        e
                    }()
                      , h = function() {
                        return function(e) {
                            function n() {
                                r = 1
                            }
                            function i(n) {
                                a = t.extend({}, n);
                                var i = e.getStaCore().getLiveEndpointURL();
                                if (e.getAppCore()) {
                                    if (e.getStaCore().isProperlyInitialized()) {
                                        var r = e.getStaCore().getExports().et;
                                        if ("function" == typeof e.getAppCore().getMeasurementDispatcher) {
                                            var s = e.getAppCore().getMeasurementDispatcher();
                                            s.send(r.HIDDEN, n, i)
                                        } else {
                                            var o = e.getStaCore().getExports().am
                                              , u = o.newApplicationMeasurement(e.getAppCore(), r.HIDDEN, n, i);
                                            e.getAppCore().getQueue().offer(u)
                                        }
                                    }
                                } else
                                    i && e.getStaCore().getPlatformAPI().httpGet(e.getStaCore().prepareUrl(i, n))
                            }
                            var r, a, s = this, o = [];
                            t.extend(this, {
                                newEvent: function(e) {
                                    for (var t = 0; t < o.length; ++t)
                                        o[t](e.eventLabels);
                                    i(e.eventLabels),
                                    e.eventType != u.HEARTBEAT && s.incrementEventCounter()
                                },
                                addMeasurementListener: function(e) {
                                    "function" == typeof e && o.push(e)
                                },
                                removeMeasurementListener: function(e) {
                                    for (var t = NaN, n = 0; n < o.length; ++n)
                                        if (o[n] == e) {
                                            t = n;
                                            break
                                        }
                                    isNaN(t) || o.splice(t, 1)
                                },
                                getEventCounter: function() {
                                    return r
                                },
                                incrementEventCounter: function() {
                                    r++
                                },
                                setEventCounter: function(e) {
                                    r = e
                                },
                                getMeasurementSnapshot: function() {
                                    return a
                                }
                            }),
                            n()
                        }
                    }()
                      , v = function() {
                        return function(e) {
                            function n() {
                                s = 0,
                                o = 0
                            }
                            function i() {
                                o++;
                                var n = {}
                                  , i = t.fixEventTime(n);
                                n.ns_st_hc = e.getHeartbeat().getCount() + "";
                                var r = e.getStaCore().createLabels(u.HEARTBEAT, n, i);
                                e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                e.getEventManager().newEvent(r),
                                s = 0,
                                l.resume()
                            }
                            function r() {
                                null != a && (e.getStaCore().getPlatformAPI().clearTimeout(a),
                                a = null)
                            }
                            var a, s, o, l = this, d = c.DEFAULT_HEARTBEAT_INTERVAL;
                            t.extend(this, {
                                getCount: function() {
                                    return o
                                },
                                setIntervals: function(e) {
                                    d = e
                                },
                                getInterval: function(e) {
                                    var t = 0;
                                    if (null != d)
                                        for (var n = 0; n < d.length; n++) {
                                            var i = d[n]
                                              , r = i.playingtime;
                                            if (!r || e < r) {
                                                t = i.interval;
                                                break
                                            }
                                        }
                                    return t
                                },
                                getIntervals: function() {
                                    return d
                                },
                                resume: function() {
                                    r();
                                    var t = l.getInterval(e.getPlaybackSession().getAsset().getPlaybackTime() + (+new Date - e.getPlaybackSession().getAsset().getPlaybackTimestamp()));
                                    if (t > 0) {
                                        var n = s > 0 ? s : t;
                                        a = e.getStaCore().getPlatformAPI().setTimeout(i, n)
                                    }
                                    s = 0
                                },
                                pause: function() {
                                    r();
                                    var t = l.getInterval(e.getPlaybackSession().getAsset().getPlaybackTime() + (+new Date - e.getPlaybackSession().getAsset().getPlaybackTimestamp()));
                                    s = t - (e.getPlaybackSession().getAsset().getPlaybackTime() + (+new Date - e.getPlaybackSession().getAsset().getPlaybackTimestamp())) % t
                                }
                            }),
                            n()
                        }
                    }()
                      , g = function() {
                        return function(e) {
                            function n() {}
                            function i() {
                                var n = {}
                                  , i = t.fixEventTime(n);
                                e.getStaCore().newPseudoEvent(u.KEEPALIVE, i, n),
                                s.start()
                            }
                            function r() {
                                null != a && (e.getStaCore().getPlatformAPI().clearTimeout(a),
                                a = null)
                            }
                            var a, s = this, o = c.DEFAULT_KEEP_ALIVE_INTERVAL;
                            t.extend(s, {
                                start: function() {
                                    r(),
                                    a = e.getStaCore().getPlatformAPI().setTimeout(i, o)
                                },
                                stop: r,
                                setInterval: function(e) {
                                    o = e
                                },
                                getInterval: function() {
                                    return o
                                }
                            }),
                            n()
                        }
                    }()
                      , m = function() {
                        return function(e) {
                            function n() {
                                a = l.IDLE,
                                r = null,
                                i = NaN
                            }
                            var i, r, a, s = this;
                            t.extend(s, {
                                eventTypeToState: function(e) {
                                    if (a == l.IDLE) {
                                        if (e == u.PLAY)
                                            return l.PLAYING;
                                        if (e == u.SEEK_START)
                                            return l.SEEKING_BEFORE_PLAYBACK;
                                        if (e == u.BUFFER)
                                            return l.BUFFERING_BEFORE_PLAYBACK
                                    } else if (a == l.PLAYBACK_NOT_STARTED) {
                                        if (e == u.PLAY)
                                            return l.PLAYING;
                                        if (e == u.SEEK_START)
                                            return l.SEEKING_BEFORE_PLAYBACK;
                                        if (e == u.BUFFER)
                                            return l.BUFFERING_BEFORE_PLAYBACK;
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE
                                    } else if (a == l.PLAYING) {
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE;
                                        if (e == u.BUFFER)
                                            return l.BUFFERING_DURING_PLAYBACK;
                                        if (e == u.PAUSE)
                                            return l.PAUSED;
                                        if (e == u.SEEK_START)
                                            return l.SEEKING_DURING_PLAYBACK
                                    } else if (a == l.PAUSED) {
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE;
                                        if (e == u.BUFFER)
                                            return l.BUFFERING_DURING_PAUSE;
                                        if (e == u.PLAY)
                                            return l.PLAYING;
                                        if (e == u.SEEK_START)
                                            return l.SEEKING_DURING_PAUSE
                                    } else if (a == l.BUFFERING_BEFORE_PLAYBACK) {
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE;
                                        if (e == u.PAUSE || e == u.BUFFER_STOP)
                                            return l.PLAYBACK_NOT_STARTED;
                                        if (e == u.PLAY)
                                            return l.PLAYING;
                                        if (e == u.SEEK_START)
                                            return l.SEEKING_BEFORE_PLAYBACK
                                    } else if (a == l.BUFFERING_DURING_PLAYBACK) {
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE;
                                        if (e == u.PLAY || e == u.BUFFER_STOP)
                                            return l.PLAYING;
                                        if (e == u.PAUSE_ON_BUFFERING)
                                            return l.PAUSED_DURING_BUFFERING;
                                        if (e == u.SEEK_START)
                                            return l.SEEKING_DURING_BUFFERING;
                                        if (e == u.PAUSE)
                                            return l.PAUSED
                                    } else if (a == l.BUFFERING_DURING_SEEKING) {
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE;
                                        if (e == u.PLAY)
                                            return l.PLAYING;
                                        if (e == u.BUFFER_STOP)
                                            return l.SEEKING_DURING_PLAYBACK;
                                        if (e == u.PAUSE)
                                            return l.PAUSED
                                    } else if (a == l.BUFFERING_DURING_PAUSE) {
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE;
                                        if (e == u.PLAY)
                                            return l.PLAYING;
                                        if (e == u.SEEK_START)
                                            return l.SEEKING_DURING_PAUSE;
                                        if (e == u.BUFFER_STOP || e == u.PAUSE)
                                            return l.PAUSED
                                    } else if (a == l.SEEKING_BEFORE_PLAYBACK) {
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE;
                                        if (e == u.PAUSE)
                                            return l.PLAYBACK_NOT_STARTED;
                                        if (e == u.PLAY)
                                            return l.PLAYING;
                                        if (e == u.BUFFER)
                                            return l.BUFFERING_BEFORE_PLAYBACK
                                    } else if (a == l.SEEKING_DURING_PLAYBACK) {
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE;
                                        if (e == u.PLAY)
                                            return l.PLAYING;
                                        if (e == u.PAUSE)
                                            return l.PAUSED;
                                        if (e == u.BUFFER)
                                            return l.BUFFERING_DURING_SEEKING
                                    } else if (a == l.SEEKING_DURING_BUFFERING) {
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE;
                                        if (e == u.PLAY)
                                            return l.PLAYING;
                                        if (e == u.PAUSE || e == u.BUFFER_STOP)
                                            return l.PAUSED;
                                        if (e == u.BUFFER)
                                            return l.BUFFERING_DURING_SEEKING
                                    } else if (a == l.SEEKING_DURING_PAUSE) {
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE;
                                        if (e == u.PLAY)
                                            return l.PLAYING;
                                        if (e == u.PAUSE || e == u.BUFFER_STOP)
                                            return l.PAUSED;
                                        if (e == u.BUFFER)
                                            return l.BUFFERING_DURING_PAUSE
                                    } else if (a == l.PAUSED_DURING_BUFFERING) {
                                        if (e == u.END || e == u.AD_SKIP)
                                            return l.IDLE;
                                        if (e == u.SEEK_START)
                                            return l.SEEKING_DURING_BUFFERING;
                                        if (e == u.PAUSE)
                                            return l.PAUSED;
                                        if (e == u.PLAY || e == u.BUFFER_STOP)
                                            return l.PLAYING
                                    }
                                    return null
                                },
                                getCurrentState: function() {
                                    return a
                                },
                                newEvent: function(e, t) {
                                    var n = s.eventTypeToState(e);
                                    a != n && (r = a,
                                    a = n,
                                    i = t)
                                },
                                getPreviousState: function() {
                                    return r
                                },
                                getLastStateChangeTimestamp: function() {
                                    return i
                                }
                            }),
                            n()
                        }
                    }()
                      , y = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onSeekStartWhenPausedOrBufferingDuringPause: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().getAsset().isSeeking() ? e.getPlaybackSession().getAsset().isCollectingSeekingTime() || (e.getPlaybackSession().getAsset().setSeekingTimestamp(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0)) : e.getPlaybackSession().getAsset().incrementSeeks(),
                                    e.getPlaybackSession().getAsset().isSeeking() || (e.getPlaybackSession().getAsset().setSeeking(!0),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0),
                                    e.getPlaybackSession().getAsset().setSeekStartPosition(i),
                                    e.getPlaybackSession().getAsset().setSeekingTimestamp(t)),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
                                },
                                onBufferWhenSeekingOrPaused: function(t, n) {
                                    e.getPlaybackSession().setBufferingTimestamp(t),
                                    e.getPlaybackSession().getAsset().setBufferingTimestamp(t),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
                                },
                                onPlayWhenSeekingDuringBufferingOrSeekingDuringPause: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().getAsset().addSeekingAmount(i),
                                    e.getPlaybackSession().getAsset().setSeeking(!1)),
                                    e.getPlaybackSession().getAsset().incrementPlayCounter(),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start();
                                    var r = e.getStaCore().createLabels(u.PLAY, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                },
                                onBufferStopWhenBufferingDuringSeekingOrBufferingDuringPause: function(t, n) {
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
                                },
                                onPauseWhenSeekingDuringPlaybackOrSeekingDuringPause: function(t, n) {
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
                                },
                                onEndOrAdSkipWhenSeekingDuringBufferingOrSeekingDuringPause: function(n, i) {
                                    e.getStaCore().resetHeartbeat(),
                                    e.getKeepAlive().stop(),
                                    e.getPlaybackSession().getAsset().addElapsedTime(n);
                                    var r = e.getStaCore().createLabels(u.END, i, n);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().storeAssetPlaybackCounters(),
                                    e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!1),
                                    i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
                                },
                                onBufferStopWhenSeekingDuringBufferingOrSeekingDuringPause: function(t, n) {
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
                                },
                                onBufferStopOrOnPlayWhenBufferingDuringPlayback: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getStaCore().stopPausedOnBufferingTimer(),
                                    e.getPlaybackSession().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlayCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start()
                                }
                            })
                        }
                    }()
                      , _ = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onEndOrAdSkip: function(n, i) {
                                    e.getPlaybackSession().addBufferingTime(n),
                                    e.getPlaybackSession().getAsset().addBufferingTime(n),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()),
                                    e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!1),
                                    i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
                                },
                                onBufferStop: function(t, n) {
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1))
                                },
                                onSeekStart: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().isSeeking() ? e.getPlaybackSession().getAsset().isCollectingSeekingTime() || (e.getPlaybackSession().getAsset().setSeekingTimestamp(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0)) : e.getPlaybackSession().getAsset().incrementSeeks(),
                                    e.getPlaybackSession().getAsset().isSeeking() || (e.getPlaybackSession().getAsset().setSeeking(!0),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0),
                                    e.getPlaybackSession().getAsset().setSeekStartPosition(i),
                                    e.getPlaybackSession().getAsset().setSeekingTimestamp(t))
                                },
                                onPause: function(t, n) {
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1))
                                },
                                onPlay: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().getAsset().addSeekingAmount(i),
                                    e.getPlaybackSession().getAsset().setSeeking(!1)),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!0),
                                    (e.getPlaybackSession().getAsset().isPlaybackSessionLooping() || 0 == e.getPlaybackSession().getPlaybackCounter()) && (e.getPlaybackSession().incrementPlaybackCounter(),
                                    e.getPlaybackSession().getAsset().setPlaybackSessionLooping(!1)),
                                    e.getPlaybackSession().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!0),
                                    e.getPlaybackSession().getAsset().incrementSegmentPlaybackCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlayCounter(),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    (0 == e.getPlaybackSession().getAsset().getLowestPartNumberPlayed() || e.getPlaybackSession().getAsset().getPartNumber() <= e.getPlaybackSession().getAsset().getLowestPartNumberPlayed()) && (e.getPlaybackSession().getAsset().setLowestPartNumberPlayed(e.getPlaybackSession().getAsset().getPartNumber()),
                                    e.getPlaybackSession().getAsset().incrementAssetPlaybackCounter(),
                                    e.getPlaybackSession().getAsset().setPlaySequenceCounter(0),
                                    e.getPlaybackSession().getAsset().resetAssetPlaybackIntervals()),
                                    e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(),
                                    e.getStaCore().isLoadingTimeSent() || (n.ns_st_lt = e.getStaCore().getLoadTimeOffset() + t - e.getStaCore().getInitTimestamp() + "",
                                    e.getStaCore().setLoadingTimeSent(!0)),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start();
                                    var r = e.getStaCore().createLabels(u.PLAY, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                }
                            })
                        }
                    }()
                      , b = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onEndAndSkip: function(n, i) {
                                    e.getStaCore().resetHeartbeat(),
                                    e.getKeepAlive().stop(),
                                    e.getPlaybackSession().addBufferingTime(n),
                                    e.getPlaybackSession().getAsset().addBufferingTime(n),
                                    e.getPlaybackSession().getAsset().addElapsedTime(n);
                                    var r = e.getStaCore().createLabels(u.END, i, n);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().storeAssetPlaybackCounters(),
                                    e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!1),
                                    i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
                                },
                                onPause: function(t, n) {
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
                                },
                                onPlay: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlayCounter(),
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().getAsset().addSeekingAmount(i),
                                    e.getPlaybackSession().getAsset().setSeeking(!1)),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start();
                                    var r = e.getStaCore().createLabels(u.PLAY, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                }
                            })
                        }
                    }()
                      , S = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onPauseOnBuffering: function(t, n) {
                                    parseInt(n.ns_st_po);
                                    e.getStaCore().stopPausedOnBufferingTimer(),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().incrementPauses(),
                                    e.getPlaybackSession().getAsset().incrementPauses();
                                    var i = e.getStaCore().createLabels(u.PAUSE, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(i.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(i.eventLabels),
                                    e.getEventManager().newEvent(i),
                                    e.getPlaybackSession().setBufferingTimestamp(t),
                                    e.getPlaybackSession().getAsset().setBufferingTimestamp(t)
                                },
                                onEndOrAdSkip: function(n, i) {
                                    parseInt(i.ns_st_po);
                                    e.getStaCore().stopPausedOnBufferingTimer(),
                                    e.getStaCore().resetHeartbeat(),
                                    e.getKeepAlive().stop(),
                                    e.getPlaybackSession().addBufferingTime(n),
                                    e.getPlaybackSession().getAsset().addBufferingTime(n),
                                    e.getPlaybackSession().getAsset().addElapsedTime(n);
                                    var r = e.getStaCore().createLabels(u.END, i, n);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r),
                                    e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!1),
                                    i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
                                },
                                onSeekStart: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getStaCore().stopPausedOnBufferingTimer(),
                                    e.getHeartbeat().pause(),
                                    e.getKeepAlive().stop(),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().incrementSeeks(),
                                    e.getPlaybackSession().getAsset().setSeeking(!0),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0),
                                    e.getPlaybackSession().getAsset().setSeekStartPosition(i),
                                    e.getPlaybackSession().getAsset().setSeekingTimestamp(t),
                                    e.getPlaybackSession().incrementPauses(),
                                    e.getPlaybackSession().getAsset().incrementPauses();
                                    var r = e.getStaCore().createLabels(u.PAUSE, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                },
                                onPause: function(t, n) {
                                    parseInt(n.ns_st_po);
                                    e.getStaCore().stopPausedOnBufferingTimer(),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().incrementPauses(),
                                    e.getPlaybackSession().getAsset().incrementPauses();
                                    var i = e.getStaCore().createLabels(u.PAUSE, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(i.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(i.eventLabels),
                                    e.getEventManager().newEvent(i)
                                }
                            })
                        }
                    }()
                      , A = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onEndOrAdSkip: function(n, i) {
                                    e.getStaCore().resetHeartbeat(),
                                    e.getKeepAlive().stop(),
                                    e.getStaCore().stopPausedOnBufferingTimer(),
                                    e.getPlaybackSession().addBufferingTime(n),
                                    e.getPlaybackSession().getAsset().addBufferingTime(n),
                                    e.getPlaybackSession().getAsset().addElapsedTime(n);
                                    var r = e.getStaCore().createLabels(u.END, i, n);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().storeAssetPlaybackCounters(),
                                    e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!1),
                                    i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
                                },
                                onPause: function(t, n) {
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().incrementPauses(),
                                    e.getPlaybackSession().getAsset().incrementPauses(),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
                                },
                                onPlay: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlayCounter(),
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().getAsset().addSeekingAmount(i),
                                    e.getPlaybackSession().getAsset().setSeeking(!1)),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start();
                                    var r = e.getStaCore().createLabels(u.PLAY, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                }
                            })
                        }
                    }()
                      , T = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onBuffer: function(t, n) {
                                    e.getPlaybackSession().setPlaybackSessionStarted(!0),
                                    e.getPlaybackSession().getAsset().setAssetStarted(!0),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().setSeekingTime(e.getPlaybackSession().getAsset().getSeekingTimeBeforeEnd()),
                                    e.getPlaybackSession().setBufferingTimestamp(t),
                                    e.getPlaybackSession().getAsset().setBufferingTimestamp(t)
                                },
                                onSeekStart: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().setPlaybackSessionStarted(!0),
                                    e.getPlaybackSession().getAsset().setAssetStarted(!0),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().setSeekingTime(e.getPlaybackSession().getAsset().getSeekingTimeBeforeEnd()),
                                    e.getPlaybackSession().getAsset().incrementSeeks(),
                                    e.getPlaybackSession().getAsset().setSeeking(!0),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0),
                                    e.getPlaybackSession().getAsset().setSeekStartPosition(i),
                                    e.getPlaybackSession().getAsset().setSeekingTimestamp(t)
                                },
                                onPlay: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().setPlaybackSessionStarted(!0),
                                    e.getPlaybackSession().getAsset().setAssetStarted(!0),
                                    (e.getPlaybackSession().getAsset().isPlaybackSessionLooping() || 0 == e.getPlaybackSession().getPlaybackCounter()) && (e.getPlaybackSession().incrementPlaybackCounter(),
                                    e.getPlaybackSession().getAsset().setPlaybackSessionLooping(!1)),
                                    e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().setSeekingTime(e.getPlaybackSession().getAsset().getSeekingTimeBeforeEnd()),
                                    e.getPlaybackSession().getAsset().addSeekingAmount(i),
                                    e.getPlaybackSession().getAsset().setSeeking(!1)),
                                    e.getPlaybackSession().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!0),
                                    e.getPlaybackSession().getAsset().incrementSegmentPlaybackCounter(),
                                    (0 == e.getPlaybackSession().getAsset().getLowestPartNumberPlayed() || e.getPlaybackSession().getAsset().getPartNumber() <= e.getPlaybackSession().getAsset().getLowestPartNumberPlayed()) && (e.getPlaybackSession().getAsset().setLowestPartNumberPlayed(e.getPlaybackSession().getAsset().getPartNumber()),
                                    e.getPlaybackSession().getAsset().incrementAssetPlaybackCounter(),
                                    e.getPlaybackSession().getAsset().setPlaySequenceCounter(0),
                                    e.getPlaybackSession().getAsset().resetAssetPlaybackIntervals()),
                                    e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlayCounter(),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    e.getStaCore().isLoadingTimeSent() || (n.ns_st_lt = e.getStaCore().getLoadTimeOffset() + t - e.getStaCore().getInitTimestamp() + "",
                                    e.getStaCore().setLoadingTimeSent(!0)),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start();
                                    var r = e.getStaCore().createLabels(u.PLAY, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                }
                            })
                        }
                    }()
                      , k = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onEndOrAdSkip: function(n, i) {
                                    e.getStaCore().resetHeartbeat(),
                                    e.getKeepAlive().stop(),
                                    e.getPlaybackSession().getAsset().addElapsedTime(n);
                                    var r = e.getStaCore().createLabels(u.END, i, n);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()),
                                    e.getPlaybackSession().getAsset().setSeeking(!1)),
                                    e.getPlaybackSession().storeAssetPlaybackCounters(),
                                    e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!1),
                                    i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
                                },
                                onPlay: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().getAsset().addSeekingAmount(i),
                                    e.getPlaybackSession().getAsset().setSeeking(!1)),
                                    e.getPlaybackSession().getAsset().incrementPlayCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start();
                                    var r = e.getStaCore().createLabels(u.PLAY, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                }
                            })
                        }
                    }()
                      , E = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onEndOrAdSkip: function(n, i) {
                                    e.getStaCore().resetHeartbeat(),
                                    e.getKeepAlive().stop(),
                                    e.getPlaybackSession().addBufferingTime(n),
                                    e.getPlaybackSession().getAsset().addBufferingTime(n),
                                    e.getPlaybackSession().getAsset().addElapsedTime(n),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1));
                                    var r = e.getStaCore().createLabels(u.END, i, n);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r),
                                    e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!1),
                                    i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
                                },
                                onBufferStop: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start();
                                    var r = e.getStaCore().createLabels(u.PLAY, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                },
                                onSeekStart: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().isSeeking() ? e.getPlaybackSession().getAsset().isCollectingSeekingTime() || (e.getPlaybackSession().getAsset().setSeekingTimestamp(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0)) : e.getPlaybackSession().getAsset().incrementSeeks(),
                                    e.getPlaybackSession().getAsset().isSeeking() || (e.getPlaybackSession().getAsset().setSeeking(!0),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0),
                                    e.getPlaybackSession().getAsset().setSeekStartPosition(i),
                                    e.getPlaybackSession().getAsset().setSeekingTimestamp(t)),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
                                },
                                onPause: function(t, n) {
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
                                },
                                onPlay: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().addBufferingTime(t),
                                    e.getPlaybackSession().getAsset().incrementPlayCounter(),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start();
                                    var r = e.getStaCore().createLabels(u.PLAY, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                }
                            })
                        }
                    }()
                      , P = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onEndOrAdSkip: function(n, i) {
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().storeAssetPlaybackCounters(),
                                    e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!1),
                                    i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
                                },
                                onSeekStart: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().getAsset().isSeeking() ? e.getPlaybackSession().getAsset().setSeekingTimestamp(t) : e.getPlaybackSession().getAsset().incrementSeeks(),
                                    e.getPlaybackSession().getAsset().isSeeking() || (e.getPlaybackSession().getAsset().setSeeking(!0),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0),
                                    e.getPlaybackSession().getAsset().setSeekStartPosition(i),
                                    e.getPlaybackSession().getAsset().setSeekingTimestamp(t))
                                },
                                onPlay: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().addSeekingAmount(i),
                                    e.getPlaybackSession().getAsset().setSeeking(!1)),
                                    e.getPlaybackSession().setPlaybackSessionStarted(!0),
                                    (e.getPlaybackSession().getAsset().isPlaybackSessionLooping() || 0 == e.getPlaybackSession().getPlaybackCounter()) && (e.getPlaybackSession().incrementPlaybackCounter(),
                                    e.getPlaybackSession().getAsset().setPlaybackSessionLooping(!1)),
                                    e.getPlaybackSession().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!0),
                                    e.getPlaybackSession().getAsset().incrementSegmentPlaybackCounter(),
                                    (0 == e.getPlaybackSession().getAsset().getLowestPartNumberPlayed() || e.getPlaybackSession().getAsset().getPartNumber() <= e.getPlaybackSession().getAsset().getLowestPartNumberPlayed()) && (e.getPlaybackSession().getAsset().setLowestPartNumberPlayed(e.getPlaybackSession().getAsset().getPartNumber()),
                                    e.getPlaybackSession().getAsset().incrementAssetPlaybackCounter(),
                                    e.getPlaybackSession().getAsset().setPlaySequenceCounter(0),
                                    e.getPlaybackSession().getAsset().resetAssetPlaybackIntervals()),
                                    e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlayCounter(),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    e.getStaCore().isLoadingTimeSent() || (n.ns_st_lt = e.getStaCore().getLoadTimeOffset() + t - e.getStaCore().getInitTimestamp() + "",
                                    e.getStaCore().setLoadingTimeSent(!0)),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start();
                                    var r = e.getStaCore().createLabels(u.PLAY, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                },
                                onBuffer: function() {
                                    e.getPlaybackSession().setBufferingTimestamp(eventTimestamp),
                                    e.getPlaybackSession().getAsset().setBufferingTimestamp(eventTimestamp)
                                }
                            })
                        }
                    }()
                      , I = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onEndOrAdSkip: function(n, i) {
                                    var r = parseInt(i.ns_st_po);
                                    e.getStaCore().resetHeartbeat(),
                                    e.getKeepAlive().stop(),
                                    e.getPlaybackSession().addPlaybackTime(n),
                                    e.getPlaybackSession().getAsset().addPlaybackTime(n),
                                    e.getPlaybackSession().getAsset().addElapsedTime(n),
                                    e.getPlaybackSession().getAsset().addInterval(r);
                                    var a = e.getStaCore().createLabels(u.END, i, n);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(a.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(a.eventLabels),
                                    e.getEventManager().newEvent(a),
                                    e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!1),
                                    i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
                                },
                                onBuffer: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getHeartbeat().pause(),
                                    e.getKeepAlive().stop(),
                                    e.getPlaybackSession().addPlaybackTime(t),
                                    e.getPlaybackSession().getAsset().addPlaybackTime(t),
                                    e.getPlaybackSession().getAsset().addInterval(i),
                                    e.getStaCore().isPauseOnBufferingEnabled() && e.getStaCore().startPausedOnBufferingTimer(t, n),
                                    e.getPlaybackSession().getAsset().incrementBufferCount(),
                                    e.getPlaybackSession().setBufferingTimestamp(t),
                                    e.getPlaybackSession().getAsset().setBufferingTimestamp(t),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
                                },
                                onSeekStart: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getHeartbeat().pause(),
                                    e.getKeepAlive().stop(),
                                    e.getPlaybackSession().addPlaybackTime(t),
                                    e.getPlaybackSession().getAsset().addPlaybackTime(t),
                                    e.getPlaybackSession().getAsset().addInterval(i),
                                    e.getPlaybackSession().getAsset().incrementSeeks(),
                                    e.getPlaybackSession().getAsset().setSeeking(!0),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0),
                                    e.getPlaybackSession().getAsset().setSeekStartPosition(i),
                                    e.getPlaybackSession().getAsset().setSeekingTimestamp(t),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().incrementPauses(),
                                    e.getPlaybackSession().getAsset().incrementPauses();
                                    var r = e.getStaCore().createLabels(u.PAUSE, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                },
                                onPause: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getHeartbeat().pause(),
                                    e.getKeepAlive().stop(),
                                    e.getPlaybackSession().addPlaybackTime(t),
                                    e.getPlaybackSession().getAsset().addPlaybackTime(t),
                                    e.getPlaybackSession().getAsset().addInterval(i),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().incrementPauses(),
                                    e.getPlaybackSession().getAsset().incrementPauses();
                                    var r = e.getStaCore().createLabels(u.PAUSE, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                }
                            })
                        }
                    }()
                      , C = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onEndOrAdSkip: function(n, i) {
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().storeAssetPlaybackCounters(),
                                    e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!1),
                                    i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
                                },
                                onPause: function(t, n) {
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1))
                                },
                                onPlay: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().getAsset().addSeekingAmount(i),
                                    e.getPlaybackSession().getAsset().setSeeking(!1)),
                                    (e.getPlaybackSession().getAsset().isPlaybackSessionLooping() || 0 == e.getPlaybackSession().getPlaybackCounter()) && (e.getPlaybackSession().incrementPlaybackCounter(),
                                    e.getPlaybackSession().getAsset().setPlaybackSessionLooping(!1)),
                                    e.getPlaybackSession().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlayCounter(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!0),
                                    e.getPlaybackSession().getAsset().incrementSegmentPlaybackCounter(),
                                    (0 == e.getPlaybackSession().getAsset().getLowestPartNumberPlayed() || e.getPlaybackSession().getAsset().getPartNumber() <= e.getPlaybackSession().getAsset().getLowestPartNumberPlayed()) && (e.getPlaybackSession().getAsset().setLowestPartNumberPlayed(e.getPlaybackSession().getAsset().getPartNumber()),
                                    e.getPlaybackSession().getAsset().incrementAssetPlaybackCounter(),
                                    e.getPlaybackSession().getAsset().setPlaySequenceCounter(0),
                                    e.getPlaybackSession().getAsset().resetAssetPlaybackIntervals()),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    e.getStaCore().isLoadingTimeSent() || (n.ns_st_lt = e.getStaCore().getLoadTimeOffset() + t - e.getStaCore().getInitTimestamp() + "",
                                    e.getStaCore().setLoadingTimeSent(!0)),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start();
                                    var r = e.getStaCore().createLabels(u.PLAY, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                }
                            })
                        }
                    }()
                      , w = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onPause: function(t, n) {
                                    e.getPlaybackSession().incrementPauses(),
                                    e.getPlaybackSession().getAsset().incrementPauses(),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
                                }
                            })
                        }
                    }()
                      , j = function() {
                        return function(e) {
                            var n = this;
                            t.extend(n, {
                                onEndOrAdSkip: function(n, i) {
                                    parseInt(i.ns_st_po);
                                    e.getStaCore().resetHeartbeat(),
                                    e.getKeepAlive().stop(),
                                    e.getPlaybackSession().getAsset().addElapsedTime(n);
                                    var r = e.getStaCore().createLabels(u.END, i, n);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r),
                                    e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().storeAssetPlaybackCounters(),
                                    e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(),
                                    e.getPlaybackSession().getAsset().setPlaybackStarted(!1),
                                    i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
                                },
                                onPlay: function(t, n) {
                                    var i = parseInt(n.ns_st_po);
                                    e.getPlaybackSession().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(),
                                    e.getPlaybackSession().getAsset().incrementPlayCounter(),
                                    e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t),
                                    e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)),
                                    e.getPlaybackSession().getAsset().addSeekingAmount(i),
                                    e.getPlaybackSession().getAsset().setSeeking(!1)),
                                    e.getPlaybackSession().getAsset().addElapsedTime(t),
                                    e.getPlaybackSession().getAsset().setElapsedTimestamp(t),
                                    e.getPlaybackSession().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackTimestamp(t),
                                    e.getPlaybackSession().getAsset().setPlaybackStartPosition(i),
                                    e.getStaCore().isLoadingTimeSent() || (n.ns_st_lt = e.getStaCore().getLoadTimeOffset() + t - e.getStaCore().getInitTimestamp() + "",
                                    e.getStaCore().setLoadingTimeSent(!0)),
                                    e.getHeartbeat().resume(),
                                    e.getKeepAlive().start();
                                    var r = e.getStaCore().createLabels(u.PLAY, n, t);
                                    e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels),
                                    e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels),
                                    e.getEventManager().newEvent(r)
                                }
                            })
                        }
                    }()
                      , L = function() {
                        return function(e) {
                            function i() {
                                if (L = new O(re),
                                t.getNamespace().comScore ? (ae = t.getNamespace().comScore.exports,
                                L.setAppCore(ae.c())) : L.setAppCore(null),
                                e.publisherId) {
                                    re.setLabel("c2", e.publisherId);
                                    var i = e.secure;
                                    !i && L.getAppCore() ? i = L.getAppCore().isSecure() : !i && t.isBrowser() && (i = t.isWebSecure());
                                    var r = (i ? "https://sb" : "http://b") + ".scorecardresearch.com/p?c1=2";
                                    re.setLiveEndpointURL(r)
                                }
                                e.liveEndpointURL && re.setLiveEndpointURL(e.liveEndpointURL),
                                L.setKeepAlive(new g(L)),
                                L.setHeartbeat(new v(L)),
                                L.setEventManager(new h(L)),
                                L.setStateMachine(new m),
                                L.setLogging(new n(c.LOG_NAMESPACE,e.debug)),
                                L.setPlaybackSession(new p(L)),
                                x = new T(L),
                                D = new k(L),
                                N = new P(L),
                                R = new I(L),
                                M = new _(L),
                                U = new S(L),
                                B = new A(L),
                                F = new b(L),
                                V = new E(L),
                                q = new C(L),
                                H = new w(L),
                                G = new j(L),
                                W = new y(L),
                                K = !1,
                                z = 0,
                                Y = +new Date,
                                Q = !0,
                                J = !1,
                                ee = [],
                                e.systemClockJumpDetection && re.enableSystemClockJumpsDetection(parseInt(e.systemClockJumpDetectionInterval))
                            }
                            function r(e) {
                                var t = L.getStateMachine().getCurrentState();
                                if (t == l.IDLE || t == l.PLAYBACK_NOT_STARTED || t == l.BUFFERING_BEFORE_PLAYBACK || t == l.SEEKING_BEFORE_PLAYBACK) {
                                    if (e == u.PLAY)
                                        return !0
                                } else if (t == l.PLAYING) {
                                    if (e == u.END || e == u.AD_SKIP || e == u.SEEK_START || e == u.PAUSE)
                                        return !0
                                } else if (t == l.PAUSED || t == l.BUFFERING_DURING_PAUSE || t == l.SEEKING_DURING_PLAYBACK || t == l.SEEKING_DURING_BUFFERING || t == l.SEEKING_DURING_PAUSE) {
                                    if (e == u.END || e == u.AD_SKIP || e == u.PLAY)
                                        return !0
                                } else if (t == l.BUFFERING_DURING_PLAYBACK) {
                                    if (e == u.PAUSE_ON_BUFFERING || e == u.END || e == u.AD_SKIP || e == u.SEEK_START || e == u.PAUSE || e == u.PLAY)
                                        return !0
                                } else if (t == l.BUFFERING_DURING_SEEKING) {
                                    if (e == u.END || e == u.AD_SKIP || e == u.PAUSE || e == u.PLAY)
                                        return !0
                                } else if (t == l.PAUSED_DURING_BUFFERING && (e == u.END || e == u.AD_SKIP || e == u.BUFFER_STOP || e == u.PLAY))
                                    return !0;
                                return !1
                            }
                            function a(e, t, n) {
                                var i = L.getStateMachine().getCurrentState();
                                e == u.AD_SKIP && !n.hasOwnProperty("ns_st_ui") && r(e) ? n.ns_st_ui = "skip" : e == u.SEEK_START && !n.hasOwnProperty("ns_st_ui") && r(e) && (n.ns_st_ui = "seek"),
                                i == l.IDLE ? e == u.BUFFER ? x.onBuffer(t, n) : e == u.SEEK_START ? x.onSeekStart(t, n) : e == u.PLAY && x.onPlay(t, n) : i == l.PLAYBACK_NOT_STARTED ? e == u.END || e == u.AD_SKIP ? N.onEndOrAdSkip(t, n) : e == u.SEEK_START ? N.onSeekStart(t, n) : e == u.PLAY ? N.onPlay(t, n) : e == u.BUFFER && N.onBuffer(t, n) : i == l.PLAYING ? e == u.END || e == u.AD_SKIP ? R.onEndOrAdSkip(t, n) : e == u.BUFFER ? R.onBuffer(t, n) : e == u.SEEK_START ? R.onSeekStart(t, n) : e == u.PAUSE && R.onPause(t, n) : i == l.PAUSED ? e == u.END || e == u.AD_SKIP ? D.onEndOrAdSkip(t, n) : e == u.PLAY ? D.onPlay(t, n) : e == u.BUFFER ? W.onBufferWhenSeekingOrPaused(t, n) : e == u.SEEK_START && W.onSeekStartWhenPausedOrBufferingDuringPause(t, n) : i == l.BUFFERING_BEFORE_PLAYBACK ? e == u.END || e == u.AD_SKIP ? M.onEndOrAdSkip(t, n) : e == u.BUFFER_STOP ? M.onBufferStop(t, n) : e == u.SEEK_START ? M.onSeekStart(t, n) : e == u.PAUSE ? M.onPause(t, n) : e == u.PLAY && M.onPlay(t, n) : i == l.BUFFERING_DURING_PLAYBACK ? e == u.PAUSE_ON_BUFFERING ? U.onPauseOnBuffering(t, n) : e == u.BUFFER_STOP ? W.onBufferStopOrOnPlayWhenBufferingDuringPlayback(t, n) : e == u.END || e == u.AD_SKIP ? U.onEndOrAdSkip(t, n) : e == u.SEEK_START ? U.onSeekStart(t, n) : e == u.PAUSE ? U.onPause(t, n) : e == u.PLAY && W.onBufferStopOrOnPlayWhenBufferingDuringPlayback(t, n) : i == l.BUFFERING_DURING_SEEKING ? e == u.END || e == u.AD_SKIP ? B.onEndOrAdSkip(t, n) : e == u.PAUSE ? B.onPause(t, n) : e == u.PLAY ? B.onPlay(t, n) : e == u.BUFFER_STOP && W.onBufferStopWhenBufferingDuringSeekingOrBufferingDuringPause(t, n) : i == l.BUFFERING_DURING_PAUSE ? e == u.END || e == u.AD_SKIP ? F.onEndAndSkip(t, n) : e == u.PAUSE ? F.onPause(t, n) : e == u.PLAY ? F.onPlay(t, n) : e == u.SEEK_START ? W.onSeekStartWhenPausedOrBufferingDuringPause(t, n) : e == u.BUFFER_STOP && W.onBufferStopWhenBufferingDuringSeekingOrBufferingDuringPause(t, n) : i == l.SEEKING_BEFORE_PLAYBACK ? e == u.END || e == u.AD_SKIP ? q.onEndOrAdSkip(t, n) : e == u.PAUSE ? q.onPause(t, n) : e == u.PLAY ? q.onPlay(t, n) : e == u.BUFFER && W.onBufferWhenSeekingOrPaused(t, n) : i == l.SEEKING_DURING_PLAYBACK ? e == u.END || e == u.AD_SKIP ? G.onEndOrAdSkip(t, n) : e == u.PLAY ? G.onPlay(t, n) : e == u.BUFFER ? W.onBufferWhenSeekingOrPaused(t, n) : e == u.PAUSE && W.onPauseWhenSeekingDuringPlaybackOrSeekingDuringPause(t, n) : i == l.SEEKING_DURING_BUFFERING ? e == u.PAUSE ? H.onPause(t, n) : e == u.BUFFER ? W.onBufferWhenSeekingOrPaused(t, n) : e == u.PLAY ? W.onPlayWhenSeekingDuringBufferingOrSeekingDuringPause(t, n) : e == u.END || e == u.AD_SKIP ? W.onEndOrAdSkipWhenSeekingDuringBufferingOrSeekingDuringPause(t, n) : e == u.BUFFER_STOP && W.onBufferStopWhenSeekingDuringBufferingOrSeekingDuringPause(t, n) : i == l.PAUSED_DURING_BUFFERING ? e == u.END || e == u.AD_SKIP ? V.onEndOrAdSkip(t, n) : e == u.BUFFER_STOP ? V.onBufferStop(t, n) : e == u.SEEK_START ? V.onSeekStart(t, n) : e == u.PAUSE ? V.onPause(t, n) : e == u.PLAY && V.onPlay(t, n) : i == l.SEEKING_DURING_PAUSE && (e == u.BUFFER ? W.onBufferWhenSeekingOrPaused(t, n) : e == u.PLAY ? W.onPlayWhenSeekingDuringBufferingOrSeekingDuringPause(t, n) : e == u.PAUSE ? W.onPauseWhenSeekingDuringPlaybackOrSeekingDuringPause(t, n) : e == u.END || e == u.AD_SKIP ? W.onEndOrAdSkipWhenSeekingDuringBufferingOrSeekingDuringPause(t, n) : e == u.BUFFER_STOP && W.onBufferStopWhenSeekingDuringBufferingOrSeekingDuringPause(t, n)),
                                r(e) && L.getPlaybackSession().setFirstEventSent(!0)
                            }
                            function f(e, n) {
                                for (var i, r = de.encodeURIComponent || escape, a = [], s = c.LABELS_ORDER, o = e.split("?"), u = o[0], l = o[1], d = l.split("&"), f = 0, p = d.length; f < p; f++) {
                                    var h = d[f].split("=")
                                      , v = unescape(h[0])
                                      , g = unescape(h[1]);
                                    v && (n[v] = g)
                                }
                                for (var m = {}, y = 0, _ = s.length; y < _; y++) {
                                    var b = s[y];
                                    if (n.hasOwnProperty(b)) {
                                        var S = n[b];
                                        "undefined" != typeof S && null != S && (m[b] = !0,
                                        a.push(r(b) + "=" + r(n[b])))
                                    }
                                }
                                for (var A in n)
                                    if (n.hasOwnProperty(A)) {
                                        if (m[A])
                                            continue;
                                        var T = n[A];
                                        "undefined" != typeof T && null != T && a.push(r(A) + "=" + r(n[A]))
                                    }
                                i = u + "?" + a.join("&"),
                                i = i + (i.indexOf("&c8=") < 0 ? "&c8=" + r(ce.title) : "") + (i.indexOf("&c7=") < 0 ? "&c7=" + r(ce.URL) : "") + (i.indexOf("&c9=") < 0 ? "&c9=" + r(ce.referrer) : "");
                                var k = t.browserAcceptsLargeURLs() ? c.URL_LENGTH_LIMIT : c.RESTRICTED_URL_LENGTH_LIMIT;
                                if (i.length > k && i.indexOf("&") > 0) {
                                    var E = i.substr(0, k - 8).lastIndexOf("&");
                                    i = (i.substring(0, E) + "&ns_cut=" + r(i.substring(E + 1))).substr(0, k)
                                }
                                return i
                            }
                            var L, x, D, N, R, M, U, B, F, V, q, H, G, W, K, z, Y, X, Q, Z, J, $, ee, te, ne, ie, re = this, ae = {}, se = c.DEFAULT_PAUSED_ON_BUFFERING_INTERVAL, oe = c.THROTTLING_DELAY, ue = {}, le = !1;
                            t.extend(re, {
                                getConfiguration: function() {
                                    return e || {}
                                },
                                enableSystemClockJumpsDetection: function(e) {
                                    (e < c.SYSTEM_CLOCK_JUMP_DETECTION_MINIMUM_INTERVAL || !e) && (e = c.SYSTEM_CLOCK_JUMP_DETECTION_DEFAULT_INTERVAL),
                                    t.onSystemClockJump(function(e) {
                                        ie = e,
                                        le = !0
                                    }, e)
                                },
                                createLabels: function(e, n, i) {
                                    var r = !1;
                                    if (e == u.HEARTBEAT) {
                                        var a = isNaN(X) ? Y : X;
                                        X = i,
                                        (i < a || le) && (r = !0,
                                        le = !1,
                                        i < a ? (L.getPlaybackSession().addInternalErrorFlag("1"),
                                        L.getLogging().infoLog("System clock jump detected", "to the far past")) : ie ? (L.getPlaybackSession().addInternalErrorFlag("3"),
                                        L.getLogging().infoLog("System clock jump detected", "to the future")) : (L.getPlaybackSession().addInternalErrorFlag("2"),
                                        L.getLogging().infoLog("System clock jump detected", "to the near past")),
                                        i = a)
                                    }
                                    var s = {};
                                    if ("undefined" != typeof document) {
                                        var o = document;
                                        s.c7 = o.URL,
                                        s.c8 = o.title,
                                        s.c9 = o.referrer
                                    }
                                    return s.ns_ts = +new Date + "",
                                    s.ns_st_ev = u.toString(e),
                                    s.ns_st_mp = c.DEFAULT_PLAYERNAME,
                                    s.ns_st_mv = c.STREAMINGANALYTICS_VERSION,
                                    s.ns_st_ub = "0",
                                    s.ns_st_br = "0",
                                    s.ns_st_pn = "1",
                                    s.ns_st_tp = "0",
                                    s.ns_st_it = d.toString(d.SINGLE_CLIP),
                                    s.ns_st_sv = c.STREAMINGANALYTICS_VERSION,
                                    s.ns_st_smv = c.MODEL_VERSION,
                                    s.ns_type = "hidden",
                                    s.ns_st_ec = L.getEventManager().getEventCounter() + "",
                                    s.ns_st_ki = L.getKeepAlive().getInterval() + "",
                                    L.getPlaybackSession().getAsset().isAutoCalculatePositionsEnabled() ? s.ns_st_po = L.getPlaybackSession().getAsset().getExpectedPlaybackPosition(i) + "" : s.ns_st_po = ne + "",
                                    ne = parseInt(s.ns_st_po),
                                    t.extend(s, re.getLabels()),
                                    L.getPlaybackSession().createLabels(s, i),
                                    t.extend(s, n),
                                    r && (L.getPlaybackSession().setPlaybackTimestamp(X - parseInt(s.ns_st_pt)),
                                    L.getPlaybackSession().getAsset().setPlaybackTimestamp(X - parseInt(s.ns_st_pt)),
                                    L.getPlaybackSession().getAsset().setElapsedTimestamp(X - parseInt(s.ns_st_et)),
                                    L.getStateMachine().getCurrentState() == l.BUFFERING_DURING_PLAYBACK && L.getPlaybackSession().getAsset().setBufferingTimestamp(X - parseInt(s.ns_st_bp))),
                                    {
                                        eventType: e,
                                        eventLabels: s
                                    }
                                },
                                newEvent: function(e, n, i, r) {
                                    re.stopDelayedTransitionTimer();
                                    var s = L.getStateMachine().getCurrentState()
                                      , o = L.getStateMachine().eventTypeToState(e);
                                    if (null == o || o == s)
                                        return void L.getLogging().infoLog("Ignored event:", u.toString(e), "during state", t.stateToString(s), i);
                                    if (re.isThrottlingEnabled() && (s == l.PLAYING || s == l.PAUSED) && (o == l.PLAYING || o == l.PAUSED) && !r) {
                                        L.getLogging().infoLog("Throttled event:", u.toString(e), "during state", t.stateToString(s), i, re.getThrottlingDelay(), "ms");
                                        var d = function(e, t, i) {
                                            return function() {
                                                re.newEvent(e, n, i, !0)
                                            }
                                        }(e, o, i);
                                        return void ($ = L.getPlatformAPI().setTimeout(d, re.getThrottlingDelay()))
                                    }
                                    var c = isNaN(X) ? Y : X;
                                    X = n;
                                    var f = !1;
                                    (n < c || le) && (f = !0,
                                    le = !1,
                                    n < c ? (L.getPlaybackSession().addInternalErrorFlag("1"),
                                    L.getLogging().infoLog("System clock jump detected", "to the far past")) : ie ? (L.getPlaybackSession().addInternalErrorFlag("3"),
                                    L.getLogging().infoLog("System clock jump detected", "to the future")) : (L.getPlaybackSession().addInternalErrorFlag("2"),
                                    L.getLogging().infoLog("System clock jump detected", "to the near past")),
                                    n = c),
                                    i.ns_st_po || (L.getPlaybackSession().getAsset().isAutoCalculatePositionsEnabled() ? L.getStateMachine().getCurrentState() == l.IDLE ? i.ns_st_po = "0" : i.ns_st_po = L.getPlaybackSession().getAsset().getExpectedPlaybackPosition(n) + "" : i.ns_st_po = ne + ""),
                                    ne = parseInt(i.ns_st_po),
                                    L.getPlaybackSession().getAsset().setPlaybackTimeOffset(parseInt(i.ns_st_po)),
                                    a(e, n, i);
                                    var p = 0;
                                    isNaN(L.getStateMachine().getLastStateChangeTimestamp()) || (p = n - L.getStateMachine().getLastStateChangeTimestamp()),
                                    L.getStateMachine().newEvent(e, n),
                                    f && (o != l.IDLE && o != l.PLAYBACK_NOT_STARTED && o != l.SEEKING_BEFORE_PLAYBACK && o != l.BUFFERING_BEFORE_PLAYBACK && L.getPlaybackSession().getAsset().setElapsedTimestamp(X),
                                    o != l.BUFFERING_BEFORE_PLAYBACK && o != l.BUFFERING_DURING_PAUSE && o != l.BUFFERING_DURING_PLAYBACK && o != l.BUFFERING_DURING_SEEKING && o != l.PAUSED_DURING_BUFFERING || (L.getPlaybackSession().setBufferingTimestamp(X),
                                    L.getPlaybackSession().getAsset().setBufferingTimestamp(X)),
                                    o != l.PLAYING && o != l.BUFFERING_DURING_PLAYBACK || (L.getPlaybackSession().setPlaybackTimestamp(X),
                                    L.getPlaybackSession().getAsset().setPlaybackTimestamp(X)),
                                    o != l.SEEKING_BEFORE_PLAYBACK && o != l.SEEKING_DURING_BUFFERING && o != l.SEEKING_DURING_PAUSE && o != l.SEEKING_DURING_PLAYBACK && o != l.BUFFERING_DURING_SEEKING || L.getPlaybackSession().getAsset().setSeekingTimestamp(X)),
                                    L.getLogging().log("Transition from", t.stateToString(s), "to", t.stateToString(o), "due to event:", u.toString(e));
                                    for (var h = 0, v = ee.length; h < v; h++)
                                        ee[h](s, o, i, p)
                                },
                                newPseudoEvent: function(e, n, i) {
                                    if ((e == u.LOAD || e == u.ENGAGE) && L.getStateMachine().getCurrentState() != l.IDLE)
                                        return void L.getLogging().infoLog("Ignored pseudo-event:", u.toString(e), "during state", t.stateToString(L.getStateMachine().getCurrentState()), i);
                                    e == u.ERROR && null == i.ns_st_er && (i.ns_st_er = o.UNKNOWN_VALUE),
                                    e == u.TRANSFER && null == i.ns_st_rp && (i.ns_st_rp = o.UNKNOWN_VALUE);
                                    var r, a, s, d, c = !0, f = !1;
                                    switch (e) {
                                    case u.BIT_RATE:
                                        r = "ns_st_br",
                                        a = "ns_st_pbr";
                                        break;
                                    case u.PLAYBACK_RATE:
                                        r = "ns_st_rt",
                                        a = "ns_st_prt";
                                        break;
                                    case u.VOLUME:
                                        r = "ns_st_vo",
                                        a = "ns_st_pvo";
                                        break;
                                    case u.WINDOW_STATE:
                                        r = "ns_st_ws",
                                        a = "ns_st_pws";
                                        break;
                                    case u.AUDIO:
                                        r = "ns_st_at",
                                        a = "ns_st_pat";
                                        break;
                                    case u.VIDEO:
                                        r = "ns_st_vt",
                                        a = "ns_st_pvt";
                                        break;
                                    case u.SUBS:
                                        r = "ns_st_tt",
                                        a = "ns_st_ptt";
                                        break;
                                    case u.CDN:
                                        r = "ns_st_cdn",
                                        a = "ns_st_pcdn";
                                        break;
                                    default:
                                        c = !1
                                    }
                                    if (c && r in i)
                                        switch (d = i[r],
                                        e) {
                                        case u.BIT_RATE:
                                        case u.VOLUME:
                                        case u.WINDOW_STATE:
                                            r in ue && (s = ue[r],
                                            i[a] = s,
                                            f = d == s + ""),
                                            ue[r] = i[r];
                                            break;
                                        case u.AUDIO:
                                        case u.VIDEO:
                                        case u.SUBS:
                                        case u.CDN:
                                            L.getPlaybackSession().getAsset().hasInternalLabel(r) && (s = L.getPlaybackSession().getAsset().getInternalLabel(r),
                                            i[a] = s,
                                            f = d == s + ""),
                                            L.getPlaybackSession().getAsset().setInternalLabel(r, i[r]);
                                            break;
                                        case u.PLAYBACK_RATE:
                                            s = L.getPlaybackSession().getAsset().getPlaybackRate(),
                                            i[a] = s + ""
                                        }
                                    if (c && L.getStateMachine().getCurrentState() != l.PLAYING && L.getStateMachine().getCurrentState() != l.BUFFERING_DURING_PLAYBACK || c && f)
                                        return e == u.PLAYBACK_RATE && L.getPlaybackSession().getAsset().setPlaybackRate(parseInt(i.ns_st_rt)),
                                        void L.getLogging().infoLog("No measurement send for the pseudo-event:", u.toString(e), "during state", t.stateToString(L.getStateMachine().getCurrentState()), i);
                                    var p = isNaN(X) ? Y : X;
                                    X = n;
                                    var h = !1;
                                    (n < p || le) && (h = !0,
                                    le = !1,
                                    n < p ? (L.getPlaybackSession().addInternalErrorFlag("1"),
                                    L.getLogging().infoLog("System clock jump detected", "to the far past")) : ie ? (L.getPlaybackSession().addInternalErrorFlag("3"),
                                    L.getLogging().infoLog("System clock jump detected", "to the future")) : (L.getPlaybackSession().addInternalErrorFlag("2"),
                                    L.getLogging().infoLog("System clock jump detected", "to the near past")),
                                    n = p),
                                    i.ns_st_po || (L.getPlaybackSession().getAsset().isAutoCalculatePositionsEnabled() ? i.ns_st_po = L.getPlaybackSession().getAsset().getExpectedPlaybackPosition(n) + "" : i.ns_st_po = ne + ""),
                                    ne = parseInt(i.ns_st_po),
                                    L.getPlaybackSession().getAsset().setPlaybackTimeOffset(parseInt(i.ns_st_po)),
                                    L.getStateMachine().getCurrentState() != l.IDLE && L.getStateMachine().getCurrentState() != l.PLAYBACK_NOT_STARTED && L.getStateMachine().getCurrentState() != l.SEEKING_BEFORE_PLAYBACK && L.getStateMachine().getCurrentState() != l.BUFFERING_BEFORE_PLAYBACK && (L.getPlaybackSession().getAsset().addElapsedTime(n),
                                    L.getPlaybackSession().getAsset().setElapsedTimestamp(n)),
                                    L.getStateMachine().getCurrentState() != l.PLAYING && L.getStateMachine().getCurrentState() != l.BUFFERING_DURING_PLAYBACK || (L.getPlaybackSession().addPlaybackTime(n),
                                    L.getPlaybackSession().setPlaybackTimestamp(n),
                                    L.getPlaybackSession().getAsset().addPlaybackTime(n),
                                    L.getPlaybackSession().getAsset().setPlaybackTimestamp(n),
                                    L.getPlaybackSession().getAsset().addInterval(parseInt(i.ns_st_po)),
                                    L.getPlaybackSession().getAsset().setPlaybackStartPosition(parseInt(i.ns_st_po))),
                                    L.getStateMachine().getCurrentState() != l.BUFFERING_BEFORE_PLAYBACK && L.getStateMachine().getCurrentState() != l.BUFFERING_DURING_PAUSE && L.getStateMachine().getCurrentState() != l.BUFFERING_DURING_PLAYBACK && L.getStateMachine().getCurrentState() != l.BUFFERING_DURING_SEEKING || (L.getPlaybackSession().addBufferingTime(n),
                                    L.getPlaybackSession().setBufferingTimestamp(n),
                                    L.getPlaybackSession().getAsset().addBufferingTime(n),
                                    L.getPlaybackSession().getAsset().setBufferingTimestamp(n));
                                    var v = re.createLabels(e, i, n);
                                    L.getPlaybackSession().getAsset().updateDeltaLabels(v.eventLabels),
                                    L.getPlaybackSession().getAsset().updateIndependentLabels(v.eventLabels),
                                    L.getEventManager().newEvent(v),
                                    e == u.PLAYBACK_RATE && L.getPlaybackSession().getAsset().setPlaybackRate(parseInt(i.ns_st_rt)),
                                    h && (L.getStateMachine().getCurrentState() != l.PLAYING && L.getStateMachine().getCurrentState() != l.BUFFERING_DURING_PLAYBACK || (L.getPlaybackSession().setPlaybackTimestamp(X),
                                    L.getPlaybackSession().getAsset().setPlaybackTimestamp(X)),
                                    L.getStateMachine().getCurrentState() != l.IDLE && L.getStateMachine().getCurrentState() != l.PLAYBACK_NOT_STARTED && L.getStateMachine().getCurrentState() != l.SEEKING_BEFORE_PLAYBACK && L.getStateMachine().getCurrentState() != l.BUFFERING_BEFORE_PLAYBACK && L.getPlaybackSession().getAsset().setElapsedTimestamp(X),
                                    L.getStateMachine().getCurrentState() != l.BUFFERING_BEFORE_PLAYBACK && L.getStateMachine().getCurrentState() != l.BUFFERING_DURING_PAUSE && L.getStateMachine().getCurrentState() != l.BUFFERING_DURING_PLAYBACK && L.getStateMachine().getCurrentState() != l.BUFFERING_DURING_SEEKING && L.getStateMachine().getCurrentState() != l.PAUSED_DURING_BUFFERING || (L.getPlaybackSession().setBufferingTimestamp(X),
                                    L.getPlaybackSession().getAsset().setBufferingTimestamp(X)),
                                    L.getStateMachine().getCurrentState() != l.SEEKING_BEFORE_PLAYBACK && L.getStateMachine().getCurrentState() != l.SEEKING_DURING_BUFFERING && L.getStateMachine().getCurrentState() != l.SEEKING_DURING_PAUSE && L.getStateMachine().getCurrentState() != l.SEEKING_DURING_PLAYBACK && L.getStateMachine().getCurrentState() != l.BUFFERING_DURING_SEEKING || L.getPlaybackSession().getAsset().setSeekingTimestamp(X))
                                },
                                getState: function() {
                                    return L.getStateMachine().getCurrentState()
                                },
                                addListener: function(e) {
                                    ee.push(e)
                                },
                                removeListener: function(e) {
                                    ee.splice(t.indexOf(e, ee), 1)
                                },
                                getLabel: function(e) {
                                    return ue[e]
                                },
                                getLabels: function() {
                                    return ue
                                },
                                setLabel: function(e, t) {
                                    null == t ? delete ue[e] : ue[e] = t
                                },
                                setLabels: function(e) {
                                    for (var t in e)
                                        e.hasOwnProperty(t) && re.setLabel(t, e[t])
                                },
                                getPlatformAPI: function() {
                                    return L.getAppCore() ? L.getAppCore().getPlatformAPI() : s
                                },
                                getExports: function() {
                                    return ae
                                },
                                isProperlyInitialized: function() {
                                    var e = L.getAppCore().getAppContext()
                                      , t = L.getAppCore().getSalt()
                                      , n = L.getAppCore().getPixelURL();
                                    return e && n && t
                                },
                                setThrottlingDelay: function(e) {
                                    oe = e
                                },
                                getThrottlingDelay: function() {
                                    return oe
                                },
                                isThrottlingEnabled: function() {
                                    return J
                                },
                                setThrottlingEnabled: function(e) {
                                    J = e
                                },
                                isLoadingTimeSent: function() {
                                    return K
                                },
                                setLoadingTimeSent: function(e) {
                                    K = e
                                },
                                getLoadTimeOffset: function() {
                                    return z
                                },
                                setLoadTimeOffset: function(e) {
                                    z = e
                                },
                                getInitTimestamp: function() {
                                    return Y
                                },
                                setPauseOnBufferingInterval: function(e) {
                                    se = e
                                },
                                getPauseOnBufferingInterval: function() {
                                    return se
                                },
                                isPauseOnBufferingEnabled: function() {
                                    return Q
                                },
                                setPauseOnBufferingEnabled: function(e) {
                                    Q = e
                                },
                                startPausedOnBufferingTimer: function(e, n) {
                                    re.stopPausedOnBufferingTimer(),
                                    Z = re.getPlatformAPI().setTimeout(function() {
                                        var e = {}
                                          , i = t.fixEventTime(e)
                                          , r = parseInt(n.ns_st_po);
                                        e.ns_st_po = r + "",
                                        re.newEvent(u.PAUSE_ON_BUFFERING, i, e)
                                    }, se)
                                },
                                stopPausedOnBufferingTimer: function() {
                                    null != Z && (re.getPlatformAPI().clearTimeout(Z),
                                    Z = null)
                                },
                                stopDelayedTransitionTimer: function() {
                                    $ && (re.getPlatformAPI().clearTimeout($),
                                    $ = null)
                                },
                                setLiveEndpointURL: function(e) {
                                    if (null == e || 0 == e.length)
                                        return null;
                                    var t = decodeURIComponent || unescape
                                      , n = e.indexOf("?");
                                    if (n >= 0) {
                                        if (n < e.length - 1) {
                                            for (var i = e.substring(n + 1).split("&"), r = 0, a = i.length; r < a; r++) {
                                                var s = i[r]
                                                  , o = s.split("=");
                                                2 == o.length ? re.setLabel(o[0], t(o[1])) : 1 == o.length && re.setLabel(c.PAGE_NAME_LABEL, t(o[0]))
                                            }
                                            e = e.substring(0, n + 1)
                                        }
                                    } else
                                        e += "?";
                                    return te = e
                                },
                                getLiveEndpointURL: function() {
                                    return te ? te : "undefined" != typeof ns_p && "string" == typeof ns_p.src ? te = ns_p.src.replace(/&amp;/, "&").replace(/&ns__t=\d+/, "") : "string" == typeof ns_pixelUrl ? te = ns_pixelUrl.replace(/&amp;/, "&").replace(/&ns__t=\d+/, "") : null
                                },
                                getStaSM: function() {
                                    return L
                                },
                                resetPlaybackSession: function(e) {
                                    var t = L.getPlaybackSession();
                                    L.setPlaybackSession(new p(L)),
                                    p.resetPlaybackSession(L, t, e)
                                },
                                resetHeartbeat: function() {
                                    L.getHeartbeat().pause();
                                    var e = L.getHeartbeat().getIntervals();
                                    L.setHeartbeat(new v(L)),
                                    L.getHeartbeat().setIntervals(e)
                                }
                            });
                            var de, ce;
                            t.isBrowser() ? (de = window,
                            ce = document) : (de = {},
                            ce = {
                                location: {
                                    href: ""
                                },
                                title: "",
                                URL: "",
                                referrer: "",
                                cookie: ""
                            }),
                            t.extend(re, {
                                prepareUrl: f
                            }),
                            i()
                        }
                    }()
                      , O = function() {
                        return function(e) {
                            var n, i, r, a, s, o, u, l = this;
                            t.extend(l, {
                                getAppCore: function() {
                                    return n
                                },
                                getStaCore: function() {
                                    return e
                                },
                                getEventManager: function() {
                                    return i
                                },
                                getStateMachine: function() {
                                    return r
                                },
                                getHeartbeat: function() {
                                    return a
                                },
                                getKeepAlive: function() {
                                    return s
                                },
                                getPlaybackSession: function() {
                                    return o
                                },
                                getLogging: function() {
                                    return u
                                },
                                setAppCore: function(e) {
                                    n = e
                                },
                                setKeepAlive: function(e) {
                                    s = e
                                },
                                setHeartbeat: function(e) {
                                    a = e
                                },
                                setEventManager: function(e) {
                                    i = e
                                },
                                setStateMachine: function(e) {
                                    r = e
                                },
                                setPlaybackSession: function(e) {
                                    o = e
                                },
                                setLogging: function(e) {
                                    u = e
                                }
                            })
                        }
                    }()
                      , x = function() {
                        return function(e) {
                            function n() {
                                e = t.extend({}, e),
                                a = new L(e),
                                a.getStaSM().getLogging().log("New StreamingAnalytics instance with configuration", e)
                            }
                            function i(e) {
                                var n, i;
                                if (n = "object" == typeof arguments[1] ? arguments[1] : "object" == typeof arguments[2] ? arguments[2] : {},
                                i = "number" == typeof arguments[1] ? arguments[1] : "number" == typeof arguments[2] ? arguments[2] : NaN,
                                u.toString(e)) {
                                    n = t.jsonObjectToStringDictionary(n);
                                    var r = t.fixEventTime(n);
                                    n.ns_st_po || isNaN(i) || (n.ns_st_po = t.parseInteger(i, 0) + ""),
                                    e == u.PLAY || e == u.PAUSE || e == u.BUFFER || e == u.END || e == u.SEEK_START || e == u.AD_SKIP || e == u.BUFFER_STOP ? a.newEvent(e, r, n) : a.newPseudoEvent(e, r, n)
                                }
                            }
                            function r() {
                                o && a.getStaSM().getStateMachine().getCurrentState() != l.IDLE && s.notifyEnd()
                            }
                            var a, s = this, o = !0;
                            t.extend(this, {
                                isProperlyInitialized: function() {
                                    return a.isProperlyInitialized()
                                },
                                reset: function(e) {
                                    i(u.END);
                                    var t = a;
                                    t.getStaSM().getKeepAlive().stop(),
                                    t.getStaSM().getHeartbeat().pause(),
                                    a = new L(t.getConfiguration()),
                                    p.resetPlaybackSession(a.getStaSM(), t.getStaSM().getPlaybackSession(), e)
                                },
                                setPauseOnBufferingInterval: function(e) {
                                    a.setPauseOnBufferingInterval(e)
                                },
                                getPauseOnBufferingInterval: function() {
                                    return a.getPauseOnBufferingInterval()
                                },
                                setKeepAliveInterval: function(e) {
                                    a.getStaSM().getKeepAlive().setInterval(e)
                                },
                                getKeepAliveInterval: function() {
                                    return a.getStaSM().getKeepAlive().getInterval()
                                },
                                setHeartbeatIntervals: function(e) {
                                    a.getStaSM().getHeartbeat().setIntervals(e)
                                },
                                notifyPlay: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyPlay", e, t),
                                    i(u.PLAY, e, t)
                                },
                                notifyPause: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyPause", e, t),
                                    i(u.PAUSE, e, t)
                                },
                                notifyEnd: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyEnd", e, t),
                                    i(u.END, e, t)
                                },
                                notifyBufferStart: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyBufferStart", e, t),
                                    i(u.BUFFER, e, t)
                                },
                                notifyBufferStop: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyBufferStop", e, t),
                                    i(u.BUFFER_STOP, e, t)
                                },
                                notifyLoad: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyLoad", e, t),
                                    i(u.LOAD, e, t)
                                },
                                notifyEngage: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyEngage", e, t),
                                    i(u.ENGAGE, e, t)
                                },
                                notifySeekStart: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifySeekStart", e, t),
                                    i(u.SEEK_START, e, t)
                                },
                                notifySkipAd: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifySkipAd", e, t),
                                    i(u.AD_SKIP, e, t)
                                },
                                notifyCallToAction: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyCallToAction", e, t),
                                    i(u.CTA, e, t)
                                },
                                notifyError: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyError", e, t),
                                    i(u.ERROR, e, t)
                                },
                                notifyTransferPlayback: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyTransferPlayback", e, t),
                                    i(u.TRANSFER, e, t)
                                },
                                notifyDrmFail: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyDrmFail", e, t),
                                    i(u.DRM_FAILED, e, t)
                                },
                                notifyDrmApprove: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyDrmApprove", e, t),
                                    i(u.DRM_APPROVED, e, t)
                                },
                                notifyDrmDeny: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyDrmDeny", e, t),
                                    i(u.DRM_DENIED, e, t)
                                },
                                notifyChangeBitrate: function(e, t, n) {
                                    if (a.getStaSM().getLogging().apiCall("notifyChangeBitrate", e, t, n),
                                    null != e) {
                                        var r = n || {};
                                        r.ns_st_br = e + "",
                                        i(u.BIT_RATE, r, t)
                                    }
                                },
                                notifyChangePlaybackRate: function(e, t, n) {
                                    if (a.getStaSM().getLogging().apiCall("notifyChangePlaybackRate", e, t, n),
                                    null != e) {
                                        var r = n || {};
                                        r.ns_st_rt = e + "",
                                        i(u.PLAYBACK_RATE, r, t)
                                    }
                                },
                                notifyChangeVolume: function(e, t, n) {
                                    if (a.getStaSM().getLogging().apiCall("notifyChangeVolume", e, t, n),
                                    null != e) {
                                        var r = n || {};
                                        r.ns_st_vo = e + "",
                                        i(u.VOLUME, r, t)
                                    }
                                },
                                notifyChangeWindowState: function(e, t, n) {
                                    if (a.getStaSM().getLogging().apiCall("notifyChangeWindowState", e, t, n),
                                    null != e) {
                                        var r = n || {};
                                        r.ns_st_ws = e + "",
                                        i(u.WINDOW_STATE, r, t)
                                    }
                                },
                                notifyChangeAudioTrack: function(e, t, n) {
                                    if (a.getStaSM().getLogging().apiCall("notifyChangeAudioTrack", e, t, n),
                                    null != e) {
                                        var r = n || {};
                                        r.ns_st_at = e + "",
                                        i(u.AUDIO, r, t)
                                    }
                                },
                                notifyChangeVideoTrack: function(e, t, n) {
                                    if (a.getStaSM().getLogging().apiCall("notifyChangeVideoTrack", e, t, n),
                                    null != e) {
                                        var r = n || {};
                                        r.ns_st_vt = e + "",
                                        i(u.VIDEO, r, t)
                                    }
                                },
                                notifyChangeSubtitleTrack: function(e, t, n) {
                                    if (a.getStaSM().getLogging().apiCall("notifyChangeSubtitleTrack", e, t, n),
                                    null != e) {
                                        var r = n || {};
                                        r.ns_st_tt = e + "",
                                        i(u.SUBS, r, t)
                                    }
                                },
                                notifyChangeCdn: function(e, t, n) {
                                    if (a.getStaSM().getLogging().apiCall("notifyChangeCdn", e, t, n),
                                    null != e) {
                                        var r = n || {};
                                        r.ns_st_cdn = e + "",
                                        i(u.CDN, r, t)
                                    }
                                },
                                notifyCustomEvent: function(e, t) {
                                    a.getStaSM().getLogging().apiCall("notifyCustomEvent", e, t),
                                    i(u.CUSTOM, e, t)
                                },
                                getLabels: function() {
                                    return a.getLabels()
                                },
                                getState: function() {
                                    return a.getStaSM().getStateMachine().getCurrentState()
                                },
                                setLabels: function(e) {
                                    a.setLabels(e)
                                },
                                getLabel: function(e) {
                                    return a.getLabel(e)
                                },
                                setLabel: function(e, t) {
                                    a.setLabel(e, t)
                                },
                                getLoadTimeOffset: function() {
                                    return a.getLoadTimeOffset()
                                },
                                setLoadTimeOffset: function(e) {
                                    a.setLoadTimeOffset(e)
                                },
                                setLiveEndpointURL: function(e) {
                                    return a.setLiveEndpointURL(e)
                                },
                                getLiveEndpointURL: function() {
                                    return a.getLiveEndpointURL()
                                },
                                isPauseOnBufferingEnabled: function() {
                                    return a.isPauseOnBufferingEnabled()
                                },
                                setPauseOnBufferingEnabled: function(e) {
                                    a.setPauseOnBufferingEnabled(e)
                                },
                                isThrottlingEnabled: function() {
                                    return a.isThrottlingEnabled()
                                },
                                setThrottlingEnabled: function(e) {
                                    a.setThrottlingEnabled(e)
                                },
                                setThrottlingDelay: function(e) {
                                    a.setThrottlingDelay(e)
                                },
                                getThrottlingDelay: function() {
                                    return a.getThrottlingDelay()
                                },
                                setPlaybackIntervalMergeTolerance: function(e) {
                                    a.getStaSM().getPlaybackSession().getAsset().setPlaybackIntervalMergeTolerance(e)
                                },
                                getPlaybackIntervalMergeTolerance: function() {
                                    return a.getStaSM().getPlaybackSession().getAsset().getPlaybackIntervalMergeTolerance()
                                },
                                createPlaybackSession: function(e) {
                                    a.getStaSM().getLogging().apiCall("createPlaybackSession", e),
                                    e = t.jsonObjectToStringDictionary(e);
                                    var n = a.getStaSM().getStateMachine().getCurrentState();
                                    n != l.IDLE && (a.getStaSM().getLogging().infoLog("Ending the current Clip. It was in state:", t.stateToString(n)),
                                    s.notifyEnd()),
                                    a.getStaSM().getPlaybackSession().isPlaybackSessionStarted() && a.resetPlaybackSession(),
                                    a.getStaSM().getPlaybackSession().setLabels(e)
                                },
                                getVersion: function() {
                                    return c.STREAMINGANALYTICS_VERSION
                                },
                                addListener: function(e) {
                                    a.addListener(e)
                                },
                                removeListener: function(e) {
                                    a.removeListener(e)
                                },
                                addMeasurementListener: function(e) {
                                    a.getStaSM().getEventManager().addMeasurementListener(e)
                                },
                                removeMeasurementListener: function(e) {
                                    a.getStaSM().getEventManager().removeMeasurementListener(e)
                                },
                                getPlaybackSession: function() {
                                    return a.getStaSM().getPlaybackSession()
                                },
                                setExitEndEventEnabled: function(e) {
                                    o = e
                                },
                                isExitEndEventEnabled: function() {
                                    return o
                                },
                                getPlatformAPI: function() {
                                    return a.getPlatformAPI()
                                },
                                _getLogHistory: function() {
                                    return a.getStaSM().getLogging().getLogHistory()
                                }
                            }),
                            t.isBrowser() && (window.addEventListener ? (window.addEventListener("beforeunload", r),
                            window.addEventListener("unload", r)) : window.attachEvent && (window.attachEvent("onbeforeunload", r),
                            window.attachEvent("onunload", r))),
                            n()
                        }
                    }();
                    return x.PlayerEvents = u,
                    x.InternalStates = l,
                    x.ImplementationType = d,
                    x.Constants = c,
                    x
                }(),
                e.ReducedRequirementsStreamingAnalytics = e.ReducedRequirementsStreamingAnalytics || function() {
                    var i = {
                        LongFormOnDemand: "12",
                        ShortFormOnDemand: "11",
                        Live: "13",
                        UserGeneratedLongFormOnDemand: "22",
                        UserGeneratedShortFormOnDemand: "21",
                        UserGeneratedLive: "23",
                        Bumper: "99",
                        Other: "00"
                    }
                      , r = {
                        LinearOnDemandPreRoll: "11",
                        LinearOnDemandMidRoll: "12",
                        LinearOnDemandPostRoll: "13",
                        LinearLive: "21",
                        BrandedOnDemandPreRoll: "31",
                        BrandedOnDemandMidRoll: "32",
                        BrandedOnDemandPostRoll: "33",
                        BrandedOnDemandContent: "34",
                        BrandedOnDemandLive: "35",
                        Other: "00"
                    }
                      , a = e.StreamingAnalytics
                      , s = e.StreamingAnalytics.InternalStates || null
                      , o = e.StreamingAnalytics.ImplementationType || null
                      , u = null != e.StreamingAnalytics.InternalStates && null != e.StreamingAnalytics.ImplementationType
                      , l = e.StreamingAnalytics.Constants
                      , d = function(e) {
                        function d() {
                            u && (t.exists(e) && (e.customerC2 || e.publisherId) || t.getNamespace().comScore ? _ = new a(e) : A.error("Cannot instantiate StreamingAnalytics", "The property publisherId was not provided (or incorrectly provided) in the StreamingAnalytics configuration."),
                            _ && _.setLabel("ns_st_it", o.toString(o.REDUCED)))
                        }
                        function c(e) {
                            for (var t in l.STANDARD_METADATA_LABELS)
                                if (l.STANDARD_METADATA_LABELS.hasOwnProperty(t) && !f(l.STANDARD_METADATA_LABELS[t], g, e))
                                    return !1;
                            return !0
                        }
                        function f(e, n, i) {
                            return !!(t.exists(e) && t.exists(n) && t.exists(i) && (n.hasOwnProperty(e) && i.hasOwnProperty(e) && n[e] === i[e] || !n.hasOwnProperty(e) && !i.hasOwnProperty(e)))
                        }
                        function p(e) {
                            _.getPlaybackSession().setAsset(e),
                            g = e,
                            _.notifyPlay()
                        }
                        function h(e) {
                            var t = e || {};
                            t.ns_st_ad = "1",
                            t.ns_st_an = ++m + "",
                            _.getPlaybackSession().setAsset(t),
                            _.notifyPlay(),
                            y = !1
                        }
                        function v(e, t) {
                            S == b.None && (S = t),
                            y && S == t && c(e) ? (_.getPlaybackSession().getAsset().setLabels(e),
                            _.getState() != s.PLAYING && _.notifyPlay()) : p(e),
                            y = !0,
                            S = t
                        }
                        var g = null
                          , m = 0
                          , y = !1
                          , _ = null
                          , b = {
                            None: 0,
                            AudioContent: 1,
                            VideoContent: 2
                        }
                          , S = b.None
                          , A = new n("TTSTA",(e || {}).debug);
                        t.extend(this, {
                            playVideoAdvertisement: function(e, n) {
                                if (_) {
                                    A.apiCall("playVideoAdvertisement", e, n);
                                    var i = {
                                        ns_st_ct: "va"
                                    };
                                    n ? i.ns_st_ct = "va" + n : A.warn("Calling 'playVideoAdvertisement' without specifying the media type as a second parameter."),
                                    n != r.LinearLive && n != r.BrandedOnDemandLive || (i.ns_st_li = "1"),
                                    e && t.extend(i, e),
                                    h(i)
                                }
                            },
                            playAudioAdvertisement: function(e, n) {
                                if (_) {
                                    A.apiCall("playAudioAdvertisement", e, n);
                                    var i = {
                                        ns_st_ct: "aa"
                                    };
                                    n ? i.ns_st_ct = "aa" + n : A.warn("Calling 'playAudioAdvertisement' without specifying the media type as a second parameter."),
                                    n != r.LinearLive && n != r.BrandedOnDemandLive || (i.ns_st_li = "1"),
                                    e && t.extend(i, e),
                                    h(i)
                                }
                            },
                            playVideoContentPart: function(e, n) {
                                if (_) {
                                    A.apiCall("playVideoContentPart", e, n);
                                    var r = {
                                        ns_st_ct: "vc"
                                    };
                                    n ? r.ns_st_ct = "vc" + n : A.warn("Calling 'playVideoContentPart' without specifying the media type as a second parameter."),
                                    n != i.Live && n != i.UserGeneratedLive || (r.ns_st_li = "1"),
                                    e && t.extend(r, e),
                                    v(r, b.VideoContent)
                                }
                            },
                            playAudioContentPart: function(e, n) {
                                if (_) {
                                    A.apiCall("playAudioContentPart", e, n);
                                    var r = {
                                        ns_st_ct: "ac"
                                    };
                                    n ? r.ns_st_ct = "ac" + n : A.warn("Calling 'playAudioContentPart' without specifying the media type as a second parameter."),
                                    n != i.Live && n != i.UserGeneratedLive || (r.ns_st_li = "1"),
                                    e && t.extend(r, e),
                                    v(r, b.AudioContent)
                                }
                            },
                            stop: function() {
                                _ && (A.apiCall("stop"),
                                _.notifyPause())
                            }
                        }),
                        d()
                    };
                    return d.ContentType = i,
                    d.AdType = r,
                    d
                }(),
                e
            }),
            function(e) {
                "use strict";
                return "undefined" != typeof ns_ && ns_.StreamingAnalytics ? void e(ns_) : void ("undefined" != typeof console && console.error && console.error("The comScore Streaming Analytics library was not properly loaded."))
            }(function(e) {
                "use strict";
                function t(s, o, u, l, d) {
                    function c() {
                        var t = {};
                        t.debug = s.debug,
                        t.publisherId = s.publisherId || s.c2,
                        t.secure = s.secure,
                        t.liveEndpointURL = s.logurl || s.liveEndpointURL,
                        He = new e.StreamingAnalytics(t),
                        n.extend(je, He),
                        n.extend(je, {
                            notifyPlay: U,
                            notifyPause: B,
                            notifyEnd: F,
                            notifyBufferStart: V,
                            notifyBufferStop: q,
                            notifyLoad: H,
                            notifyEngage: G,
                            notifySeekStart: W,
                            notifySkipAd: K,
                            notifyCallToAction: z,
                            notifyError: Y,
                            notifyTransferPlayback: X,
                            notifyDrmFail: Q,
                            notifyDrmApprove: Z,
                            notifyDrmDeny: J,
                            notifyChangeBitrate: $,
                            notifyChangePlaybackRate: ee,
                            notifyChangeVolume: te,
                            notifyChangeWindowState: ne,
                            notifyChangeAudioTrack: ie,
                            notifyChangeVideoTrack: re,
                            notifyChangeSubtitleTrack: ae,
                            notifyChangeCDN: se,
                            notifyCustomEvent: oe,
                            createPlaybackSession: fe,
                            getPlaybackSession: pe,
                            setAsset: ce,
                            setLabel: he,
                            setLabels: ve,
                            getLabels: ge,
                            getLabel: me,
                            setAssetLabel: ye,
                            setPlaybackSessionLabel: _e,
                            onGetLabels: M,
                            labelMapping: ze,
                            release: f,
                            log: Pe,
                            handleSettings: Ae,
                            getGenericPluginVersion: p,
                            setDuration: R,
                            setVideoSize: N,
                            setDetectSeek: D,
                            setDetectPause: x,
                            setDetectPlay: O,
                            setDetectEnd: L,
                            setSmartStateDetection: j,
                            setPauseDetectionErrorMargin: A,
                            setEndDetectionErrorMargin: T,
                            setSeekDetectionMinQuotient: k,
                            setPulseSamplingInterval: E,
                            setPulseSamplingIntervalBackground: P,
                            setPulseMaxDelay: I,
                            setMaximumNumberOfEntriesInHistory: C,
                            setMinimumNumberOfTimeUpdateEventsBeforeDetectingSeek: w
                        }),
                        je.setLabels({
                            ns_st_mp: o,
                            ns_st_pv: u,
                            ns_st_mv: l
                        }, !0),
                        s && Ae(s),
                        d.init && d.init.call(je, null),
                        $e && v()
                    }
                    function f() {
                        d.release && d.release.call(je),
                        g(),
                        He.reset(),
                        He = null,
                        b(),
                        Ge = [],
                        Ie = void 0,
                        We = -1,
                        Ce = Oe,
                        Ke = -1
                    }
                    function p() {
                        return Le
                    }
                    function h() {
                        return n.hasPageVisibilityAPISupport && n.isTabInBackground() ? Fe : Be
                    }
                    function v() {
                        g(),
                        tt = NaN,
                        nt = [],
                        dt = !0,
                        we = setInterval(m, h()),
                        _()
                    }
                    function g() {
                        "undefined" != typeof we && (clearInterval(we),
                        we = void 0)
                    }
                    function m() {
                        if (!$e)
                            return void g();
                        if (it)
                            return void (it = !1);
                        var t = +new Date
                          , n = t - tt
                          , i = h() + qe
                          , a = tt;
                        if (tt = t,
                        !isNaN(a) && n > i)
                            return void v();
                        var s = d.position && d.position.call(je, null) || 0
                          , o = !1;
                        if (s != nt[nt.length - 1]) {
                            if (nt.push(Math.abs(s)),
                            nt.length > 1 && nt[nt.length - 1] < nt[nt.length - 2]) {
                                var u = nt[nt.length - 1];
                                nt = [],
                                nt[0] = u,
                                Xe && (o = !0)
                            }
                            if (!o && nt.length < Ue)
                                return
                        }
                        nt.length > Ve && (nt = nt.slice(-Math.floor(Ve / 2))),
                        Xe && !o && (o = y());
                        var l = He.getState();
                        switch (l) {
                        case r.IDLE:
                        case r.PAUSED:
                        case r.PLAYBACK_NOT_STARTED:
                        case r.BUFFERING_BEFORE_PLAYBACK:
                        case r.BUFFERING_DURING_PLAYBACK:
                        case r.BUFFERING_DURING_SEEKING:
                        case r.BUFFERING_DURING_PAUSE:
                        case r.PAUSED_DURING_BUFFERING:
                        case r.SEEKING_BEFORE_PLAYBACK:
                        case r.SEEKING_DURING_PLAYBACK:
                        case r.SEEKING_DURING_BUFFERING:
                        case r.SEEKING_DURING_PAUSE:
                            if (Ze && s > et && !o && !S(s)) {
                                if (d.preMeasurement && !d.preMeasurement.call(je, l, e.StreamingAnalytics.PlayerEvents.PLAY))
                                    break;
                                var c = nt[nt.length - 1];
                                dt && c < Ne ? je.notifyPlay(0) : je.notifyPlay(c),
                                dt = !1;
                                break
                            }
                            if (Xe && o && l != r.SEEKING_BEFORE_PLAYBACK && l != r.SEEKING_DURING_PLAYBACK && l != r.SEEKING_DURING_BUFFERING && l != r.SEEKING_DURING_PAUSE) {
                                je.notifySeekStart(nt[0]);
                                break
                            }
                            if (Je && l != r.IDLE && l != r.PLAYBACK_NOT_STARTED && l != r.BUFFERING_BEFORE_PLAYBACK && l != r.SEEKING_BEFORE_PLAYBACK && S(s)) {
                                if (d.preMeasurement && !d.preMeasurement.call(je, l, e.StreamingAnalytics.PlayerEvents.END))
                                    break;
                                dt = !0;
                                var f = parseInt(rt.ns_st_cl || He.getPlaybackSession().getAsset().getLabel("ns_st_cl"));
                                !isNaN(f) && f > 0 ? je.notifyEnd(f) : je.notifyEnd(s)
                            }
                            break;
                        case r.PLAYING:
                            if (Xe && o) {
                                if (d.preMeasurement && !d.preMeasurement.call(je, l, e.StreamingAnalytics.PlayerEvents.PAUSE))
                                    break;
                                dt = !1,
                                je.notifySeekStart(et)
                            } else if (Je && S(s)) {
                                if (d.preMeasurement && !d.preMeasurement.call(je, l, e.StreamingAnalytics.PlayerEvents.END))
                                    break;
                                dt = !0;
                                var f = parseInt(rt.ns_st_cl || He.getPlaybackSession().getAsset().getLabel("ns_st_cl"));
                                !isNaN(f) && f > 0 ? je.notifyEnd(f) : je.notifyEnd(s)
                            } else if (Qe && Math.abs(s - et) <= xe) {
                                if (d.preMeasurement && !d.preMeasurement.call(je, l, e.StreamingAnalytics.PlayerEvents.PAUSE))
                                    break;
                                dt = !1,
                                je.notifyPause(et)
                            }
                        }
                        l !== He.getState() && (d.postMeasurement && d.postMeasurement.call(je, He.getState()),
                        He.getState() != r.PLAYING && (nt = [])),
                        et = s
                    }
                    function y() {
                        if (nt.length < 2)
                            return !1;
                        if (nt[nt.length - 1] < nt[nt.length - 2])
                            return !0;
                        for (var e = h(), t = 0, n = 0; n < nt.length; n++)
                            t = (parseFloat(t) + Re[nt.length - 2][n] * nt[n]).toFixed(5);
                        return t = parseFloat(t),
                        t / e > Me
                    }
                    function _() {
                        if ("undefined" != typeof document && document.addEventListener && n.hasPageVisibilityAPISupport() && !ft) {
                            ft = !0;
                            var e = n.getPageVisibilityAPI();
                            document.addEventListener(e.visibilityChange, v, !1)
                        }
                    }
                    function b() {
                        if ("undefined" != typeof document && document.addEventListener && n.hasPageVisibilityAPISupport() && ft) {
                            ft = !1;
                            var e = n.getPageVisibilityAPI();
                            document.removeEventListener(e.visibilityChange, v, !1)
                        }
                    }
                    function S(e) {
                        var t = parseInt(rt.ns_st_cl || He.getPlaybackSession().getAsset().getLabel("ns_st_cl"));
                        return !isNaN(t) && t > 0 && (e > t || Math.abs(e - t) < De)
                    }
                    function A(e) {
                        e && (xe = e)
                    }
                    function T(e) {
                        e && (De = e)
                    }
                    function k(e) {
                        e && e > 1 && (Me = e)
                    }
                    function E(e) {
                        "number" == typeof e && e >= 0 && (Be = e)
                    }
                    function P(e) {
                        "number" == typeof e && e >= 0 && (Fe = e)
                    }
                    function I(e) {
                        "number" == typeof e && e >= 0 && (qe = e)
                    }
                    function C(e) {
                        e && e <= 13 && e >= 2 && (Ve = e)
                    }
                    function w(e) {
                        e && e >= 2 && e <= 13 && (Ue = e)
                    }
                    function j(e) {
                        $e = e || !1,
                        $e ? v() : g()
                    }
                    function L(e) {
                        Je = e || !1
                    }
                    function O(e) {
                        Ze = e || !1
                    }
                    function x(e) {
                        Qe = e || !1
                    }
                    function D(e) {
                        Xe = e || !1
                    }
                    function N(e) {
                        He.getPlaybackSession().getAsset().setLabel("ns_st_cs", e ? e : 0)
                    }
                    function R(e) {
                        He.getPlaybackSession().getAsset().setLabel("ns_st_cl", e && e >= 0 ? e : 0)
                    }
                    function M(e) {
                        "function" == typeof e && Ge.push(e)
                    }
                    function U() {
                        if (!ut && !lt) {
                            dt = !1;
                            var e = de(a.PLAY, ue(arguments), le(arguments));
                            He.notifyPlay(ue(arguments), e),
                            $e && (nt = [],
                            et = e)
                        }
                    }
                    function B() {
                        if (!ut && !lt) {
                            dt = !1;
                            var e = de(a.PAUSE, ue(arguments), le(arguments));
                            He.notifyPause(ue(arguments), e),
                            $e && (nt = [],
                            et = e)
                        }
                    }
                    function F() {
                        if (!ut && !lt) {
                            dt = !0;
                            var e = de(a.END, ue(arguments), le(arguments));
                            $e && (nt = [],
                            et = e,
                            it = !0),
                            He.notifyEnd(ue(arguments), e)
                        }
                    }
                    function V() {
                        if (!ut && !lt) {
                            var e = de(a.BUFFER, ue(arguments), le(arguments));
                            He.notifyBufferStart(ue(arguments), e)
                        }
                    }
                    function q() {
                        if (!ut && !lt) {
                            var e = de(a.BUFFER_STOP, ue(arguments), le(arguments));
                            He.notifyBufferStop(ue(arguments), e)
                        }
                    }
                    function H() {
                        if (!ut && !lt && s.enableLoadNotification) {
                            var e = de(a.LOAD, ue(arguments), le(arguments));
                            He.notifyLoad(ue(arguments), e)
                        }
                    }
                    function G() {
                        if (!ut && !lt && s.enableEngageNotification) {
                            var e = de(a.ENGAGE, ue(arguments), le(arguments));
                            He.notifyEngage(ue(arguments), e)
                        }
                    }
                    function W() {
                        if (!ut && !lt) {
                            dt = !1;
                            var e = de(a.SEEK_START, ue(arguments), le(arguments));
                            $e && (nt = [],
                            et = e),
                            He.notifySeekStart(ue(arguments), e)
                        }
                    }
                    function K() {
                        if (!ut && !lt) {
                            if (!s.enableSkipAdNotification)
                                return void F.apply(this, Array.prototype.slice.call(arguments));
                            dt = !0;
                            var e = de(a.AD_SKIP, ue(arguments), le(arguments));
                            $e && (nt = [],
                            et = e,
                            it = !0),
                            He.notifySkipAd(ue(arguments), e)
                        }
                    }
                    function z() {
                        if (!ut && !lt && s.enableCallToActionNotification) {
                            var e = de(a.CTA, ue(arguments), le(arguments));
                            He.notifyCallToAction(ue(arguments), e)
                        }
                    }
                    function Y() {
                        if (!ut && !lt && s.enableErrorNotification) {
                            var e = de(a.ERROR, ue(arguments), le(arguments));
                            He.notifyError(ue(arguments), e)
                        }
                    }
                    function X() {
                        if (!ut && !lt && s.enableTransferPlaybackNotification) {
                            var e = de(a.TRANSFER, ue(arguments), le(arguments));
                            He.notifyTransferPlayback(ue(arguments), e)
                        }
                    }
                    function Q() {
                        if (!ut && !lt && s.enableDrmFailNotification) {
                            var e = de(a.DRM_FAILED, ue(arguments), le(arguments));
                            He.notifyDrmFail(ue(arguments), e)
                        }
                    }
                    function Z() {
                        if (!ut && !lt && s.drmApproveNotification) {
                            var e = de(a.DRM_APPROVED, ue(arguments), le(arguments));
                            He.notifyDrmApprove(ue(arguments), e)
                        }
                    }
                    function J() {
                        if (!ut && !lt && s.drmDenyNotification) {
                            var e = de(a.DRM_DENIED, ue(arguments), le(arguments));
                            He.notifyDrmDeny(ue(arguments), e)
                        }
                    }
                    function $(e, t, n) {
                        if (!ut && !lt) {
                            if (!s.enableBitrateNotification)
                                return void he("ns_st_br", e, !0);
                            var i = [t, n]
                              , r = de(a.BIT_RATE, ue(i), le(i));
                            He.notifyChangeBitrate(e, r, ue(i))
                        }
                    }
                    function ee(e, t, n) {
                        if (!ut && !lt) {
                            var i = [t, n]
                              , r = de(a.PLAYBACK_RATE, ue(i), le(i));
                            He.notifyChangePlaybackRate(e, r, ue(i))
                        }
                    }
                    function te(e, t, n) {
                        if (!ut && !lt) {
                            if (!s.enableVolumeChangeNotification)
                                return void he("ns_st_vo", e, !0);
                            var i = [t, n]
                              , r = de(a.VOLUME, ue(i), le(i));
                            He.notifyChangeVolume(e, r, ue(i))
                        }
                    }
                    function ne(e, t, n) {
                        if (!ut && !lt) {
                            if (!s["enableWindowStateChangeNotification "])
                                return void he("ns_st_ws", e, !0);
                            var i = [t, n]
                              , r = de(a.WINDOW_STATE, ue(i), le(i));
                            He.notifyChangeWindowState(e, r, ue(i))
                        }
                    }
                    function ie(e, t, n) {
                        if (!ut && !lt) {
                            if (!s.enableAudioTrackChangeNotification)
                                return void he("ns_st_at", e, !0);
                            var i = [t, n]
                              , r = de(a.AUDIO, ue(i), le(i));
                            He.notifyChangeAudioTrack(e, r, ue(i))
                        }
                    }
                    function re(e, t, n) {
                        if (!ut && !lt) {
                            if (!s.enableVideoTrackChangeNotification)
                                return void he("ns_st_vt", e, !0);
                            var i = [t, n]
                              , r = de(a.VIDEO, ue(i), le(i));
                            He.notifyChangeVideoTrack(e, r, ue(i))
                        }
                    }
                    function ae(e, t, n) {
                        if (!ut && !lt) {
                            if (!s.enableSubtitleTrackChangeNotification)
                                return void he("ns_st_tt", e, !0);
                            var i = [t, n]
                              , r = de(a.SUBS, ue(i), le(i));
                            He.notifyChangeSubtitleTrack(e, r, ue(i))
                        }
                    }
                    function se(e, t, n) {
                        if (!ut && !lt) {
                            if (!s.enableCdnChangeNotification)
                                return void he("ns_st_cdn", e, !0);
                            var i = [t, n]
                              , r = de(a.CDN, ue(i), le(i));
                            He.notifyChangeCdn(e, r, ue(i))
                        }
                    }
                    function oe() {
                        if (!ut && !lt && s.enableCustomEventNotification) {
                            var e = de(a.CUSTOM, ue(arguments), le(arguments));
                            He.notifyCustomEvent(ue(arguments), e)
                        }
                    }
                    function ue(e) {
                        var t;
                        return t = "object" == typeof e[0] ? e[0] : "object" == typeof e[1] ? e[1] : {}
                    }
                    function le(e) {
                        var t;
                        return t = "number" == typeof e[0] ? e[0] : "number" == typeof e[1] ? e[1] : NaN
                    }
                    function de(e, t, n) {
                        for (var i = 0, r = Ge.length; i < r; i++)
                            Ge[i](e, t);
                        var a = NaN;
                        return "number" != typeof n || isNaN(n) ? d.position && (a = d.position.call(je, e, t, n)) : a = n,
                        a
                    }
                    function ce(e, t, i, r) {
                        var a = i || [];
                        ke(a, e),
                        Ee(a, e);
                        var s;
                        for (var o in e)
                            e.hasOwnProperty(o) && (s = o.match(/^data-(.+)/)) && (e[s[1]] = e[o],
                            delete e[o]);
                        return r && 1 == r ? n.extend(e, st) : (st = {},
                        n.extend(st, e)),
                        rt = {},
                        ut = !!(e && e.hasOwnProperty("ns_st_skip") && e.ns_st_skip),
                        He.getPlaybackSession().setAsset(e, t)
                    }
                    function fe(e, t) {
                        return t && 1 == t ? n.extend(e, at) : (at = {},
                        n.extend(at, e)),
                        lt = !!(e && e.hasOwnProperty("ns_st_skip") && e.ns_st_skip),
                        He.createPlaybackSession(e)
                    }
                    function pe() {
                        var e = He.getPlaybackSession();
                        return new i(e,ce)
                    }
                    function he(e, t, n) {
                        var i = {};
                        return i[e] = t,
                        ve(i, n)
                    }
                    function ve(e, t) {
                        return t && 1 == t ? n.extend(e, ot) : n.extend(ot, e),
                        He.setLabels(e)
                    }
                    function ge() {
                        return ot
                    }
                    function me(e) {
                        return ot[e]
                    }
                    function ye(e, t, n) {
                        n && 1 == n ? (st.hasOwnProperty(e) || ot.hasOwnProperty(e) || He.getPlaybackSession().getAsset().setLabel(e, t),
                        rt[e] = t) : (st[e] = t,
                        He.getPlaybackSession().getAsset().setLabel(e, t))
                    }
                    function _e(e, t, n) {
                        n && 1 == n ? at.hasOwnProperty(e) || ot.hasOwnProperty(e) || He.getPlaybackSession().setLabel(e, t) : (at[e] = t,
                        He.getPlaybackSession().setLabel(e, t))
                    }
                    function be(e) {
                        if (e) {
                            var t = /([^=, ]+)\s*=(\s*("([^"]+?)"|'([^']+?)'|[a-z0-9\[\]\._-]+)\s*\+?)+\s*/gi
                              , n = e.match(t);
                            for (var i in n)
                                if (n.hasOwnProperty(i)) {
                                    var r = n[i].split("=", 2);
                                    if (2 == r.length) {
                                        var a = r[0].replace(/(^\s+|\s+$)/g, "");
                                        "" != a && (ze[a] = r[1])
                                    }
                                }
                        }
                    }
                    function Se(e) {
                        if (e) {
                            var t = e.split(",");
                            for (var n in t)
                                if (t.hasOwnProperty(n)) {
                                    var i = t[n].split("=", 2);
                                    if (2 == i.length) {
                                        var r = i[0].replace(/(^\s+|\s+$)/g, "");
                                        "" != r && (He.setLabel(r, i[1]),
                                        ot[r] = i[1])
                                    }
                                }
                        }
                    }
                    function Ae(e) {
                        if (n.isTrue(e.pageView || e.pageview)) {
                            var t = {};
                            if ("undefined" != typeof document) {
                                var i = document;
                                t.c7 = i.URL,
                                t.c8 = i.title,
                                t.c9 = i.referrer
                            }
                            He.setLabels(t)
                        }
                        e.renditions,
                        Ye = n.isTrue(e.debug),
                        (e.labelMapping || e.labelmapping) && be(e.labelMapping || e.labelmapping),
                        (e.persistentLabels || e.persistentlabels) && Se(e.persistentLabels || e.persistentlabels),
                        "1" === e.throttling || e.throttling === !0 ? He.setThrottlingEnabled(!0) : He.setThrottlingEnabled(!1);
                        var r;
                        (r = e.include) && "string" == typeof r && (r === Oe ? Ie = Oe : r.length > 0 && (Ie = r.split(","))),
                        Ie !== Oe && (r = e.includePrefixes || e.include_prefixes) && (r === Oe ? Ie = Oe : (Ie || (Ie = []),
                        We = Ie.length,
                        Ie.push.apply(Ie, r.split(","))));
                        var a = /^([Cc][A-Da-d]_)?ns_st_.+/
                          , s = /^[Cc][A-Da-d]?([1-9]|1[0-9]|20)$/
                          , o = e.exclude;
                        if ("string" == typeof o)
                            if (Ie || o)
                                if (Ie && !o)
                                    ct = [],
                                    Ce = [];
                                else if (o == Oe)
                                    ct = [],
                                    Ce = Oe;
                                else {
                                    var u = o.split(",");
                                    Ce = Ie ? u : Oe;
                                    for (var l = 0; l < u.length; l++) {
                                        var d = null != u[l].match(a)
                                          , c = null != u[l].match(s);
                                        (d || c) && ct.push(u[l])
                                    }
                                }
                            else
                                ct = [],
                                Ce = Oe;
                        var f = e.excludePrefixes || e.exclude_prefixes;
                        Ie && Ce != Oe && "string" == typeof f && (f == Oe ? Ce = Oe : (Ce || (Ce = []),
                        Ke = Ce.length,
                        Ce.push.apply(Ce, f.split(",")))),
                        Ce || (Ce = Oe)
                    }
                    function Te(e) {
                        var t, n, i, r, a = {};
                        if (Ce === Oe)
                            return {};
                        if (Ie && Ie !== Oe) {
                            for (t = 0,
                            n = Ie.length; t < n; t++) {
                                var s = Ie[t];
                                r = We >= 0 && t >= We;
                                for (i in e)
                                    e.hasOwnProperty(i) && (a[i] || (a[i] = !(r ? 0 !== i.indexOf(s) : i != s)))
                            }
                            for (i in a)
                                a.hasOwnProperty(i) && a[i] === !1 && delete e[i];
                            a = {}
                        }
                        if (Ce)
                            for (t = 0,
                            n = Ce.length; t < n; t++) {
                                var o = Ce[t];
                                r = Ke >= 0 && t >= Ke;
                                for (i in e)
                                    e.hasOwnProperty(i) && (r ? 0 === i.indexOf(o) : i == o) && (a[i] = !0);
                                for (i in a)
                                    a.hasOwnProperty(i) && e.hasOwnProperty(i) && delete e[i];
                                a = {}
                            }
                        return e
                    }
                    function ke(e, t) {
                        var i = Ce === Oe;
                        if (e.length > 0 && "undefined" != e[0].map) {
                            var r = e[0].map;
                            i || n.extend(t, Te(r));
                            for (var a in r)
                                if (r.hasOwnProperty(a)) {
                                    var s, o, u, l = /^([Cc][A-Da-d]_)?ns_st_.+/, d = /^[Cc][A-Da-d]?([1-9]|1[0-9]|20)$/;
                                    (s = a.match(/^data-(.+)/)) ? (o = null != s[1].match(l),
                                    u = null != s[1].match(d),
                                    (o || u) && ct.indexOf(s[1]) === -1 && (t[s[1]] = r[a])) : (o = null != a.match(l),
                                    u = null != a.match(d),
                                    (o || u) && ct.indexOf(a) === -1 && (t[a] = r[a]))
                                }
                        }
                    }
                    function Ee(e, t) {
                        var i = je.labelMapping;
                        for (var r in i)
                            if (i.hasOwnProperty(r))
                                for (var a = "", s = /^("([^"]+)"|'([^']+?)'$)/i, o = /"([^"]+?)"|[a-z0-9\[\]\._-]+|'([^']+?)'\s*/gi, u = i[r].match(o), l = 0; l < u.length; l++) {
                                    var d = u[l].replace(/(?:^\s+|\s+$)/g, "");
                                    if (s.test(d)) {
                                        var c = s.exec(d);
                                        a += c[2] || c[3]
                                    } else
                                        try {
                                            var f = ""
                                              , p = d.lastIndexOf(".");
                                            p >= 1 && p < d.length - 1 && (f = d.substring(0, p),
                                            d = d.substring(p + 1, d.length));
                                            for (var h = 0; h < e.length; h++) {
                                                var v = e[h];
                                                if (f == v.prefix) {
                                                    v.map[d] && (a += n.toString(v.map[d]));
                                                    break
                                                }
                                            }
                                        } catch (e) {
                                            Pe("Exception occurred while processing mapped labels")
                                        }
                                    t[r] = a
                                }
                    }
                    function Pe() {
                        if (Ye) {
                            var e = new Date
                              , t = e.getDate()
                              , n = e.getMonth() + 1
                              , i = e.getHours()
                              , r = e.getMinutes()
                              , a = e.getSeconds()
                              , s = e.getFullYear() + "-" + (n < 10 ? "0" + n : n) + "-" + (t < 10 ? "0" + t : t) + " " + (i < 10 ? "0" + i : i) + ":" + (r < 10 ? "0" + r : r) + ":" + (a < 10 ? "0" + a : a) + "." + e.getMilliseconds()
                              , o = ["comScore", s]
                              , u = Array.prototype.slice.call(arguments);
                            "undefined" != typeof console && console.log.apply(console, o.concat(u))
                        }
                    }
                    d = d || {};
                    var Ie, Ce, we, je = this, Le = "2.6.0.170905", Oe = "_all_", xe = 10, De = 500, Ne = 1e3, Re = [[-1, 1], [-.5, 0, .5], [-.3, -.1, .1, .3], [-.2, -.1, 0, .1, .2], [-.14286, -.08571, -.02857, .02857, .08571, .14286], [-.10714, -.07143, -.03571, 0, .03571, .07143, .10714], [-.08333, -.05952, -.03571, -.0119, .0119, .03571, .05952, .08333], [-.06667, -.05, -.03333, -.01667, 0, .01667, .03333, .05, .06667], [-.05455, -.04242, -.0303, -.01818, -.00606, .00606, .01818, .0303, .04242, .05455], [-.04545, -.03636, -.02727, -.01818, -.00909, 0, .00909, .01818, .02727, .03636, .04545], [-.03846, -.03147, -.02448, -.01748, -.01049, -.0035, .0035, .01049, .01748, .02448, .03147, .03846], [-.03297, -.02747, -.02198, -.01648, -.01099, -.00549, 0, .00549, .01099, .01648, .02198, .02747, .03297]], Me = 1.25, Ue = 2, Be = 300, Fe = 1e3, Ve = 6, qe = 50, He = {}, Ge = [], We = -1, Ke = -1, ze = {}, Ye = !1, Xe = !1, Qe = !1, Ze = !1, Je = !1, $e = !1, et = d.position && d.position.call(je, null) || 0, tt = NaN, nt = [], it = !1, rt = {}, at = {}, st = {}, ot = {}, ut = !1, lt = !1, dt = !0, ct = [];
                    c(),
                    n.isTrue(s.pageView || s.pageview) && t.viewNotify(He.getLabels(), He);
                    var ft = !1
                }
                var n = n || {};
                n.indexOf = function(e, t) {
                    var n = -1;
                    return this.forEach(t, function(t, i) {
                        t == e && (n = i)
                    }),
                    n
                }
                ,
                n.forEach = function(e, t, n) {
                    try {
                        if ("function" == typeof t)
                            if (n = "undefined" != typeof n ? n : null,
                            "number" != typeof e.length || "undefined" == typeof e[0]) {
                                var i = "undefined" != typeof e.__proto__;
                                for (var r in e)
                                    e.hasOwnProperty(r) && (!i || i && "undefined" == typeof e.__proto__[r]) && "function" != typeof e[r] && t.call(n, e[r], r)
                            } else
                                for (var a = 0, s = e.length; a < s; a++)
                                    t.call(n, e[a], a)
                    } catch (e) {}
                }
                ;
                var n = n || {};
                n.parseBoolean = function(e, t) {
                    return t = t || !1,
                    e ? "0" != e : t
                }
                ,
                n.parseInteger = function(e, t) {
                    return null == e || isNaN(e) ? t || 0 : parseInt(e)
                }
                ,
                n.parseLong = function(e, t) {
                    var n = Number(e);
                    return null == e || isNaN(n) ? t || 0 : n
                }
                ,
                n.toString = function(e) {
                    if ("undefined" == typeof e)
                        return "undefined";
                    if ("string" == typeof e)
                        return e;
                    if (e instanceof Array)
                        return e.join(",");
                    var t = "";
                    for (var n in e)
                        e.hasOwnProperty(n) && (t += n + ":" + e[n] + ";");
                    return t || e.toString()
                }
                ;
                var n = n || {};
                n.filter = function(e, t) {
                    var n = {};
                    for (var i in t)
                        t.hasOwnProperty(i) && e(t[i]) && (n[i] = t[i]);
                    return n
                }
                ,
                n.extend = function(e) {
                    var t, n = arguments.length;
                    e = e || {};
                    for (var i = 1; i < n; i++)
                        if (t = arguments[i])
                            for (var r in t)
                                t.hasOwnProperty(r) && (e[r] = t[r]);
                    return e
                }
                ;
                var n = n || {};
                n.cloneObject = function(e) {
                    if (null == e || "object" != typeof e)
                        return e;
                    var t = function() {
                        function e() {}
                        function t(t) {
                            return "object" == typeof t ? (e.prototype = t,
                            new e) : t
                        }
                        function n(e) {
                            for (var t in e)
                                e.hasOwnProperty(t) && (this[t] = e[t])
                        }
                        function i() {
                            this.copiedObjects = [];
                            var e = this;
                            this.recursiveDeepCopy = function(t) {
                                return e.deepCopy(t)
                            }
                            ,
                            this.depth = 0
                        }
                        function r(e, t) {
                            var n = new i;
                            return t && (n.maxDepth = t),
                            n.deepCopy(e)
                        }
                        function a(e) {
                            return "undefined" != typeof window && window && window.Node ? e instanceof Node : "undefined" != typeof document && e === document || "number" == typeof e.nodeType && e.attributes && e.childNodes && e.cloneNode
                        }
                        var s = [];
                        return n.prototype = {
                            constructor: n,
                            canCopy: function() {
                                return !1
                            },
                            create: function(e) {},
                            populate: function(e, t, n) {}
                        },
                        i.prototype = {
                            constructor: i,
                            maxDepth: 256,
                            cacheResult: function(e, t) {
                                this.copiedObjects.push([e, t])
                            },
                            getCachedResult: function(e) {
                                for (var t = this.copiedObjects, n = t.length, i = 0; i < n; i++)
                                    if (t[i][0] === e)
                                        return t[i][1]
                            },
                            deepCopy: function(e) {
                                if (null === e)
                                    return null;
                                if ("object" != typeof e)
                                    return e;
                                var t = this.getCachedResult(e);
                                if (t)
                                    return t;
                                for (var n = 0; n < s.length; n++) {
                                    var i = s[n];
                                    if (i.canCopy(e))
                                        return this.applyDeepCopier(i, e)
                                }
                                throw new Error("Unable to clone the following object " + e)
                            },
                            applyDeepCopier: function(e, t) {
                                var n = e.create(t);
                                if (this.cacheResult(t, n),
                                this.depth++,
                                this.depth > this.maxDepth)
                                    throw new Error("Maximum recursion depth exceeded.");
                                return e.populate(this.recursiveDeepCopy, t, n),
                                this.depth--,
                                n
                            }
                        },
                        r.DeepCopier = n,
                        r.deepCopiers = s,
                        r.register = function(e) {
                            e instanceof n || (e = new n(e)),
                            s.unshift(e)
                        }
                        ,
                        r.register({
                            canCopy: function() {
                                return !0
                            },
                            create: function(e) {
                                return e instanceof e.constructor ? t(e.constructor.prototype) : {}
                            },
                            populate: function(e, t, n) {
                                for (var i in t)
                                    t.hasOwnProperty(i) && (n[i] = e(t[i]));
                                return n
                            }
                        }),
                        r.register({
                            canCopy: function(e) {
                                return e instanceof Array
                            },
                            create: function(e) {
                                return new e.constructor
                            },
                            populate: function(e, t, n) {
                                for (var i = 0; i < t.length; i++)
                                    n.push(e(t[i]));
                                return n
                            }
                        }),
                        r.register({
                            canCopy: function(e) {
                                return e instanceof Date
                            },
                            create: function(e) {
                                return new Date(e)
                            }
                        }),
                        r.register({
                            canCopy: function(e) {
                                return a(e)
                            },
                            create: function(e) {
                                return "undefined" != typeof document && e === document ? document : e.cloneNode(!1)
                            },
                            populate: function(e, t, n) {
                                if ("undefined" != typeof document && t === document)
                                    return document;
                                if (t.childNodes && t.childNodes.length)
                                    for (var i = 0; i < t.childNodes.length; i++) {
                                        var r = e(t.childNodes[i]);
                                        n.appendChild(r)
                                    }
                            }
                        }),
                        {
                            deepCopy: r
                        }
                    }();
                    return t.deepCopy(e)
                }
                ;
                var n = n || {};
                n.getNamespace = function() {
                    return e.ns_ || e
                }
                ,
                n.uid = function() {
                    var e = 1;
                    return function() {
                        return +new Date + "_" + e++
                    }
                }(),
                n.isEmpty = function(e) {
                    return void 0 === e || null === e || "" === e || e instanceof Array && 0 === e.length
                }
                ,
                n.isNotEmpty = function(e) {
                    return !this.isEmpty(e)
                }
                ,
                n.safeGet = function(e, t) {
                    return t = this.exists(t) ? t : "",
                    this.exists(e) ? e : t
                }
                ,
                n.isTrue = function(e) {
                    return "undefined" != typeof e && ("string" == typeof e ? (e = e.toLowerCase(),
                    "true" === e || "1" === e || "on" === e) : !!e)
                }
                ,
                n.regionMatches = function(e, t, n, i, r) {
                    if (t < 0 || i < 0 || t + r > e.length || i + r > n.length)
                        return !1;
                    for (; --r >= 0; ) {
                        var a = e.charAt(t++)
                          , s = n.charAt(i++);
                        if (a != s)
                            return !1
                    }
                    return !0
                }
                ,
                n.exists = function(e) {
                    return "undefined" != typeof e && null != e
                }
                ,
                !function() {
                    var e = []
                      , t = !1
                      , i = !0
                      , r = 1e3;
                    n.onSystemClockJump = function(n, a) {
                        e.push(n),
                        t || (t = !0,
                        r = a || r,
                        i = +new Date,
                        setInterval(function() {
                            var t = i + r
                              , n = +new Date;
                            i = n;
                            var a = n - t;
                            if (Math.abs(a) > r)
                                for (var s = 0; s < e.length; ++s)
                                    e[s](a > 0)
                        }, r))
                    }
                }();
                var n = n || {};
                n.hasPageVisibilityAPISupport = function() {
                    if ("undefined" == typeof document)
                        return !1;
                    var e = !1;
                    return "undefined" != typeof document.hidden ? e = !0 : "undefined" != typeof document.mozHidden ? e = !0 : "undefined" != typeof document.msHidden ? e = !0 : "undefined" != typeof document.webkitHidden && (e = !0),
                    function() {
                        return e
                    }
                }(),
                n.getPageVisibilityAPI = function() {
                    if ("undefined" == typeof document)
                        return null;
                    var e, t, n;
                    "undefined" != typeof document.hidden ? (e = "hidden",
                    t = "visibilitychange",
                    n = "visibilityState") : "undefined" != typeof document.mozHidden ? (e = "mozHidden",
                    t = "mozvisibilitychange",
                    n = "mozVisibilityState") : "undefined" != typeof document.msHidden ? (e = "msHidden",
                    t = "msvisibilitychange",
                    n = "msVisibilityState") : "undefined" != typeof document.webkitHidden && (e = "webkitHidden",
                    t = "webkitvisibilitychange",
                    n = "webkitVisibilityState");
                    var i = {
                        hidden: e,
                        visibilityChange: t,
                        state: n
                    };
                    return function() {
                        return i
                    }
                }(),
                n.isTabInBackground = function() {
                    if ("undefined" == typeof document)
                        return null;
                    var e = n.getPageVisibilityAPI();
                    return function() {
                        return document[e.hidden]
                    }
                }(),
                n.getBrowserName = function() {
                    if (!navigator)
                        return "";
                    var e, t, n = navigator.userAgent || "", i = navigator.appName || "";
                    return (t = n.indexOf("Opera")) != -1 || (t = n.indexOf("OPR/")) != -1 ? i = "Opera" : (t = n.indexOf("Android")) != -1 ? i = "Android" : (t = n.indexOf("Chrome")) != -1 ? i = "Chrome" : (t = n.indexOf("Safari")) != -1 ? i = "Safari" : (t = n.indexOf("Firefox")) != -1 ? i = "Firefox" : (t = n.indexOf("IEMobile")) != -1 ? i = "Internet Explorer Mobile" : "Microsoft Internet Explorer" == i || "Netscape" == i ? i = "Internet Explorer" : (e = n.lastIndexOf(" ") + 1) < (t = n.lastIndexOf("/")) ? (i = n.substring(e, t),
                    i.toLowerCase() == i.toUpperCase() && (i = navigator.appName)) : i = "unknown",
                    i
                }
                ,
                n.getBrowserFullVersion = function() {
                    if (!navigator)
                        return "";
                    var e, t, n, i, r = navigator.userAgent || "", a = navigator.appName || "", s = navigator.appVersion ? "" + parseFloat(navigator.appVersion) : "";
                    return (t = r.indexOf("Opera")) != -1 ? (s = r.substring(t + 6),
                    (t = r.indexOf("Version")) != -1 && (s = r.substring(t + 8))) : (t = r.indexOf("OPR/")) != -1 ? s = r.substring(t + 4) : (t = r.indexOf("Android")) != -1 ? s = r.substring(t + 11) : (t = r.indexOf("Chrome")) != -1 ? s = r.substring(t + 7) : (t = r.indexOf("Safari")) != -1 ? (s = r.substring(t + 7),
                    (t = r.indexOf("Version")) != -1 && (s = r.substring(t + 8))) : (t = r.indexOf("Firefox")) != -1 ? s = r.substring(t + 8) : "Microsoft Internet Explorer" == a ? (i = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})"),
                    null != i.exec(r) && (s = parseFloat(RegExp.$1))) : "Netscape" == a ? (i = new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})"),
                    null != i.exec(r) && (s = parseFloat(RegExp.$1))) : s = r.lastIndexOf(" ") + 1 < (t = r.lastIndexOf("/")) ? r.substring(t + 1) : "unknown",
                    s = s.toString(),
                    (n = s.indexOf(";")) != -1 && (s = s.substring(0, n)),
                    (n = s.indexOf(" ")) != -1 && (s = s.substring(0, n)),
                    (n = s.indexOf(")")) != -1 && (s = s.substring(0, n)),
                    e = parseInt("" + s, 10),
                    isNaN(e) && (s = "" + parseFloat(navigator.appVersion)),
                    s
                }
                ,
                n.browserAcceptsLargeURLs = function() {
                    return "undefined" == typeof window || (null !== window.ActiveXObject,
                    !0)
                }
                ,
                n.isBrowser = function() {
                    return "undefined" != typeof window && "undefined" != typeof document
                }
                ,
                n.isWebSecure = function() {
                    return "undefined" != typeof document && null != document && "s" === document.location.href.charAt(4)
                }
                ;
                var i = (function() {
                    var e = 1e4;
                    return function(t, n) {
                        function i(e) {
                            e = e || [];
                            var n = [o, +new Date];
                            return t && n.push(t),
                            e = Array.prototype.slice.call(e),
                            n = n.concat(e)
                        }
                        function r(e) {
                            var t, i, r;
                            if ("boolean" == typeof n || !n)
                                return !!n;
                            if (r = e.join(" "),
                            n instanceof Array && n.length > 0) {
                                for (t = 0; t < n.length; ++t)
                                    if (i = n[t],
                                    i instanceof RegExp && i.test(r))
                                        return !0;
                                return !1
                            }
                            if ("object" == typeof n) {
                                var a = !1;
                                if (n.hide instanceof Array)
                                    for (t = 0; t < n.hide.length; ++t)
                                        if (i = n.hide[t],
                                        i instanceof RegExp && i.test(r)) {
                                            a = !0;
                                            break
                                        }
                                if (n.show instanceof Array)
                                    for (t = 0; t < n.show.length; ++t)
                                        if (i = n.show[t],
                                        i instanceof RegExp && i.test(r))
                                            return !0;
                                return !a && !n.show
                            }
                            return !0
                        }
                        function a(t) {
                            var i = u.length;
                            (i > e || n && n.max && i > n.max) && (u = u.slice(-Math.floor(n.max / 2)),
                            u.push("Previous logs: " + i)),
                            u.push(t)
                        }
                        var s = this
                          , o = "comScore"
                          , u = [];
                        s.log = function() {
                            var e = i(arguments);
                            a(e),
                            "undefined" != typeof console && "function" == typeof console.log && r(e) && console.log.apply(console, e)
                        }
                        ,
                        s.warn = function() {
                            var e = i(arguments);
                            a(e),
                            "undefined" != typeof console && "function" == typeof console.warn && r(e) && console.warn.apply(console, e)
                        }
                        ,
                        s.error = function() {
                            var e = i(arguments);
                            a(e),
                            "undefined" != typeof console && "function" == typeof console.error && r(e) && console.error.apply(console, e)
                        }
                        ,
                        s.apiCall = function(e) {
                            for (var t = ["API call to:", e], n = 1; n < arguments.length; ++n)
                                t.push("arg" + n + ":", arguments[n]);
                            this.log.apply(this, t)
                        }
                        ,
                        s.infoLog = function() {
                            var e = ["Trace log:"];
                            e.push.apply(e, Array.prototype.slice.call(arguments)),
                            this.log.apply(this, e)
                        }
                        ,
                        s.deprecation = function(e, t) {
                            var n = ["Deprecated API:", e, "is deprecated and will be eventually removed."];
                            t && n.push("Use", t, "instead."),
                            this.warn.apply(this, n)
                        }
                        ,
                        s.getLogHistory = function() {
                            return u
                        }
                    }
                }(),
                function() {
                    function e(e, n) {
                        for (var i = this, r = 0; r < t.length; ++r) {
                            var a = t[r];
                            i[a] = function(t) {
                                return function() {
                                    return e[t].apply(e, Array.prototype.slice.call(arguments))
                                }
                            }(a)
                        }
                        i.setAsset = function() {
                            n.apply(null, Array.prototype.slice.call(arguments))
                        }
                    }
                    var t = ["getAsset", "getLabels", "setLabels", "setLabel", "getLabel", "getPlaybackSessionID"];
                    return e
                }())
                  , r = e.StreamingAnalytics.InternalStates
                  , a = e.StreamingAnalytics.PlayerEvents;
                t.prototype = e.StreamingAnalytics.prototype,
                e.StreamingAnalytics.Plugin = t,
                t.extractParams = function(e, t, n) {
                    var i, r, a, s = t.length, o = {}, u = e.indexOf(t);
                    if ("undefined" == typeof n && (n = "&"),
                    u >= 0)
                        for (a = e.substr(u + s).split(n),
                        i = 0,
                        r = a.length; i < r; i++) {
                            var l = a[i].split("=");
                            2 === l.length && (o[l[0]] = decodeURIComponent(l[1]))
                        }
                    return o
                }
                ,
                t.viewNotify = function(e, t) {
                    var i, r;
                    n.isBrowser() ? (i = window,
                    r = document) : (i = {},
                    r = {
                        location: {
                            href: ""
                        },
                        title: "",
                        URL: "",
                        referrer: "",
                        cookie: ""
                    });
                    var a = t.getLiveEndpointURL()
                      , s = "undefined"
                      , o = i.comScore || i.sitestat || function(e) {
                        var a, o, u, l, d, c = "comScore=", f = r.cookie, p = "", h = "indexOf", v = "substring", g = "length", m = n.browserAcceptsLargeURLs() ? i.ns_.StreamingAnalytics.Constants.URL_LENGTH_LIMIT : i.ns_.StreamingAnalytics.Constants.RESTRICTED_URL_LENGTH_LIMIT, y = "&ns_", _ = "&", b = i.encodeURIComponent || escape;
                        if (f[h](c) + 1)
                            for (l = 0,
                            u = f.split(";"),
                            d = u[g]; l < d; l++)
                                o = u[l][h](c),
                                o + 1 && (p = _ + unescape(u[l][v](o + c[g])));
                        e += y + "_t=" + +new Date + y + "c=" + (r.characterSet || r.defaultCharset || "") + p,
                        e.length > m && e.indexOf(_) > 0 && (a = e.substr(0, m - 8).lastIndexOf(_),
                        e = (e.substring(0, a) + y + "cut=" + b(e.substring(a + 1))).substr(0, m)),
                        t.getPlatformAPI().httpGet(e),
                        typeof i.ns_p === s && (i.ns_p = {
                            src: e
                        }),
                        i.ns_p.lastMeasurement = e
                    }
                      , u = decodeURIComponent || unescape
                      , l = {}
                      , d = a.indexOf("?");
                    if (d >= 0 && d < a.length - 1) {
                        for (var c = a.substring(d + 1).split("&"), f = 0, p = c.length; f < p; f++) {
                            var h = c[f]
                              , v = h.split("=");
                            2 == v.length && (l[v[0]] = u(v[1]))
                        }
                        a = a.substring(0, d + 1)
                    }
                    var g = l;
                    if (typeof e !== s) {
                        for (var m in e)
                            e.hasOwnProperty(m) && (g[m] = e[m]);
                        var y = []
                          , _ = i.encodeURIComponent || escape;
                        for (m in g)
                            y.push(_(m) + "=" + _(g[m]));
                        /[\?\&]$/.test(a) || (a += "&"),
                        a += y.join("&")
                    }
                    return o(a)
                }
            }),
            function(e) {
                "use strict";
                return "undefined" != typeof ns_ && ns_.StreamingAnalytics && ns_.StreamingAnalytics.Plugin ? void e(ns_) : void ("undefined" != typeof console && console.error && console.error("The comScore Streaming Analytics library was not properly loaded."))
            }(function(ns_) {
                function BrightcovePlayerPlugin(e, t) {
                    function n() {
                        $.log("onVolumeChange"),
                        F()
                    }
                    function i() {
                        $.log("onFullScreenChange"),
                        V()
                    }
                    function r() {
                        $.log("dispose"),
                        $.notifyEnd(),
                        c(),
                        $.release()
                    }
                    function a() {
                        $.log("onDurationChange"),
                        z = Math.max(Math.floor(1e3 * e.duration()), 0),
                        z = isFinite(z) ? z : 0,
                        $.setAssetLabel("ns_st_cl", z, !0),
                        $.setAssetLabel("ns_st_el", z, !0)
                    }
                    function s(e) {
                        $.log("onWaiting"),
                        oe || O(e),
                        N()
                    }
                    function o() {
                        $.log("onPlaying"),
                        he || (clearTimeout(N.timerId),
                        N._notifyBufferWorkerStarted = !1,
                        N.timerId = null,
                        0 == C() && $.notifyPlay(0))
                    }
                    function u(e, t) {
                        return $.log("OnPreMeasurement - Current State:" + e + " Event:" + t),
                        oe || O(),
                        he || t != ns_.StreamingAnalytics.PlayerEvents.PLAY || (Ee = !1),
                        e != ns_.StreamingAnalytics.InternalStates.PLAYING || t != ns_.StreamingAnalytics.PlayerEvents.PAUSE || he ? e != ns_.StreamingAnalytics.InternalStates.PLAYING || t != ns_.StreamingAnalytics.PlayerEvents.END || he || (j(C()),
                        fe = !1,
                        pe = !0,
                        Se = !0) : ($.log("Pausing Content"),
                        j(C())),
                        !(t == ns_.StreamingAnalytics.PlayerEvents.PLAY && !fe && !he)
                    }
                    function l() {
                        $ = new ns_.StreamingAnalytics.Plugin(t,Q,Z,J,{
                            position: C,
                            preMeasurement: u
                        }),
                        $.log("init"),
                        e && e.bigPlayButton && t && t.trackplaybutton && e.bigPlayButton.on("click", L),
                        "undefined" != typeof cs_vce_ && (cs_vce_.init("StreamingAnalytics", {
                            playerId: e.id(),
                            streamSense: $
                        }),
                        $.setHttpGet(function(t, n) {
                            "undefined" != typeof cs_vce_ ? cs_vce_.getViewability(e.id(), function(e) {
                                var i = win.encodeURIComponent || escape
                                  , r = [];
                                for (var a in e)
                                    if (e.hasOwnProperty(a)) {
                                        var s = e[a];
                                        "undefined" != typeof s && null != s && t.indexOf(i(a) + "=") == -1 && r.push(i(a) + "=" + i(e[a]))
                                    }
                                t += "&" + r.join("&"),
                                imgHttpGet(t, n)
                            }) : imgHttpGet(t, n)
                        })),
                        Utils.extend(X, {
                            attachTo: d,
                            detach: c
                        }),
                        d(e),
                        M(),
                        f(),
                        $.setLabel("ns_ap_pn", "js", !0),
                        $.setLabel("ns_ap_pfm", "html", !0),
                        q()
                    }
                    function d(t) {
                        if (t) {
                            ce && c(),
                            e = t;
                            for (var n in le)
                                le.hasOwnProperty(n) && p(n, le[n]);
                            for (var n in de)
                                de.hasOwnProperty(n) && p(n, de[n]);
                            $.setSmartStateDetection(!he),
                            $.setDetectEnd(!0),
                            $.setDetectPause(!0),
                            $.setDetectPlay(!0),
                            $.setDetectSeek(!0),
                            ce = !0
                        }
                    }
                    function c() {
                        $.log("detach");
                        for (var e in le)
                            le.hasOwnProperty(e) && h(e, le[e]);
                        for (var e in de)
                            de.hasOwnProperty(e) && h(e, de[e]);
                        $.setSmartStateDetection(!1),
                        $.setDetectEnd(!1),
                        $.setDetectPause(!1),
                        $.setDetectPlay(!1),
                        $.setDetectSeek(!1),
                        ce = !1
                    }
                    function f() {
                        X.dispose = r
                    }
                    function p(t, n) {
                        $.log("bind: " + t),
                        e.on(t, n)
                    }
                    function h(t, n) {
                        $.log("unbind: " + t),
                        e.off(t, n)
                    }
                    function v() {
                        $.log("playing: " + C()),
                        oe && (he || (j(C()),
                        me || (!Y && Te ? (ve++,
                        Ee = !0) : !Y && ke && (ve = 1),
                        Te = !1,
                        ke = !1,
                        $.setAsset(H(), !1, U(), !0),
                        me = !0),
                        fe = !0,
                        pe = !1,
                        Se = !1))
                    }
                    function g() {
                        $.log("pause: " + C())
                    }
                    function m(e) {
                        $.log("ended"),
                        he || (ve = 1,
                        j(C()),
                        $.notifyEnd(C()),
                        $.setAssetLabel("ns_st_pn", "1", !0),
                        fe = !1,
                        pe = !0)
                    }
                    function y() {
                        var e = ye;
                        ye = C();
                        var t = _e;
                        _e = +new Date;
                        var n = ye - e
                          , i = _e - t;
                        Se && (j(C()),
                        $.setAssetLabel("ns_st_pn", "1", !0),
                        ve = 1,
                        fe = !0,
                        pe = !1,
                        Se = !1),
                        i < se && 0 == n || (0 == n ? N() : be && R())
                    }
                    function _() {
                        if ($.log("adStart"),
                        oe && !(he || e.ads && "ad-playback" != e.ads.state && "preroll?" != e.ads.state)) {
                            clearTimeout(N.timerId),
                            N._notifyBufferWorkerStarted = !1,
                            N.timerId = null,
                            $.setSmartStateDetection(!1),
                            he = !0,
                            fe && $.notifyEnd(ye);
                            var t = 1e3 * e.duration();
                            !isNaN(t) && ye > t - re && (pe = !0),
                            $.setAsset(H(), !1, null, !0),
                            ye > ie && fe && !pe ? Te = !0 : pe ? (Te = !1,
                            ke = !0) : (Te = !1,
                            ke = !1),
                            Ee && (ve--,
                            Ee = !1),
                            e.onceux ? $.notifyPlay(C()) : $.notifyPlay(),
                            E(),
                            me = !1
                        }
                    }
                    function b() {
                        $.log("adPause"),
                        he && (P(),
                        e.onceux ? $.notifyPause(C()) : $.notifyPause())
                    }
                    function S() {
                        $.log("adResume"),
                        he && (e.onceux ? $.notifyPlay(C()) : $.notifyPlay(),
                        E())
                    }
                    function A() {
                        $.log("adEnd"),
                        he && (P(),
                        e.onceux ? $.notifyEnd(C()) : $.notifyEnd(),
                        he = !1,
                        $.setSmartStateDetection(!0),
                        $.setDetectEnd(!0),
                        $.setDetectPause(!0),
                        $.setDetectPlay(!0),
                        $.setDetectSeek(!0),
                        me = !1,
                        v())
                    }
                    function T(e) {
                        $.log("adTimeout"),
                        he && (P(),
                        $.notifyEnd({
                            ns_st_er: ne
                        }),
                        he = !1,
                        $.setSmartStateDetection(!0),
                        $.setDetectEnd(!0),
                        $.setDetectPause(!0),
                        $.setDetectPlay(!0),
                        $.setDetectSeek(!0),
                        me = !1,
                        v())
                    }
                    function k() {
                        he = !1,
                        $.notifyEnd({
                            ns_st_er: te
                        }),
                        $.setSmartStateDetection(!0),
                        $.setDetectEnd(!0),
                        $.setDetectPause(!0),
                        $.setDetectPlay(!0),
                        $.setDetectSeek(!0),
                        me = !1,
                        v()
                    }
                    function E() {
                        P(),
                        G = setInterval(k, ee)
                    }
                    function P() {
                        "undefined" != typeof G && (clearInterval(G),
                        G = void 0)
                    }
                    function I() {
                        var t;
                        return !z || he ? (t = e.onceux ? e.onceux.duration() : e.duration(),
                        isNaN(t) ? 0 : Math.max(Math.floor(1e3 * t), 0)) : (t = z,
                        isFinite(t) ? t : 0)
                    }
                    function C() {
                        var t;
                        return t = he ? NaN : e.onceux && e.onceux.currentTime ? isNaN(e.onceux.currentTime()) ? 0 : Math.max(Math.floor(1e3 * e.onceux.currentTime()), 0) : isNaN(e.currentTime()) ? 0 : Math.max(Math.floor(1e3 * e.currentTime()), 0)
                    }
                    function w() {
                        return !e.paused()
                    }
                    function j(e) {
                        ye = e,
                        _e = +new Date,
                        B(e)
                    }
                    function L(e) {
                        $.log("onBigPlayButtonClick"),
                        Ae || ($.notifyEngage(),
                        Ae = !0)
                    }
                    function O() {
                        if ($.log("onLoadStart"),
                        oe || (oe = !0),
                        ve = 1,
                        ge = 0,
                        me = !1,
                        M(),
                        W = e && e.mediainfo && e.mediainfo.id ? e.mediainfo.id : (+new Date).toString(16),
                        e && e.mediainfo && e.mediainfo.name)
                            K = e.mediainfo.name;
                        else {
                            var t = document.getElementById(e.id());
                            t.title && (K = t.title)
                        }
                        K ? $.createPlaybackSession({
                            ns_st_pl: K
                        }, !0) : $.createPlaybackSession({}, !0),
                        e && e.mediainfo && e.mediainfo.duration && (z = Math.max(Math.floor(1e3 * e.mediainfo.duration), 0)),
                        e && e.mediainfo && e.mediainfo.cue_points || (ge = 0),
                        he ? (P(),
                        he = !1,
                        $.notifyEnd(),
                        $.setSmartStateDetection(!0),
                        $.setDetectEnd(!0),
                        $.setDetectPause(!0),
                        $.setDetectPlay(!0),
                        $.setDetectSeek(!0)) : $.notifyEnd(),
                        fe = !1,
                        pe = !0,
                        w() && v()
                    }
                    function x() {
                        $.log("loadedMetadata"),
                        M()
                    }
                    function D() {
                        $.log("loadedData"),
                        M()
                    }
                    function N() {
                        N._notifyBufferWorkerStarted || be && !R._notifyBufferEndWorkerStarted || (N._notifyBufferWorkerStarted = !0,
                        N.timerId = setTimeout(function() {
                            $.log("Buffer start!"),
                            N._notifyBufferWorkerStarted = !1,
                            be = !0,
                            $.notifyBufferStart(C())
                        }, ue))
                    }
                    function R() {
                        !R._notifyBufferEndWorkerStarted && be && (R._notifyBufferEndWorkerStarted = !0,
                        setTimeout(function() {
                            $.log("Buffer Stop"),
                            R._notifyBufferEndWorkerStarted = !1,
                            be = !1,
                            $.notifyBufferStop(C())
                        }, ue))
                    }
                    function M() {
                        if (e)
                            if (e.onceux)
                                $.log("Plugin onceux detected"),
                                c(),
                                de = {
                                    "onceux-adroll-start": _,
                                    "onceux-linearad-pause": b,
                                    "onceux-linearad-resume": S,
                                    "onceux-adroll-complete": A
                                },
                                d(e);
                            else if (e.ssai)
                                $.log("Plugin ssai detected"),
                                c(),
                                de = {
                                    "ads-ad-started": _,
                                    "ads-pause": b,
                                    "ads-play": S,
                                    "ads-ad-ended": A
                                },
                                d(e);
                            else if (e.ima3 && !e.FreeWheelPlugin) {
                                $.log("Plugin ima3 detected"),
                                c();
                                var t = function() {
                                    $.log("ima3-ready"),
                                    e.ima3.version && parseInt(e.ima3.version.split(".")[0]) < 2 || ($.log("Plugin ima3 version", e.ima3.version, "detected"),
                                    c(),
                                    de = {
                                        "ads-ad-started": _,
                                        "ads-pause": b,
                                        "ads-play": S,
                                        "ads-ad-ended": A,
                                        adend: A,
                                        adtimeout: T
                                    },
                                    d(e))
                                };
                                e.ima3.version && parseInt(e.ima3.version.split(".")[0]) < 2 ? de = {
                                    "ima3-ready": t,
                                    adstart: _,
                                    adend: A,
                                    adtimeout: T
                                } : t(),
                                d(e)
                            } else
                                e.FreeWheelPlugin ? ($.log("Plugin FreeWheelPlugin"),
                                c(),
                                de = {
                                    "ads-ad-started": _,
                                    "ads-pause": b,
                                    "ads-play": S,
                                    "ads-ad-ended": A,
                                    adtimeout: T
                                },
                                d(e)) : e.ads && ($.log("Normal Ads plugin detected"),
                                c(),
                                de = {
                                    adstart: _,
                                    adend: A,
                                    adtimeout: T
                                },
                                d(e))
                    }
                    function U() {
                        return [{
                            prefix: "",
                            map: e && e.mediainfo ? e.mediainfo.custom_fields : {}
                        }, {
                            prefix: "MediaInfo",
                            map: e ? e.mediainfo : {}
                        }]
                    }
                    function B(e) {
                        if (Y && !he) {
                            for (var t = 1, n = 0; n < Y.length; n++) {
                                var i = Y[n]
                                  , r = i.name && "post-roll" == Y[n].name.toLowerCase()
                                  , a = i.name && "pre-roll" == Y[n].name.toLowerCase();
                                if ("ad" == i.type.toLowerCase() && !r && !a) {
                                    if (!(e + ae > Math.floor(1e3 * i.time)))
                                        break;
                                    t++
                                }
                            }
                            ve = t
                        }
                    }
                    function F() {
                        var t = e.muted() ? 0 : Math.ceil(100 * e.volume());
                        $.setLabel("ns_st_vo", t, !0)
                    }
                    function V() {
                        var t = "norm";
                        (document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen || document.fullscreenElement || e.isFullscreen()) && (t = "full"),
                        $.setLabel("ns_st_ws", t, !0)
                    }
                    function q() {
                        $.setLabel("ns_st_br", "0", !0),
                        V(),
                        F()
                    }
                    function H() {
                        $.log("getClipLabels");
                        var t = {};
                        if (t.ns_st_cs = [e.width(), e.height()].join("x"),
                        t.ns_st_ci = he ? (+new Date).toString(16) : String(W),
                        he) {
                            if (t.ns_st_pr = "",
                            t.ns_st_ep = "",
                            t.ns_st_pn = "1",
                            t.ns_st_tp = "1",
                            t.ns_st_el = "0",
                            e.onceux)
                                t.ns_st_cl = "0";
                            else if (e.ima3 && !e.FreeWheelPlugin) {
                                var n, i;
                                (n = e.ima3.adsManager) && n.getCurrentAd && (i = n.getCurrentAd()) ? (t.ns_st_ami = i.getAdId(),
                                t.ns_st_cs = i.getWidth() + "x" + i.getHeight(),
                                t.ns_st_amt = i.getTitle(),
                                t.ns_st_ams = "ima",
                                t.ns_st_cl = 1e3 * i.getDuration() + "") : (t.ns_st_ams = "ima",
                                t.ns_st_cl = "0")
                            } else
                                e.FreeWheelPlugin ? (t.ns_st_cl = "0",
                                t.ns_st_ams = "freewheel") : e.ads && (t.ns_st_cl = "0");
                            ye < ie ? (t.ns_st_ad = "pre-roll",
                            t.ns_st_ct = "va11") : fe && !pe ? (t.ns_st_ad = "mid-roll",
                            t.ns_st_ct = "va12") : pe ? (t.ns_st_ad = "post-roll",
                            t.ns_st_ct = "va13") : (t.ns_st_ad = "1",
                            t.ns_st_ct = "va00")
                        } else
                            K && (t.ns_st_pr = K,
                            t.ns_st_ep = K),
                            t.ns_st_pn = ve > 0 ? ve : 1,
                            t.ns_st_tp = ge,
                            t.ns_st_cl = I(),
                            t.ns_st_el = I(),
                            t.ns_st_cu = e.currentSrc(),
                            0 == ge ? t.ns_st_ct = "vc00" : ge > 1 ? t.ns_st_ct = "vc12" : t.ns_st_ct = "vc11";
                        return e && e.mediainfo && e.mediainfo.custom_fields && e.mediainfo.custom_fields.hasOwnProperty("ns_st_ty") ? !e.mediainfo.custom_fields.hasOwnProperty("ns_st_ct") || 0 != e.mediainfo.custom_fields.ns_st_ct.indexOf("ac") && 0 != e.mediainfo.custom_fields.ns_st_ct.indexOf("aa") ? t.ns_st_ty = "video" : t.ns_st_ty = "audio" : t.ns_st_ty = "video",
                        t
                    }
                    var G, W, K, z, Y, X = this, Q = "brightcove", Z = "1.5.1.190515", J = bc && bc.VERSION || "unknown", $ = null, ee = 18e4, te = "w01", ne = "w02", ie = 1e3, re = 1e3, ae = 500, se = 100, oe = !1, ue = 250, le = {
                        loadstart: O,
                        loadedmetadata: x,
                        loadeddata: D,
                        play: v,
                        pause: g,
                        ended: m,
                        timeupdate: y,
                        waiting: s,
                        playing: o,
                        volumechange: n,
                        fullscreenchange: i,
                        dispose: r,
                        durationchange: a
                    }, de = {}, ce = !1, fe = !1, pe = !1, he = !1, ve = 1, ge = 0, me = !1, ye = 0, _e = 0, be = !1, Se = !1, Ae = !1, Te = !1, ke = !1, Ee = !1;
                    l()
                }
                if ("undefined" == typeof videojs)
                    throw new Error("comScore Brightcove Player plugin requires Video.js");
                var Utils = Utils || {};
                Utils.filter = function(e, t) {
                    var n = {};
                    for (var i in t)
                        t.hasOwnProperty(i) && e(t[i]) && (n[i] = t[i]);
                    return n
                }
                ,
                Utils.extend = function(e) {
                    var t, n = arguments.length;
                    e = e || {};
                    for (var i = 1; i < n; i++)
                        if (t = arguments[i])
                            for (var r in t)
                                t.hasOwnProperty(r) && (e[r] = t[r]);
                    return e
                }
                ;
                for (var i = 0; i < 5; ++i)
                    !function(comScorePluginName) {
                        videojs.plugin(comScorePluginName, function(options) {
                            var currentPlayer = this
                              , oldPluginInstance = currentPlayer["__" + comScorePluginName + "Instance"];
                            oldPluginInstance && oldPluginInstance.dispose(),
                            options = "string" == typeof options ? eval("(function(){return " + options + ";})()") : options,
                            options && "object" != typeof options && "undefined" != typeof console && console.error && console.error("The comScore Brightcove player plugin requires a valid configuration object."),
                            currentPlayer["__" + comScorePluginName + "Instance"] = new BrightcovePlayerPlugin(currentPlayer,options || {})
                        })
                    }(0 == i ? "comscore" : "comscore" + i)
            })
        }
        )();
        var cE = "3.92";
        var dm = {};
        var cL = "";
        var cP = "";
        var AddressProtocol = window.location.protocol;
        var cR = AddressProtocol + "//dz.glanceguide.com/errl.php";
        var cQ = 6e4;
        var ggPageLoaded = false;
        var jsuserid;
        var _ggeom = 1;
        var au = 2;
        var O = false;
        var _canDetectBrowser = true;
        var _bStr = "";
        var _bLoc = "";
        function gg() {
            var e = null;
            var t = false;
            var n = [];
            var i;
            var r = this;
            this.ggInitialize = function(t, n, a, s) {
                var o;
                var u = "";
                dm = t;
                _canDetectBrowser = s != null ? s : _canDetectBrowser;
                if (_canDetectBrowser)
                    r.detectBrowser();
                for (o in dm)
                    u += "<" + o + ">" + dm[o] + "</" + o + ">";
                i = "genjsplayer";
                e = new Metrics;
                e.init(i, n, cL, u)
            }
            ;
            this.detectBrowser = function() {
                O = true;
                _bStr = navigator.userAgent;
                _bLoc = _bStr.indexOf("Firefox");
                if (_bStr != null && _bLoc >= 0) {
                    bJ = true;
                    bVer = _bStr.substring(_bLoc + 8);
                    if (Number(bVer) < 3)
                        O = false
                }
                _bLoc = _bStr.indexOf("MSIE");
                if (_bStr != null && _bLoc >= 0) {
                    bVer = _bStr.substring(_bLoc + 5);
                    if (Number(bVer) < 6)
                        O = false
                }
            }
            ;
            this.ggPM = function(t, i, r, a, s) {
                t = String(t);
                i = String(i);
                r = String(r);
                a = String(a);
                s = String(s);
                try {
                    if (e != null) {
                        e.C(t, (new Date).getTime(), i, r, a, s)
                    } else {
                        n.push(t);
                        n.push((new Date).getTime());
                        n.push(i);
                        n.push(r);
                        n.push(a);
                        n.push(s)
                    }
                } catch (e) {}
            }
            ;
            this.ggJsLoaded = function() {
                if (e == null)
                    return;
                for (var t = 0; t < n.length; t += 6)
                    e.C(n[t], n[t + 1], n[t + 2], n[t + 3], n[t + 4], n[t + 5]);
                n = []
            }
        }
        function Metrics() {
            var e;
            var t = cE;
            var n;
            var i;
            var r = 0;
            var a;
            var s = false;
            var o = false;
            var u = 0;
            var l = 0;
            var d = 5;
            var c = 0;
            var f = "";
            var p = 1300;
            var h, v, g;
            var m = 0, y, _, b, S;
            var A;
            var T;
            var k = 0;
            var E = "";
            var P = "";
            var I = "";
            var C = "";
            var w = "";
            var j = "";
            var L = 0;
            var x = false;
            var D = 10;
            var N = "0";
            var R = 0;
            var M = 0;
            var U;
            var B;
            var F = new Array;
            var V = 0;
            var q;
            var H = -1;
            var G = 0;
            var W = 0;
            var K = 0;
            var z = 0;
            var Y = 0;
            var X = 0;
            var Q = new Object;
            var Z = 2;
            var J = 1;
            Q.CS = new Array(2);
            Q.PA = new Array(2);
            Q.PL = new Array(2);
            Q.SA = new Array(2);
            Q.FA = new Array(2);
            Q.SI = new Array(2);
            Q.SR = new Array(2);
            Q.SK = new Array(2);
            Q.CI = new Array(2);
            Q.DI = new Array(2);
            Q.ER = new Array(2);
            Q.SV = new Array(2);
            Q.SH = new Array(2);
            Q.PB = new Array(2);
            Q.II = new Array(2);
            Q.VL = new Array(2);
            Q.PM = new Array(2);
            Q.FP = new Array(2);
            Q.MI = new Array(2);
            Q.Title = new Array(2);
            Q.SS = new Array(2);
            var $ = this;
            this.bT = function() {
                return Q
            }
            ;
            this.getgp = function() {
                return F
            }
            ;
            this.bL = function() {
                return j
            }
            ;
            this.dk = function() {
                return M
            }
            ;
            this.getlfunctionType = function() {
                return m
            }
            ;
            function ee(e) {
                Q["CS"][e] = 0;
                Q["PA"][e] = 0;
                Q["PL"][e] = 0;
                Q["SA"][e] = 0;
                Q["FA"][e] = 0;
                Q["FP"][e] = 0;
                Q["SI"][e] = 0;
                Q["MI"][e] = 0;
                Q["SR"][e] = 0;
                Q["SK"][e] = 0;
                Q["CI"][e] = 0;
                Q["DI"][e] = 0;
                Q["ER"][e] = 0;
                Q["SV"][e] = 0;
                Q["SH"][e] = 0;
                Q["PB"][e] = 0;
                Q["II"][e] = 0;
                Q["VL"][e] = 0;
                Q["PM"][e] = 0;
                Q["SS"][e] = 0
            }
            function te(e, t) {
                var n = Number(e);
                var i = Number(t);
                if (n < i)
                    return -1;
                else if (n == i)
                    return 0;
                return 1
            }
            function ne() {
                bX = f.split(",");
                var e = 0;
                for (e = 0; e < bX.length; e++)
                    if (isNaN(bX[e])) {
                        var t = bX[e].split("%");
                        if (isNaN(t[0]))
                            bX[e] = 0;
                        else
                            bX[e] = Number(t[0]) * Q["VL"][R] / 100
                    }
                bX.sort(te);
                e = bX.length;
                while (--e > 0) {
                    while (bX[e] == bX[e - 1]) {
                        bX.splice(e - 1, 1)
                    }
                }
                if (bX[0] == 0)
                    bX.splice(0, 1)
            }
            function ie(e, t) {
                var n;
                if (t == 1)
                    n = B;
                else
                    n = U;
                var i = -1;
                var r = -1;
                i = n.indexOf("<" + e + ">");
                if (i >= 0) {
                    i += e.length + 2;
                    r = n.indexOf("</" + e + ">", i)
                }
                if (i >= 0 && r > i)
                    return n.substring(i, r);
                return null
            }
            function re(e) {
                var t;
                if (au == 1)
                    t == "";
                else {
                    t = "";
                    if (F.prod.indexOf("iag") >= 0) {
                        if (M)
                            t = P;
                        else
                            t = E;
                        if (e == 2)
                            t += "&pr=iag.cp,cep";
                        else if (e == 1)
                            t = "";
                        else
                            t += "&pr=iag.cp,soc"
                    }
                    if (F.prod.indexOf("vc") >= 0) {
                        if (e == 1)
                            t = "&ig=1";
                        else {
                            var n = ie("censuscategory", M);
                            if (n != null && n != "")
                                t += "&cg=" + encodeURIComponent(n);
                            if (M)
                                t += "&c3=st,a";
                            if (e != 1)
                                if (M)
                                    t += C;
                                else
                                    t += I;
                            t += "&tl=" + encodeURIComponent("dav" + e + "-" + Q["Title"][M].substr(0, 128))
                        }
                    } else if (F.prod.indexOf("sc") >= 0) {
                        var n = ie("censuscategory", M);
                        if (n != null && n != "")
                            t += "&cg=" + encodeURIComponent(n);
                        if (M)
                            t += "&c3=st,a";
                        t += "&ou=" + q + "_" + encodeURIComponent(j.substr(0, 128));
                        if (e == 0) {
                            if (Q["VL"][M] > 0)
                                t += "&sd=" + Math.round(Q["VL"][M])
                        } else {
                            var r = Math.round(Q["PM"][M]);
                            t += "&du=" + r
                        }
                        if (e != 1)
                            if (M)
                                t += C;
                            else
                                t += I;
                        t += "&tl=" + encodeURIComponent("dav" + e + "-" + Q["Title"][M].substr(0, 128))
                    }
                    if (e == 0) {
                        t += "&rnd=" + Math.floor(Math.random() * 1e5);
                        var a = ie("totalchap", M);
                        if (a != null && a != "")
                            t += "&tc=" + a
                    }
                    if (parseInt(S) > 1)
                        J = S;
                    t += "&ch=" + J;
                    t += "&sq=" + i.getSeqNumber();
                    t += "&tp=gg"
                }
                return t
            }
            function ae(e, t, n) {
                var i = ie("iag_" + e, n);
                if (i != null && i != "")
                    return "&pr=iag." + e + "," + encodeURIComponent(i);
                if (t == null)
                    return "";
                return t
            }
            function se(e, t, n, i, r) {
                var a;
                if (F.prod.indexOf("iag") >= 0)
                    a = "";
                else
                    return;
                var s, o, u, l, d, c, f, p, h, v, g, m, y, _, b;
                if (e) {
                    P = "";
                    if (F.iagads == 2)
                        return
                } else {
                    E = "";
                    if (F.iagcontent == 2)
                        return
                }
                if (F.sid != undefined)
                    s = "&pr=iag.sid," + F.sid;
                else
                    s = "";
                if (F.tfid != undefined)
                    o = "&pr=iag.tfid," + F.tfid;
                else
                    o = "";
                u = "&pr=iag.bcr," + F.clientid;
                if (e == 0 || n != "preroll") {
                    var S = ie("iagcategory", 0);
                    if (S == null || S == "")
                        S = ie("category", 0);
                    if (S != null && S != "")
                        l = "&pr=iag.pgm," + encodeURIComponent(S);
                    else
                        l = "&pr=iag.pgm,general";
                    S = ie("title", 0);
                    if (S != null && S != "")
                        d = "&pr=iag.epi," + encodeURIComponent(S);
                    else
                        d = "&pr=iag.epi," + encodeURIComponent(Q["Title"][0].substr(0, 255));
                    c = "&pr=iag.seg,";
                    if (r > 1)
                        c += encodeURIComponent(r);
                    else
                        c += "1";
                    S = ie("pd", 0);
                    if (S == null)
                        S = F.pd;
                    if (S != null && S != "")
                        f = "&pr=iag.pd," + encodeURIComponent(S);
                    else
                        f = "";
                    S = ie("oad", 0);
                    if (S != null && S != "")
                        p = "&pr=iag.oad," + encodeURIComponent(S);
                    else
                        p = "";
                    s = ae("sid", s, 0);
                    o = ae("tfid", o, 0);
                    u = ae("bcr", u, 0);
                    l = ae("pgm", l, 0);
                    d = ae("epi", d, 0)
                }
                m = ae("fp", m, e);
                b = ae("cust1", b, e);
                if (e) {
                    h = "&pr=iag.brn," + F.clientid;
                    v = "&pr=iag.cte," + encodeURIComponent(t);
                    if (n == "midroll")
                        g = "&pr=iag.ap,mid";
                    else if (n == "postroll")
                        g = "&pr=iag.ap,post";
                    else
                        g = "&pr=iag.ap,pre";
                    s = ae("sid", s, e);
                    o = ae("tfid", o, e);
                    u = ae("bcr", u, e);
                    h = ae("brn", h, e);
                    v = ae("cte", v, e);
                    l = ae("pgm", l, e);
                    d = ae("epi", d, e);
                    c = ae("seg", c, e);
                    f = ae("pd", f, e);
                    p = ae("oad", p, e);
                    y = ae("pod", y, e);
                    _ = ae("apt", _, e);
                    P = s + o + u + l + d + c + f + h + g + v + p + m + y + _ + b
                } else
                    E = s + o + u + l + d + c + f + p + m + b
            }
            function oe(e, t, n, i, r) {
                var a = "";
                if (e)
                    C = "";
                else
                    I = "";
                var s;
                if (e == 1)
                    s = B;
                else
                    s = U;
                var o = 0;
                var u = false;
                var l;
                var d;
                var c, f;
                while (u == false) {
                    o = s.indexOf("<nol_", o);
                    if (o < 0) {
                        u = true;
                        break
                    }
                    l = s.indexOf(">", o);
                    if (l < 0) {
                        u = true;
                        break
                    }
                    c = s.substring(o + 5, l);
                    d = s.indexOf("</", l + 1);
                    if (d < 0) {
                        u = true;
                        break
                    }
                    f = s.substring(l + 1, d);
                    o = d + 7;
                    var p = encodeURIComponent(c);
                    if (p.indexOf("%") < 0) {
                        if (c.length > 32)
                            c = c.substring(0, 31);
                        if (f.length > 254)
                            f = f.substring(0, 253);
                        if (c.indexOf("raw_") > -1) {
                            c = c.substr(4);
                            a += "&" + c + "=" + f
                        } else
                            a += "&" + c + "=" + encodeURIComponent(f)
                    }
                }
                if (e)
                    C = a;
                else
                    I = a
            }
            function ue(e) {
                if (e == 0 && F.legacybeacon == "true") {
                    var t = "&tl=" + (Q["Title"][M] ? Q["Title"][M].substr(0, 128) : "");
                    var n = ie("censuscategory", M);
                    if (n != null && n != "")
                        t += "&cg=" + encodeURIComponent(n);
                    if (M)
                        t += "&c3=st,a";
                    t += "&rnd=" + Math.floor(Math.random() * 1e5);
                    i.legacyReport("legacyBeacon||;||" + F.clientid, t)
                }
                var a = re(e);
                i.report(ve(), e, a);
                r = 0;
                Z = e
            }
            function le() {
                var e = re(1);
                i.bp(e);
                return
            }
            this.bC = function() {
                var e;
                if (window.top !== window.self)
                    return;
                try {
                    e = window.top.document.hasFocus()
                } catch (t) {
                    e = a
                }
                if (e == true)
                    o = true;
                if (V == 1) {
                    if (e == true)
                        Q["FA"][R] += 1;
                    Q["FP"][R] += 1
                }
            }
            ;
            function de() {
                if (window.top !== window.self)
                    return;
                var e = false;
                try {
                    var t = window.top.document.hasFocus()
                } catch (t) {
                    if (window.top == window.self)
                        e = true
                }
                if (e) {
                    if (window.top.addEventListener)
                        window.top.addEventListener("focus", ce, false);
                    else if (window.top.attachEvent)
                        window.top.attachEvent("onfocus", ce);
                    if (window.top.addEventListener)
                        window.top.addEventListener("blur", fe, false);
                    else if (window.top.attachEvent)
                        window.top.attachEvent("onblur", fe)
                }
                return e
            }
            function ce() {
                a = true
            }
            function fe() {
                a = false
            }
            function pe() {
                o = false;
                Q["FA"][0] = Q["FA"][1] = 0;
                Q["FP"][0] = Q["FP"][1] = 0
            }
            function he(e) {
                var t = "";
                var n;
                var i = R;
                if (Q["FP"][i] > 0 && o == true)
                    n = Math.round(Q["FA"][i] * 100 / Q["FP"][i]);
                else
                    n = 100;
                if (e != null && e != "")
                    t = e;
                else
                    t = Q["PL"][i];
                t += "," + n;
                if (Number(Q["PM"][i]) < e)
                    Q["PM"][i] = e;
                return t
            }
            function ve() {
                var e = "NA";
                if (u > 0 || l > 0) {
                    e = Math.round(u * 100 / (u + l)) + "%";
                    if (s)
                        e = "u" + e
                }
                return e
            }
            function ge(e) {
                try {
                    xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
                    xmlDoc.async = "false";
                    xmlDoc.loadXML(e);
                    return xmlDoc
                } catch (t) {
                    try {
                        bv = new DOMParser;
                        xmlDoc = bv.parseFromString(e, "text/xml");
                        return xmlDoc
                    } catch (e) {
                        alert(e.message)
                    }
                }
                return null
            }
            this.init = function(r, a, o, u) {
                N = a;
                var l = ge("<vi>" + u + "</vi>");
                var c = l.firstChild.firstChild;
                var h = 0;
                while (c != undefined && h < 20) {
                    if (c.firstChild != null)
                        F[c.nodeName] = c.firstChild.nodeValue;
                    c = c.nextSibling;
                    h++
                }
                if (au != 1) {
                    if (F.sfcode == undefined || F.sfcode.length != 2)
                        o = AddressProtocol + "//secure-us.imrworldwide.com/cgi-bin/m?";
                    else
                        o = AddressProtocol + "//secure-" + F.sfcode + ".imrworldwide.com/cgi-bin/m?";
                    o += "ci=" + F.clientid;
                    if (F.cisuffix != undefined && F.cisuffix != "")
                        o += F.cisuffix;
                    if (F.vcid != undefined && F.vcid != "")
                        o += "&c6=vc," + F.vcid;
                    if (F.aJ != undefined && F.aJ != "")
                        o += "&c4=mn," + encodeURIComponent(F.aJ);
                    o += "&cc=1"
                }
                e = o;
                if (F.prod == undefined)
                    F.prod = "vc";
                this._ggtrackid = F.clientid;
                if (F.vcid != null)
                    this._ggtrackid += "." + F.vcid;
                if (r == "genjsplayer")
                    n = new GenJsPlayerEventProcessor;
                else
                    n = new EventProcessor;
                this._ggplayername = "gj3";
                if (F["msgmax"] != null && F["msgmax"] > 0)
                    p = F["msgmax"];
                if (F["msgint"] != null && F["msgint"] != "")
                    f = F["msgint"];
                if (F["focusint"] != null && F["focusint"] >= 0)
                    d = F["focusint"];
                if (O) {
                    if (navigator.appName.toLowerCase().indexOf("safari") != -1)
                        window.addEventListener("pagehide", function() {
                            le()
                        }, false);
                    else if (window.addEventListener) {
                        window.addEventListener("beforeunload", function() {
                            le()
                        }, false)
                    } else if (window.attachEvent)
                        window.attachEvent("onbeforeunload", le)
                }
                i = new cz(t,a,e,true,true,$);
                if (d != 0) {
                    s = de();
                    v = setInterval(this.bC, d * 1e3)
                }
                this.C("1", (new Date).getTime(), window.location.href, document.referrer)
            }
            ;
            this.aD = function(e, t) {
                var n = "";
                var i = 0;
                var r = 1;
                var e = R;
                if (Q["CS"][e] != 0 && Q["PA"][e] > 0 && Q["VL"][e] > 0) {
                    if (Q["PA"][e] >= Q["VL"][e])
                        i = 99;
                    else if (Q["VL"][e] > 0)
                        i = Math.round(Q["PA"][e] * 100 / Q["VL"][e]);
                    else
                        i = 66;
                    if (Q["FP"][e] > 0 && o == true) {
                        r = Q["FA"][e] / Q["FP"][e];
                        i = Math.round(i * .8 + i * r * .2)
                    }
                    if (Q["MI"][e] > 0 && Q["SI"][e] <= 0)
                        i -= 10;
                    else if (Q["SI"][e] > 0)
                        i += 5;
                    if (Q["SR"][e] > 0)
                        ;i += 10;
                    if (Q["SH"][e] > 0 || Q["SV"][e] > 0 || Q["PB"][e] > 0 || Q["CI"][e] > 0)
                        i = 99;
                    if (Q["II"][e] > 0)
                        i += 10;
                    if (Q["ER"][e] > 0 && Q["ER"][e] <= 5)
                        i = Q["ER"][e] * 20;
                    if (i > 99)
                        i = 99;
                    n = t + "," + 50 + "," + i + "," + Math.round(r * 100) + "|||";
                    Q["CS"][e] = 0
                }
                if (G > 0) {
                    n = t + "," + "25" + "," + G + "," + W + "," + K + "|||" + n;
                    G = 0;
                    W = 0;
                    K = 0
                }
                return n
            }
            ;
            this.C = function(e, t, a, s, o, u) {
                var l = null;
                var d = 0;
                var c;
                var f, h, v;
                var g, A;
                var T = e;
                if (m == T && y == a && _ == s && b == o && S == u)
                    return;
                m = T;
                y = a;
                _ = s;
                b = o;
                S = u;
                x = false;
                if (e.indexOf("cust:") == 0)
                    l = n.genericEvent(e, t, a, s, o, u);
                else
                    l = n.cs(e, t, a, s, o, u);
                if (l == null || l == "")
                    return;
                var E = l.split(",");
                T = Number(E[1]);
                a = E[2];
                s = E[3];
                M = R;
                switch (T) {
                case 1:
                    w = l;
                    if (y != null)
                        j = y;
                    return;
                case 51:
                    if (w != null) {
                        w = t + ",1," + y;
                        if (_ != null && _ != "")
                            w += "," + _;
                        if (y != null)
                            j = y;
                        return
                    } else
                        l = t + ",51," + y;
                    if (_ != null)
                        l += "," + _;
                    j = y;
                    break;
                case 2:
                    break;
                case 3:
                case 15:
                    L = 0;
                    k = 0;
                    if (s == "preroll" || s == "postroll" || s == "midroll" || s == "ad") {
                        f = 1;
                        B = l
                    } else {
                        f = 0;
                        U = l
                    }
                    q = s;
                    R = f;
                    M = f;
                    ee(f);
                    if (T == 15) {
                        Q["CS"][f] = 1;
                        V = 1
                    }
                    var P = unescape(ie("length", R));
                    if (P != null && !isNaN(P))
                        P = Number(P);
                    else
                        P = 30;
                    Q["VL"][R] = P;
                    var I = ie("title", R);
                    if (I != null && I != "")
                        Q["Title"][R] = I;
                    else
                        Q["Title"][R] = a;
                    if (R == 0)
                        ne();
                    X = 0;
                    Q["SS"][R] = X;
                    J = S || 1;
                    se(f, a, s, o, u);
                    oe(f, a, s, o, u);
                    break;
                case 4:
                    L = 0;
                    h = a;
                    if (isNaN(h) || h == 0)
                        h = Q["PL"][R];
                    else
                        h = Number(a);
                    f = h - Q["PL"][R];
                    Q["PA"][R] += f;
                    Q["PL"][R] = h;
                    if (Number(Q["PM"][R]) < h)
                        Q["PM"][R] = h;
                    c = this.aD(R, t);
                    R = 0;
                    V = 0;
                    X = 0;
                    break;
                case 5:
                    L++;
                    h = a;
                    X = 0;
                    if (isNaN(h)) {
                        c = genError("InvPlayParam", a);
                        break
                    } else
                        h = Number(a);
                    if (h != 0 || Q["PA"][R] == 0)
                        Q["PL"][R] = h;
                    Q["CS"][R] = 1;
                    V = 1;
                    i.af(he(h));
                    Q["SS"][R] = X;
                    break;
                case 6:
                    L++;
                    h = a;
                    if (isNaN(h)) {
                        c = genError("InvPauseParam", a);
                        break
                    } else
                        h = Number(a);
                    f = h - Q["PL"][R];
                    if (f > 0)
                        Q["PA"][R] += f;
                    Q["PL"][R] = h;
                    Q["CS"][R] = 1;
                    V = 0;
                    i.af(he(h));
                    break;
                case 7:
                    Q["CS"][R] = 1;
                    k++;
                    if (Q["SS"][R] == 1 || Q["SS"][R] == null)
                        return;
                    h = a;
                    if (isNaN(h)) {
                        c = genError("InvStopParam", a);
                        break
                    } else
                        h = Number(a);
                    f = Number(h) - Q["PL"][R];
                    if (f > 0) {
                        Q["PA"][R] += f
                    }
                    Q["PL"][R] = h;
                    if (Number(Q["PM"][R]) < h)
                        Q["PM"][R] = h;
                    if (Q["PA"][R] > 0)
                        c = this.aD(R, t);
                    V = 0;
                    X = 1;
                    Q["SS"][R] == X;
                    Q["PA"][R] = 0;
                    Q["FA"][R] = 0;
                    Q["FP"][R] = 0;
                    if (R == 0)
                        ne();
                    break;
                case 8:
                    L++;
                    h = a;
                    if (isNaN(h)) {
                        c = genError("InvSeekParam1", a);
                        break
                    } else
                        h = Number(a);
                    v = s;
                    if (isNaN(v)) {
                        c = genError("InvSeekParam", s);
                        break
                    } else
                        v = Number(s);
                    f = h - Q["PL"][R];
                    if (f > 0) {
                        Q["PA"][R] += f
                    }
                    Q["PL"][R] = v;
                    Q["CS"][R] = 1;
                    i.af(he(v));
                    break;
                case 9:
                    if (a || a.toLowerCase().indexOf("on") || a == 1)
                        Q["MI"][R] += 1;
                    else
                        Q["MI"][R] -= 1;
                    break;
                case 10:
                    if (a || a.toLowerCase().indexOf("on") || a == 1)
                        Q["SR"][R] += 1;
                    pe();
                    break;
                case 11:
                    if (!isNaN(a)) {
                        if (H < 0)
                            H = a;
                        else {
                            if (a > H)
                                Q["SI"][R] += 1;
                            H = a
                        }
                    }
                    break;
                case 12:
                    Q["DI"][R] += 1;
                    break;
                case 13:
                case 14:
                    break;
                case 16:
                case 22:
                    Q["CI"][R] += 1;
                    break;
                case 17:
                    Q["SH"][R] += 1;
                    break;
                case 18:
                    Q["SV"][R] += 1;
                    break;
                case 19:
                case 20:
                    Q["PB"][R] += 1;
                    break;
                case 21:
                    Q["II"][R] += 1;
                    break;
                case 23:
                    Q["ER"][R] += 1;
                    break;
                case 24:
                    break;
                case 25:
                    G += 1;
                    W += Number(a);
                    if (K < Number(a))
                        K = a;
                    return;
                case 49:
                    if (isNaN(a))
                        return;
                    h = Number(a);
                    if (h <= 1 || V != 1)
                        return;
                    i.af(he(h));
                    if (R != 0 || bX.length == 0)
                        return;
                    var C = Q["PA"][R] + (h - Q["PL"][R]);
                    if (C < bX[0])
                        return;
                    Q["PA"][R] += h - Q["PL"][R];
                    Q["PL"][R] = a;
                    c = this.aD(R, t);
                    bX.splice(0, 1);
                    break;
                default:
                    break
                }
                var O = 10;
                if (isNaN(Q["VL"][R]))
                    O = 10;
                else
                    O = Q["VL"][R] / 60 * D;
                if (O > 100)
                    O = 100;
                if (O < 20)
                    O = 20;
                if (x == true)
                    return;
                if (L > O)
                    if (!(T == 3 || T == 15 || T == 4 || T == 7))
                        return;
                if (L > 5e3)
                    return;
                if (c != null)
                    l = c + l;
                if (w != "") {
                    l = w + "|||" + l;
                    w = ""
                }
                if (M != 1)
                    g = Number(F.trackcontent);
                else
                    g = Number(F.trackads);
                if (!isNaN(g)) {
                    switch (g) {
                    case 0:
                        return;
                    case 2:
                    case 3:
                        A = ie("ggignr", M);
                        if (A != null && A == "1")
                            return;
                        break;
                    default:
                        break
                    }
                }
                d = i.ct(l, ve());
                r += d;
                var N = z;
                if (T == 7) {
                    ue(2);
                    if (R == 0)
                        Y = 1;
                    else {
                        M = 0;
                        R = 0
                    }
                    N = 0
                } else if (T == 49) {
                    ue(1);
                    N = 0
                } else if (T == 15) {
                    ue(0);
                    N = 0;
                    if (R == 0)
                        Y = 0
                } else if (T == 3) {
                    if (z == 5) {
                        ue(0);
                        N = 0;
                        if (R == 0)
                            Y = 0
                    } else
                        N = 3
                } else if (T == 5) {
                    if (z == 3) {
                        ue(0);
                        N = 0
                    } else if (a == 0) {
                        if (Y == 1 && R == 0) {
                            Q["PM"][R] = 0;
                            ue(0);
                            N = 0;
                            Y = 0
                        } else
                            N = 5
                    } else
                        N = 0
                } else if (T == 6 && a != 0)
                    N = 0;
                else if (T == 8 && s != 0)
                    N = 0;
                z = N;
                if (Number(r) >= Number(p))
                    ue(1)
            }
            ;
            this.bS = function(e, t, n, i, r, a) {
                this.C("cust:" + e, t, n, i, r, a)
            }
        }
        function CookieManager() {
            var e = "|||";
            var t = "_ggCvar";
            var n = "_ggMCvar";
            var i = 45e3;
            var r = null;
            var a = 0;
            var s = 365 * 24 * 60 * 60 * 1e3;
            this.bw = function(e) {
                r = d(32);
                return r
            }
            ;
            this.bz = function() {
                return a
            }
            ;
            this.clearMessageCookie = function() {}
            ;
            this.bE = function() {
                a++;
                return a
            }
            ;
            this.aR = function() {
                return r
            }
            ;
            function o(e, t) {}
            function u(e) {}
            function l(e) {}
            function d(e) {
                var t = "";
                var n = "";
                for (var i = 0; i < e; i++) {
                    n = Math.floor(Math.random() * 36).toString(36);
                    t += Math.floor(Math.random() * 2) ? n.toUpperCase() : n.toLowerCase()
                }
                return t
            }
        }
        function cy(e, t, n, i, r) {
            var a = 'END"/></GGC>';
            var s = "|||";
            var o = "^|^^";
            var u = "";
            this.bj = Math.floor(Math.random() * 1e5) + 1;
            var l = '<GGC><H value="' + e + "," + (new Date).getTimezoneOffset() / -60 + "," + t + "." + this.bj + "," + i + "," + r + '"/><L value="';
            this.bA = function(e) {
                if (u == "")
                    u = l + e + s;
                else
                    u += e + s;
                return u
            }
            ;
            this.bg = function(e) {
                if (u == "")
                    return u;
                var t = u + a;
                u = "";
                return t
            }
            ;
            this.bx = function(e) {
                if (u == "")
                    u = l;
                if (e != "")
                    u += (new Date).getTime() + ",49," + e + s;
                return u + (new Date).getTime() + ",2" + s + a
            }
        }
        function cz(e, t, n, i, r, a) {
            var s = "logthisjs.php";
            var o = n;
            var u = "logthisjs.php";
            var l = "postjs.php";
            var d;
            var c = new CookieManager;
            var f = null;
            var p = "NA";
            var h = false;
            var v = c.bE();
            var g;
            var m = "GET";
            var y = a;
            d = new cw(n,n + u,n + l,m);
            if (i != null)
                h = i;
            h = false;
            c.bw(t);
            c.bz();
            if (t == null)
                t = "0";
            f = new cy(e,t,v,y._ggtrackid,y._ggplayername);
            var _ = new bo;
            var b;
            var S;
            var A = '|||END"/></GGC>';
            var T = 'END"/></GGC>';
            var k = "^|^^";
            var E = "|||";
            var P;
            var I = 0;
            if (_ggeom == 0)
                S = 0;
            else
                S = 2;
            var C = "";
            var b = String.fromCharCode(56) + String.fromCharCode(103) + String.fromCharCode(36) + String.fromCharCode(15) + String.fromCharCode(126) + String.fromCharCode(3) + String.fromCharCode(71) + String.fromCharCode(91) + String.fromCharCode(100) + String.fromCharCode(7) + String.fromCharCode(17) + String.fromCharCode(31) + String.fromCharCode(95) + String.fromCharCode(28) + String.fromCharCode(64) + String.fromCharCode(14);
            P = _.aw(b, T);
            this.report = function(e, t, n) {
                p = e;
                var i = f.bg(e);
                i = "<m v=" + S + " c=" + c.aR() + ">" + _.aw(b, i) + "<%2Fm>";
                d.report(i, n);
                if (t == 0)
                    I = 1
            }
            ;
            this.legacyReport = function(e, t) {
                d.report(e, t)
            }
            ;
            this.getSeqNumber = function() {
                return f.bj
            }
            ;
            this.bp = function(e) {
                var t = f.bx(C);
                t = "<m v=" + S + " c=" + c.aR() + ">" + _.aw(b, t) + "<%2Fm>";
                d.report(t, e)
            }
            ;
            this.ct = function(e, t) {
                p = t;
                var n = f.bA(e);
                var i = n.length;
                return i
            }
            ;
            this.af = function(e) {
                if (O) {
                    var t = y.getlfunctionType();
                    if (t == 5 || t == 8)
                        e = "";
                    C = e
                }
            }
        }
        function cw(e, t, n, i) {
            var r = 2;
            var a = 10;
            var s = e;
            var o = t;
            var u = n;
            var l = false;
            var d;
            var c = 0;
            var f = "GET-CONFIRM";
            var p = new Image(1,1);
            var h = null;
            if (i != null)
                f = i;
            if (f == "GET-CONFIRM") {
                if (window.addEventListener) {
                    p.addEventListener("load", loadSuccess, false);
                    p.addEventListener("error", bn, false)
                } else if (window.attachEvent) {
                    p.attachEvent("onload", loadSuccess);
                    p.attachEvent("onerror", bn)
                }
            }
            this.report = function(e, t) {
                if (e == null || e == "")
                    return;
                if (f != "POST")
                    v(e, t)
            }
            ;
            function v(e, t) {
                d = e;
                l = true;
                if (f == "GET")
                    p = new Image(1,1);
                var n = s;
                var i = false;
                if (e.indexOf("legacyBeacon||;||") > -1) {
                    var r = e.split("||;||")[1];
                    var a = s.indexOf("ci=") + 3;
                    var o = s.indexOf("&", a);
                    var u = s.substring(a, o);
                    n = s.replace(u, r);
                    i = true
                }
                if (i)
                    p.src = n + t;
                else {
                    if (au == 1)
                        p.src = n + t + "?HEX40=" + e;
                    else
                        p.src = n + t + "HEX40%3D" + e
                }
            }
        }
        function bo() {
            function e(e, t) {
                var n = "";
                if (e == null || t == null)
                    return t;
                var i = e.split("");
                var r = i.length;
                var a = t.split("");
                var s = a.length;
                for (var o = 0; o < s; o++) {
                    var u = a[o].charCodeAt(0) ^ (s % 10 | i[o % r].charCodeAt(0));
                    if (u == 0)
                        n += a[o];
                    else
                        n += String.fromCharCode(u)
                }
                return n
            }
            function t(e) {
                var t, n, i;
                var r;
                r = "";
                i = e.length;
                for (t = 0; t < i; t++) {
                    n = e.charCodeAt(t);
                    if (n < 128) {
                        r += String.fromCharCode(n)
                    } else if (n > 127 && n < 2048) {
                        r += String.fromCharCode(n >> 6 | 192);
                        r += String.fromCharCode(n & 63 | 128)
                    } else if (n < 65536) {
                        r += String.fromCharCode(n >> 12 | 224);
                        r += String.fromCharCode(n >> 6 & 63 | 128);
                        r += String.fromCharCode(n & 63 | 128)
                    } else {
                        r += String.fromCharCode(n >> 18 | 240);
                        r += String.fromCharCode(n >> 12 & 63 | 128);
                        r += String.fromCharCode(n >> 6 & 63 | 128);
                        r += String.fromCharCode(n & 63 | 128)
                    }
                }
                return r
            }
            this.urlencode = function(e) {
                var t = {};
                var n = [];
                var i = e.toString();
                var r = function(e, t, n) {
                    var i = [];
                    i = n.split(e);
                    return i.join(t)
                };
                t["'"] = "%27";
                t["("] = "%28";
                t[")"] = "%29";
                t["*"] = "%2A";
                t["~"] = "%7E";
                t["!"] = "%21";
                t["%20"] = "+";
                i = encodeURIComponent(i);
                for (se in t) {
                    var a = t[se];
                    i = r(se, a, i)
                }
                return i.replace(/(\%([a-z0-9]{2}))/g, function(e, t, n) {
                    return "%" + n.toUpperCase()
                });
                return i
            }
            ;
            this.aw = function(n, i) {
                return this.urlencode(e(n, t(i)))
            }
        }
        function EventProcessor() {
            this.bW = -1;
            this.cx = "NA";
            var e = -1;
            var t = null;
            var n = null;
            var i = null;
            var r = null;
            var a = null;
            var s = null;
            var o = null;
            var u = null;
            var l = null;
            var d = null;
            var c = null;
            var f = null;
            this.getCurrentEvent = function() {
                return this.bW
            }
            ;
            this.genericEvent = function(e, t, n, u, l, d) {
                if (i == e && r == n && a == u && s == l && o == d)
                    return null;
                var c = p(e, t, n, u, l, d);
                if (c != null) {
                    i = e;
                    r = n;
                    a = u;
                    s = l;
                    o = d
                }
                return c
            }
            ;
            this.cs = function(n, i, r, a, s, o) {
                if (u == n && l == r && d == a && c == s && f == o)
                    return null;
                var p = null;
                if (n == 1) {
                    this.bW = n;
                    t = r;
                    p = i + "," + this.bW + "," + t;
                    if (a != null)
                        p += "," + a
                } else if (n == 10 || n == 9) {
                    this.bW = n;
                    if (r == false)
                        p = i + "," + this.bW + "," + "0";
                    else if (r == true)
                        p = i + "," + this.bW + "," + "1";
                    else
                        p = i + "," + this.bW + "," + r
                } else if (n == 12) {
                    this.bW = n;
                    p = i + "," + this.bW
                } else if (n == 49) {
                    {
                        this.bW = n;
                        e = r;
                        p = i + "," + this.bW + "," + r
                    }
                } else if (n == 11) {
                    this.bW = n;
                    p = i + "," + this.bW + "," + r
                } else if (n == "videoInfo")
                    h(r);
                else
                    p = this.C(n, i, r, a, s, o);
                if (p != null) {
                    u = n;
                    l = r;
                    d = a;
                    c = s;
                    f = o
                }
                return p
            }
            ;
            this.C = function(e, t, n, i, r, a) {}
            ;
            this.getVideoInfo = function(e, t) {
                var i = "";
                var r;
                if (e != null)
                    i = "<length>" + e + "</length>";
                if (t != null)
                    i += "<uurl>" + t + "</uurl>";
                if (n != null) {
                    i += n;
                    n = null
                }
                return i
            }
            ;
            function p(e, t, n, i, r, a) {
                if (e == null || e.length <= 5)
                    return null;
                var s = t + "," + e;
                if (n != null)
                    s += "," + n;
                if (i != null)
                    s += "," + i;
                if (r != null)
                    s += "," + r;
                if (a != null)
                    s += "," + a;
                return s
            }
            function h(e) {
                n = e
            }
        }
        function aq(e, t) {
            var n = e.indexOf("<" + t + ">") + t.length + 2;
            var i = e.indexOf("</" + t + ">", n);
            if (n >= 0 && i > n)
                return e.substring(n, i);
            return null
        }
        function GenJsPlayerEventProcessor() {
            this.inheritFrom = EventProcessor;
            this.inheritFrom();
            var e = null;
            var t = null;
            this.C = function(n, i, r, a, s, o) {
                var u = "";
                if (n == 3 && this.bW != 3 || n == 15 && this.bW != 15) {
                    var l = aq(s, "censuscategory");
                    var d = aq(s, "category");
                    if (d == null && l != null && l != "")
                        s += "<category>" + l + "</category>";
                    this.cx = aq(s, "length");
                    u += "," + r + "," + a + "," + s;
                    if (o && o != "" && !isNaN(o))
                        u += "," + o
                } else if (n == 1 || n == 51 || n == 8) {
                    u += "," + r;
                    if (a != null)
                        u += "," + a
                } else if (n == 6 && e != true && r != "00:00") {
                    e = true;
                    t = r;
                    u += "," + t
                } else if (n == 5 && e != false) {
                    e = false;
                    u += "," + r
                } else if (n == 7) {
                    e = true;
                    t = "0";
                    u += "," + r
                } else if (n == 9) {
                    if (r == false)
                        u += ",Off";
                    else
                        u += ",On"
                } else {
                    u += "," + r;
                    if (a != null)
                        u += "," + a
                }
                if (u == "")
                    return null;
                else {
                    this.bW = n;
                    return i + "," + this.bW + u
                }
            }
        }
        videojs.registerPlugin("nielsen", function(e, t, n, i) {
            console.log("plugin nielsen New SDK v1.0");
            function r(e) {
                this.player = e;
                this.media;
                this.ie = navigator.userAgent.indexOf("MSIE") != -1;
                this.cur_movie;
                this.cur_position = 0;
                this.seekPosition = 0;
                this.seeking = false;
                this.cur_volume = 0;
                this.cur_mute = false;
                this.timer = 0;
                this.playStateTimer;
                this.queryInterval = 2;
                this.duration = 0;
                this.fullScreen = false;
                this.cur_movie_url;
                this.content = "content";
                this.category = n;
                this.subcategory = i;
                this.playerStr = "";
                this.metaData = {};
                this.prevState = 0;
                this.movieStatus = {
                    loaded: false,
                    played: false,
                    stopped: true
                };
                this.uniqueID = "";
                this.debug = true;
                this.startPorstRollAdv = false;
                this.lastSecond = 0;
                this.lastSecondPrev = 0;
                var t = this;
                this.logger = function(e, n, i) {
                    if (t.debug) {
                        console.log("LOG Stream: eventName : " + e + " - Sending event: " + n + " - Value: " + i)
                    }
                }
            }
            var a = this;
            var s = new r(a);
            var o = {};
            var u = false;
            var l = false;
            var d = false;
            var c;
            a.on("loadedmetadata", function(n) {
                s.movieStatus.loaded = true;
                s.cur_movie = e;
                s.duration = a.mediainfo.duration.toFixed();
                s.cur_movie_url = t;
                s.prevState = "Loading";
                s.cur_movie = a.title ? a.title : a.cur_movie_url;
                s.uniqueID = "";
                var i = "content";
                s.type = "content";
                var r = "";
                s.prevState = 0;
                s.timer = 0;
                var u = s.movieStatus.played ? 15 : 3;
                var l = s.category;
                if (s.subcategory != "") {
                    l = l + ", " + s.subcategory
                }
                var d = new Date;
                var f = d.getFullYear() + "" + ("0" + (d.getMonth() + 1)).slice(-2) + "" + ("0" + d.getDay()).slice(-2) + " " + ("0" + d.getHours()).slice(-2) + ":" + ("0" + d.getMinutes()).slice(-2) + ":" + ("0" + d.getSeconds()).slice(-2);
                var p = a.getAttribute("id");
                p = p.replace("player", "");
                var h = {
                    type: "content",
                    assetid: p,
                    program: l,
                    title: e,
                    length: a.mediainfo.duration.toFixed(),
                    airdate: f,
                    isfullepisode: "y",
                    adloadtype: "2"
                };
                c = h;
                nSdkInstance.ggPM("3", h);
                s.logger("loadedmetadata", u, h);
                o.eventCode = s.movieStatus.played ? 15 : 3;
                o.type = s.type;
                o.url = s.cur_movie_url;
                o.title = e;
                o.sent = false
            });
            a.ready(function() {
                a.on("ima3-ad-error", function() {
                    if (!o.sent) {
                        var e = a.currentTime().toFixed();
                        e = parseInt(e);
                        nSdkInstance.ggPM("5", e);
                        o.sent = true;
                        s.movieStatus.played = true;
                        s.movieStatus.stopped = false;
                        s.logger("ima3-ad-error", o.eventCode, o);
                        o.sent = true
                    }
                });
                a.on("ima3error", function() {
                    if (!o.sent) {
                        s.logger("ima3error", o.eventCode, o);
                        o.sent = true
                    }
                });
                a.on("error", function() {
                    var e = a.error();
                    console.log("Player error ", e.code, e.type, e.message);
                    if (e.code == -2 && o.sent) {
                        var t = parseInt(s.cur_position);
                        nSdkInstance.ggPM("57", t);
                        nSdkInstance.ggPM("7", t);
                        u = true;
                        l = true
                    }
                });
                a.on("ads-ad-ended", function() {
                    var e = a.currentTime().toFixed();
                    e = parseInt(e);
                    if (!o.sent) {
                        nSdkInstance.ggPM("5", e);
                        s.logger("ads-ad-ended", 5, o);
                        o.sent = true;
                        s.movieStatus.played = true;
                        s.movieStatus.stopped = false
                    }
                });
                a.on("play", function(e) {
                    s.movieStatus.played = true;
                    s.movieStatus.stopped = false;
                    if (s.movieStatus.loaded && o.sent && !s.seeking) {
                        var t = a.currentTime().toFixed();
                        t = parseInt(t);
                        if (l == false) {
                            nSdkInstance.ggPM("5", t);
                            s.logger("play", 5, t)
                        }
                        s.seeking = false;
                        s.lastSecond = t;
                        s.cur_position = t
                    }
                });
                a.on("pause", function(e) {
                    s.movieStatus.played = false;
                    s.movieStatus.stopped = true;
                    if (o.sent) {
                        if (!s.seeking) {
                            var t = a.currentTime().toFixed()
                        } else {
                            var t = s.lastSecondPrev
                        }
                        t = parseInt(t);
                        nSdkInstance.ggPM("6", t);
                        s.logger("pause", 6, t)
                    }
                });
                a.on("ended", function(e) {
                    if (o.sent && s.movieStatus.loaded) {
                        s.movieStatus.stopped = true;
                        s.movieStatus.loaded = false;
                        var t = a.currentTime().toFixed();
                        t = parseInt(t);
                        nSdkInstance.ggPM("57", t);
                        if (d == true) {
                            nSdkInstance.ggPM("7", t);
                            l = true
                        }
                        s.logger("ended", 57, t);
                        u = true;
                        s.startPorstRollAdv = true
                    } else if (s.startPorstRollAdv) {
                        var t = s.cur_position;
                        t = parseInt(t);
                        nSdkInstance.ggPM("7", t);
                        l = true;
                        d = true
                    }
                });
                a.on("beforeunloadpage", function(e) {
                    if (!u && o.sent && !s.movieStatus.stopped && s.movieStatus.loaded) {
                        s.movieStatus.stopped = true;
                        s.movieStatus.loaded = false;
                        var t = a.currentTime().toFixed();
                        t = parseInt(t);
                        nSdkInstance.ggPM("57", t);
                        nSdkInstance.ggPM("7", t);
                        s.cur_position = 0;
                        s.logger("ended - beforeunloadpage", 7, t)
                    }
                });
                var e = navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i);
                if (e) {
                    window.addEventListener("pagehide", function(e) {
                        if (!u && o.sent && !s.movieStatus.stopped && s.movieStatus.loaded) {
                            s.movieStatus.stopped = true;
                            s.movieStatus.loaded = false;
                            var t = a.currentTime().toFixed();
                            t = parseInt(t);
                            nSdkInstance.ggPM("57", t);
                            nSdkInstance.ggPM("7", t);
                            s.cur_position = 0;
                            s.logger("ended iOS - beforeunloadpage", 7, t)
                        }
                    }, false)
                }
                a.on("timeupdate", function(e) {
                    if (!o.sent && this.currentTime() > 0) {
                        var t = a.currentTime().toFixed();
                        t = parseInt(t);
                        nSdkInstance.ggPM("5", t);
                        o.sent = true;
                        s.movieStatus.played = true;
                        s.movieStatus.stopped = false;
                        s.movieStatus.loaded = true
                    }
                    if (s.movieStatus.stopped) {
                        return
                    }
                    var n = this.currentTime();
                    var i = this.currentTime().toFixed();
                    var r = Math.abs(s.cur_position - i);
                    if (r > 2 && !s.seeking) {
                        s.seeking = true;
                        s.lastSecondPrev = Math.round(s.cur_position);
                        s.cur_position = n;
                        s.seekPosition = Math.round(s.cur_position);
                        if (s.debug) {
                            console.log("updatePos for seek == " + s.seekPosition)
                        }
                    }
                    if (s.movieStatus.loaded && o.sent && !s.seeking && l == false) {
                        if (n > s.lastSecond) {
                            s.lastSecond = s.lastSecond + 1;
                            s.cur_position = i;
                            nSdkInstance.ggPM("49", parseInt(i))
                        }
                    }
                });
                a.on("seeked", function(e) {
                    var t = {};
                    t.current = a.currentTime().toFixed();
                    t.seekPosition = s.seekPosition;
                    s.seeking = false;
                    if (!o.sent) {
                        return
                    }
                    if (l == true) {
                        nSdkInstance.ggPM("3", c);
                        l = false;
                        s.movieStatus.played = true;
                        s.movieStatus.stopped = false;
                        t.seekPosition = 0;
                        s.lastSecond = 0
                    } else {
                        nSdkInstance.ggPM("8", parseInt(s.lastSecond) - 1, parseInt(t.current))
                    }
                    if (s.movieStatus.played) {
                        nSdkInstance.ggPM("5", parseInt(t.current))
                    }
                    s.lastSecondPrev = s.lastSecond;
                    s.lastSecond = t.seekPosition;
                    s.logger("seeked", 8, t)
                });
                a.on("seeking", function() {
                    s.seeking = true;
                    if (l == true) {
                        s.seeking = false;
                        s.movieStatus.loaded = true
                    }
                    s.lastSecondPrev = a.currentTime().toFixed()
                });
                a.on("volumechange", function(e) {
                    if (a.muted() != s.mute) {
                        s.mute = a.muted();
                        if (!o.sent) {
                            return
                        }
                        nSdkInstance.ggPM("9", String(s.mute));
                        s.logger("volumechange - muted toggle", 9, String(s.mute))
                    }
                });
                a.on("fullscreenchange", function(e) {
                    if (!o.sent) {
                        return
                    }
                    s.fullscreen = a.isFullscreen();
                    nSdkInstance.ggPM("10", String(s.fullscreen));
                    s.logger("fullscreenchange", 10, s.fullscreen)
                })
            })
        });
        videojs.registerPlugin("webtrekkVideo", function(e, t, n, i, r, a, s, o, u, l) {
            console.log("plugin webtreek/kilkaya video 1.6 15/07/20");
            var d = this;
            var c = kilkaya.getVideo(l, false);
            var f = {};
            f.seeking = false;
            f.firstEventSent = false;
            f.firstPlaySent = false;
            f.lastPosition = 0;
            f.lastSecond = 0;
            var p = "live";
            var h = "vod";
            var v = "init";
            var g = "preroll start";
            var m = "preroll 50";
            var y = "preroll end";
            var _ = "ima3 adv error";
            var b = "play";
            var S = "pause";
            var A = "seek";
            var T = "pos";
            var k = "fullscreen";
            var E = "end-content";
            var P = "post-roll start";
            var I = "postroll 50";
            var C = "post-roll end";
            var w = "eof";
            var j = "stop";
            var L = "main";
            var O = "preroll";
            var x = "postroll";
            var D = 1;
            var N = document.referrer;
            var R = window.location.href;
            var M;
            var U = e;
            var B = s ? p : h;
            var F = " - ";
            var V = 3e4;
            var q = 4200;
            var H = u;
            H = H.replace("player", "");
            var G;
            var W = 0;
            var K = 0;
            var z = false;
            var Y = false;
            var X = false;
            var Q = false;
            var Z = false;
            var J = false;
            var $ = 0;
            var ee = 0;
            var te = 0;
            var ne = 0;
            var ie = "init";
            var re = "play";
            var ae = "adv";
            var se = "adverr";
            var oe = "";
            var ue;
            var le = false;
            var de = false;
            var ce = U + F + B + F + H;
            var fe = "";
            var pe = "";
            var he = o ? "y" : "n";
            var ve = "//www.ilsole24ore.com";
            var ge = o && N.indexOf(ve) !== -1 ? true : false;
            var me = n;
            var ye = i;
            var _e = d.autoplay() ? "y" : "n";
            var be = o ? "embed" : document.querySelector("meta[property='og:type']").getAttribute("content");
            function Se(e, n, i, r) {
                i = typeof i !== "undefined" ? i : "0";
                var s = r ? r : d.currentTime().toFixed();
                var o = d.muted();
                var u = d.volume() * 100;
                var l = [];
                if (i == ae) {
                    o = o ? "y" : "n"
                } else {
                    o = o ? "off" : "on"
                }
                l["0"] = "";
                l[ie] = "mg1=" + t + ";mg2=" + U + ";mg3=" + B + ";mg4=" + n + ";mg5=" + me + ";mg6=" + ye + ";mg14=" + pe + ";mg15=" + a;
                l[ae] = "ck1=" + o;
                l[se] = "ck1=" + oe;
                l[re] = "ck2=" + o + ";ck3=" + he + ";ck4=" + _e;
                wt_sendinfo_media(ce, e, s, G, l[i], fe, u, o)
            }
            function Ae() {
                if (!f.firstEventSent) {
                    G = d.mediainfo.duration.toFixed();
                    Se(v, r, ie, "0");
                    f.firstEventSent = true
                }
            }
            function Te() {
                if ($ !== 2 && Z === false) {
                    Se(w, r);
                    Z = true
                }
            }
            function ke() {
                if (f.firstPlaySent === true && X === false) {
                    window.posInterval = setInterval(function() {
                        Pe()
                    }, V);
                    X = true
                }
            }
            function Ee() {
                clearInterval(window.posInterval)
            }
            window.clearPosEventInterval = Ee;
            function Pe() {
                Se(T, r)
            }
            function Ie(e) {
                console.log("Kilkaya LOAD START " + e);
                switch (e) {
                case L:
                    if (s) {
                        c.setLive()
                    } else {
                        c.load()
                    }
                    J = true;
                    break;
                default:
                }
            }
            function Ce(e) {
                var n;
                switch (e) {
                case L:
                    n = G === undefined ? d.mediainfo.duration.toFixed() : G;
                    break;
                case O:
                    n = W;
                    break;
                case x:
                    n = K;
                    break;
                default:
                    break
                }
                if (e === L) {
                    c.setField("title", t);
                    c.setField("duration", n);
                    c.setField("image", a);
                    c.setField("tag", me)
                }
            }
            function we(e) {
                if (J) {
                    if (e === L) {
                        c.start("auto")
                    } else if (le) {
                        c.resume()
                    } else if (de) {
                        c.restart("manual")
                    } else {
                        c.start("manual")
                    }
                }
            }
            function je() {
                c.pause()
            }
            function Le(e) {
                switch (e) {
                case L:
                    kilkaya.finishVideo(c);
                    break;
                case O:
                    c.setField("roll", "preroll");
                    break;
                case x:
                    c.setField("roll", "postroll");
                    break;
                default:
                }
            }
            function Oe() {
                countdownTimer = setInterval(function() {
                    ne = d.ima3.adsManager.getRemainingTime()
                }, D * 1e3)
            }
            function xe(e) {
                if (countdownTimer) {
                    clearInterval(countdownTimer)
                }
            }
            function De() {
                var e = typeof d.seeking === "function" ? d.seeking() : f.seeking;
                return e
            }
            function Ne() {
                var e;
                if (typeof d.mediainfo !== "undefined" && d.mediainfo !== undefined) {
                    e = d.mediainfo.rawSources_[1].src
                } else {
                    e = "undefined"
                }
                return e
            }
            function Re() {
                if (d.ads.ad.duration != "") {
                    W = d.ads.ad.duration
                }
            }
            function Me() {
                if (d.ads.ad.duration != "") {
                    K = d.ads.ad.duration
                }
            }
            function Ue(e) {
                console.log("LOG DEBUG " + e);
                console.log("myplayer", d);
                console.log("myplayer.ads", d.ads);
                console.log("myplayer.ads.ad.type", d.ads.ad.type);
                console.log("myplayer.ads.ad.duration", d.ads.ad.duration);
                console.log("myplayer.ads.ad.id", d.ads.ad.id);
                console.log("myplayer.ima3", d.ima3);
                console.log("myplayer.ima3.adsRequest.videoAdKey", d.ima3.adsRequest.videoAdKey);
                console.log("myplayer.ima3.adsRequest.slotId", d.ima3.adsRequest.slotId)
            }
            d.on("loadedmetadata", function(e) {
                console.log("wt video loadedmetadata");
                pe = pe === "" ? Ne() : pe;
                R = o ? N : window.location.href;
                M = o ? window.location.href : pe;
                if (!ge) {
                    Ae()
                }
                Ce(L);
                Ie(L);
                Ee()
            });
            d.ready(function() {
                d.on("ima3-ad-error", function(e) {
                    console.log("wt ima3-ad-error", e);
                    var t = e.originalEvent.h.h;
                    var n = e.originalEvent.h.l;
                    oe = t + " " + n;
                    console.log("errAdvDesc ", oe);
                    Se(_, r, se)
                });
                d.on("ima3error", function() {
                    console.log("wt ima3error")
                });
                d.on("ads-ad-started", function() {
                    $ = $ + 1;
                    if ($ === 1) {
                        z = true;
                        Se(g, r, ae);
                        Re();
                        Ce(O);
                        Ie(O);
                        Oe()
                    }
                    if ($ === 2) {
                        Y = true;
                        Se(P, r, ae);
                        Me();
                        Ce(x);
                        Ie(x);
                        Oe()
                    }
                });
                d.on("ads-midpoint", function() {
                    if ($ === 1) {
                        Se(m, r, ae)
                    }
                    if ($ === 2) {
                        Se(I, r, ae)
                    }
                });
                d.on("ads-ad-ended", function() {
                    if ($ === 1) {
                        z = false;
                        Se(y, r, ae);
                        Le(O);
                        Se(b, r, re);
                        we(L);
                        f.firstPlaySent = true;
                        ke();
                        xe()
                    }
                    if ($ === 2) {
                        Y = false;
                        Se(C, r, ae);
                        Le(x);
                        xe()
                    }
                });
                d.on("ima3-resumed", function() {
                    console.log("ima3-resumed");
                    xe()
                });
                d.on("ads-pause", function() {
                    console.log("ads-pause");
                    xe()
                });
                d.on("ads-ad-skipped", function() {
                    console.log("ads-ad-skipped");
                    z = false;
                    Y = false;
                    xe()
                });
                d.on("ads-play", function() {
                    console.log("ads-play");
                    Oe()
                });
                d.on("timeupdate", function(e) {
                    if (!f.firstPlaySent && this.currentTime() > 0) {
                        ee = ee + 1;
                        f.firstPlaySent = true;
                        Ae();
                        Se(b, r, re, "0");
                        ke();
                        we(L)
                    }
                    if (!De() && !d.paused()) {
                        f.prevPosition = f.lastPosition;
                        f.lastPosition = this.currentTime().toFixed();
                        var t = Math.abs(f.lastSecond - f.lastPosition);
                        if (t > 2) {
                            f.lastSecond = f.lastPosition
                        }
                        if (f.lastPosition > f.lastSecond && f.firstEventSent === true && Z === false) {
                            te = te + 1;
                            f.lastSecond = parseInt(f.lastSecond) + 1;
                            if (te >= D) {
                                te = 0
                            }
                        }
                    }
                });
                d.on("play", function(e) {
                    ee = ee + 1;
                    if (De()) {
                        setTimeout(function() {
                            var e = d.currentTime().toFixed();
                            Se(b, r, re, e);
                            we("manual")
                        }, 2e3)
                    } else {
                        Ae();
                        if (!(ee === 1 && $ < 1)) {
                            Se(b, r, re);
                            we("manual");
                            f.firstPlaySent = true
                        }
                        ke()
                    }
                    le = false;
                    f.seeking = false
                });
                d.on("pause", function(e) {
                    le = d.paused();
                    if (!De() && d.paused() && f.firstPlaySent === true && !(ee < 3 && f.lastPosition === 0)) {
                        Se(S, r, re, f.lastPosition);
                        je()
                    }
                });
                d.on("seeked", function(e) {
                    f.seeking = false;
                    f.lastSecond;
                    Se(A, r, re, f.prevPosition)
                });
                d.on("seeking", function() {
                    f.seeking = true
                });
                d.on("fullscreenchange", function(e) {
                    if (d.isFullscreen()) {
                        Se(k, r, re)
                    }
                });
                d.on("ended", function(e) {
                    de = true;
                    if ($ < 2) {
                        if (Q === false) {
                            Q = true;
                            Se(E, r);
                            Le(L);
                            Ee();
                            if ($ === 0) {
                                $ = 1
                            }
                            setTimeout(function() {
                                Te()
                            }, q)
                        }
                    } else {
                        Se(w, r);
                        Z = true
                    }
                });
                d.on("beforeunloadpage", function(e) {
                    if (!Q) {
                        Se(j, r)
                    }
                });
                var e = navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i);
                if (e) {
                    window.addEventListener("pagehide", function(e) {
                        if (!Q) {
                            Se(j, r)
                        }
                    }, false)
                }
            })
        });
        videojs.registerPlugin("omniture", function(e) {
            function t() {
                for (let e = 25; e < 100; e += 25) {
                    o[e] = !1
                }
            }
            function n(t) {
                if (typeof utag_data !== "undefined") {
                    utag_data.no_view = "no";
                    if (typeof utag !== "undefined" && typeof utag_data.video !== "undefined") {
                        e && tView(utag_data);
                        tLink({
                            link_id: "player STREAM24",
                            event_type: t,
                            event_label: utag_data.video
                        })
                    } else {
                        console.log("utag or utag_data.video undefined")
                    }
                } else {
                    console.log("utag_data undefined")
                }
            }
            function i() {
                const e = "stream24_video_";
                const t = r.currentTime();
                const n = t / r.mediainfo.duration * 100;
                for (_ms in o) {
                    if (n >= _ms && !o[_ms]) {
                        if (typeof utag_data !== "undefined") {
                            if (typeof utag !== "undefined" && typeof utag_data.video !== "undefined") {
                                tLink({
                                    link_id: "player STREAM24",
                                    event_type: "stream24_video_" + _ms,
                                    event_label: utag_data.video
                                })
                            } else {
                                console.log("utag undefined")
                            }
                            o[_ms] = !0
                        } else {
                            console.log("utag_data undefined")
                        }
                    }
                }
            }
            var r = this;
            let a = !0;
            let s = !1;
            var o = {};
            r.ready(function() {
                t(),
                r.on("ended", function() {
                    s || (n("stream24_video_end"),
                    a = !0,
                    s = !0,
                    t())
                }),
                r.on("play", function() {
                    a && (n("stream24_video_play"),
                    a = !1,
                    s = !1)
                }),
                r.on("timeupdate", function() {
                    i()
                })
            })
        });
        videojs.registerPlugin("setPlayerStyle", function() {
            var e = this;
            e.ready(function() {
                myPlayer = e.el(),
                myPlayer.className += " ilsole"
            })
        });
        videojs.registerPlugin("cc_fix", function() {
            var e = this;
            e.ready(function() {
                e.on("play", function() {
                    console.log("cc_fix al play");
                    var e = this
                      , t = e.textTracks().tracks_
                      , n = e.el().getElementsByClassName("vjs-subs-caps-button")[0];
                    ("undefined" == typeof t || t.length < 2) && (n.style.display = "none")
                })
            })
        });
        videojs.registerPlugin("setAdvServerURL", function(e, t) {
            var n = this;
            var i = n.el().getElementsByClassName("vjs-tech")[0];
            var r = false;
            var a = false;
            var s = false;
            var o = n.autoplay();
            console.log("setAdvServerURL v19-03-19");
            var u = function() {
                return navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/Android/i)
            };
            n.ready(function() {
                if (u() || !o) {
                    n.on("play", function() {
                        if (!a) {
                            console.log("Try request ad to (da Play): ", e);
                            n.ima3.adrequest(e);
                            a = true
                        }
                    })
                } else {
                    n.on("loadedmetadata", function() {
                        console.log("loadedmetadata event");
                        if (!a) {
                            console.log("Try request ad to: ", e);
                            n.ima3.adrequest(e);
                            a = true
                        }
                    })
                }
                n.on("ads-load", function(e) {
                    console.log("ads-load")
                });
                n.on("ads-ad-started", function(e) {
                    console.log("ads-ad-started")
                });
                n.on("ima3-ad-error", function(e) {
                    console.log("ima3-ad-error => with reset adv (only once)");
                    if (!s) {
                        a = true;
                        n.ads.reset();
                        n.play();
                        s = true
                    }
                });
                n.on("ended", function(i) {
                    if (t && !r) {
                        n.ima3.adrequest(e);
                        r = true
                    }
                })
            })
        });
        videojs.registerPlugin("endscreenEmbed", function() {
            console.log("endscreen Embed");
            var e = this;
            e.ready(function() {
                function t(e, t) {
                    if (e.classList) {
                        e.classList.add(t)
                    } else {
                        e.className += " " + t
                    }
                }
                function n(e, t) {
                    e.classList.remove(t)
                }
                function i() {
                    var e = document.getElementsByClassName("vjs-endscreen-overlay-buttons")[0];
                    e.style.display = "inline-block";
                    var n = document.getElementsByClassName("vjs-ad-control-bar")[0];
                    if (typeof n != "undefined" && n != null) {
                        t(n, "vjs-force-hidden")
                    }
                }
                var r = 0;
                e.on("endscreen", function() {
                    var a = document.getElementsByClassName("vjs-control-bar")[0];
                    t(a, "vjs-force-hidden");
                    var s = document.getElementsByClassName("vjs-endscreen-overlay-content")[0];
                    t(s, "vjs-force-hidden");
                    console.log("fix customEndscreen v6");
                    e.on("ima3-ad-error", function() {
                        i()
                    });
                    e.on("ima3error", function() {
                        i()
                    });
                    e.on("ads-ad-ended", function() {
                        i()
                    });
                    e.on("ads-request", function() {
                        r = r + 1;
                        console.log("##endscreen ads-request", r)
                    });
                    setTimeout(function() {
                        console.log("##endscreen setTimeout ctAdReq ", r);
                        if (r == 0) {
                            console.log("##endscreen fixCustomEnd");
                            i()
                        }
                    }, 1e3);
                    e.on("play", function() {
                        var e = document.getElementsByClassName("vjs-control-bar")[0];
                        n(e, "vjs-force-hidden")
                    })
                })
            })
        });
        videojs.registerPlugin("showTextTracks", function() {
            var e = this;
            var t = navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i);
            if (!t) {
                console.log("showTextTracks");
                e.ready(function() {
                    var t = true;
                    e.on("play", function() {
                        if (t) {
                            e.textTracks()[1].mode = "showing";
                            t = false
                        }
                    })
                })
            }
        });
        var brightcoveVansAdapter = function() {
            var e = function(e) {
                var t = function() {
                    var e, t = function() {
                        var e = function(e) {
                            return "undefined" !== typeof e
                        }
                          , t = function() {
                            var t = "u";
                            try {
                                e(window.opera) && e(window.opera.buildNumber) ? t = "o" : e(window.mozInnerScreenY) ? t = "g" : e(window.chrome) && e(window.chrome.csi) ? t = "c" : e(window.msWriteProfilerMark) && e(window.crypto) ? t = "e" : e(window.attachEvent) || e(window.msCrypto) ? t = "i" : e(window.WebKitPoint) && (t = "w")
                            } catch (e) {}
                            return t
                        }()
                          , n = function() {
                            var t = function(t) {
                                for (var n in t)
                                    if (t.hasOwnProperty(n)) {
                                        var i = t[n];
                                        "" !== i && "null" !== i && "undefined" !== i && null !== i && e(i) || delete t[n]
                                    }
                                return t
                            }
                              , n = function(t) {
                                var n = {}, i, r;
                                for (r in t)
                                    t.hasOwnProperty(r) && (i = t[r],
                                    e(n[i]) ? n[i] += r : n[i] = r);
                                t = {};
                                for (r in n)
                                    n.hasOwnProperty(r) && (i = n[r],
                                    t[i] = r);
                                return t
                            };
                            return function() {
                                var i = function() {
                                    var t = {
                                        g: "",
                                        q: ""
                                    };
                                    try {
                                        t.q = window.parent.parent.parent.parent.parent.parent.parent.parent.parent.parent.location.href
                                    } catch (a) {
                                        var n = a.message, n = n.substring(n.lastIndexOf("<") + 1, n.lastIndexOf(">")), i;
                                        if (i = e(n))
                                            if (i = !1,
                                            e(window.navigator) && e(window.navigator.userAgent)) {
                                                var r = window.navigator.userAgent.match(/Firefox\/([\.0-9]+)/);
                                                null !== r && 2 == r.length && (r = r[1].split("."),
                                                3 == parseInt(r[0], 10) && 6 >= parseInt(r[1], 10) && (3 == r.length ? 13 >= parseInt(r[2], 10) && (i = !0) : i = !0))
                                            }
                                        i && (t.g = n)
                                    }
                                    return t
                                }
                                  , r = {};
                                try {
                                    r.a = encodeURIComponent(top.location.href)
                                } catch (e) {}
                                try {
                                    r.b = encodeURIComponent(parent.location.href)
                                } catch (e) {}
                                if (window != top) {
                                    try {
                                        r.c = encodeURIComponent(parent.document.referrer)
                                    } catch (e) {}
                                    try {
                                        r.e = encodeURIComponent(window.document.referrer)
                                    } catch (e) {}
                                }
                                try {
                                    r.d = encodeURIComponent(window.location.href)
                                } catch (e) {}
                                try {
                                    var a = i();
                                    r.g = encodeURIComponent(a.g);
                                    r.q = encodeURIComponent(a.q)
                                } catch (e) {}
                                var r = t(r), r = n(r), i = [], s;
                                for (s in r)
                                    r.hasOwnProperty(s) && i.push({
                                        key: s,
                                        val: r[s]
                                    });
                                i.sort(function(e, t) {
                                    return e.val.length > t.val.length ? 1 : e.val.length < t.val.length ? -1 : 0
                                });
                                return i
                            }()
                        }();
                        return {
                            br: t,
                            urls: n
                        }
                    }, n = function(e, t, n) {
                        var i = ["//" + v.getFwServerDomain(), "/db2/video/", t + "/", n + "/", "skeleton.js?videoId=", o.getVideoId()].join("");
                        t = function(e) {
                            i = [i, "&adsafe_url=", e.val, "&adsafe_type=", e.key].join("")
                        }
                        ;
                        try {
                            e.urls.forEach(t),
                            i = [i, "&adsafe_jsinfo=br:", e.br].join("")
                        } catch (e) {
                            a.report(c.DIAGNOSTIC.BUILD_VIDEOAPI_URL, e)
                        }
                        return i
                    }, i = function() {
                        if (this.readyState == c.XHR.READY_STATE.DONE)
                            if (this.status == c.HTTP.STATUS_CODE.OK)
                                try {
                                    e("failed" === JSON.parse(this.responseText).action ? c.BLOCKING_RESPONSE.BLOCK : c.BLOCKING_RESPONSE.SAFE)
                                } catch (e) {
                                    a.report(c.DIAGNOSTIC.BLOCK_AD, e)
                                }
                            else
                                a.report(c.DIAGNOSTIC.BLOCKING_URL_REQUEST_ERR, {
                                    message: this.status
                                })
                    };
                    return {
                        init: function(r, a, s) {
                            var o = t();
                            r = n(o, r, a);
                            e = s;
                            v.sendUrlRequest(r, i)
                        }
                    }
                }()
                  , n = function() {
                    var e = [];
                    return {
                        addCallback: function(t, n) {
                            var i = 0;
                            n = n || Number.MAX_VALUE;
                            e.push(function() {
                                i < n && (i++,
                                t.apply({}, arguments))
                            })
                        },
                        executeCallbacks: function() {
                            var t = arguments;
                            e.forEach(function(e) {
                                e.apply({}, t)
                            })
                        }
                    }
                }
                  , i = function() {
                    var e = window;
                    return {
                        getWin: function() {
                            return e
                        },
                        setWin: function(t) {
                            (t = t && t.ownerDocument) && t.defaultView ? e = t.defaultView : t && t.parentWindow ? e = t.parentWindow : a.report(c.DIAGNOSTIC.SET_CONTEXT, {
                                message: ""
                            })
                        },
                        getDoc: function() {
                            return e.document
                        }
                    }
                }()
                  , r = function() {
                    var e, t = [], n = !1, i = function(e) {
                        var t = "";
                        Object.keys(e).forEach(function(n) {
                            -1 === ["advEntityId", "pubEntityId", "partner", "debug"].indexOf(n) && (t += "&" + n + "=" + e[n])
                        });
                        return t
                    }, u = function(n) {
                        if (o.isEstablished()) {
                            var s;
                            try {
                                if (s = v.stringify(n))
                                    if ("AdImpression" === n.messageType)
                                        v.getWindow()[e](s);
                                    else
                                        v.getWindow().postMessage(s, "*")
                            } catch (e) {
                                a.report(c.DIAGNOSTIC.DISPATCH_MESSAGE, e)
                            }
                        } else if (o.canNeverBeEstablished()) {
                            s = v.getFwServerDomain();
                            var u = r.config;
                            try {
                                "AdImpression" === n.messageType && (r.isCmTag ? v.sendUrlRequest(["//" + s, "/mon?", i(u)].join("")) : r.isFwTag && v.sendUrlRequest(["//" + s, "/rfw/st/", u.advEntityId + "/" + u.pubEntityId, "/skeleton.js"].join("")))
                            } catch (e) {
                                a.report(c.DIAGNOSTIC.DISPATCH_MESSAGE, e)
                            }
                        } else
                            try {
                                t.push(n)
                            } catch (e) {
                                a.report(c.DIAGNOSTIC.CACHE_MESSAGE, e)
                            }
                    }, l = function(e, t) {
                        v.sendMonitoringDebugPixel(c.MONITORING.AD_STOPPED, r.monitoringQS());
                        d(e, t)
                    }, d = function(e, t) {
                        try {
                            u({
                                messageType: e,
                                id: o.getVideoId(),
                                time: v.now(),
                                partner: s.getPartnerCode(),
                                eventData: t
                            })
                        } catch (e) {
                            a.report(c.DIAGNOSTIC.SEND_EVENT, e)
                        }
                    }, f = {
                        AdImpression: function(e, t) {
                            var i = h.getInjector();
                            n || (t && (t.ext_passthrough = r.passThroughObj),
                            n = !0,
                            v.sendMonitoringDebugPixel(c.MONITORING.AD_IMPRESSION, r.monitoringQS()),
                            i.onInjectionResolution(function() {
                                d(e, t)
                            }),
                            i.resolveInjection())
                        },
                        AdStopped: l,
                        AdVideoComplete: l,
                        AdError: function(e, t) {
                            v.sendMonitoringDebugPixel(c.MONITORING.AD_ERROR, r.monitoringQS());
                            d(e, t)
                        }
                    };
                    return {
                        sendEvent: function(e, t) {
                            var n = f[e] || d;
                            h.vans.hasBegun() && n(e, t)
                        },
                        setImpressionCallback: function(t) {
                            e = t
                        },
                        flushUnsentEvents: function() {
                            try {
                                t.forEach(u)
                            } catch (e) {
                                a.report(c.DIAGNOSTIC.FLUSH_UNSENT_EVENTS, e)
                            }
                        },
                        passThroughObj: {},
                        monitoringQS: function() {},
                        clearSessionState: function() {
                            n = !1;
                            t.length = 0
                        }
                    }
                }()
                  , a = function() {
                    var e = {};
                    return {
                        report: function(t, n, i) {
                            if (!e[t])
                                try {
                                    e[t] = !0;
                                    var r = "//" + v.getFwServerDomain() + "/jsdiagnostic?code:vans-js_" + encodeURIComponent(s.getPartnerCode()) + "_" + t + "&err:" + encodeURIComponent(n.message);
                                    i && (r += "&config:" + encodeURIComponent(JSON.stringify(i)));
                                    v.sendUrlRequest(r)
                                } catch (e) {}
                        }
                    }
                }()
                  , s = function() {
                    return {
                        initCM: function(e, t) {
                            f.initCM(e, t)
                        },
                        initFW: function(e, t, n) {
                            f.initFW(e, t, n)
                        },
                        getPartnerCode: function() {
                            return h.get().partnerCode
                        },
                        getPassThroughObj: function() {
                            return h.get().passThroughObj
                        },
                        getAltMonDomain: function() {
                            return h.get().monDomain
                        },
                        hasDebugEnabled: function() {
                            return h.get().debugEnabled
                        }
                    }
                }()
                  , o = function() {
                    var e, t = !1, n = !1, i = function(e, n) {
                        e == s() && (t = !0,
                        r.setImpressionCallback(n),
                        v.sendMonitoringDebugPixel(c.MONITORING.HANDSHAKE_SUCCESS, r.monitoringQS()),
                        r.flushUnsentEvents());
                        return t ? c.VIDEO_CHANNEL : null
                    }, s = function() {
                        e || (e = v.generateUID());
                        return e
                    };
                    return {
                        getVideoId: s,
                        setNodeInterface: function(e) {
                            var t, n, r, o = s();
                            try {
                                t = "IASid" + o,
                                n = "blockAd" + o,
                                r = "getIasVidBridgeVersion" + o,
                                e.className += " integral-vid-" + o,
                                e[n] = v.noop,
                                e[t] = i,
                                e[r] = function() {
                                    return "2"
                                }
                                ,
                                e.getVersion = function() {
                                    return c.INTERNAL_VERSION
                                }
                            } catch (e) {
                                a.report(c.DIAGNOSTIC.SET_NODE_INTERFACE, e)
                            }
                        },
                        isEstablished: function() {
                            return t
                        },
                        canNeverBeEstablished: function() {
                            return n
                        },
                        giveUpOnHandshaking: function() {
                            n = !0;
                            r.flushUnsentEvents()
                        },
                        resetHandshake: function() {
                            n = t = !1
                        }
                    }
                }()
                  , u = function() {
                    var e = n();
                    return {
                        addCallback: function(t) {
                            e.addCallback(t, 1)
                        },
                        executeCallbacks: e.executeCallbacks
                    }
                }
                  , l = function(e) {
                    var t = !1
                      , n = !1
                      , i = new u
                      , r = !1
                      , s = function(e, t) {
                        var n, i = v.getFwServerDomain(), r = function(e) {
                            var t = "";
                            Object.keys(e).forEach(function(n) {
                                "advEntityId" != n && "pubEntityId" != n && "partner" != n && (t += "&" + n + "=" + e[n])
                            });
                            return t
                        };
                        try {
                            n = ["//", i, e, "?videoId=", o.getVideoId(), r(t)].join("")
                        } catch (e) {
                            a.report(c.DIAGNOSTIC.BUILD_SRC_URL, e)
                        }
                        return n
                    }
                      , l = function(a) {
                        var s, u = function() {
                            !t && e.parentNode ? (e.parentNode.appendChild(a),
                            clearInterval(s),
                            n = t = !0,
                            v.sendMonitoringDebugPixel(c.MONITORING.FWJS_INJECTED, p.buildMonitoringQS())) : r && (n = !0,
                            clearInterval(s),
                            o.giveUpOnHandshaking());
                            n && i.executeCallbacks()
                        };
                        u();
                        t || (s = setInterval(u, 200))
                    }
                      , d = function() {
                        var t = e && e.ownerDocument
                          , n = t && t.parentWindow;
                        return !!(t && t.defaultView || n)
                    };
                    return {
                        injectTagScript: function(e, t) {
                            var i, r = v.getDocument();
                            if (d()) {
                                var a = function(e) {
                                    v.sendMonitoringDebugPixel(c.MONITORING.FWJS_LOAD_SUCCESS, p.buildMonitoringQS())
                                }
                                  , u = function(e) {
                                    o.giveUpOnHandshaking();
                                    v.sendMonitoringDebugPixel(c.MONITORING.FWJS_LOAD_ERROR, p.buildMonitoringQS())
                                };
                                try {
                                    i = r.createElement("script"),
                                    i.src = s(e, t),
                                    i.addEventListener("load", a),
                                    i.addEventListener("error", u),
                                    l(i)
                                } catch (e) {
                                    o.giveUpOnHandshaking(),
                                    v.sendMonitoringPixel(c.MONITORING.INJECTION_ERR)
                                }
                            } else
                                n = !0,
                                o.giveUpOnHandshaking()
                        },
                        sendInjectionDiagnostics: function() {
                            var t = e && e.ownerDocument
                              , n = e && e.parentNode
                              , i = t && (t.defaultView || t.parentWindow)
                              , r = c.MONITORING.AD_NODE_TYPE + "_" + (e ? e.constructor.name || e.nodeName || typeof e : "null");
                            e || v.sendMonitoringDebugPixel(c.MONITORING.AD_NODE_NULL, p.buildMonitoringQS());
                            e && !n && v.sendMonitoringDebugPixel(c.MONITORING.AD_NODE_DETACHED, p.buildMonitoringQS());
                            e && !t && v.sendMonitoringDebugPixel(c.MONITORING.AD_NODE_NO_DOC, p.buildMonitoringQS());
                            t && !i && v.sendMonitoringDebugPixel(c.MONITORING.AD_NODE_NO_WINDOW, p.buildMonitoringQS());
                            v.sendMonitoringDebugPixel(r, p.buildMonitoringQS())
                        },
                        onInjectionResolution: function(e) {
                            i.addCallback(e);
                            n && i.executeCallbacks()
                        },
                        resolveInjection: function() {
                            r = !0
                        }
                    }
                }
                  , d = function() {
                    var e, t = !1, n = function(t) {
                        var i, r = !1;
                        try {
                            i = JSON.parse(t.data),
                            r = "unloadComplete" === i.msg && i.id == o.getVideoId()
                        } catch (e) {}
                        r && (e(),
                        v.getWindow().removeEventListener("message", n))
                    };
                    return {
                        registerMeasurementCompleteHandler: function(i) {
                            e = i;
                            t || (v.getWindow().addEventListener("message", n),
                            t = !0)
                        }
                    }
                }
                  , c = {
                    INTERNAL_VERSION: "3.6.0",
                    VIDEO_CHANNEL: "jv3",
                    PROD_DOMAIN: "pixel.adsafeprotected.com",
                    DIAGNOSTIC_MONITORING_DOMAIN: "spixel.adsafeprotected.com",
                    S4_ITERATIONS: 8,
                    EVENTS: {
                        AD_IMPRESSION: "AdImpression"
                    },
                    PSUEDO_IMPRESSION_ID_PREFIX: "vidId_",
                    DIAGNOSTIC: {
                        INIT_FW: "ifw",
                        INIT_CM: "icm",
                        FLUSH_UNSENT_EVENTS: "fue",
                        CACHE_MESSAGE: "cm",
                        SEND_EVENT: "se",
                        BLOCK_AD: "ba",
                        SEND_MONITORING_PIXEL: "smp",
                        SET_NODE_INTERFACE: "sni",
                        BUILD_SRC_URL: "bsurl",
                        BUILD_VIDEOAPI_URL: "bvu",
                        BLOCKING_URL_REQUEST_ERR: "blk_url_req_err",
                        DISPATCH_MESSAGE: "dm",
                        SET_CONTEXT: "sc",
                        STRINGIFY_EVENT_ERROR: "ser"
                    },
                    MONITORING: {
                        INJECTION_ERR: "inj_err",
                        VANS_INITIALIZED: "init",
                        HANDSHAKE_SUCCESS: "hs",
                        AD_IMPRESSION: "ai",
                        DEFERRED_INTERFACE: "vans_defer",
                        AD_STOPPED: "adstop",
                        AD_ERROR: "aderr",
                        AD_NODE_NULL: "adnode_null",
                        AD_NODE_DETACHED: "adnode_detached",
                        AD_NODE_NO_DOC: "adnode_nodoc",
                        AD_NODE_NO_WINDOW: "adnode_nowin",
                        AD_NODE_TYPE: "adnode_type",
                        FWJS_INJECTED: "fwjsinj",
                        FWJS_LOAD_SUCCESS: "fwjsload",
                        FWJS_LOAD_ERROR: "fwjsload_err",
                        IMPRESSION_DOMAIN_BLOCKING: "impblock"
                    },
                    HTTP: {
                        VERBS: {
                            GET: "GET"
                        },
                        STATUS_CODE: {
                            OK: 200
                        }
                    },
                    BLOCKING_RESPONSE: {
                        BLOCK: "block",
                        SAFE: "safe"
                    },
                    XHR: {
                        READY_STATE: {
                            DONE: 4
                        }
                    }
                }
                  , f = function() {
                    var e = function(e, t, n, i) {
                        o.setNodeInterface(n);
                        "function" === typeof t.onMeasurementComplete && (new d).registerMeasurementCompleteHandler(t.onMeasurementComplete);
                        var r = {};
                        Object.getOwnPropertyNames(t).forEach(function(e) {
                            "debug" !== e && "onMeasurementComplete" !== e && (r[e] = t[e])
                        });
                        i.injectTagScript(e, r)
                    };
                    return {
                        initCM: function(t, n) {
                            var r;
                            if (!h.vans.hasBegun()) {
                                if (!t || !t.partner)
                                    throw Error("Missing partner code");
                                i.setWin(n);
                                h.setPreErrorConfig(t, "cm");
                                try {
                                    if (!t.anId)
                                        throw Error("Missing anId");
                                    h.vans.begin();
                                    r = new l(n);
                                    h.setInjector(r);
                                    h.setConfig(t);
                                    v.sendMonitoringDebugPixel(c.MONITORING.VANS_INITIALIZED, p.buildMonitoringQS());
                                    v.sendMonitoringDebugPixel(c.MONITORING.IMPRESSION_DOMAIN_BLOCKING, p.buildMonitoringQS(), v.getFwServerDomain());
                                    r.sendInjectionDiagnostics();
                                    e("/jsvid", t, n, r)
                                } catch (e) {
                                    a.report(c.DIAGNOSTIC.INIT_CM, e)
                                }
                            }
                        },
                        initFW: function(n, r, s) {
                            var o, u;
                            if (!h.vans.hasBegun()) {
                                if (!n || !n.partner)
                                    throw Error("Missing partner code");
                                i.setWin(r);
                                h.setPreErrorConfig(n, "fw");
                                try {
                                    if (!n.advEntityId || !n.pubEntityId)
                                        throw Error("Missing client id: advEntityId: " + n.advEntityId + " ,pubEntityId: " + n.pubEntityId);
                                    h.vans.begin();
                                    u = new l(r);
                                    h.setInjector(u);
                                    h.setConfig(n);
                                    v.sendMonitoringDebugPixel(c.MONITORING.VANS_INITIALIZED, p.buildMonitoringQS());
                                    v.sendMonitoringDebugPixel(c.MONITORING.IMPRESSION_DOMAIN_BLOCKING, p.buildMonitoringQS(), v.getFwServerDomain());
                                    u.sendInjectionDiagnostics();
                                    s && t.init(n.advEntityId, n.pubEntityId, s);
                                    o = "/fwjsvid/st/" + n.advEntityId + "/" + n.pubEntityId + "/skeleton.js";
                                    e(o, n, r, u)
                                } catch (e) {
                                    a.report(c.DIAGNOSTIC.INIT_FW, e)
                                }
                            }
                        }
                    }
                }()
                  , p = {
                    buildMonitoringQS: function() {
                        var e = c.PSUEDO_IMPRESSION_ID_PREFIX + o.getVideoId()
                          , t = h.getInfoParams();
                        return ["&chanId=" + t.anId, "planId=" + t.advEntityId, "placementId=" + t.pubEntityId, "advId=" + t.campId, "pubOrder=" + t.placementId, "pubCreative=" + t.creativeId, "impId=" + (t.impId || e), "ts=" + Date.now(), "custom=" + c.INTERNAL_VERSION, "custom2=jv3&custom3=" + h.get().tagType, "adsafe_par"].join("&")
                    }
                }
                  , h = function() {
                    var e = {}, t = !1, n = {}, i, a = function(t) {
                        "impId creativeId campId placementId advEntityId pubEntityId anId".split(" ").forEach(function(e) {
                            n[e] = t[e]
                        });
                        n.monDomain = e.monDomain
                    }, s = function(t) {
                        r.monitoringQS = p.buildMonitoringQS;
                        r.passThroughObj = e.passThroughObj;
                        Object.keys(t).forEach(function(e) {
                            r[e] = t[e]
                        })
                    };
                    return {
                        vans: {
                            hasBegun: function() {
                                return t
                            },
                            begin: function() {
                                t = !0
                            }
                        },
                        setInjector: function(e) {
                            i = e
                        },
                        getInjector: function() {
                            return i
                        },
                        setPreErrorConfig: function(t, n) {
                            e.tagType = n;
                            var i;
                            i = t.partner;
                            var r = /[^\w-.]/g;
                            i = "string" === typeof i ? i.replace(r, "") : i;
                            e.partnerCode = i;
                            e.debugEnabled = t.debug && t.debug.enabled;
                            e.debugEnabled && (e.monDomain = t.debug.monDomain)
                        },
                        setConfig: function(t) {
                            a(t);
                            e.passThroughObj = {
                                vv: c.INTERNAL_VERSION,
                                vanstag: e.tagType,
                                xcamp: n.campId,
                                xplac: n.placementId,
                                xcreat: n.creativeId,
                                ximp: n.impId,
                                xpc: e.partnerCode
                            };
                            e.config = t;
                            s({
                                isFwTag: "fw" === e.tagType,
                                isCmTag: "cm" === e.tagType,
                                config: t
                            })
                        },
                        getInfoParams: function() {
                            return n
                        },
                        get: function() {
                            return e
                        }
                    }
                }()
                  , v = {
                    now: function() {
                        return (new Date).getTime()
                    },
                    sendMonitoringPixel: function(e) {
                        try {
                            this.sendUrlRequest(["//" + v.getFwServerDomain(), "/mon?anId=10173&campId=", encodeURIComponent(s.getPartnerCode()), "&pubId=", encodeURIComponent("vans-js_" + e)].join(""))
                        } catch (e) {
                            a.report(c.DIAGNOSTIC.SEND_MONITORING_PIXEL, e)
                        }
                    },
                    sendMonitoringDebugPixel: function() {
                        var e = [c.MONITORING.AD_STOPPED]
                          , t = {};
                        return function(n, i, r) {
                            var o = s.hasDebugEnabled()
                              , u = -1 < e.indexOf(n) && t[n];
                            if (o && !u)
                                try {
                                    var l = c.DIAGNOSTIC_MONITORING_DOMAIN
                                      , d = s.getAltMonDomain();
                                    r = r || d || l;
                                    var d = r === d ? "925116" : "10173", f = v.addProtocolToDomain(r), p = encodeURIComponent(n), h = encodeURIComponent(s.getPartnerCode()), g;
                                    g = i.replace(/=undefined&/g, "=&");
                                    v.sendUrlRequest(f + "/mon?anId=" + d + "&campId=" + h + "&pubId=" + p + g);
                                    t[n] = !0
                                } catch (e) {
                                    a.report(c.DIAGNOSTIC.SEND_MONITORING_PIXEL, e)
                                }
                        }
                    }(),
                    sendUrlRequest: function(e, t) {
                        var n, i;
                        if (e) {
                            n = this.getWindow();
                            try {
                                i = new n.XMLHttpRequest,
                                t && (i.onreadystatechange = t),
                                i.open(c.HTTP.VERBS.GET, e),
                                i.send()
                            } catch (e) {}
                        }
                    },
                    stringify: function(e) {
                        if ("AdImpression" !== e.messageType)
                            return JSON.stringify(e);
                        var t = {};
                        t.passthroughObj = s.getPassThroughObj();
                        var n = "";
                        try {
                            n = JSON.stringify(e)
                        } catch (e) {
                            a.report(c.DIAGNOSTIC.STRINGIFY_EVENT_ERROR, e, t);
                            return
                        }
                        return n
                    },
                    addProtocolToDomain: function(e) {
                        return e.match(/^[a-zA-Z]+:\/\//) ? e : "https://" + e
                    },
                    getWindow: function() {
                        return i.getWin()
                    },
                    getDocument: function() {
                        return i.getDoc()
                    },
                    generateUID: function() {
                        var e, t = "";
                        try {
                            for (e = 0; e < c.S4_ITERATIONS; e++)
                                t = [t, Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)].join("")
                        } catch (e) {}
                        return t
                    },
                    getFwServerDomain: function() {
                        return e || c.PROD_DOMAIN
                    },
                    noop: function() {}
                };
                return {
                    initFW: s.initFW,
                    initCM: s.initCM,
                    sendEvent: r.sendEvent
                }
            }
              , t = function() {
                var e = function(e) {
                    return null !== e && "object" === typeof e
                };
                return {
                    extend: function(e, n) {
                        for (var i in n)
                            t.isDefined(n[i]) && n.hasOwnProperty(i) && (e[i] = n[i]);
                        return e
                    },
                    isObject: e,
                    isDefined: function(e) {
                        return "undefined" !== typeof e
                    },
                    forEachKeyIn: function(t, n) {
                        if (e(t) && "function" === typeof n)
                            for (var i = Object.keys(t), r = i.length - 1; 0 <= r; r--)
                                n(i[r])
                    }
                }
            }()
              , n = function(n) {
                var r = this, a, s = t.isDefined(r) && t.isDefined(r.ima3) ? !0 : !1, o = t.isDefined(r) && t.isDefined(r.ssai) ? !0 : !1, u = s ? i.IMA_TO_IAS_EVENT_MAP : i.ADS_TO_IAS_EVENT_MAP;
                if (t.isObject(n) && t.isDefined(n.anId) && t.isDefined(r) && t.isDefined(r.ads)) {
                    var l = function(e) {
                        var t = u[e]
                          , n = !!i.FINAL_EVENTS[t];
                        return function(e) {
                            c(t);
                            n && r.off("fullscreenchange")
                        }
                    }
                      , d = function(e) {
                        r.on(e, l(e))
                    }
                      , c = function(e) {
                        var t = r.ads.ad.duration, n;
                        n = r.muted() ? 0 : s ? +r.ima3.adsManager.getVolume().toFixed(2) : +r.volume().toFixed(2);
                        t = {
                            ad_duration: t,
                            volume: n,
                            width: r.width(),
                            height: r.height()
                        };
                        if ("AdVideoStart" === e || "resizeAd" === e)
                            t.viewMode = r.isFullscreen() ? "fullscreen" : "normal";
                        a && a.sendEvent(e, t)
                    }
                      , f = function(u) {
                        var l, f;
                        try {
                            t.isDefined(a) && d("fullscreenchange");
                            a = new e;
                            var p, h = {
                                partner: "Brightcove",
                                pubOrder: "Video Orders",
                                pubId: "Unknown Advertiser",
                                placementId: r.ads.ad.id
                            }, v;
                            if (s) {
                                var g = r.ima3.currentAd || r.ima3.adsManager.getCurrentAd()
                                  , m = {}
                                  , y = g && g.getWrapperCreativeIds().length;
                                m.pubId = g.getAdvertiserName() || void 0;
                                m.pubOrder = g.getDealId() || void 0;
                                y ? (m.placementId = g.getWrapperAdIds()[0],
                                m.pubCreative = g.getWrapperCreativeIds()[0]) : (m.placementId = g.getAdId(),
                                m.pubCreative = g.getCreativeId())
                            } else if (o) {
                                var _ = r.ssai().currentTimelineState().linearAd
                                  , b = _.primaryCreative().creativeExtensions[0]
                                  , S = t.isDefined(b.wrapperChains) && b.wrapperChains.length
                                  , g = {};
                                g.pubId = _.advertiser() || void 0;
                                S ? (g.placementId = b.wrapperChains[0].adID,
                                g.pubCreative = b.wrapperChains[0].creativeID) : (g.placementId = _.id(),
                                g.pubCreative = _.primaryCreative().id);
                                m = g
                            } else
                                m = {};
                            v = m;
                            p = t.extend(h, v);
                            f = t.extend(p, n);
                            l = r.el();
                            a.initCM(f, l);
                            c("AdImpression");
                            c("AdVideoStart")
                        } catch (e) {
                            l = f;
                            try {
                                (new Image).src = "//pixel.adsafeprotected.com/jsdiagnostic?code:vans-js-adapter_" + i.PARTNER_ID + "_" + i.INTERNAL_VERSION + "_initCM&err:" + encodeURIComponent(e.message) + "&config:" + encodeURIComponent(JSON.stringify(l))
                            } catch (e) {}
                        }
                    };
                    (function() {
                        var e = s ? "ima3-started" : "ads-ad-started";
                        t.forEachKeyIn(u, d);
                        r.on(e, f)
                    }
                    )()
                }
            }
              , i = {
                PARTNER_ID: "brightcove",
                INTERNAL_VERSION: "1.2.2",
                ADS_TO_IAS_EVENT_MAP: {
                    "ads-loaded": "AdLoaded",
                    "ads-ad-started": "AdVideoStart",
                    "ads-first-quartile": "AdVideoFirstQuartile",
                    "ads-midpoint": "AdVideoMidpoint",
                    "ads-third-quartile": "AdVideoThirdQuartile",
                    "ads-ad-ended": "AdVideoComplete",
                    "ads-click": "AdClickThru",
                    "ads-ad-skipped": "AdSkipped",
                    adpause: "AdPaused",
                    adplay: "AdPlaying",
                    advolumechange: "AdVolumeChange",
                    fullscreenchange: "resizeAd"
                },
                IMA_TO_IAS_EVENT_MAP: {
                    "ima3-loaded": "AdLoaded",
                    "ima3-started": "AdVideoStart",
                    "ima3-first-quartile": "AdVideoFirstQuartile",
                    "ima3-midpoint": "AdVideoMidpoint",
                    "ima3-third-quartile": "AdVideoThirdQuartile",
                    "ima3-complete": "AdVideoComplete",
                    "ima3-paused": "AdPaused",
                    "ima3-resumed": "AdPlaying",
                    "ima3-click": "AdClickThru",
                    "ima3-volume-changed": "AdVolumeChange",
                    "ima3-ad-error": "AdError",
                    "ads-ad-skipped": "AdSkipped",
                    fullscreenchange: "resizeAd"
                },
                FINAL_EVENTS: {
                    AdError: !0,
                    AdVideoComplete: !0,
                    AdSkipped: !0
                }
            }
              , r = videojs.registerPlugin || videojs.plugin;
            n.VERSION = "1.2.2";
            r("integral", n)
        }();
        var bc = core.createInitializer(null, function(e, t, n) {
            var i;
            var r = parseInt(null, 10);
            var a = false;
            n.playlist();
            if (r === r && isFinite(r) && r >= 0) {
                n.playlist.autoadvance(r)
            }
        });
        BrightcovePlayerCore.restoreFirstVideojs();
        return bc
    }(window, document);
    if (typeof vjsCssText !== "undefined") {
        vjsCssEl = document.querySelector("#" + vjsCssId);
        if (vjsCssEl) {
            (function() {
                var e = function(e) {
                    return (e || "0.0.0").split(".").map(function(e) {
                        return Number(e)
                    })
                };
                var t = e(vjsCssEl.getAttribute("data-vjs-version"));
                var n = e(bc.videojs.VERSION);
                if (n[0] > t[0] || n[0] === t[0] && n[1] > t[1] || n[0] === t[0] && n[1] === t[1] && n[2] > t[2]) {
                    vjsCssEl.parentNode.removeChild(vjsCssEl);
                    vjsCssEl = null;
                    refNode = head.firstChild
                }
            }
            )()
        }
        if (!vjsCssEl) {
            vjsCssEl = createStyleSheet(vjsCssText, refNode);
            vjsCssEl.id = vjsCssId;
            vjsCssEl.setAttribute("data-vjs-version", bc.videojs.VERSION)
        }
        refNode = vjsCssEl.nextSibling
    }
    if (typeof cssText !== "undefined") {
        cssEl = document.querySelector("." + cssClass);
        if (!cssEl) {
            cssEl = createStyleSheet(cssText, refNode);
            cssEl.className = cssClass
        }
    }
    function parseEmbeds() {
        var e = [].concat(Array.prototype.slice.call(document.querySelectorAll("video")), Array.prototype.slice.call(document.querySelectorAll("video-js")));
        for (i = 0; i < e.length; i++) {
            video = e[i];
            if (video.getAttribute("data-player") === "LDNXZuIMO" && video.getAttribute("data-embed") === "default") {
                if (bc.videojs.getPlayer(video)) {
                    bc.videojs.log("Ignoring already initialized player");
                    continue
                }
                bc(video)
            }
        }
    }
    parseEmbeds();
    return bc
});
